{"version":3,"sources":["store/part/partReducer.ts","store/labelingPage/labelingPageTypes.ts","store/State.ts","store/camera/cameraReducer.ts","store/camera/cameraTypes.ts","store/part/partTypes.ts","store/labelingPage/labelingPageReducer.ts","store/location/locationReducer.ts","store/location/locationTypes.ts","store/dialog/dialogIsOpenReducer.ts","store/dialog/dialogIsOpenTypes.ts","store/project/projectReducer.ts","store/project/projectTypes.ts","store/rootReducer.ts","store/index.ts","components/ImageLink.tsx","pages/Home.tsx","store/dialog/dialogIsOpenActions.ts","store/camera/cameraActions.ts","hooks/useCameras.ts","pages/Cameras.tsx","components/CameraDetails/CameraDetailInfo.tsx","hooks/useInterval.ts","store/project/projectActions.ts","components/CameraConfigure/CameraConfigureInfo.tsx","components/CameraConfigure/CreateCameraConfig.tsx","pages/CameraDetails.tsx","store/part/partActions.ts","components/LabelingPage/util/useImage.ts","store/labelingPage/labelingPageActions.ts","components/LabelingPage/Box.tsx","components/LabelingPage/Scene.tsx","pages/LabelingPage.tsx","components/LabelingPageDialog.tsx","components/LabelDisplayImage.tsx","components/CapturePhoto/CapturePhotos.tsx","components/UploadPhotos/UploadPhotos.tsx","pages/PartDetails.tsx","store/location/locationActions.ts","pages/Locations.tsx","pages/LocationRegister.tsx","pages/LocationDetails.tsx","pages/ManualIdentification.tsx","hooks/useParts.ts","pages/Parts.tsx","pages/PartIdentification.tsx","pages/Setting.tsx","routes/RootRouter.tsx","components/Breadcrumb.tsx","components/MainLayout/MainLayout.tsx","theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["reducer","AnnotationState","LabelingCursorStates","WorkState","LabelingType","initialState","dialogIsOpen","cameras","locations","labelingPageState","annotations","part","capturedImages","isValid","project","id","camera","location","parts","modelUrl","status","successRate","successfulInferences","unIdetifiedItems","camerasReducer","state","action","type","payload","concat","idx","findIndex","e","slice","checkIfImagesCountIsValidToTrain","newCapturedImage","newState","updatedImageIdx","labels","filter","image","length","labelingPageStateReducer","push","annotation","creatingAnnotation","updater","annotationState","Finish","label","x1","x2","y1","y2","pop","index","clear","window","confirm","locationsReducer","dialogIsOpenReducer","projectReducer","rootReducer","combineReducers","partReducer","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","ImageLink","to","imgSrc","defaultSrc","bgImgSrc","imgPadding","width","height","bgImgStyle","pointerCursor","onClick","Flex","column","styles","style","Image","src","padding","objectFit","backgroundImage","cursor","Text","align","Home","dispatch","useDispatch","gap","size","weight","color","backgroundColor","requestCamerasFailure","error","console","useCameras","useSelector","useEffect","axios","then","data","getCamerasSuccess","catch","err","Cameras","useState","name","setName","rtsp","setRtsp","model_name","setModel_name","Grid","columns","map","i","backgroundSize","backgroundPosition","backgroundRepeat","Dialog","trigger","hAlign","Button","primary","fluid","circular","content","confirmButton","onConfirm","newCamera","method","postCameraSuccess","cancelButton","header","open","onOpen","onCancel","Input","placeholder","value","onChange","_","newProps","CameraDetailInfo","modelName","space","deleteCameraSuccess","deleteCamera","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","thunkGetProject","Axios","get","log","parseInt","split","ele","training_uri","getProjectSuccess","CameraConfigureInfo","useParams","projectId","history","useHistory","title","online","join","href","vAlign","fontWeight","margin","marginLeft","as","Link","delete","alert","thunkDeleteProject","Loader","labelPosition","design","paddingTop","ListItem","CameraStatus","text","Status","CreateCameraConfig","border","CameraDetails","find","hasProject","undefined","addCapturedImages","thunkGetCapturedImages","partId","a","fetch","response","json","imagesWithRelatedPart","reduce","acc","cur","defaultState","useImage","url","crossOrigin","imageState","setImageState","prevUrl","ref","usePrevious","img","document","createElement","prev","onload","onerror","addEventListener","removeEventListener","requestAnnotationsSuccess","saveAnnotation","imageId","annoUrl","headers","body","JSON","stringify","res","updateImageLabels","BoxObj","init","attribute","Empty","createWithPoint","p","obj","this","add","x","y","newObj","P1Added","setVerticesToValidValue","setVerticesToInt","Math","round","setVerticesPointsOrder","object","Box2d","display","scale","workState","cursorPosition","onSelect","selected","annotationIndex","visible","changeCursorState","vertices","setVertices","anchorRadius","strokeWidth","dispatchLabel","newAnnotation","updateAnnotation","onDragAnchor","xi","yi","target","position","setAttr","anotherPosXArr","anotherPosYArr","splice","xx","yy","nwseResize","neswResize","prevVertices","Creating","onMouseDown","cancelBubble","points","stroke","closed","radius","fill","draggable","onDragMove","onDragEnd","onMouseEnter","onMouseLeave","defaultSize","Scene","labelingType","imageSize","setImageSize","noMoreCreate","useMemo","SingleAnnotation","default","cursorState","setCursorState","selectedAnnotationIndex","setSelectedAnnotationIndex","None","setWorkState","setCursorPosition","useCallback","cursorType","crosshair","Selecting","scaleX","pos","onMouseUp","onMouseMove","evt","offsetX","offsetY","disabled","iconOnly","removeAnnotation","LabelingPage","imageIndex","closeDialog","setIndex","images","imageUrl","getState","parse","parsedLabels","getAnnotations","icon","memo","setOpen","LabelDisplayImage","labelImage","labelText","CapturePhotos","selectedCamera","setSelectedCamera","CameraSelector","availableCameras","items","Dropdown","RTSPVideo","streamId","setStreamId","onDisconnect","Group","alignSelf","buttons","stream_id","thunkAddCapturedImages","CapturedImagesContainer","overflow","borderColor","UploadPhotos","files","formData","FormData","append","accept","multiple","gridGap","PartDetails","gridColumnGap","LeftPanel","description","setDescription","setError","gridColumn","fontSize","TextArea","hasPartId","Alert","danger","dismissible","RightPanel","path","component","Tab","pathname","useLocation","activeIndex","Menu","pointing","requestLocationsFailure","Locations","getLocationsSuccess","LocationRegister","coordinates","setCoordinates","Divider","minHeight","includes","newLocation","postLocationSuccess","LocationDetails","sorting","ImageIdentificationItem","confidenceLevel","isPart","setIsPart","truncated","RadioGroup","checkedValue","onCheckedValueChange","ManualIdentification","setParts","useParts","partItems","confidenceLevelRange","setConfidenceLevelRange","ascend","setAscend","imgs","Array","sort","b","columnGap","currentCamera","allowCross","handle","dragging","restProps","prefixCls","overlay","placement","borderStyle","borderWidth","Parts","wrap","right","bottom","Item","PartIdentification","useDropdownItems","cameraLoading","dropDownCameras","setSelectedCameraById","partLoading","dropDownParts","selectedParts","setSelectedPartsById","locationLoading","dropDownLocations","selectedLocations","setSelectedLocationById","needRetraining","setNeedRetraining","max","setMax","min","setMin","maxImgCount","setMaxImgCount","maxImgCountError","setMaxImgCountError","moduleName","setSelectedModuleItem","isMultiple","Checkbox","checked","inline","isProjectEmpty","download_uri","thunkPostProject","originItems","dropDownItems","setDropDownItems","selectedItem","setSelectedItem","loading","setLoading","isArray","correspondedItems","correspondedItem","toString","ModuleSelector","ids","formatValue","Setting","namespace","settingData","setSettingData","success","saveStatus","setSaveStatus","training_key","endpoint","isSettingEmpty","RootRouter","Breadcrumb","pathTitles","textDecoration","arr","getTitle","MainLayout","children","rows","justifyContent","gridRow","boxShadow","zIndex","Segment","TopNav","LeftNav","inverted","NavItem","activeStyle","theme","siteVariables","colors","brand","colorScheme","foreground","background","shadow","foregroundHover","backgroundHover","borderHover","shadowHover","foregroundActive","backgroundActive","borderActive","shadowActive","foregroundFocus","backgroundFocus","borderFocus","shadowFocus","foregroundPressed","backgroundPressed","borderPressed","shadowPressed","foregroundDisabled","backgroundDisabled","borderDisabled","shadowDisabled","foreground1","foreground2","foreground3","foreground4","background1","background2","background3","background4","border1","border2","foregroundHover1","foregroundHover2","backgroundHover1","foregroundPressed1","foregroundActive1","foregroundActive2","backgroundActive1","borderActive1","borderActive2","foregroundFocus1","foregroundFocus2","foregroundFocus3","foregroundFocus4","backgroundFocus1","backgroundFocus2","backgroundFocus3","borderFocusWithin","borderFocus1","foregroundDisabled1","backgroundDisabled1","myTheme","mergeThemes","themes","teams","App","Provider","className","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.13716184.chunk.js","sourcesContent":["import { initialState } from '../State';\nimport {\n  PartActionTypes,\n  ADD_CAPTURED_IMAGE,\n  Part,\n  UPDATE_CAPTURED_IMAGES,\n  UPDATE_IMAGE_LABEL,\n} from './partTypes';\n\nconst partReducer = (state = initialState.part, action: PartActionTypes): Part => {\n  switch (action.type) {\n    case ADD_CAPTURED_IMAGE:\n      return { ...state, capturedImages: [...state.capturedImages, action.payload.newCapturedImage] };\n    case UPDATE_CAPTURED_IMAGES:\n      return { ...state, capturedImages: action.payload.capturedImages };\n    case UPDATE_IMAGE_LABEL: {\n      const newState = { ...state };\n      const updatedImageIdx = newState.capturedImages.findIndex((e) => e.id === action.payload.id);\n      newState.capturedImages[updatedImageIdx] = {\n        ...newState.capturedImages[updatedImageIdx],\n        labels: action.payload.labels,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\ntype PartReducerType = typeof partReducer;\nconst checkIfImagesCountIsValidToTrain = (reducer: PartReducerType) => (\n  state = initialState.part,\n  action: PartActionTypes,\n): Part => {\n  const newState = reducer(state, action);\n  const isValid = newState.capturedImages.filter((image) => image.labels).length >= 15;\n  return { ...newState, isValid };\n};\n\nexport default checkIfImagesCountIsValidToTrain(partReducer);\n","import { Dispatch } from \"react\";\n\n// * Request Operation\nexport const REQUEST_ANNOTATION_FAILURE = 'REQUEST_ANNOTATION_FAILURE';\nexport type RequestAnnotationSuccessAction = { type: typeof REQUEST_ANNOTATION_SUCCESS; payload: any };\nexport const REQUEST_ANNOTATION_SUCCESS = 'REQUEST_ANNOTATION_SUCCESS';\nexport type RequestAnnotationFailureAction = { type: typeof REQUEST_ANNOTATION_FAILURE };\n\n// * Store Operation\nexport const CREATE_ANNOTATION = 'CREATE_ANNOTATION';\nexport type CreateAnnotationAction = { type: typeof CREATE_ANNOTATION; payload: { annotation: Annotation } };\nexport const UPDATE_CREATING_ANNOTATION = 'UPDATE_CREATING_ANNOTATION';\nexport type UpdateCreatingAnnotationAction = {\n  type: typeof UPDATE_CREATING_ANNOTATION;\n  payload: { updater: (annotation: Annotation) => Annotation };\n};\nexport const UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nexport type UpdateAnnotationAction = {\n  type: typeof UPDATE_ANNOTATION;\n  payload: { annotation: Annotation; index: number };\n};\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport type RemoveAnnotationAction = {\n  type: typeof REMOVE_ANNOTATION;\n  payload: { index: number };\n};\nexport const RESET_ANNOTATION = 'RESET_ANNOTATION';\nexport type ResetAnnotationAction = {\n  type: typeof RESET_ANNOTATION;\n};\n\nexport type AnnotationAction =\n  | RequestAnnotationSuccessAction\n  | RequestAnnotationFailureAction\n  | CreateAnnotationAction\n  | UpdateCreatingAnnotationAction\n  | UpdateAnnotationAction\n  | RemoveAnnotationAction\n  | ResetAnnotationAction;\n\nexport type Position2D = {\n  x: number;\n  y: number;\n};\nexport type BoxLabel = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\nexport type Size2D = { width: number; height: number };\nexport type Annotation = {\n  label: BoxLabel;\n  attribute: string;\n  annotationState: AnnotationState;\n};\n\nexport enum AnnotationState {\n  Empty = 'Empty',\n  P1Added = 'P1Added',\n  Finish = 'Finish',\n}\n\nexport enum LabelingCursorStates {\n  default = 'default',\n  pointer = 'pointer',\n  crosshair = 'crosshair',\n  neswResize = 'nesw-resize',\n  nwseResize = 'nwse-resize',\n}\nexport interface Box2dComponentProps {\n  display?: boolean;\n  workState: WorkState;\n  cursorPosition: Position2D;\n  scale: number;\n  onSelect: Function;\n  annotation: Annotation;\n  annotationIndex: number;\n  selected: boolean;\n  visible?: boolean;\n  dispatch: any;\n  changeCursorState?: (cursorType?: LabelingCursorStates) => void;\n  // instanceID: number;\n}\nexport type BoxObject = {\n  init: () => Annotation;\n  createWithPoint: (point: Position2D, attribute: string) => Annotation;\n  add: (point: Position2D, arg1: Annotation) => Annotation;\n  setVerticesToValidValue: (arg0: Annotation) => Annotation;\n  setVerticesToInt: (arg0: Annotation) => Annotation;\n  setVerticesPointsOrder: (arg0: Annotation) => Annotation;\n  // setStateCreated: (arg0: number, arg1: Annotation[]) => Annotation[];\n  // setFinished: (arg0: Annotation) => Annotation;\n};\n\nexport enum WorkState {\n  Creating = 'Creating',\n  Selecting = 'Selecting',\n  None = 'None',\n}\n\nexport enum LabelingType {\n  SingleAnnotation = 0,\n  MultiAnnotation = 1,\n}\n","import { Annotation } from './labelingPage/labelingPageTypes';\nimport { Camera } from './camera/cameraTypes';\nimport { Part } from './part/partTypes';\nimport { Location } from './location/locationTypes';\nimport { Project } from './project/projectTypes';\n\nexport interface State {\n  dialogIsOpen: boolean;\n  cameras: Camera[];\n  locations: Location[];\n  labelingPageState: LabelingPageState;\n  part: Part;\n  project: Project;\n}\n\nexport type LabelingPageState = { annotations: Annotation[] };\n\nexport const initialState: State = {\n  dialogIsOpen: false,\n  cameras: [],\n  locations: [],\n  labelingPageState: { annotations: [] },\n  part: {\n    capturedImages: [],\n    isValid: true,\n  },\n  project: {\n    id: null,\n    camera: null,\n    location: null,\n    parts: [],\n    modelUrl: '',\n    status: '',\n    successRate: null,\n    successfulInferences: null,\n    unIdetifiedItems: null,\n  },\n};\n","import {\n  GET_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  POST_CAMERA_SUCCESS,\n  Camera,\n  CameraAction,\n  DELETE_CAMERA_SUCCESS,\n} from './cameraTypes';\nimport { initialState } from '../State';\n\nconst camerasReducer = (state = initialState.cameras, action: CameraAction): Camera[] => {\n  switch (action.type) {\n    case GET_CAMERA_SUCCESS:\n      return action.payload;\n    case REQUEST_CAMERA_FAILURE:\n      return state;\n    case POST_CAMERA_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_CAMERA_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default camerasReducer;\n","// Describing the shape of the camera's slice of state\nexport type Camera = { id?: number; name: string; rtsp: string; model_name: string };\n\n// Describing the different ACTION NAMES available\nexport const GET_CAMERA_SUCCESS = 'GET_CAMERA_SUCCESS';\nexport const POST_CAMERA_SUCCESS = 'POST_CAMERA_SUCCESS';\nexport const DELETE_CAMERA_SUCCESS = 'DELETE_CAMERA_SUCCESS';\nexport const REQUEST_CAMERA_FAILURE = 'REQUEST_CAMERA_FAILURE';\n\nexport type GetCamerasSuccess = { type: typeof GET_CAMERA_SUCCESS; payload: Camera[] };\nexport type PostCameraSuccess = { type: typeof POST_CAMERA_SUCCESS; payload: Camera };\nexport type DeleteCameraSuccess = { type: typeof DELETE_CAMERA_SUCCESS; payload: { id: number } };\nexport type RequestCamerasFailure = { type: typeof REQUEST_CAMERA_FAILURE };\n\nexport type CameraAction =\n  | GetCamerasSuccess\n  | PostCameraSuccess\n  | DeleteCameraSuccess\n  | RequestCamerasFailure;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nexport type LabelImage = {\n  id?: number;\n  image: string;\n  labels: any;\n};\n// Describing the shape of the chat's slice of state\nexport type Part = { capturedImages: LabelImage[]; isValid: boolean };\n\n// Describing the different ACTION NAMES available\nexport const ADD_CAPTURED_IMAGE = 'ADD_CAPTURED_IMAGE';\n\nexport type AddCapturedImageAction = {\n  type: typeof ADD_CAPTURED_IMAGE;\n  payload: {\n    newCapturedImage: LabelImage;\n  };\n};\n\nexport const UPDATE_CAPTURED_IMAGES = 'UPDATE_CAPTURED_IMAGES';\n\nexport type UpdateCapturedImageAction = {\n  type: typeof UPDATE_CAPTURED_IMAGES;\n  payload: {\n    capturedImages: LabelImage[];\n  };\n};\n\nexport const UPDATE_IMAGE_LABEL = 'UPDATE_IMAGE_LABEL';\n\nexport type UpdateImageLabelAction = {\n  type: typeof UPDATE_IMAGE_LABEL;\n  payload: {\n    id: number;\n    labels: any;\n  };\n};\n\nexport type PartActionTypes = AddCapturedImageAction | UpdateCapturedImageAction | UpdateImageLabelAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type PartThunk<ReturnType = void> = ThunkAction<ReturnType, Part, unknown, Action<string>>;\n","import {\n  AnnotationState,\n  UPDATE_ANNOTATION,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  REMOVE_ANNOTATION,\n  AnnotationAction,\n  RESET_ANNOTATION,\n} from './labelingPageTypes';\nimport { initialState, LabelingPageState } from '../State';\n\nconst labelingPageStateReducer = (\n  state = initialState.labelingPageState,\n  action: AnnotationAction,\n): LabelingPageState => {\n  const newState = state;\n  switch (action.type) {\n    case REQUEST_ANNOTATION_SUCCESS:\n      newState.annotations = action.payload.annotations;\n      break;\n    case REQUEST_ANNOTATION_FAILURE:\n      break;\n    case CREATE_ANNOTATION:\n      newState.annotations.push(action.payload.annotation);\n      break;\n    case UPDATE_CREATING_ANNOTATION:\n      {\n        const creatingAnnotation = action.payload.updater(\n          newState.annotations[newState.annotations.length - 1],\n        );\n\n        if (creatingAnnotation.annotationState === AnnotationState.Finish) {\n          if (\n            (creatingAnnotation.label.x1 | 0) === (creatingAnnotation.label.x2 | 0) &&\n            (creatingAnnotation.label.y1 | 0) === (creatingAnnotation.label.y2 | 0)\n          ) {\n            newState.annotations.pop();\n          } else {\n            newState.annotations[newState.annotations.length - 1] = creatingAnnotation;\n            newState.annotations = [...newState.annotations];\n          }\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION:\n      newState.annotations[action.payload.index] = action.payload.annotation;\n      break;\n    case REMOVE_ANNOTATION:\n      if (action.payload.index === null) {\n        const clear = window.confirm('Are you going to remove all annotations?');\n        if (clear) newState.annotations = [];\n      }\n      newState.annotations = newState.annotations\n        .slice(0, action.payload.index)\n        .concat(newState.annotations.slice(action.payload.index + 1));\n      break;\n    case RESET_ANNOTATION:\n      newState.annotations = initialState.labelingPageState.annotations;\n      break;\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport default labelingPageStateReducer;\n","import {\n  GET_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  POST_LOCATION_SUCCESS,\n  Location,\n  LocationAction,\n} from './locationTypes';\nimport { initialState } from '../State';\n\nconst locationsReducer = (state = initialState.locations, action: LocationAction): Location[] => {\n  switch (action.type) {\n    case GET_LOCATION_SUCCESS:\n      return action.payload;\n    case REQUEST_LOCATION_FAILURE:\n      return state;\n    case POST_LOCATION_SUCCESS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default locationsReducer;\n","// Describing the shape of the loaction's slice of state\nexport type Location = {\n  id?: number;\n  name: string;\n  coordinates: string;\n  description: string;\n  projectId?: number;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const REQUEST_LOCATION_FAILURE = 'REQUEST_LOCATION_FAILURE';\nexport const POST_LOCATION_SUCCESS = 'POST_LOCATION_SUCCESS';\n\nexport type GetLocationsSuccess = { type: typeof GET_LOCATION_SUCCESS; payload: Location[] };\nexport type RequestLocationsFailure = { type: typeof REQUEST_LOCATION_FAILURE };\nexport type PostLocationSuccess = { type: typeof POST_LOCATION_SUCCESS; payload: Location };\n\nexport type LocationAction = GetLocationsSuccess | RequestLocationsFailure | PostLocationSuccess;\n","import {\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n  DialogIsOpenAction,\n} from './dialogIsOpenTypes';\nimport { initialState } from '../State';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import { initialState } from '../State';\nimport {\n  Project,\n  ProjectActionTypes,\n  GET_PROJECT_SUCCESS,\n  GET_PROJECT_FAILED,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FALIED,\n} from './projectTypes';\n\nconst projectReducer = (state = initialState.project, action: ProjectActionTypes): Project => {\n  switch (action.type) {\n    case GET_PROJECT_SUCCESS:\n      return { ...action.payload.project };\n    case GET_PROJECT_FAILED:\n      return { ...state };\n    case POST_PROJECT_SUCCESS:\n      return { ...state };\n    case POST_PROJECT_FALIED:\n      return { ...state };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        id: null,\n        camera: null,\n        location: null,\n        parts: [],\n        modelUrl: '',\n        status: '',\n        successRate: null,\n        successfulInferences: null,\n        unIdetifiedItems: null,\n      };\n    case DELETE_PROJECT_FALIED:\n      return { ...state };\n    default:\n      return { ...state };\n  }\n};\n\nexport default projectReducer;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nexport type Project = {\n  id: number;\n  camera: any;\n  location: any;\n  parts: any[];\n  modelUrl: string;\n  status: string;\n  successRate: number;\n  successfulInferences: number;\n  unIdetifiedItems: number;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\nexport type GetProjectSuccessAction = {\n  type: typeof GET_PROJECT_SUCCESS;\n  payload: {\n    project: Project;\n  };\n};\n\nexport const GET_PROJECT_FAILED = 'GET_PROJECT_FAILED';\nexport type GetProjectFailedAction = {\n  type: typeof GET_PROJECT_FAILED;\n};\n\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\nexport type PostProjectSuccessAction = {\n  type: typeof POST_PROJECT_SUCCESS;\n};\n\nexport const POST_PROJECT_FALIED = 'POST_PROJECT_FALIED';\nexport type PostProjectFaliedAction = {\n  type: typeof POST_PROJECT_FALIED;\n};\n\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport type DeleteProjectSuccessAction = {\n  type: typeof DELETE_PROJECT_SUCCESS;\n};\n\nexport const DELETE_PROJECT_FALIED = 'DELETE_PROJECT_FALIED';\nexport type DeleteProjectFaliedAction = {\n  type: typeof DELETE_PROJECT_FALIED;\n};\n\nexport type ProjectActionTypes =\n  | GetProjectSuccessAction\n  | GetProjectFailedAction\n  | PostProjectSuccessAction\n  | PostProjectFaliedAction\n  | DeleteProjectSuccessAction\n  | DeleteProjectFaliedAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type ProjectThunk<ReturnType = void> = ThunkAction<ReturnType, Project, unknown, Action<string>>;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport camerasReducer from './camera/cameraReducer';\nimport partReducer from './part/partReducer';\nimport labelingPageStateReducer from './labelingPage/labelingPageReducer';\nimport locationsReducer from './location/locationReducer';\nimport dialogIsOpenReducer from './dialog/dialogIsOpenReducer';\nimport projectReducer from './project/projectReducer';\n\nconst rootReducer = combineReducers({\n  cameras: camerasReducer,\n  locations: locationsReducer,\n  part: partReducer,\n  labelingPageState: labelingPageStateReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  project: projectReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State } from './State';\nimport { persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex, Text, Image } from '@fluentui/react-northstar';\n\ntype BgImgStyle = {\n  backgroundSize?: '60%';\n  backgroundPosition?: 'center';\n  backgroundRepeat?: 'no-repeat';\n};\ninterface ImageLinkProps {\n  to?: string;\n  imgSrc?: string;\n  defaultSrc?: string;\n  bgImgSrc?: string;\n  label?: string;\n  imgPadding?: string;\n  width: string;\n  height?: string;\n  bgImgStyle?: BgImgStyle;\n  pointerCursor?: boolean;\n  onClick?: (event: any) => void;\n}\nconst ImageLink: FC<ImageLinkProps> = ({\n  to = '',\n  imgSrc,\n  defaultSrc,\n  bgImgSrc,\n  label = '',\n  imgPadding = '10px',\n  width = '100px',\n  height = '100px',\n  bgImgStyle,\n  pointerCursor = false,\n  onClick,\n}) => {\n  return (\n    <Flex column styles={{ width }}>\n      {to === '' ? (\n        <div style={{ height }} onClick={onClick}>\n          <Image\n            src={imgSrc ?? defaultSrc}\n            styles={{\n              padding: imgPadding,\n              height: '100%',\n              objectFit: 'contain',\n              backgroundImage: `url(${bgImgSrc})`,\n              cursor: pointerCursor ? 'pointer' : 'default',\n              ...bgImgStyle,\n            }}\n          />\n        </div>\n      ) : (\n        <Link to={to}>\n          <div style={{ height }} onClick={onClick}>\n            <Image\n              src={imgSrc ?? defaultSrc}\n              styles={{\n                padding: imgPadding,\n                height: '100%',\n                objectFit: 'contain',\n                backgroundImage: `url(${bgImgSrc})`,\n                ...bgImgStyle,\n              }}\n            />\n          </div>\n        </Link>\n      )}\n      <Text align=\"center\">{label}</Text>\n    </Flex>\n  );\n};\n\nexport default ImageLink;\n","import React, { FC } from 'react';\nimport { Text, Flex } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ImageLink from '../components/ImageLink';\nimport { openDialog } from '../store/dialog/dialogIsOpenActions';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text size=\"larger\" weight=\"semibold\">\n        Hello User!\n      </Text>\n      <Text>\n        I understand a ship to be made for the carrying and preservation of the cargo, and so long as the ship\n        can be saved, with the cargo, it should never be abandoned. This Union likewise should never be\n        abandoned unless it fails and the possibility of its preservation shall cease to exist, without\n        throwing passengers and cargo overboard.\n      </Text>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '2px 2px 2px 10px' }}>\n        GET STARTED:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/location-filled.png\"\n          to=\"/locations/register\"\n          label=\"Register a new Location\"\n          width=\"100px\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/camera-filled.png\"\n          to=\"/cameras\"\n          label=\"Register a new Camera\"\n          width=\"100px\"\n          imgPadding=\"10px 3px 10px 3px\"\n          onClick={(): void => {\n            dispatch(openDialog());\n          }}\n        />\n        <ImageLink\n          imgSrc=\"/icons/part-filled.png\"\n          to=\"/parts/detail\"\n          label=\"Register a new Part\"\n          width=\"100px\"\n        />\n      </Flex>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '2px 2px 2px 10px' }}>\n        SELECT FROM THE FOLLOWING TASKS:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/doubleCube.png\"\n          to=\"/partIdentification\"\n          label=\"Identify Parts\"\n          width=\"100px\"\n        />\n        <ImageLink imgSrc=\"/icons/defects.png\" to=\"/\" label=\"Identify Defects\" width=\"100px\" />\n        <ImageLink\n          imgSrc=\"/icons/manual-filled.png\"\n          to=\"/manual\"\n          label=\"Identify items manually\"\n          width=\"100px\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { OpenDialog, CloseDialog, OPEN_DIALOG, CLOSE_DIALOG } from './dialogIsOpenTypes';\n\nexport const openDialog = (): OpenDialog => ({ type: OPEN_DIALOG });\nexport const closeDialog = (): CloseDialog => ({ type: CLOSE_DIALOG });\n","import axios from 'axios';\nimport {\n  GET_CAMERA_SUCCESS,\n  POST_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  GetCamerasSuccess,\n  RequestCamerasFailure,\n  PostCameraSuccess,\n  Camera,\n  DELETE_CAMERA_SUCCESS,\n  DeleteCameraSuccess,\n} from './cameraTypes';\n\nconst getCamerasSuccess = (data: Camera[]): GetCamerasSuccess => ({\n  type: GET_CAMERA_SUCCESS,\n  payload: data,\n});\n\nconst deleteCameraSuccess = (id: number): DeleteCameraSuccess => ({\n  type: DELETE_CAMERA_SUCCESS,\n  payload: { id },\n});\n\nconst requestCamerasFailure = (error: any): RequestCamerasFailure => {\n  console.error(error);\n  return { type: REQUEST_CAMERA_FAILURE };\n};\n\nconst postCameraSuccess = (data: Camera): PostCameraSuccess => ({\n  type: POST_CAMERA_SUCCESS,\n  payload: data,\n});\n\nexport const getCameras = () => (dispatch): Promise<void> => {\n  return axios('/api/cameras/')\n    .then(({ data }) => {\n      dispatch(getCamerasSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const postCamera = (newCamera: Camera) => (dispatch): Promise<void> => {\n  return axios('/api/cameras/', {\n    method: 'POST',\n    data: newCamera,\n  })\n    .then(({ data }) => {\n      dispatch(postCameraSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const deleteCamera = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/cameras/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteCameraSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { getCameras } from '../store/camera/cameraActions';\n\n/**\n * Fetch the cameras data from server and set to Redux Store\n */\nexport const useCameras = (): Camera[] => {\n  const dispatch = useDispatch();\n  const cameras: Camera[] = useSelector<State, Camera[]>((state) => state.cameras);\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return cameras;\n};\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Flex, Button, Dialog, Input, Grid, AddIcon } from '@fluentui/react-northstar';\n\nimport { useCameras } from '../hooks/useCameras';\nimport { postCamera } from '../store/camera/cameraActions';\nimport ImageLink from '../components/ImageLink';\nimport { State } from '../store/State';\nimport { closeDialog, openDialog } from '../store/dialog/dialogIsOpenActions';\n\nconst Cameras: FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const dialogIsOpen = useSelector<State, boolean>((state) => state.dialogIsOpen);\n  const cameras = useCameras();\n  const [name, setName] = useState<string>('');\n  const [rtsp, setRtsp] = useState<string>('');\n  const [model_name, setModel_name] = useState<string>('');\n\n  return (\n    <Flex column gap=\"gap.large\" padding=\"padding.medium\" styles={{ height: '100%' }}>\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {cameras.map((camera, i) => (\n          <ImageLink\n            key={i}\n            to={`/cameras/${camera.name}`}\n            defaultSrc=\"/icons/Play.png\"\n            bgImgSrc=\"/icons/defaultCamera.png\"\n            width=\"100px\"\n            height=\"100px\"\n            bgImgStyle={{\n              backgroundSize: '60%',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n            }}\n            label={camera.name}\n          />\n        ))}\n      </Grid>\n      <Dialog\n        trigger={\n          <Flex hAlign=\"end\">\n            <Button\n              primary\n              fluid\n              circular\n              content={<AddIcon size=\"largest\" circular />}\n              style={{ width: '6rem', height: '6rem' }}\n            />\n          </Flex>\n        }\n        confirmButton=\"Submit\"\n        onConfirm={(): void => {\n          dispatch(postCamera({ name, rtsp, model_name }));\n          dispatch(closeDialog());\n        }}\n        cancelButton=\"Cancel\"\n        header=\"Add Camera\"\n        open={dialogIsOpen}\n        onOpen={(): void => {\n          dispatch(openDialog());\n        }}\n        onCancel={(): void => {\n          dispatch(closeDialog());\n        }}\n        content={\n          <Flex column gap=\"gap.small\">\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              onChange={(_, newProps): void => setName(newProps.value)}\n            />\n            <Input\n              placeholder=\"RTSP URL\"\n              value={rtsp}\n              onChange={(_, newProps): void => setRtsp(newProps.value)}\n            />\n            <Input\n              placeholder=\"Model Name\"\n              value={model_name}\n              onChange={(_, newProps): void => setModel_name(newProps.value)}\n            />\n          </Flex>\n        }\n      />\n    </Flex>\n  );\n};\n\nexport default Cameras;\n","import React, { FC } from 'react';\nimport { Flex, Text, Grid, Button } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ImageLink from '../ImageLink';\nimport { deleteCamera } from '../../store/camera/cameraActions';\n\ninterface CameraDetailInfoProps {\n  name: string;\n  rtsp: string;\n  modelName: string;\n  id: number;\n}\nconst CameraDetailInfo: FC<CameraDetailInfoProps> = ({ id, name, rtsp, modelName }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex styles={{ padding: '1rem 2rem' }} column space=\"between\">\n      <Grid columns=\"2\" styles={{ gap: '3rem' }}>\n        <Text size=\"larger\" weight=\"semibold\">\n          Details\n        </Text>\n        <ImageLink defaultSrc=\"/icons/defaultCamera.png\" width=\"100px\" height=\"100px\" />\n        <Flex column gap=\"gap.small\">\n          <Text size=\"large\" content={'Name:'} />\n          <Text size=\"large\" content={'RTSP Url:'} />\n          <Text size=\"large\" content={'Model:'} />\n        </Flex>\n        <Flex column gap=\"gap.medium\">\n          <Text size=\"large\" content={name} />\n          <Text size=\"large\" content={rtsp} />\n          <Text size=\"large\" content={modelName} />\n        </Flex>\n      </Grid>\n      <Button\n        primary\n        content=\"Delete Camera\"\n        styles={{ backgroundColor: '#C4314B', ':hover': { backgroundColor: '#A72037' } }}\n        onClick={(): void => {\n          dispatch(deleteCamera(id));\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default CameraDetailInfo;\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay): void => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick(): void {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return (): void => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import Axios from 'axios';\nimport {\n  ProjectThunk,\n  GetProjectSuccessAction,\n  GET_PROJECT_SUCCESS,\n  Project,\n  GetProjectFailedAction,\n  GET_PROJECT_FAILED,\n  PostProjectSuccessAction,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  PostProjectFaliedAction,\n  DeleteProjectSuccessAction,\n  DELETE_PROJECT_SUCCESS,\n  DeleteProjectFaliedAction,\n  DELETE_PROJECT_FALIED,\n} from './projectTypes';\n\nconst getProjectSuccess = (project: Project): GetProjectSuccessAction => ({\n  type: GET_PROJECT_SUCCESS,\n  payload: { project },\n});\n\nconst getProjectFailed = (): GetProjectFailedAction => ({ type: GET_PROJECT_FAILED });\n\nconst postProjectSuccess = (): PostProjectSuccessAction => ({ type: POST_PROJECT_SUCCESS });\n\nconst postProjectFail = (): PostProjectFaliedAction => ({ type: POST_PROJECT_FALIED });\n\nconst deleteProjectSuccess = (): DeleteProjectSuccessAction => ({ type: DELETE_PROJECT_SUCCESS });\n\nconst deleteProjectFailed = (): DeleteProjectFaliedAction => ({\n  type: DELETE_PROJECT_FALIED,\n});\n\nexport const thunkGetProject = (): ProjectThunk => (dispatch): Promise<void> => {\n  return Axios.get('/api/projects/')\n    .then(({ data }) => {\n      console.log(data);\n      const project: Project = {\n        id: data[0]?.id ?? null,\n        camera: parseInt(data[0]?.camera.split('/')[5], 10) ?? null,\n        location: parseInt(data[0]?.location.split('/')[5], 10) ?? null,\n        parts: data[0]?.parts.map((ele) => parseInt(ele.split('/')[5], 10)) ?? [],\n        modelUrl: data[0]?.training_uri ?? '',\n        status: data[0]?.status ?? 'offline',\n        successRate: data[0]?.successRate ?? 0,\n        successfulInferences: data[0]?.successfulInferences ?? 0,\n        unIdetifiedItems: data[0]?.unIdetifiedItems ?? 0,\n      };\n      dispatch(getProjectSuccess(project));\n      return void 0;\n    })\n    .catch((err) => {\n      console.error(err);\n      dispatch(getProjectFailed());\n    });\n};\n\nexport const thunkPostProject = (\n  projectId,\n  selectedLocations,\n  selectedParts,\n  selectedCamera,\n): ProjectThunk => (dispatch): Promise<number> => {\n  const isProjectEmpty = projectId === null;\n  const url = isProjectEmpty ? `/api/projects/` : `/api/projects/${projectId}/`;\n\n  return Axios(url, {\n    data: {\n      location: `http://localhost:8000/api/locations/${selectedLocations.id}/`,\n      parts: selectedParts.map((e) => `http://localhost:8000/api/parts/${e.id}/`),\n      camera: `http://localhost:8000/api/cameras/${selectedCamera.id}/`,\n      download_uri: '',\n    },\n    method: isProjectEmpty ? 'POST' : 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(({ data }) => {\n      dispatch(postProjectSuccess());\n      return data.id;\n    })\n    .catch((err) => {\n      dispatch(postProjectFail());\n      console.error(err);\n    }) as Promise<number>;\n};\n\nexport const thunkDeleteProject = (projectId): ProjectThunk => (dispatch): Promise<any> => {\n  return Axios.delete(`/api/projects/${projectId}/`)\n    .then(() => {\n      return dispatch(deleteProjectSuccess());\n    })\n    .catch((err) => {\n      alert(err);\n      dispatch(deleteProjectFailed());\n    });\n};\n","import React from 'react';\nimport { Flex, Text, Status, Button, Image, Loader } from '@fluentui/react-northstar';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\n\nimport { useInterval } from '../../hooks/useInterval';\nimport { thunkDeleteProject, thunkGetProject } from '../../store/project/projectActions';\nimport { Project } from '../../store/project/projectTypes';\nimport { State } from '../../store/State';\n\nexport const CameraConfigureInfo: React.FC = () => {\n  const project = useSelector<State, Project>((state) => state.project);\n  const dispatch = useDispatch();\n  const { projectId, name } = useParams();\n  const history = useHistory();\n\n  const onDeleteConfigure = (): void => {\n    // eslint-disable-next-line no-restricted-globals\n    const sureDelete = confirm('Delete this configuration?');\n    if (!sureDelete) return;\n    const result = (dispatch(thunkDeleteProject(projectId)) as unknown) as Promise<any>;\n    result\n      .then((data) => {\n        if (data) return history.push(`/cameras/${name}`);\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  };\n\n  /**\n   * Call custom Vision to export\n   */\n  useInterval(() => {\n    Axios.get(`/api/projects/${projectId}/export`);\n  }, 5000);\n\n  useInterval(\n    () => {\n      dispatch(thunkGetProject());\n    },\n    project.modelUrl ? null : 5000,\n  );\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Configuration</h1>\n      {!project.modelUrl ? (\n        <Loader size=\"largest\" label=\"Trainning\" labelPosition=\"below\" design={{ paddingTop: '300px' }} />\n      ) : (\n        <>\n          <ListItem title=\"Status\" content={<CameraStatus online={project.status === 'online'} />} />\n          <ListItem title=\"Configured for\" content={project.parts.join(', ')} />\n          <span>Model Url: </span>\n          <a href={project.modelUrl}>{project.modelUrl}</a>\n          <Flex column gap=\"gap.small\">\n            <Text styles={{ width: '150px' }} size=\"large\">\n              Live View:\n            </Text>\n            <Flex\n              styles={{\n                width: '80%',\n                height: '400px',\n                backgroundColor: 'rgb(188, 188, 188)',\n              }}\n              vAlign=\"center\"\n              hAlign=\"center\"\n            >\n              <Image src=\"/icons/Play.png\" styles={{ ':hover': { cursor: 'pointer' } }} />\n            </Flex>\n          </Flex>\n          <ListItem\n            title=\"Success Rate\"\n            content={\n              <Text styles={{ color: 'rgb(244, 152, 40)', fontWeight: 'bold' }} size=\"large\">\n                {`${project.successRate}%`}\n              </Text>\n            }\n          />\n          <ListItem title=\"Successful Inferences\" content={project.successfulInferences} />\n          <ListItem\n            title=\"Unidentified Items\"\n            content={\n              <>\n                <Text styles={{ margin: '5px' }} size=\"large\">\n                  {project.unIdetifiedItems}\n                </Text>\n                <Button\n                  content=\"Identify Manually\"\n                  primary\n                  styles={{\n                    backgroundColor: 'red',\n                    marginLeft: '100px',\n                    ':hover': {\n                      backgroundColor: '#A72037',\n                    },\n                    ':active': {\n                      backgroundColor: '#8E192E',\n                    },\n                  }}\n                  as={Link}\n                  to=\"/\"\n                />\n              </>\n            }\n          />\n          <Button primary onClick={onDeleteConfigure}>\n            Delete Configuration\n          </Button>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nconst ListItem = ({ title, content }): JSX.Element => {\n  const getContent = (): JSX.Element => {\n    if (typeof content === 'string' || typeof content === 'number')\n      return <Text size=\"large\">{content}</Text>;\n    return content;\n  };\n\n  return (\n    <Flex vAlign=\"center\">\n      <Text styles={{ width: '200px' }} size=\"large\">{`${title}: `}</Text>\n      {getContent()}\n    </Flex>\n  );\n};\n\nconst CameraStatus = ({ online }): JSX.Element => {\n  const text = online ? 'Online' : 'Offline';\n  const state = online ? 'success' : 'unknown';\n\n  return (\n    <Flex gap=\"gap.smaller\" vAlign=\"center\">\n      <Status state={state} />\n      <Text styles={{ margin: '5px' }} size=\"large\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const CreateCameraConfig: React.FC = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <h1>Configuration</h1>\n      <Flex hAlign=\"center\" vAlign=\"center\" design={{ height: '100%' }} column gap=\"gap.large\">\n        <Button\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular color=\"brand\" />}\n          style={{ width: 100, height: 100, border: '5px solid #0094d8' }}\n          color=\"brand\"\n          as={Link}\n          to=\"/partIdentification\"\n        />\n        <h2>Configure Task for the Device</h2>\n      </Flex>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { Grid } from '@fluentui/react-northstar';\nimport CameraDetailInfo from '../components/CameraDetails/CameraDetailInfo';\n\nimport { CameraConfigureInfo, CreateCameraConfig } from '../components/CameraConfigure';\nimport { useCameras } from '../hooks/useCameras';\n\nconst CameraDetails: FC = (): JSX.Element => {\n  const { name, projectId } = useParams();\n  const camera = useCameras().find((ele) => ele.name === name);\n\n  if (!camera) return <span>loading...</span>;\n\n  const hasProject = !!projectId;\n\n  if (camera === undefined) return <Redirect to=\"/cameras\" />;\n\n  return (\n    <Grid columns=\"2\" design={{ height: '100%' }}>\n      <CameraDetailInfo id={camera.id} name={name} rtsp={camera.rtsp} modelName={camera.model_name} />\n      {hasProject ? <CameraConfigureInfo /> : <CreateCameraConfig />}\n    </Grid>\n  );\n};\n\nexport default CameraDetails;\n","import {\n  AddCapturedImageAction,\n  ADD_CAPTURED_IMAGE,\n  PartThunk,\n  UpdateCapturedImageAction,\n  UPDATE_CAPTURED_IMAGES,\n  UpdateImageLabelAction,\n  UPDATE_IMAGE_LABEL,\n  LabelImage,\n} from './partTypes';\n\nexport const addCapturedImages = (newCapturedImage: LabelImage): AddCapturedImageAction => ({\n  type: ADD_CAPTURED_IMAGE,\n  payload: { newCapturedImage },\n});\n\nexport const updateCapturedImages = (capturedImages: LabelImage[]): UpdateCapturedImageAction => ({\n  type: UPDATE_CAPTURED_IMAGES,\n  payload: { capturedImages },\n});\n\nexport const thunkAddCapturedImages = (streamId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/streams/${streamId}/capture`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 'ok') {\n        dispatch(addCapturedImages(data.image));\n      }\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const updateImageLabels = (imageId: number, labels: any): UpdateImageLabelAction => ({\n  type: UPDATE_IMAGE_LABEL,\n  payload: { id: imageId, labels },\n});\n\nexport const thunkGetCapturedImages = (partId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/images`)\n    .then((response) => response.json())\n    .then((data) => {\n      const imagesWithRelatedPart = data.reduce((acc, cur) => {\n        if (cur.part.split('/')[5] === partId) acc.push(cur);\n        return acc;\n      }, []);\n      dispatch(updateCapturedImages(imagesWithRelatedPart));\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","import { useState, useEffect, useRef } from 'react';\n\ntype ImageState = {\n  image: HTMLImageElement;\n  status: string;\n  size: { width: number; height: number };\n};\nconst defaultState: ImageState = {\n  image: undefined,\n  status: 'loading',\n  size: { width: 0, height: 0 },\n};\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nconst useImage = (url: string, crossOrigin: string): [HTMLImageElement, string, { width: number; height: number }] => {\n  const [imageState, setImageState] = useState<ImageState>(defaultState);\n  const { image, status, size } = imageState;\n\n  const prevUrl = usePrevious<string>(url);\n\n  useEffect(() => {\n    if (!url) return;\n\n    const img = document.createElement('img');\n\n    if (url !== prevUrl) {\n      setImageState((prev) => ({ ...prev, image: prev.image, status: 'loading' }));\n    }\n\n    const onload = (): void => {\n      setImageState({\n        image: img,\n        status: 'loaded',\n        size: { width: img.width, height: img.height },\n      });\n    };\n\n    const onerror = (): void => {\n      setImageState((prev) => ({ ...prev, image: undefined, status: 'failed' }));\n    };\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n\n    img.src = url;\n\n    return (): void => {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, prevUrl]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status, size];\n};\n\nexport default useImage;\n","import {\n  Annotation,\n  AnnotationState,\n  BoxObject,\n  Position2D,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  REMOVE_ANNOTATION,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  UPDATE_ANNOTATION,\n  RESET_ANNOTATION,\n  RequestAnnotationSuccessAction,\n  RequestAnnotationFailureAction,\n  CreateAnnotationAction,\n  UpdateAnnotationAction,\n  UpdateCreatingAnnotationAction,\n  RemoveAnnotationAction,\n  ResetAnnotationAction,\n} from './labelingPageTypes';\nimport { updateImageLabels } from '../part/partActions';\n\nexport const requestAnnotationsSuccess = (data: Annotation[]): RequestAnnotationSuccessAction => ({\n  type: REQUEST_ANNOTATION_SUCCESS,\n  payload: { annotations: data },\n});\n\nconst requestAnnotationsFailure = (error: any): RequestAnnotationFailureAction => {\n  console.error(error);\n  return { type: REQUEST_ANNOTATION_FAILURE };\n};\n\nexport const getAnnotations = (imageId: number) => (dispatch, getState): void => {\n  const {\n    part: { capturedImages },\n  } = getState();\n  const { labels } = capturedImages.find((image) => image.id === imageId);\n\n  if (labels === null) {\n    dispatch(requestAnnotationsSuccess([]));\n  } else {\n    const annotations = JSON.parse(labels).map((parsedLabels) => ({\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n\n    dispatch(requestAnnotationsSuccess(annotations));\n  }\n};\n\nexport const createAnnotation = (pos: Position2D): CreateAnnotationAction => {\n  const annotation = BoxObj.createWithPoint(pos, '');\n  return {\n    type: CREATE_ANNOTATION,\n    payload: { annotation },\n  };\n};\n\nexport const updateCreatingAnnotation = (pos: Position2D): UpdateCreatingAnnotationAction => {\n  const updater = (annotation: Annotation): Annotation => BoxObj.add(pos, annotation);\n  return {\n    type: UPDATE_CREATING_ANNOTATION,\n    payload: { updater },\n  };\n};\n\nexport const updateAnnotation = (index: number = null, annotation: Annotation): UpdateAnnotationAction => ({\n  type: UPDATE_ANNOTATION,\n  payload: { index, annotation: BoxObj.setVerticesToValidValue(annotation) },\n});\n\nexport const removeAnnotation = (index: number = null): RemoveAnnotationAction => ({\n  type: REMOVE_ANNOTATION,\n  payload: { index },\n});\n\nexport const resetAnnotation = (): ResetAnnotationAction => ({\n  type: RESET_ANNOTATION,\n});\n\nexport const saveAnnotation = (imageId: number, annotations: Annotation[]) => (dispatch): Promise<void> => {\n  const annoUrl = `/api/images/${imageId}/`;\n  return fetch(annoUrl, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      labels: JSON.stringify(annotations.map((e) => e.label)),\n    }),\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .then((data) => {\n      console.log('Save successfully');\n      dispatch(updateImageLabels(data.id, data.labels));\n      // dispatch(requestAnnotationsSuccess(annotations));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestAnnotationsFailure(err));\n    });\n};\n\n// * Annotation Functions\nexport const BoxObj: BoxObject = {\n  init(): Annotation {\n    return {\n      label: { x1: 0, y1: 0, x2: 0, y2: 0 },\n      attribute: '',\n      annotationState: AnnotationState.Empty,\n    };\n  },\n  createWithPoint(p: Position2D, attribute) {\n    const obj = {\n      ...this.init(),\n      attribute,\n    };\n    return this.add(p, obj);\n  },\n  add({ x, y }, obj) {\n    // make the original object immutable, for future history usage\n    const newObj = { ...obj };\n\n    if (obj.annotationState === AnnotationState.Empty) {\n      newObj.label.x1 = x;\n      newObj.label.y1 = y;\n      newObj.label.x2 = x; // initialize x2 y2\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.P1Added;\n    } else if (obj.annotationState === AnnotationState.P1Added) {\n      newObj.label.x2 = x;\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.Finish;\n    }\n\n    return this.setVerticesToValidValue(newObj);\n  },\n  setVerticesToInt(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    newObj.label = {\n      x1: Math.round(x1),\n      y1: Math.round(y1),\n      x2: Math.round(x2),\n      y2: Math.round(y2),\n    };\n    return newObj;\n  },\n  setVerticesPointsOrder(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    if (x1 > x2) {\n      newObj.label.x1 = x2;\n      newObj.label.x2 = x1;\n    }\n    if (y1 > y2) {\n      newObj.label.y1 = y2;\n      newObj.label.y2 = y1;\n    }\n\n    return newObj;\n  },\n  setVerticesToValidValue(object: Annotation): Annotation {\n    return this.setVerticesPointsOrder(this.setVerticesToInt(object));\n  },\n  // setFinished(obj: Annotation): Annotation {\n  //   if (obj.state === AnnotationState.Created) return;\n\n  //   const newObj = R.clone(obj);\n  //   newObj.state = AnnotationState.Created;\n  //   newObj.creatingState = undefined;\n\n  //   return newObj;\n  // },\n  // setStateCreated(idx: number, annotations: Annotation[]): Annotation[] {\n  //   const { creatingState } = annotations[idx];\n\n  //   if (creatingState === 'addedX2Y2') return R.update(idx, this.setFinished, annotations);\n  //   if (creatingState === 'addedX1Y1') return R.remove(idx, 1, annotations);\n  //   return R.clone(annotations);\n  // },\n};\n","import React, { useState, useEffect, FC } from 'react';\nimport { Line, Group, Circle } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport {\n  BoxLabel,\n  Box2dComponentProps,\n  WorkState,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport { updateAnnotation } from '../../store/labelingPage/labelingPageActions';\n\nexport const Box2d: FC<Box2dComponentProps> = ({\n  display = false,\n  scale,\n  workState,\n  cursorPosition,\n  onSelect,\n  selected,\n  annotationIndex,\n  visible = true,\n  annotation,\n  dispatch,\n  changeCursorState = null,\n}) => {\n  const [vertices, setVertices] = useState<BoxLabel>(annotation.label);\n  const anchorRadius: number = (display ? 10 : 5) / scale;\n  const strokeWidth: number = (display ? 4 : 2) / scale;\n\n  const dispatchLabel = (): void => {\n    if (display) return;\n    changeCursorState();\n\n    if (!dispatch) return;\n    const newAnnotation = { ...annotation };\n    newAnnotation.label = vertices;\n    dispatch(updateAnnotation(annotationIndex, newAnnotation));\n  };\n\n  const onDragAnchor = ({ xi = 'x1', yi = 'y1' }) => (e: KonvaEventObject<DragEvent>): void => {\n    if (display) return;\n    const x = Math.round(e.target.position().x);\n    const y = Math.round(e.target.position().y);\n    // * Round the anchor (circle) position so user can only drag anchor on integer.\n    e.target.setAttr('x', x);\n    e.target.setAttr('y', y);\n\n    const anotherPosXArr = ['x1', 'x2'];\n    const anotherPosYArr = ['y1', 'y2'];\n    anotherPosXArr.splice(\n      anotherPosXArr.findIndex((xx) => xx === xi),\n      1,\n    );\n    anotherPosYArr.splice(\n      anotherPosYArr.findIndex((yy) => yy === yi),\n      1,\n    );\n    if (vertices[anotherPosXArr[0]] > vertices[xi]) {\n      if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n        changeCursorState(LabelingCursorStates.nwseResize);\n      } else {\n        changeCursorState(LabelingCursorStates.neswResize);\n      }\n    } else if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n      changeCursorState(LabelingCursorStates.neswResize);\n    } else {\n      changeCursorState(LabelingCursorStates.nwseResize);\n    }\n\n    setVertices((prevVertices) => ({ ...prevVertices, [xi]: x, [yi]: y }));\n  };\n\n  useEffect(() => {\n    setVertices(annotation.label);\n  }, [annotation.label]);\n\n  useEffect(() => {\n    if (workState === WorkState.Creating && selected) {\n      setVertices((prev) => ({ ...prev, x2: cursorPosition.x, y2: cursorPosition.y }));\n    }\n  }, [workState, selected, cursorPosition, setVertices]);\n\n  return (\n    <Group\n      visible={visible}\n      onMouseDown={(e): void => {\n        onSelect(annotationIndex);\n        e.cancelBubble = true;\n      }}\n    >\n      <Line\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke=\"red\"\n        strokeWidth={strokeWidth}\n        closed={true}\n      />\n      <Group visible={selected}>\n        <Circle\n          key={'anchor-0'}\n          name={'anchor-0'}\n          x={vertices.x1}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (display) return;\n            changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            if (display) return;\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-1'}\n          name={'anchor-1'}\n          x={vertices.x2}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (display) return;\n            changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            if (display) return;\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-2'}\n          name={'anchor-2'}\n          x={vertices.x2}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (display) return;\n            changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            if (display) return;\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-3'}\n          name={'anchor-3'}\n          x={vertices.x1}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (display) return;\n            changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            if (display) return;\n            changeCursorState();\n          }}\n        />\n      </Group>\n    </Group>\n  );\n};\n","import React, { FC, useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport { Text, Button, CloseIcon } from '@fluentui/react-northstar';\nimport { Stage, Layer, Image } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useDispatch } from 'react-redux';\n\nimport useImage from './util/useImage';\nimport { Box2d } from './Box';\nimport {\n  Size2D,\n  Annotation,\n  Position2D,\n  WorkState,\n  LabelingType,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport {\n  createAnnotation,\n  updateCreatingAnnotation,\n  removeAnnotation,\n} from '../../store/labelingPage/labelingPageActions';\n\nconst defaultSize: Size2D = {\n  width: 900,\n  height: 600,\n};\n\ninterface SceneProps {\n  url?: string;\n  labelingType: LabelingType;\n  annotations: Annotation[];\n}\nconst Scene: FC<SceneProps> = ({ url = '', labelingType, annotations }) => {\n  const dispatch = useDispatch();\n  const [imageSize, setImageSize] = useState<Size2D>(defaultSize);\n  const noMoreCreate = useMemo(\n    () => labelingType === LabelingType.SingleAnnotation && annotations.length === 1,\n    [labelingType, annotations],\n  );\n  const [cursorState, setCursorState] = useState<LabelingCursorStates>(LabelingCursorStates.default);\n  const [image, status, size] = useImage(url, 'anonymous');\n  const [selectedAnnotationIndex, setSelectedAnnotationIndex] = useState<number>(null);\n  const [workState, setWorkState] = useState<WorkState>(WorkState.None);\n  const [cursorPosition, setCursorPosition] = useState<Position2D>({ x: 0, y: 0 });\n  const scale = useRef<Position2D>({ x: 1, y: 1 });\n  const changeCursorState = useCallback(\n    (cursorType?: LabelingCursorStates): void => {\n      if (!cursorType) {\n        if (noMoreCreate) {\n          setCursorState(LabelingCursorStates.default);\n        } else {\n          setCursorState(LabelingCursorStates.crosshair);\n        }\n      } else {\n        setCursorState(cursorType);\n      }\n    },\n    [noMoreCreate],\n  );\n  const onMouseDown = (): void => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) return;\n\n    if (selectedAnnotationIndex !== null && workState === WorkState.None) {\n      setSelectedAnnotationIndex(null);\n    } else {\n      dispatch(createAnnotation(cursorPosition));\n      setSelectedAnnotationIndex(annotations.length - 1);\n      setWorkState(WorkState.Creating);\n    }\n  };\n\n  const onMouseUp = (): void => {\n    if (workState === WorkState.Creating) {\n      dispatch(updateCreatingAnnotation(cursorPosition));\n      if (annotations.length - 1 === selectedAnnotationIndex) {\n        setWorkState(WorkState.Selecting);\n      } else {\n        setWorkState(WorkState.None);\n        setSelectedAnnotationIndex(null);\n      }\n    }\n  };\n\n  const onSelect = (index: number): void => {\n    setSelectedAnnotationIndex(index);\n    setWorkState(WorkState.Selecting);\n  };\n\n  useEffect(() => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) {\n      changeCursorState();\n      setSelectedAnnotationIndex(0);\n    } else {\n      changeCursorState();\n    }\n  }, [noMoreCreate, changeCursorState]);\n  useEffect(() => {\n    if (workState === WorkState.None) setSelectedAnnotationIndex(null);\n  }, [workState]);\n  useEffect(() => {\n    if (size.width !== 0) {\n      const scaleX = defaultSize.width / size.width;\n      if (scaleX !== scale.current.x) {\n        scale.current = { x: scaleX, y: scaleX };\n        setImageSize((prev) => ({ ...prev, height: size.height * scaleX }));\n      }\n    }\n  }, [size]);\n\n  if (status === 'loading' || (imageSize.height === 0 && imageSize.width === 0))\n    return (\n      <Text align=\"center\" color=\"red\">\n        Loading...\n      </Text>\n    );\n\n  return (\n    <div style={{ margin: 3 }}>\n      <Stage\n        width={imageSize.width}\n        height={imageSize.height}\n        scale={scale.current}\n        style={{ cursor: cursorState }}\n      >\n        <Layer\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onMouseMove={(e: KonvaEventObject<MouseEvent>): void => {\n            setCursorPosition({ x: e.evt.offsetX / scale.current.x, y: e.evt.offsetY / scale.current.y });\n          }}\n        >\n          <Image image={image} />\n          {annotations.map((annotation, i) => (\n            <Box2d\n              key={i}\n              workState={workState}\n              cursorPosition={cursorPosition}\n              onSelect={onSelect}\n              annotation={annotation}\n              scale={scale.current.x}\n              annotationIndex={i}\n              selected={i === selectedAnnotationIndex}\n              dispatch={dispatch}\n              changeCursorState={changeCursorState}\n            />\n          ))}\n        </Layer>\n      </Stage>\n      <Button\n        disabled={annotations.length === 0}\n        iconOnly\n        text\n        styles={{ color: annotations.length === 0 ? 'grey' : 'red', ':hover': { color: 'red' } }}\n        content={<CloseIcon size=\"large\" />}\n        onClick={(): void => {\n          dispatch(removeAnnotation(selectedAnnotationIndex));\n          setSelectedAnnotationIndex(null);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Scene;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Button, Text, ChevronStartIcon, ChevronEndIcon } from '@fluentui/react-northstar';\n\nimport Scene from '../components/LabelingPage/Scene';\nimport { LabelingType, Annotation } from '../store/labelingPage/labelingPageTypes';\nimport { State } from '../store/State';\nimport { LabelImage } from '../store/part/partTypes';\nimport { saveAnnotation, getAnnotations, resetAnnotation } from '../store/labelingPage/labelingPageActions';\n\ninterface LabelingPageProps {\n  labelingType: LabelingType;\n  imageIndex: number;\n  closeDialog: () => void;\n}\nconst LabelingPage: FC<LabelingPageProps> = ({ labelingType, imageIndex, closeDialog }) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState<number>(imageIndex);\n  const { images, annotations } = useSelector<State, { images: LabelImage[]; annotations: Annotation[] }>(\n    (state) => ({\n      images: state.part.capturedImages,\n      annotations: state.labelingPageState.annotations,\n    }),\n  );\n  const imageUrl = images?.[index]?.image;\n  const imageId = images?.[index]?.id;\n\n  useEffect(() => {\n    if (typeof imageId === 'number') dispatch(getAnnotations(imageId));\n    return (): void => {\n      dispatch(resetAnnotation());\n    };\n  }, [dispatch, imageId]);\n\n  return (\n    <Flex column hAlign=\"center\">\n      <Text size=\"larger\" weight=\"semibold\">\n        DRAW A RECTANGLE AROUND THE PART\n      </Text>\n      <Flex vAlign=\"center\">\n        <Button\n          text\n          disabled={index === 0}\n          icon={<ChevronStartIcon size=\"larger\" />}\n          onClick={(): void => {\n            setIndex((prev) => (prev - 1 + images.length) % images.length);\n          }}\n        />\n        <Scene url={imageUrl ?? '/icons/Play.png'} annotations={annotations} labelingType={labelingType} />\n        <Button\n          text\n          disabled={index === images.length - 1}\n          icon={<ChevronEndIcon size=\"larger\" />}\n          onClick={(): void => {\n            setIndex((prev) => (prev + 1) % images.length);\n          }}\n        />\n      </Flex>\n      <Flex gap=\"gap.medium\">\n        <Button\n          primary\n          content=\"Save\"\n          onClick={(): void => {\n            dispatch(saveAnnotation(images[imageIndex].id, annotations));\n            closeDialog();\n          }}\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            closeDialog();\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default LabelingPage;\n","import React, { memo, FC, useState } from 'react';\nimport { Dialog } from '@fluentui/react-northstar';\n\nimport LabelingPage from '../pages/LabelingPage';\nimport { LabelingType } from '../store/labelingPage/labelingPageTypes';\n\ninterface LabelingPageDialogProps {\n  trigger: JSX.Element;\n  imageIndex: number;\n}\nconst LabelingPageDialog: FC<LabelingPageDialogProps> = ({ trigger, imageIndex }): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '80%' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      content={\n        <LabelingPage\n          closeDialog={(): void => setOpen(false)}\n          labelingType={LabelingType.SingleAnnotation}\n          imageIndex={imageIndex}\n        />\n      }\n    />\n  );\n};\n\nexport default memo(LabelingPageDialog);\n","import React, { useState, useRef, useEffect, FC, useMemo } from 'react';\nimport { Stage, Layer, Image as KonvaImage } from 'react-konva';\nimport { Flex, Text } from '@fluentui/react-northstar';\n\nimport useImage from './LabelingPage/util/useImage';\nimport { Position2D, Size2D, WorkState, AnnotationState } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/part/partTypes';\nimport { Box2d } from './LabelingPage/Box';\n\ninterface LabelDisplayImageProps {\n  labelImage: LabelImage;\n  labelText?: string;\n  width: number;\n  height?: number;\n  pointerCursor?: boolean;\n  onClick?: (event: any) => void;\n}\nconst LabelDisplayImage: FC<LabelDisplayImageProps> = ({\n  labelImage,\n  labelText = '',\n  width = 300,\n  height = 150,\n  pointerCursor = false,\n  onClick,\n}) => {\n  const [image, _, size] = useImage(labelImage.image, 'anonymous');\n  const [imageSize, setImageSize] = useState<Size2D>({ width, height });\n  const scale = useRef<Position2D>({ x: 1, y: 1 });\n\n  const annotations = useMemo(() => {\n    if (!labelImage?.labels) return [];\n\n    return JSON.parse(labelImage.labels).map((parsedLabels) => ({\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n  }, [labelImage]);\n\n  useEffect(() => {\n    if (size.width !== 0) {\n      const scaleX = imageSize.width / size.width;\n      if (scaleX !== scale.current.x) {\n        scale.current = { x: scaleX, y: scaleX };\n        setImageSize((prev) => ({ ...prev, height: size.height * scaleX }));\n      }\n    }\n  }, [imageSize, size]);\n\n  return (\n    <div onClick={onClick} style={{ cursor: pointerCursor ? 'pointer' : 'default' }}>\n      <Flex column>\n        <Stage width={imageSize.width} height={imageSize.height} scale={scale.current}>\n          <Layer>\n            <KonvaImage image={image} />\n            {annotations.map((annotation, i) => (\n              <Box2d\n                key={i}\n                display={true}\n                workState={WorkState.None}\n                cursorPosition={{ x: 0, y: 0 }}\n                onSelect={(): void => void 0}\n                annotation={annotation}\n                scale={1}\n                annotationIndex={i}\n                selected={annotations.length === 1}\n                dispatch={null}\n              />\n            ))}\n          </Layer>\n        </Stage>\n        <Text align=\"center\">{labelText}</Text>\n      </Flex>\n    </div>\n  );\n};\n\nexport default LabelDisplayImage;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Flex,\n  Dropdown,\n  Button,\n  Image,\n  Text,\n  DropdownItemProps,\n  PlayIcon,\n  CallControlPresentNewIcon,\n  PauseThickIcon,\n} from '@fluentui/react-northstar';\nimport { Link, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useCameras } from '../../hooks/useCameras';\nimport { State } from '../../store/State';\nimport { Part } from '../../store/part/partTypes';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport { thunkGetCapturedImages, thunkAddCapturedImages } from '../../store/part/partActions';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\n\nexport const CapturePhotos: React.FC = () => {\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n  const { partId } = useParams();\n\n  return (\n    <>\n      <CameraSelector setSelectedCamera={setSelectedCamera} />\n      <RTSPVideo selectedCamera={selectedCamera} partId={partId} />\n      <CapturedImagesContainer partId={partId} />\n    </>\n  );\n};\n\nconst CameraSelector = ({ setSelectedCamera }): JSX.Element => {\n  const availableCameras = useCameras();\n\n  const items: DropdownItemProps[] = availableCameras.map((ele) => ({\n    header: ele.name,\n    content: {\n      key: ele.id,\n    },\n  }));\n\n  const onDropdownChange = (_, data): void => {\n    const { key } = data.value.content;\n    const selectedCamera = availableCameras.find((ele) => ele.id === key);\n    if (selectedCamera) setSelectedCamera(selectedCamera);\n  };\n\n  return (\n    <Flex gap=\"gap.small\" vAlign=\"center\">\n      <Text>Select Camera</Text>\n      <Dropdown items={items} onChange={onDropdownChange} />\n      <Link to=\"/addCamera\">Add Camera</Link>\n    </Flex>\n  );\n};\n\nconst RTSPVideo = ({ selectedCamera, partId }): JSX.Element => {\n  const [streamId, setStreamId] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const onCreateStream = (): void => {\n    fetch(`/api/streams/connect/?part_id=${partId}&rtsp=${selectedCamera.rtsp}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.status === 'ok') {\n          setStreamId(data.stream_id);\n        }\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const onCapturePhoto = (): void => {\n    dispatch(thunkAddCapturedImages(streamId));\n  };\n\n  const onDisconnect = useCallback((): void => {\n    setStreamId('');\n    fetch(`/api/streams/${streamId}/disconnect`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [streamId]);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onDisconnect);\n    return (): void => {\n      window.removeEventListener('beforeunload', onDisconnect);\n    };\n  }, [onDisconnect]);\n\n  const src = streamId ? `http://localhost:8000/api/streams/${streamId}/video_feed` : '';\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {src ? <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'contain' }} /> : null}\n      </div>\n      <Button.Group\n        styles={{ alignSelf: 'center' }}\n        buttons={[\n          {\n            key: 'start',\n            icon: <PlayIcon />,\n            iconOnly: true,\n            onClick: onCreateStream,\n            disabled: selectedCamera === null,\n          },\n          {\n            key: 'capture',\n            icon: <CallControlPresentNewIcon />,\n            iconOnly: true,\n            onClick: onCapturePhoto,\n            disabled: !streamId,\n          },\n          {\n            key: 'stop',\n            icon: <PauseThickIcon />,\n            iconOnly: true,\n            onClick: onDisconnect,\n            disabled: !streamId,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nconst CapturedImagesContainer = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const { capturedImages, isValid } = useSelector<State, Part>((state) => state.part);\n\n  useEffect(() => {\n    dispatch(thunkGetCapturedImages(partId));\n  }, [dispatch, partId]);\n\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Flex\n        styles={{\n          overflow: 'scroll',\n          border: '1px solid grey',\n          height: '150px',\n          borderColor: isValid ? '' : 'red',\n        }}\n        gap=\"gap.small\"\n        vAlign=\"center\"\n      >\n        {capturedImages.map((image, i) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor width={200} height={150} />}\n          />\n        ))}\n      </Flex>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Text, Grid } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/State';\nimport { Part } from '../../store/part/partTypes';\nimport { thunkGetCapturedImages, addCapturedImages } from '../../store/part/partActions';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\n\nexport const UploadPhotos = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const { capturedImages, isValid } = useSelector<State, Part>((state) => state.part);\n\n  useEffect(() => {\n    dispatch(thunkGetCapturedImages(partId));\n  }, [dispatch, partId]);\n\n  function handleUpload(e: React.ChangeEvent<HTMLInputElement>): void {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const formData = new FormData();\n      formData.append('image', e.target.files[i]);\n      formData.append('part', `http://localhost:8000/api/parts/${partId}/`);\n      fetch(`/api/images/`, {\n        method: 'POST',\n        body: formData,\n      })\n        .then((res) => res.json())\n        .then((data) => dispatch(addCapturedImages(data)))\n        .catch((err) => console.error(err));\n    }\n  }\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleUpload} accept=\"image/*\" multiple />\n      <CapturedImagesContainer capturedImages={capturedImages} isValid={isValid} />\n    </>\n  );\n};\n\nconst CapturedImagesContainer = ({ capturedImages, isValid }): JSX.Element => {\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"2\"\n        styles={{\n          border: '1px solid grey',\n          height: '100%',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n        }}\n      >\n        {capturedImages.map((image, i) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor width={300} height={150} />}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Input, TextArea, Button, Menu, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useLocation, Switch, Route, useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { CapturePhotos } from '../components/CapturePhoto';\nimport { UploadPhotos } from '../components/UploadPhotos';\n\nexport const PartDetails = (): JSX.Element => {\n  return (\n    <Grid columns={'repeat(12, 1fr)'} styles={{ gridColumnGap: '20px', height: '100%' }}>\n      <LeftPanel />\n      <RightPanel />\n    </Grid>\n  );\n};\n\nconst LeftPanel = (): JSX.Element => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const { partId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (partId) {\n      axios\n        .get(`/api/parts/${partId}/`)\n        .then(({ data }) => {\n          setName(data.name);\n          setDescription(data.description);\n          return void 0;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [partId]);\n\n  const onSave = (): void => {\n    const hasPartId = partId !== undefined;\n    const url = hasPartId ? `/api/parts/${partId}/` : `/api/parts/`;\n\n    axios({\n      method: hasPartId ? 'PUT' : 'POST',\n      url,\n      data: {\n        name,\n        description,\n      },\n    })\n      .then(({ data }) => {\n        history.push(`/parts/detail/${data.id}/capturePhotos`);\n        return void 0;\n      })\n      .catch((err) => {\n        setError(JSON.stringify(err.response.data));\n      });\n  };\n\n  return (\n    <Flex column space=\"around\" styles={{ gridColumn: '1 / span 4' }}>\n      <Input\n        placeholder=\"Enter Part Name...\"\n        fluid\n        styles={{ fontSize: '2em' }}\n        value={name}\n        onChange={(_, newProps): void => {\n          setName(newProps.value);\n        }}\n      />\n      <TextArea\n        placeholder=\"Enter Description...\"\n        design={{ height: '80%' }}\n        value={description}\n        onChange={(_, newProps): void => {\n          setDescription(newProps.value);\n        }}\n      />\n      <Flex space=\"around\">\n        <Button content=\"Save\" primary onClick={onSave} disabled={!name || !description} />\n        <Button content=\"Cancel\" />\n      </Flex>\n      {!!error && <Alert danger content={error} dismissible />}\n    </Flex>\n  );\n};\n\nconst RightPanel = (): JSX.Element => {\n  const { partId } = useParams();\n\n  return (\n    <Flex column gap=\"gap.small\" styles={{ gridColumn: '5 / span 8' }}>\n      {partId ? <Tab partId={partId} /> : null}\n      <Switch>\n        <Route path=\"/parts/detail/:partId/capturePhotos\" component={CapturePhotos} />\n        <Route path=\"/parts/detail/:partId/uploadPhotos\">\n          <UploadPhotos partId={partId} />\n        </Route>\n      </Switch>\n    </Flex>\n  );\n};\n\nconst Tab = ({ partId }): JSX.Element => {\n  const items = [\n    {\n      key: 'uploadPhotos',\n      as: Link,\n      to: `/parts/detail/${partId}/uploadPhotos`,\n      content: 'Upload Photos',\n    },\n    {\n      key: 'capturePhotos',\n      as: Link,\n      to: `/parts/detail/${partId}/capturePhotos`,\n      content: 'Capture Photo',\n    },\n  ];\n\n  const { pathname } = useLocation();\n  const activeIndex = items.findIndex((ele) => ele.to === pathname);\n\n  return <Menu items={items} activeIndex={activeIndex} pointing primary />;\n};\n","import {\n  GET_LOCATION_SUCCESS,\n  POST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  GetLocationsSuccess,\n  RequestLocationsFailure,\n  PostLocationSuccess,\n  Location,\n} from './locationTypes';\n\nconst getLocationsSuccess = (data: Location[]): GetLocationsSuccess => ({\n  type: GET_LOCATION_SUCCESS,\n  payload: data,\n});\n\nconst requestLocationsFailure = (error: any): RequestLocationsFailure => {\n  console.error(error);\n  return { type: REQUEST_LOCATION_FAILURE };\n};\n\nconst postLocationSuccess = (data: Location): PostLocationSuccess => ({\n  type: POST_LOCATION_SUCCESS,\n  payload: data,\n});\n\nexport const getLocations = () => (dispatch): Promise<void> => {\n  return fetch('/api/locations/')\n    .then((res) => {\n      return res.json();\n    })\n    .then((data) => {\n      dispatch(getLocationsSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n\nexport const postLocation = (newLocation: Location) => (dispatch): Promise<void> => {\n  return fetch('/api/locations/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newLocation),\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .then((data) => {\n      dispatch(postLocationSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n","import React, { useEffect, FC } from 'react';\nimport { Flex, Grid, Button, AddIcon } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { State } from '../store/State';\nimport { Location } from '../store/location/locationTypes';\nimport ImageLink from '../components/ImageLink';\nimport { getLocations } from '../store/location/locationActions';\n\nconst Locations: FC = () => {\n  const dispatch = useDispatch();\n  const locations = useSelector<State, Location[]>((state) => state.locations);\n\n  useEffect(() => {\n    dispatch(getLocations());\n  }, [dispatch]);\n  return (\n    <Flex column gap=\"gap.large\" padding=\"padding.medium\" styles={{ height: '100%' }}>\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {locations.map((location, i) => (\n          <ImageLink\n            key={i}\n            to={`/locations/${location.name}`}\n            defaultSrc=\"/icons/defaultLocation.png\"\n            width=\"100px\"\n            height=\"100px\"\n            label={location.name}\n          />\n        ))}\n      </Grid>\n      <Flex hAlign=\"end\">\n      <Link to=\"/locations/register\">\n        <Button\n          primary\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular />}\n          style={{ width: '6rem', height: '6rem' }}\n        />\n        </Link>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Locations;\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Flex, Text, Input, TextArea, Button, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { postLocation } from '../store/location/locationActions';\n\nconst LocationRegister: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState<string>('');\n  const [coordinates, setCoordinates] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Register Location\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"100px\" height=\"100px\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Input\n            styles={{ paddingTop: '10px', minHeight: '100px' }}\n            placeholder=\"Location Name\"\n            value={name}\n            onChange={(_, newProps): void => setName(newProps.value)}\n          />\n          <Input value={coordinates} onChange={(_, newProps): void => setCoordinates(newProps.value)} />\n          <TextArea\n            styles={{ height: '60%' }}\n            value={description}\n            onChange={(_, newProps): void => setDescription(newProps.value)}\n          />\n        </Flex>\n      </Grid>\n      <Flex gap=\"gap.medium\" padding=\"padding.medium\">\n        <Button\n          primary\n          disabled={[name, coordinates, description].includes('')}\n          onClick={(): void => {\n            dispatch(postLocation({ name, coordinates, description }));\n            history.push('/locations');\n          }}\n          content=\"Save\"\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            history.push('/locations');\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default LocationRegister;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Flex, Text, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { Location } from '../store/location/locationTypes';\nimport { State } from '../store/State';\n\nconst LocationDetails: FC = () => {\n  const { name } = useParams();\n  const location = useSelector<State, Location>((state) => state.locations.find((e) => e.name === name));\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Details\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"100px\" height=\"100px\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Text styles={{ paddingTop: '10px', minHeight: '100px' }}>{location.name}</Text>\n          <Text>{location.coordinates}</Text>\n          <Text styles={{ height: '60%' }}>{location.description}</Text>\n        </Flex>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationDetails;\n","import React, { useState, useMemo, FC } from 'react';\nimport {\n  Dropdown,\n  DropdownItemProps,\n  Grid,\n  Flex,\n  Text,\n  Divider,\n  Button,\n  RadioGroup,\n  ArrowDownIcon,\n  ArrowUpIcon,\n} from '@fluentui/react-northstar';\nimport { useSelector } from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport { Range, Handle } from 'rc-slider';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../rc-slider.css';\n\nimport LabelingPageDialog from '../components/LabelingPageDialog';\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { useParts } from '../hooks/useParts';\nimport LabelDisplayImage from '../components/LabelDisplayImage';\nimport { Project } from '../store/project/projectTypes';\n\nlet sorting = false;\n\nconst ManualIdentification: FC = () => {\n  const project = useSelector<State, Project>((state) => state.project);\n  const cameras = useSelector<State, Camera[]>((state) => state.cameras);\n  const parts = useParts();\n\n  const partItems = useMemo<DropdownItemProps[]>(() => {\n    if (parts.length === 0 || project.parts.length === 0) return [];\n\n    return project.parts.map((partId) => {\n      const part = parts.find((e) => e.id === partId);\n\n      return {\n        header: part.name,\n        content: {\n          key: part.id,\n        },\n      };\n    });\n  }, [parts, project]);\n\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n  const [confidenceLevelRange, setConfidenceLevelRange] = useState<[number, number]>([70, 90]);\n  const [ascend, setAscend] = useState<boolean>(false);\n\n  const images = useMemo(() => {\n    // TODO: Get real images here\n    const imgs = [...new Array(20)]\n      .map((_, i) => ({ confidenceLevel: i * 4, src: '/icons/Play.png' }))\n      .filter(\n        (e) => e.confidenceLevel >= confidenceLevelRange[0] && e.confidenceLevel <= confidenceLevelRange[1],\n      );\n\n    if (sorting) {\n      if (ascend) imgs.sort((a, b) => a.confidenceLevel - b.confidenceLevel);\n      else imgs.sort((a, b) => b.confidenceLevel - a.confidenceLevel);\n    }\n    return imgs;\n  }, [confidenceLevelRange, ascend]);\n\n  const onDropdownChange = (_, data): void => {\n    const { key } = data.value.content;\n    const currentCamera = cameras.find((ele) => ele.id === key);\n    if (selectedCamera) setSelectedCamera(currentCamera);\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Manual Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.medium\" space=\"between\" styles={{ height: '75vh', padding: '1em' }}>\n        <Grid columns=\"3\" styles={{ columnGap: '1em' }}>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text truncated>Select Part:</Text>\n            <Dropdown items={partItems} onChange={onDropdownChange} />\n          </Flex>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text>Confidence Level:</Text>\n            <Range\n              value={confidenceLevelRange}\n              allowCross={false}\n              onChange={(e): void => setConfidenceLevelRange(e)}\n              handle={({ value, dragging, index, ...restProps }): JSX.Element => {\n                return (\n                  <Tooltip\n                    prefixCls=\"rc-slider-tooltip\"\n                    overlay={`${value}%`}\n                    visible={dragging}\n                    placement=\"top\"\n                    key={index}\n                  >\n                    <Handle value={value} {...restProps} />\n                  </Tooltip>\n                );\n              }}\n            />\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text truncated>Sort:</Text>\n            <Button\n              icon={ascend ? <ArrowDownIcon /> : <ArrowUpIcon />}\n              styles={{ color: sorting ? '#0094d8' : 'grey' }}\n              text\n              iconOnly\n              onClick={(): void => {\n                sorting = true;\n                setAscend((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Grid>\n        <Grid\n          columns=\"2\"\n          styles={{\n            width: '100%',\n            height: '80%',\n            borderStyle: 'solid',\n            overflow: 'scroll',\n            borderWidth: '1px',\n          }}\n        >\n          {images.map((e, i) => (\n            <ImageIdentificationItem key={i} confidenceLevel={e.confidenceLevel} src={e.src} />\n          ))}\n        </Grid>\n        <Button content=\"Update\" styles={{ width: '15%' }} primary disabled />\n      </Flex>\n    </>\n  );\n};\n\ninterface ImageIdentificationItemProps {\n  confidenceLevel: number;\n  src: string;\n}\nconst ImageIdentificationItem: FC<ImageIdentificationItemProps> = ({ confidenceLevel, src }) => {\n  const [isPart, setIsPart] = useState<number>(null);\n\n  return (\n    <Flex hAlign=\"center\" padding=\"padding.medium\">\n      <div style={{ margin: '0.2rem' }}>\n        <LabelDisplayImage labelImage={{ image: src, labels: null }} width={100} height={100} />\n      </div>\n      <Flex column gap=\"gap.smaller\" styles={{ width: '30%' }}>\n        <Text truncated>Confidence Level: {confidenceLevel}%</Text>\n        <Flex column>\n          <RadioGroup\n            checkedValue={isPart}\n            onCheckedValueChange={(_, newProps): void => setIsPart(newProps.value as number)}\n            items={[\n              {\n                key: '1',\n                label: 'Yes',\n                value: 1,\n              },\n              {\n                key: '0',\n                label: 'No',\n                value: 0,\n              },\n            ]}\n          />\n        </Flex>\n        <LabelingPageDialog\n          imageIndex={1000}\n          trigger={<Button primary content=\"Identify\" disabled={!isPart} />}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ManualIdentification;\n","import { useEffect, useState } from 'react';\n\n/**\n * Fetch the parts data from server\n */\nexport const useParts = (): any[] => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/parts/')\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data);\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  return parts;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text, Button, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const Parts: React.FC = () => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/parts')\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data.map((ele) => ({ ...ele, images: [] })));\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <Flex gap=\"gap.large\" wrap>\n        {parts.map((ele) => (\n          <Item key={ele.id} src={ele.images[0]} id={ele.id} name={ele.name} />\n        ))}\n      </Flex>\n      <Button\n        primary\n        fluid\n        circular\n        content={<AddIcon size=\"largest\" circular />}\n        style={{\n          width: 100,\n          height: 100,\n          position: 'fixed',\n          right: '100px',\n          bottom: '100px',\n        }}\n        as={Link}\n        to=\"/parts/detail\"\n      />\n    </div>\n  );\n};\n\nconst Item = ({ src, id, name }): JSX.Element => {\n  return (\n    <Flex column hAlign=\"center\" gap=\"gap.large\" as={Link} to={`/parts/detail/${id}/capturePhotos`}>\n      <div style={{ width: '250px', height: '250px' }}>\n        <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n      </div>\n      <Text size=\"larger\">{name}</Text>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Divider,\n  Text,\n  Flex,\n  Dropdown,\n  Button,\n  DropdownItemProps,\n  Checkbox,\n  Input,\n} from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { thunkGetProject, thunkPostProject } from '../store/project/projectActions';\nimport { Project } from '../store/project/projectTypes';\nimport { State } from '../store/State';\n\nexport const PartIdentification: React.FC = () => {\n  const dispatch = useDispatch();\n  const { id, camera, location, parts } = useSelector<State, Project>((state) => state.project);\n  const [cameraLoading, dropDownCameras, selectedCamera, setSelectedCameraById] = useDropdownItems<any>(\n    'cameras',\n  );\n  const [partLoading, dropDownParts, selectedParts, setSelectedPartsById] = useDropdownItems<any>(\n    'parts',\n    true,\n  );\n  const [locationLoading, dropDownLocations, selectedLocations, setSelectedLocationById] = useDropdownItems<\n    any\n  >('locations');\n  const history = useHistory();\n  const [needRetraining, setNeedRetraining] = useState(true);\n  const [max, setMax] = useState(80);\n  const [min, setMin] = useState(60);\n  const [maxImgCount, setMaxImgCount] = useState(15);\n  const [maxImgCountError, setMaxImgCountError] = useState(false);\n\n  const projectId = useRef<number>(null);\n  useEffect(() => {\n    if (!cameraLoading && !partLoading && !locationLoading) {\n      dispatch(thunkGetProject());\n    }\n  }, [dispatch, cameraLoading, locationLoading, partLoading]);\n\n  useEffect(() => {\n    projectId.current = id;\n    if (location) setSelectedLocationById(location);\n    if (parts.length) setSelectedPartsById(parts);\n    if (camera) setSelectedCameraById(camera);\n  }, [camera, id, location, parts, setSelectedCameraById, setSelectedLocationById, setSelectedPartsById]);\n\n  const handleSubmitConfigure = (): void => {\n    ((dispatch(\n      thunkPostProject(projectId.current, selectedLocations, selectedParts, selectedCamera),\n    ) as unknown) as Promise<void>)\n      .then((id) => history.push(`/cameras/${selectedCamera.name}/${id}`))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Part Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.large\" design={{ paddingTop: '30px' }}>\n        <ModuleSelector\n          moduleName=\"cameras\"\n          to=\"/cameras\"\n          value={selectedCamera}\n          setSelectedModuleItem={setSelectedCameraById}\n          items={dropDownCameras}\n          isMultiple={false}\n        />\n        <ModuleSelector\n          moduleName=\"parts\"\n          to=\"/parts\"\n          value={selectedParts}\n          setSelectedModuleItem={setSelectedPartsById}\n          items={dropDownParts}\n          isMultiple={true}\n        />\n        <ModuleSelector\n          moduleName=\"locations\"\n          to=\"/locations\"\n          value={selectedLocations}\n          setSelectedModuleItem={setSelectedLocationById}\n          items={dropDownLocations}\n          isMultiple={false}\n        />\n        <Checkbox\n          label=\"Set up retraining\"\n          checked={needRetraining}\n          onChange={(_, data): void => setNeedRetraining(data.checked)}\n        />\n        <Text disabled={!needRetraining}>Accuracy Range</Text>\n        <Text disabled={!needRetraining}>\n          Minimum:{' '}\n          <Input\n            type=\"number\"\n            disabled={!needRetraining}\n            inline\n            value={min}\n            onChange={(_, { value }): void => setMin(value as any)}\n          />\n          %\n        </Text>\n        <Text disabled={!needRetraining}>\n          Maximum:{' '}\n          <Input\n            type=\"number\"\n            disabled={!needRetraining}\n            inline\n            value={max}\n            onChange={(_, { value }): void => setMax(value as any)}\n          />\n          %\n        </Text>\n        <Text disabled={!needRetraining}>\n          Maximum Images:{' '}\n          <Input\n            type=\"number\"\n            disabled={!needRetraining}\n            inline\n            value={maxImgCount}\n            onChange={(_, { value }): void => {\n              if ((value as any) < 15) setMaxImgCountError(true);\n              else setMaxImgCountError(false);\n              setMaxImgCount(value as any);\n            }}\n          />\n          {maxImgCountError && <Text error>Cannot be less than 15</Text>}\n        </Text>\n        <Link to=\"\">Advanced Configuration</Link>\n        <Button\n          primary\n          onClick={handleSubmitConfigure}\n          disabled={!selectedCamera || !selectedLocations || !selectedParts}\n        >\n          Configure\n        </Button>\n      </Flex>\n    </>\n  );\n};\n\nfunction useDropdownItems<T>(\n  moduleName: string,\n  isMultiple?: boolean,\n): [boolean, DropdownItemProps[], T | T[], (id: string | string[]) => void] {\n  const originItems = useRef<(T & { id: number })[]>([]);\n  const [dropDownItems, setDropDownItems] = useState<DropdownItemProps[]>([]);\n  const [selectedItem, setSelectedItem] = useState<T | T[]>(isMultiple ? [] : null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`/api/${moduleName}/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setDropDownItems(\n          data.map((e) => ({\n            header: e.name,\n            content: {\n              key: e.id,\n            },\n          })),\n        );\n        originItems.current = data;\n        setLoading(false);\n        return void 0;\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.error(err);\n      });\n  }, [moduleName]);\n\n  const setSelectedItemById = useCallback((id: string | string[]): void => {\n    if (Array.isArray(id)) {\n      const correspondedItems = id.reduce((acc, cur) => {\n        const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === cur.toString());\n        if (correspondedItem) acc.push(correspondedItem);\n        return acc;\n      }, []);\n      setSelectedItem(correspondedItems as any);\n    } else {\n      const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === id.toString());\n      if (correspondedItem) setSelectedItem(correspondedItem);\n    }\n  }, []);\n\n  return [loading, dropDownItems, selectedItem, setSelectedItemById];\n}\n\nconst ModuleSelector = ({ moduleName, to, value, setSelectedModuleItem, items, isMultiple }): JSX.Element => {\n  const onDropdownChange = (_, data): void => {\n    if (Array.isArray(data.value)) {\n      const ids = data.value.map((ele) => ele.content.key);\n      setSelectedModuleItem(ids);\n    } else {\n      const { key } = data.value.content;\n      setSelectedModuleItem(key);\n    }\n  };\n\n  return (\n    <Flex vAlign=\"center\" gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }}>{`Select ${moduleName}`}</Text>\n      <Dropdown items={items} onChange={onDropdownChange} value={formatValue(value)} multiple={isMultiple} />\n      <Link to={to}>{`Add ${moduleName}`}</Link>\n    </Flex>\n  );\n};\n\nconst formatValue = (value): DropdownItemProps | DropdownItemProps[] => {\n  if (Array.isArray(value)) {\n    return value.map((e) => ({\n      header: e.name,\n      content: {\n        key: e.id,\n      },\n    }));\n  }\n  if (value) {\n    return {\n      header: value.name,\n      content: {\n        key: value.id,\n      },\n    };\n  }\n  return null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Divider, Flex, Text, Input, Button, Alert } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const Setting = (): JSX.Element => {\n  const [settingData, setSettingData] = useState({\n    id: null,\n    key: '',\n    namespace: '',\n  });\n  const [saveStatus, setSaveStatus] = useState({\n    success: false,\n    content: '',\n  });\n\n  useEffect(() => {\n    fetch('/api/settings/')\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setSettingData({\n            id: data[0].id,\n            key: data[0].training_key,\n            namespace: data[0].endpoint,\n          });\n        }\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const onSave = (): void => {\n    const isSettingEmpty = settingData.id === null;\n    const url = isSettingEmpty ? `/api/settings/` : `/api/settings/${settingData.id}/`;\n\n    fetch(url, {\n      body: JSON.stringify({\n        training_key: settingData.key,\n        endpoint: settingData.namespace,\n      }),\n      method: isSettingEmpty ? 'POST' : 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setSaveStatus({ success: true, content: 'Save Setting Successfully' });\n        return void 0;\n      })\n      .catch((err) => {\n        setSaveStatus({ success: false, content: `Fail to save settings: /n ${err.toString()}` });\n      });\n  };\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Setting</h1>\n      <Divider color=\"grey\" />\n      <Text size=\"large\" weight=\"bold\">\n        Azure Cognitive Services Settings:{' '}\n      </Text>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Namespace:\n        </Text>\n        <Input\n          value={settingData.namespace}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, namespace: value }))}\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Key:\n        </Text>\n        <Input\n          value={settingData.key}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, key: value }))}\n        />\n      </Flex>\n      <Flex gap=\"gap.large\">\n        <Button primary onClick={onSave}>\n          Save\n        </Button>\n        <Button primary as={Link} to=\"/\">\n          Cancel\n        </Button>\n      </Flex>\n      {saveStatus.content ? (\n        <Alert\n          success={saveStatus.success}\n          danger={!saveStatus.success}\n          content={saveStatus.content}\n          dismissible\n        />\n      ) : null}\n    </Flex>\n  );\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Cameras from '../pages/Cameras';\nimport CameraDetails from '../pages/CameraDetails';\nimport { PartDetails } from '../pages/PartDetails';\nimport LabelingPage from '../pages/LabelingPage';\nimport Locations from '../pages/Locations';\nimport LocationRegister from '../pages/LocationRegister';\nimport LocationDetails from '../pages/LocationDetails';\nimport ManualIdentification from '../pages/ManualIdentification';\nimport { Parts } from '../pages/Parts';\nimport { PartIdentification } from '../pages/PartIdentification';\nimport { Setting } from '../pages/Setting';\n\nexport const RootRouter: FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/manual\" component={ManualIdentification} />\n      <Route path=\"/locations/register\" component={LocationRegister} />\n      <Route path=\"/locations/:name\" component={LocationDetails} />\n      <Route path=\"/locations\" component={Locations} />\n      <Route path=\"/label/:imageIndex\" component={LabelingPage} />\n      <Route path=\"/cameras/:name/:projectId\" component={CameraDetails} />\n      <Route path=\"/cameras/:name/\" component={CameraDetails} />\n      <Route path=\"/cameras\" component={Cameras} />\n      <Route path=\"/parts/detail/:partId\" component={PartDetails} />\n      <Route path=\"/parts/detail/\" component={PartDetails} />\n      <Route path=\"/parts\" component={Parts} />\n      <Route path=\"/partIdentification\" component={PartIdentification} />\n      <Route path=\"/setting\" component={Setting} />\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nconst getTitle = (pathname: string): string => {\n  switch (pathname) {\n    case 'cameras':\n      return 'Camera';\n    case 'parts':\n      return 'Part';\n    case 'locations':\n      return 'Location';\n    case 'register':\n      return 'Register';\n    case 'label':\n      return 'Label';\n    case 'manual':\n      return 'Identify Manually';\n    case 'detail':\n      return 'Register Part';\n    case 'partIdentification':\n      return 'Job Configuration';\n    case 'capturePhotos':\n      return null;\n    case 'uploadPhotos':\n      return null;\n    default:\n      if (typeof pathname === 'string') return 'Details';      \n      return null;\n  }\n};\n\nconst Breadcrumb: FC = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/') return <Text color=\"black\">Home</Text>;\n\n  const pathTitles = pathname.split('/').slice(1);\n\n  return (\n    <Flex gap=\"gap.smaller\">\n      <Link to={'/'} style={{ color: '#0094d8', textDecoration: 'none' }}>\n        <Text>Home</Text>\n      </Link>\n      {pathTitles.map((e, i, arr) => {\n        const title = getTitle(e);\n\n        return (\n          <Fragment key={i}>\n            <Text color=\"black\">{'>'}</Text>\n            {i === arr.length - 1 ? (\n              <Text color=\"black\">{title}</Text>\n            ) : (\n              <Link to={`/${e}`} style={{ color: '#0094d8', textDecoration: 'none' }}>\n                <Text>{title}</Text>\n              </Link>\n            )}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { FC } from 'react';\nimport { Grid, Segment, Image, Flex, Text, MenuIcon } from '@fluentui/react-northstar';\nimport { NavLink, Link } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\n\nexport const MainLayout: React.FC = ({ children }) => {\n  return (\n    <Grid\n      columns=\"60px auto\"\n      rows=\"50px auto\"\n      design={{ height: '100vh' }}\n      styles={{ justifyContent: 'stretch' }}\n    >\n      <TopNav />\n      <LeftNav\n        styles={{\n          gridColumn: '1 / span 1',\n          gridRow: '2 / span 1',\n          boxShadow: '1px 0px 10px 0px rgba(0,0,0,0.75)',\n          zIndex: 1,\n        }}\n      />\n\n      <Segment styles={{ gridColumn: 'span 1', padding: '30px' }}>\n        <Breadcrumb />\n        {children}\n      </Segment>\n    </Grid>\n  );\n};\n\nconst TopNav: FC = () => {\n  return (\n    <Flex\n      space=\"between\"\n      vAlign=\"center\"\n      padding=\"padding.medium\"\n      styles={{\n        backgroundColor: '#0094d8',\n        gridColumn: '1 / span 2',\n        boxShadow: '0px 1px 10px 0px rgba(0,0,0,0.75)',\n        zIndex: 2,\n        fontSize: '20px',\n        padding: '0.5rem 1rem',\n      }}\n    >\n      <Flex gap=\"gap.large\" vAlign=\"center\">\n        <MenuIcon size=\"large\" styles={{ color: 'white' }} />\n        <NavLink to={'/'} style={{ textDecoration: 'none' }}>\n          <Text color=\"white\">Vision on Edge</Text>\n        </NavLink>\n      </Flex>\n      <Flex vAlign=\"center\" hAlign=\"end\" gap=\"gap.medium\" styles={{ height: '100%' }}>\n        <Link to=\"/setting\" style={{ height: '100%' }}>\n          <Image styles={{ height: '100%' }} src=\"/icons/setting.png\" />\n        </Link>\n        <Text color=\"white\">User</Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst LeftNav: FC<any> = ({ styles }): JSX.Element => {\n  return (\n    <Segment color=\"grey\" inverted styles={{ ...styles, padding: 0, paddingTop: '1em' }}>\n      <Flex column gap=\"gap.large\" hAlign=\"center\">\n        <NavItem src=\"/icons/location.png\" to=\"/locations\"></NavItem>\n        <NavItem src=\"/icons/camera.png\" to=\"/cameras\"></NavItem>\n        <NavItem src=\"/icons/part.png\" to=\"/parts\"></NavItem>\n        <NavItem src=\"/icons/manual.png\" to=\"/manual\"></NavItem>\n        <NavItem src=\"/icons/partIdentification.png\" to=\"/partIdentification\"></NavItem>\n      </Flex>\n    </Segment>\n  );\n};\n\nconst NavItem = ({ src, to }): JSX.Element => {\n  return (\n    <NavLink\n      to={to}\n      style={{ display: 'flex', justifyContent: 'center', padding: '0.8em' }}\n      activeStyle={{ backgroundColor: 'rgba(250, 83, 5, 0.5)' }}\n    >\n      <Image src={src} design={{ width: '100%' }}></Image>\n    </NavLink>\n  );\n};\n","import { ThemeInput, mergeThemes, themes } from '@fluentui/react-northstar';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colors: {\n      brand: {\n        '50': '#f3fafd',\n        '100': '#d1ecf9',\n        '200': '#aadcf4',\n        '300': '#5dbce8',\n        '400': '#1ba0dd',\n        '500': '#0094d8',\n        '600': '#0085c3',\n        '700': '#0071a5',\n        '800': '#005379',\n        '900': 'black',\n      },\n    },\n    colorScheme: {\n      brand: {\n        foreground: '#0094d8',\n        background: '#0094d8',\n        border: '#E1DFDD',\n        shadow: '#000',\n        foregroundHover: '#0094d8',\n        backgroundHover: '#0085c3',\n        borderHover: '#5dbce8',\n        shadowHover: '#000',\n        foregroundActive: '#0094d8',\n        backgroundActive: '#0094d8',\n        borderActive: '#E1DFDD',\n        shadowActive: undefined,\n        foregroundFocus: '#0094d8',\n        backgroundFocus: '#0094d8',\n        borderFocus: '#000',\n        shadowFocus: undefined,\n        foregroundPressed: '#0071a5',\n        backgroundPressed: '#0071a5',\n        borderPressed: '#5dbce8',\n        shadowPressed: undefined,\n        foregroundDisabled: '#C8C6C4',\n        backgroundDisabled: '#EDEBE9',\n        borderDisabled: '#EDEBE9',\n        shadowDisabled: undefined,\n        foreground1: '#0094d8',\n        foreground2: '#0085c3',\n        foreground3: '#aadcf4',\n        foreground4: '#fff',\n        background1: '#d1ecf9',\n        background2: '#005379',\n        background3: '#373644',\n        background4: '#0071a5',\n        border1: '#aadcf4',\n        border2: '#5dbce8',\n        foregroundHover1: '#fff',\n        foregroundHover2: '#aadcf4',\n        backgroundHover1: '#f3fafd',\n        foregroundPressed1: '#fff',\n        foregroundActive1: '#0094d8',\n        foregroundActive2: '#aadcf4',\n        backgroundActive1: '#0094d8',\n        borderActive1: '#aadcf4',\n        borderActive2: '#5dbce8',\n        foregroundFocus1: '#0094d8',\n        foregroundFocus2: '#0085c3',\n        foregroundFocus3: '#aadcf4',\n        foregroundFocus4: '#fff',\n        backgroundFocus1: '#d1ecf9',\n        backgroundFocus2: '#005379',\n        backgroundFocus3: '#373644',\n        borderFocusWithin: '#fff',\n        borderFocus1: '#0094d8',\n        foregroundDisabled1: '#C8C6C4',\n        backgroundDisabled1: '#EDEBE9',\n      },\n    },\n  },\n};\n\n/**\n * Primary color is based on #0094d8 and generated by https://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/theming-designer/index.html\n */\nexport const myTheme = mergeThemes(themes.teams, theme);\n","import React, { FC } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from '@fluentui/react-northstar';\nimport { RootRouter } from './routes/RootRouter';\nimport { MainLayout } from './components/MainLayout';\nimport { myTheme } from './theme';\n\nconst App: FC = (): JSX.Element => {\n  return (\n    <Provider theme={myTheme}>\n      <Router>\n        <div className=\"App\">\n          <MainLayout>\n            <RootRouter />\n          </MainLayout>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/State';\n\nconst { store, persistor } = configureStore(initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading..</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}