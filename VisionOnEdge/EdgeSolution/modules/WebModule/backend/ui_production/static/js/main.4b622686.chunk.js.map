{"version":3,"sources":["store/part/partReducer.ts","store/labelingPage/labelingPageTypes.ts","store/State.ts","store/camera/cameraReducer.ts","store/camera/cameraTypes.ts","store/part/partTypes.ts","store/labelingPage/labelingPageReducer.ts","store/location/locationReducer.ts","store/location/locationTypes.ts","store/dialog/dialogIsOpenReducer.ts","store/dialog/dialogIsOpenTypes.ts","store/project/projectReducer.ts","store/project/projectTypes.ts","store/image/imageReducer.ts","store/image/imageTypes.ts","store/rootReducer.ts","store/index.ts","components/ImageLink.tsx","pages/Home.tsx","store/dialog/dialogIsOpenActions.ts","store/camera/cameraActions.ts","pages/Cameras.tsx","components/ConfirmDialog.tsx","components/CameraDetails/CameraDetailInfo.tsx","store/project/projectActions.ts","store/image/imageActions.ts","components/RTSPVideo/RTSPVideo.tsx","store/part/partActions.ts","hooks/useParts.ts","components/CameraConfigure/CameraConfigureInfo.tsx","hooks/useInterval.ts","components/CameraConfigure/CreateCameraConfig.tsx","hooks/useCameras.ts","pages/CameraDetails.tsx","components/LabelingPage/util/useImage.ts","components/LabelingPage/util/resizeImage.ts","store/labelingPage/labelingPageActions.ts","components/LabelingPage/Box.tsx","components/LabelingPage/RemoveBoxButton.tsx","components/LabelingPage/Scene.tsx","util/GetIDFromUrl.ts","util/getFilteredImages.ts","pages/LabelingPage.tsx","components/LabelingPageDialog.tsx","components/LabelDisplayImage.tsx","util/formatDropdownValue.ts","components/CapturePhoto/CapturePhotos.tsx","components/UploadPhotos/UploadPhotos.tsx","pages/PartDetails.tsx","store/location/locationActions.ts","pages/Locations.tsx","pages/LocationRegister.tsx","pages/LocationDetails.tsx","pages/ManualIdentification.tsx","pages/Parts.tsx","pages/PartIdentification.tsx","pages/Setting.tsx","routes/RootRouter.tsx","components/Breadcrumb.tsx","components/MainLayout/MainLayout.tsx","theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["reducer","AnnotationState","LabelingCursorStates","WorkState","LabelingType","initialState","dialogIsOpen","cameras","locations","images","labelingPageState","annotations","part","capturedImages","isValid","project","isLoading","data","id","camera","location","parts","needRetraining","accuracyRangeMin","accuracyRangeMax","maxImages","modelUrl","status","successRate","successfulInferences","unIdetifiedItems","error","trainingStatus","camerasReducer","state","action","type","payload","concat","idx","findIndex","e","slice","checkIfImagesCountIsValidToTrain","newCapturedImage","newState","filter","image","labels","length","labelingPageStateReducer","push","annotation","creatingAnnotation","updater","annotationState","Finish","label","x1","x2","y1","y2","pop","index","locationsReducer","dialogIsOpenReducer","projectReducer","labelImagesReducer","updatedImageIdx","rootReducer","combineReducers","partReducer","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","ImageLink","to","imgSrc","defaultSrc","bgImgSrc","imgPadding","width","height","bgImgStyle","pointerCursor","onClick","Flex","column","styles","style","Image","src","padding","objectFit","backgroundImage","cursor","Text","align","Home","dispatch","useDispatch","gap","size","weight","color","backgroundColor","requestCamerasFailure","console","getCameras","axios","then","getCamerasSuccess","catch","err","Cameras","useSelector","useState","name","setName","rtsp","setRtsp","model_name","setModel_name","useEffect","Grid","columns","map","i","backgroundSize","backgroundPosition","backgroundRepeat","Dialog","trigger","hAlign","Button","primary","fluid","circular","content","confirmButton","onConfirm","newCamera","method","postCameraSuccess","cancelButton","header","open","onOpen","onCancel","Input","placeholder","value","onChange","_","newProps","ConfirmDialog","primaryStyles","setOpen","footer","space","memo","modelName","deleteCameraSuccess","deleteCamera","getTrainingStatusSuccess","thunkGetProject","Axios","get","parseInt","split","ele","download_uri","getProjectSuccess","thunkGetTrainingStatus","projectId","getState","success_rate","inference_num","unidentified_num","getTrain","requestLabelImagesFailure","getLabelImages","getLabelImagesSuccess","postLabelImage","newImage","saveLabelImageAnnotation","imageId","url","JSON","stringify","info","updateLabelImageAnnotation","RTSPVideo","selectedCamera","partId","canCapture","streamId","setStreamId","onDisconnect","useCallback","fetch","response","json","log","window","addEventListener","removeEventListener","Group","alignSelf","buttons","icon","iconOnly","stream_id","disabled","a","thunkAddCapturedImages","useParts","setParts","res","CameraConfigureInfo","useParams","history","useHistory","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","Loader","labelPosition","design","paddingTop","title","online","includes","join","fontWeight","margin","marginLeft","as","Link","confirm","delete","alert","thunkDeleteProject","ListItem","vAlign","CameraStatus","text","Status","CreateCameraConfig","border","useCameras","CameraDetails","find","hasProject","defaultState","undefined","useImage","crossOrigin","imageState","setImageState","prevUrl","ref","usePrevious","img","document","createElement","prev","onload","onerror","getResizeImageFunction","defaultSize","scaleX","scaleY","requestAnnotationsSuccess","BoxObj","init","attribute","Empty","createWithPoint","p","obj","this","add","x","y","newObj","P1Added","setVerticesToValidValue","setVerticesToInt","Math","round","setVerticesPointsOrder","object","Box2d","scale","workState","onSelect","selected","annotationIndex","visible","changeCursorState","vertices","setVertices","anchorRadius","strokeWidth","boxRef","dispatchLabel","newAnnotation","updateAnnotation","mouseMoveListener","Creating","evt","offsetX","offsetY","onDragAnchor","xi","yi","target","getStage","getSize","position","setAttr","anotherPosXArr","anotherPosYArr","splice","xx","yy","nwseResize","neswResize","prevVertices","layer","getLayer","on","off","onMouseDown","None","cancelBubble","points","stroke","closed","radius","fill","draggable","onDragMove","onDragEnd","onMouseEnter","onMouseLeave","DisplayBox","cache","imageSize","setShowOuterRemoveButton","removeBox","setColor","setStrokeWidth","pointer","Scene","labelingType","resizeImage","setImageSize","noMoreCreate","useMemo","SingleAnnotation","default","cursorState","setCursorState","selectedAnnotationIndex","setSelectedAnnotationIndex","setWorkState","showOuterRemoveButton","isDragging","setIsDragging","cursorType","crosshair","removeAnnotation","Selecting","outcomeSize","outcomeScale","pos","onMouseUp","onDragStart","getIdFromUrl","getFilteredImages","isRelabel","is_relabel","isOnePointBox","LabelingPage","imageIndex","closeDialog","setIndex","filteredImages","imageUrl","parse","parsedLabels","getAnnotations","LabelDisplayImage","labelImage","labelText","formatDropdownValue","Array","isArray","CapturePhotos","setSelectedCamera","CameraSelector","availableCameras","items","Dropdown","newSelectedCamera","CapturedImagesContainer","imageCount","overflow","borderColor","when","message","UploadPhotos","files","formData","FormData","append","accept","multiple","gridGap","justifyItems","alignItems","PartDetails","gridColumnGap","LeftPanel","description","setDescription","setError","gridColumn","fontSize","TextArea","hasPartId","Alert","danger","dismissible","RightPanel","path","component","Tab","pathname","useLocation","activeIndex","Menu","pointing","requestLocationsFailure","Locations","getLocationsSuccess","LocationRegister","coordinates","setCoordinates","Divider","minHeight","newLocation","headers","body","postLocationSuccess","LocationDetails","sorting","ImageIdentificationItem","isPartCorrect","confidenceLevel","judgedImages","setJudgedImages","correct","indexOf","incorrect","truncated","RadioGroup","checkedValue","onCheckedValueChange","idxInIncorrect","idxInCorrect","ManualIdentification","projectData","partItems","selectedPartId","setSelectedPartId","confidenceLevelRange","setConfidenceLevelRange","ascend","setAscend","showImages","confidence","sort","b","selectedPartValue","columnGap","allowCross","handle","dragging","restProps","prefixCls","overlay","placement","borderStyle","borderWidth","Parts","partsAPI","imagesAPI","all","spread","wrap","right","bottom","Item","PartIdentification","maxImage","useDropdownItems","cameraLoading","dropDownCameras","setSelectedCameraById","partLoading","dropDownParts","selectedParts","setSelectedPartsById","locationLoading","dropDownLocations","selectedLocations","setSelectedLocationById","maxImgCountError","setMaxImgCountError","setData","keyName","moduleName","setSelectedModuleItem","isMultiple","Checkbox","checked","inline","isProjectEmpty","thunkPostProject","loading","originItems","dropDownItems","setDropDownItems","selectedItem","setSelectedItem","setLoading","correspondedItems","reduce","acc","cur","correspondedItem","toString","ModuleSelector","ids","Setting","namespace","iotHubConnectionString","deviceId","moduleId","settingData","setSettingData","success","saveStatus","setSaveStatus","training_key","endpoint","iot_hub_connection_string","device_id","module_id","isSettingEmpty","Object","values","some","RootRouter","Breadcrumb","pathTitles","textDecoration","arr","getTitle","MainLayout","children","rows","justifyContent","gridRow","boxShadow","zIndex","Segment","TopNav","LeftNav","inverted","NavItem","display","activeStyle","theme","siteVariables","colors","brand","colorScheme","foreground","background","shadow","foregroundHover","backgroundHover","borderHover","shadowHover","foregroundActive","backgroundActive","borderActive","shadowActive","foregroundFocus","backgroundFocus","borderFocus","shadowFocus","foregroundPressed","backgroundPressed","borderPressed","shadowPressed","foregroundDisabled","backgroundDisabled","borderDisabled","shadowDisabled","foreground1","foreground2","foreground3","foreground4","background1","background2","background3","background4","border1","border2","foregroundHover1","foregroundHover2","backgroundHover1","foregroundPressed1","foregroundActive1","foregroundActive2","backgroundActive1","borderActive1","borderActive2","foregroundFocus1","foregroundFocus2","foregroundFocus3","foregroundFocus4","backgroundFocus1","backgroundFocus2","backgroundFocus3","borderFocusWithin","borderFocus1","foregroundDisabled1","backgroundDisabled1","myTheme","mergeThemes","themes","teams","App","Provider","className","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b622686.chunk.js","sourcesContent":["import { initialState } from '../State';\nimport {\n  PartActionTypes,\n  ADD_CAPTURED_IMAGE,\n  Part,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\n\nconst partReducer = (state = initialState.part, action: PartActionTypes): Part => {\n  switch (action.type) {\n    case ADD_CAPTURED_IMAGE:\n      return { ...state, capturedImages: [...state.capturedImages, action.payload.newCapturedImage] };\n    case UPDATE_CAPTURED_IMAGES:\n      return { ...state, capturedImages: action.payload.capturedImages };\n    default:\n      return state;\n  }\n};\n\ntype PartReducerType = typeof partReducer;\nconst checkIfImagesCountIsValidToTrain = (reducer: PartReducerType) => (\n  state = initialState.part,\n  action: PartActionTypes,\n): Part => {\n  const newState = reducer(state, action);\n  const isValid = newState.capturedImages.filter((image) => image.labels).length >= 15;\n  return { ...newState, isValid };\n};\n\nexport default checkIfImagesCountIsValidToTrain(partReducer);\n","// * Request Operation\nexport const REQUEST_ANNOTATION_FAILURE = 'REQUEST_ANNOTATION_FAILURE';\nexport type RequestAnnotationSuccessAction = { type: typeof REQUEST_ANNOTATION_SUCCESS; payload: any };\nexport const REQUEST_ANNOTATION_SUCCESS = 'REQUEST_ANNOTATION_SUCCESS';\nexport type RequestAnnotationFailureAction = { type: typeof REQUEST_ANNOTATION_FAILURE };\n\n// * Store Operation\nexport const CREATE_ANNOTATION = 'CREATE_ANNOTATION';\nexport type CreateAnnotationAction = { type: typeof CREATE_ANNOTATION; payload: { annotation: Annotation } };\nexport const UPDATE_CREATING_ANNOTATION = 'UPDATE_CREATING_ANNOTATION';\nexport type UpdateCreatingAnnotationAction = {\n  type: typeof UPDATE_CREATING_ANNOTATION;\n  payload: { updater: (annotation: Annotation) => Annotation };\n};\nexport const UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nexport type UpdateAnnotationAction = {\n  type: typeof UPDATE_ANNOTATION;\n  payload: { annotation: Annotation; index: number };\n};\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport type RemoveAnnotationAction = {\n  type: typeof REMOVE_ANNOTATION;\n  payload: { index: number };\n};\nexport const RESET_ANNOTATION = 'RESET_ANNOTATION';\nexport type ResetAnnotationAction = {\n  type: typeof RESET_ANNOTATION;\n};\n\nexport type AnnotationAction =\n  | RequestAnnotationSuccessAction\n  | RequestAnnotationFailureAction\n  | CreateAnnotationAction\n  | UpdateCreatingAnnotationAction\n  | UpdateAnnotationAction\n  | RemoveAnnotationAction\n  | ResetAnnotationAction;\n\nexport type Position2D = {\n  x: number;\n  y: number;\n};\nexport type BoxLabel = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\nexport type Size2D = { width: number; height: number };\nexport type Annotation = {\n  label: BoxLabel;\n  attribute: string;\n  annotationState: AnnotationState;\n};\n\nexport enum AnnotationState {\n  Empty = 'Empty',\n  P1Added = 'P1Added',\n  Finish = 'Finish',\n}\n\nexport enum LabelingCursorStates {\n  default = 'default',\n  pointer = 'pointer',\n  crosshair = 'crosshair',\n  neswResize = 'nesw-resize',\n  nwseResize = 'nwse-resize',\n}\nexport interface Box2dComponentProps {\n  workState: WorkState;\n  scale: number;\n  onSelect: Function;\n  annotation: Annotation;\n  annotationIndex: number;\n  selected: boolean;\n  visible?: boolean;\n  dispatch: any;\n  changeCursorState?: (cursorType?: LabelingCursorStates) => void;\n  // instanceID: number;\n}\nexport type BoxObject = {\n  init: () => Annotation;\n  createWithPoint: (point: Position2D, attribute: string) => Annotation;\n  add: (point: Position2D, arg1: Annotation) => Annotation;\n  setVerticesToValidValue: (arg0: Annotation) => Annotation;\n  setVerticesToInt: (arg0: Annotation) => Annotation;\n  setVerticesPointsOrder: (arg0: Annotation) => Annotation;\n};\n\nexport enum WorkState {\n  Creating = 'Creating',\n  Selecting = 'Selecting',\n  None = 'None',\n}\n\nexport enum LabelingType {\n  SingleAnnotation = 0,\n  MultiAnnotation = 1,\n}\n","import { Annotation } from './labelingPage/labelingPageTypes';\nimport { Camera } from './camera/cameraTypes';\nimport { Part } from './part/partTypes';\nimport { Location } from './location/locationTypes';\nimport { Project } from './project/projectTypes';\nimport { LabelImage } from './image/imageTypes';\n\nexport interface State {\n  dialogIsOpen: boolean;\n  cameras: Camera[];\n  locations: Location[];\n  labelingPageState: LabelingPageState;\n  part: Part;\n  project: Project;\n  images: LabelImage[];\n}\n\nexport type LabelingPageState = { annotations: Annotation[] };\n\nexport const initialState: State = {\n  dialogIsOpen: false,\n  cameras: [],\n  locations: [],\n  images: [],\n  labelingPageState: { annotations: [] },\n  part: {\n    capturedImages: [],\n    isValid: true,\n  },\n  project: {\n    isLoading: false,\n    data: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 50,\n      modelUrl: '',\n      status: '',\n      successRate: null,\n      successfulInferences: null,\n      unIdetifiedItems: null,\n    },\n    error: null,\n    trainingStatus: '',\n  },\n};\n","import {\n  GET_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  POST_CAMERA_SUCCESS,\n  Camera,\n  CameraAction,\n  DELETE_CAMERA_SUCCESS,\n} from './cameraTypes';\nimport { initialState } from '../State';\n\nconst camerasReducer = (state = initialState.cameras, action: CameraAction): Camera[] => {\n  switch (action.type) {\n    case GET_CAMERA_SUCCESS:\n      return action.payload;\n    case REQUEST_CAMERA_FAILURE:\n      return state;\n    case POST_CAMERA_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_CAMERA_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default camerasReducer;\n","// Describing the shape of the camera's slice of state\nexport type Camera = { id?: number; name: string; rtsp: string; model_name: string };\n\n// Describing the different ACTION NAMES available\nexport const GET_CAMERA_SUCCESS = 'GET_CAMERA_SUCCESS';\nexport const POST_CAMERA_SUCCESS = 'POST_CAMERA_SUCCESS';\nexport const DELETE_CAMERA_SUCCESS = 'DELETE_CAMERA_SUCCESS';\nexport const REQUEST_CAMERA_FAILURE = 'REQUEST_CAMERA_FAILURE';\n\nexport type GetCamerasSuccess = { type: typeof GET_CAMERA_SUCCESS; payload: Camera[] };\nexport type PostCameraSuccess = { type: typeof POST_CAMERA_SUCCESS; payload: Camera };\nexport type DeleteCameraSuccess = { type: typeof DELETE_CAMERA_SUCCESS; payload: { id: number } };\nexport type RequestCamerasFailure = { type: typeof REQUEST_CAMERA_FAILURE };\n\nexport type CameraAction =\n  | GetCamerasSuccess\n  | PostCameraSuccess\n  | DeleteCameraSuccess\n  | RequestCamerasFailure;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { LabelImage } from '../image/imageTypes';\n\n// Describing the shape of the chat's slice of state\nexport type Part = { capturedImages: LabelImage[]; isValid: boolean };\n\n// Describing the different ACTION NAMES available\nexport const ADD_CAPTURED_IMAGE = 'ADD_CAPTURED_IMAGE';\n\nexport type AddCapturedImageAction = {\n  type: typeof ADD_CAPTURED_IMAGE;\n  payload: {\n    newCapturedImage: LabelImage;\n  };\n};\n\nexport const UPDATE_CAPTURED_IMAGES = 'UPDATE_CAPTURED_IMAGES';\n\nexport type UpdateCapturedImageAction = {\n  type: typeof UPDATE_CAPTURED_IMAGES;\n  payload: {\n    capturedImages: LabelImage[];\n  };\n};\n\nexport type PartActionTypes = AddCapturedImageAction | UpdateCapturedImageAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type PartThunk<ReturnType = void> = ThunkAction<ReturnType, Part, unknown, Action<string>>;\n","import {\n  AnnotationState,\n  UPDATE_ANNOTATION,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  REMOVE_ANNOTATION,\n  AnnotationAction,\n  RESET_ANNOTATION,\n} from './labelingPageTypes';\nimport { initialState, LabelingPageState } from '../State';\n\nconst labelingPageStateReducer = (\n  state = initialState.labelingPageState,\n  action: AnnotationAction,\n): LabelingPageState => {\n  const newState = state;\n  switch (action.type) {\n    case REQUEST_ANNOTATION_SUCCESS:\n      newState.annotations = action.payload.annotations;\n      break;\n    case REQUEST_ANNOTATION_FAILURE:\n      break;\n    case CREATE_ANNOTATION:\n      newState.annotations.push(action.payload.annotation);\n      break;\n    case UPDATE_CREATING_ANNOTATION:\n      {\n        const creatingAnnotation = action.payload.updater(\n          newState.annotations[newState.annotations.length - 1],\n        );\n\n        if (creatingAnnotation.annotationState === AnnotationState.Finish) {\n          if (\n            (creatingAnnotation.label.x1 | 0) === (creatingAnnotation.label.x2 | 0) &&\n            (creatingAnnotation.label.y1 | 0) === (creatingAnnotation.label.y2 | 0)\n          ) {\n            newState.annotations.pop();\n          } else {\n            newState.annotations[newState.annotations.length - 1] = creatingAnnotation;\n            newState.annotations = [...newState.annotations];\n          }\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION:\n      newState.annotations[action.payload.index] = action.payload.annotation;\n      break;\n    case REMOVE_ANNOTATION:\n      newState.annotations = newState.annotations\n        .slice(0, action.payload.index)\n        .concat(newState.annotations.slice(action.payload.index + 1));\n      break;\n    case RESET_ANNOTATION:\n      newState.annotations = initialState.labelingPageState.annotations;\n      break;\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport default labelingPageStateReducer;\n","import {\n  GET_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  POST_LOCATION_SUCCESS,\n  Location,\n  LocationAction,\n} from './locationTypes';\nimport { initialState } from '../State';\n\nconst locationsReducer = (state = initialState.locations, action: LocationAction): Location[] => {\n  switch (action.type) {\n    case GET_LOCATION_SUCCESS:\n      return action.payload;\n    case REQUEST_LOCATION_FAILURE:\n      return state;\n    case POST_LOCATION_SUCCESS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default locationsReducer;\n","// Describing the shape of the loaction's slice of state\nexport type Location = {\n  id?: number;\n  name: string;\n  coordinates: string;\n  description: string;\n  projectId?: number;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const REQUEST_LOCATION_FAILURE = 'REQUEST_LOCATION_FAILURE';\nexport const POST_LOCATION_SUCCESS = 'POST_LOCATION_SUCCESS';\n\nexport type GetLocationsSuccess = { type: typeof GET_LOCATION_SUCCESS; payload: Location[] };\nexport type RequestLocationsFailure = { type: typeof REQUEST_LOCATION_FAILURE };\nexport type PostLocationSuccess = { type: typeof POST_LOCATION_SUCCESS; payload: Location };\n\nexport type LocationAction = GetLocationsSuccess | RequestLocationsFailure | PostLocationSuccess;\n","import {\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n  DialogIsOpenAction,\n} from './dialogIsOpenTypes';\nimport { initialState } from '../State';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import { initialState } from '../State';\nimport {\n  Project,\n  ProjectActionTypes,\n  GET_PROJECT_SUCCESS,\n  GET_PROJECT_FAILED,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FALIED,\n  GET_PROJECT_REQUEST,\n  UPDATE_PROJECT_DATA,\n  POST_PROJECT_REQUEST,\n  GET_TRAINING_STATUS_REQUEST,\n  GET_TRAINING_STATUS_SUCCESS,\n  GET_TRAINING_STATUS_FAILED,\n} from './projectTypes';\n\nconst projectReducer = (state = initialState.project, action: ProjectActionTypes): Project => {\n  switch (action.type) {\n    case GET_PROJECT_REQUEST:\n      return { ...state, isLoading: true, error: null };\n    case GET_PROJECT_SUCCESS:\n      return { ...state, isLoading: false, data: { ...action.payload.project }, error: null };\n    case GET_PROJECT_FAILED:\n      return { ...state, isLoading: false, error: action.error };\n    case POST_PROJECT_REQUEST:\n      return { ...state, isLoading: true };\n    case POST_PROJECT_SUCCESS:\n      return { ...state, isLoading: false };\n    case POST_PROJECT_FALIED:\n      return { ...state, isLoading: false, error: action.error };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n          status: '',\n          successRate: null,\n          successfulInferences: null,\n          unIdetifiedItems: null,\n        },\n        error: null,\n      };\n    case DELETE_PROJECT_FALIED:\n      return { ...state };\n    case UPDATE_PROJECT_DATA:\n      return { ...state, data: action.payload };\n    case GET_TRAINING_STATUS_REQUEST:\n      return {\n        ...state,\n      };\n    case GET_TRAINING_STATUS_SUCCESS: {\n      const { successRate, modelUrl, successfulInferences, unIdetifiedItems } = action.payload;\n      return {\n        ...state,\n        trainingStatus: action.payload.trainingStatus,\n        data: {\n          ...state.data,\n          ...(successRate && { successRate }),\n          ...(modelUrl && { modelUrl }),\n          ...(successfulInferences && { successfulInferences }),\n          ...(unIdetifiedItems && { unIdetifiedItems }),\n        },\n      };\n    }\n    case GET_TRAINING_STATUS_FAILED:\n      return { ...state, error: action.error };\n    default:\n      return { ...state };\n  }\n};\n\nexport default projectReducer;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport type { State } from '../State';\n\nexport type Project = {\n  isLoading: boolean;\n  trainingStatus: string;\n  data: ProjectData;\n  error: Error;\n};\n\nexport type ProjectData = {\n  id: number;\n  camera: any;\n  location: any;\n  parts: any[];\n  needRetraining: boolean;\n  accuracyRangeMin: number;\n  accuracyRangeMax: number;\n  maxImages: number;\n  modelUrl: string;\n  status: string;\n  successRate: number;\n  successfulInferences: number;\n  unIdetifiedItems: number;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_PROJECT_REQUEST = 'GET_PROJECT_REQUEST';\nexport type GetProjectRequestAction = {\n  type: typeof GET_PROJECT_REQUEST;\n};\n\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\nexport type GetProjectSuccessAction = {\n  type: typeof GET_PROJECT_SUCCESS;\n  payload: {\n    project: ProjectData;\n  };\n};\n\nexport const GET_PROJECT_FAILED = 'GET_PROJECT_FAILED';\nexport type GetProjectFailedAction = {\n  type: typeof GET_PROJECT_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_STATUS_REQUEST = 'GET_TRAINING_STATUS_REQUEST';\nexport type GetTrainingStatusRequesAction = {\n  type: typeof GET_TRAINING_STATUS_REQUEST;\n};\n\nexport const GET_TRAINING_STATUS_SUCCESS = 'GET_TRAINING_STATUS_SUCCESS';\nexport type GetTrainingStatusSuccessAction = {\n  type: typeof GET_TRAINING_STATUS_SUCCESS;\n  payload: {\n    trainingStatus: string;\n    modelUrl: string;\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n  };\n};\n\nexport const GET_TRAINING_STATUS_FAILED = 'GET_TRAINING_STATUS_FAILED';\nexport type GetTrainingStatusFailedAction = {\n  type: typeof GET_TRAINING_STATUS_FAILED;\n  error: Error;\n};\n\nexport const POST_PROJECT_REQUEST = 'POST_PROJECT_REQUEST';\nexport type PostProjectRequestAction = {\n  type: typeof POST_PROJECT_REQUEST;\n};\n\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\nexport type PostProjectSuccessAction = {\n  type: typeof POST_PROJECT_SUCCESS;\n};\n\nexport const POST_PROJECT_FALIED = 'POST_PROJECT_FALIED';\nexport type PostProjectFaliedAction = {\n  type: typeof POST_PROJECT_FALIED;\n  error: Error;\n};\n\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport type DeleteProjectSuccessAction = {\n  type: typeof DELETE_PROJECT_SUCCESS;\n};\n\nexport const DELETE_PROJECT_FALIED = 'DELETE_PROJECT_FALIED';\nexport type DeleteProjectFaliedAction = {\n  type: typeof DELETE_PROJECT_FALIED;\n};\n\nexport const UPDATE_PROJECT_DATA = 'UPDATE_PROJECT_DATA';\nexport type UpdateProjectDataAction = {\n  type: typeof UPDATE_PROJECT_DATA;\n  payload: ProjectData;\n};\n\nexport type ProjectActionTypes =\n  | GetProjectRequestAction\n  | GetProjectSuccessAction\n  | GetProjectFailedAction\n  | GetTrainingStatusRequesAction\n  | GetTrainingStatusSuccessAction\n  | GetTrainingStatusFailedAction\n  | PostProjectRequestAction\n  | PostProjectSuccessAction\n  | PostProjectFaliedAction\n  | DeleteProjectSuccessAction\n  | DeleteProjectFaliedAction\n  | UpdateProjectDataAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type ProjectThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, Action<string>>;\n","import {\n  GET_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  POST_LABEL_IMAGE_SUCCESS,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  LabelImageAction,\n  LabelImage,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n} from './imageTypes';\nimport { initialState } from '../State';\n\nconst labelImagesReducer = (state = initialState.images, action: LabelImageAction): LabelImage[] => {\n  switch (action.type) {\n    case GET_LABEL_IMAGE_SUCCESS:\n      return action.payload;\n    case REQUEST_LABEL_IMAGE_FAILURE:\n      return state;\n    case POST_LABEL_IMAGE_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_LABEL_IMAGE_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    case UPDATE_LABEL_IMAGE_ANNOTATION: {\n      const newState = [...state];\n      const updatedImageIdx = newState.findIndex((e) => e.id === action.payload.id);\n      newState[updatedImageIdx] = {\n        ...newState[updatedImageIdx],\n        labels: action.payload.labels,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default labelImagesReducer;\n","// Describe the shape of the labelImage's slice of state\nexport type LabelImage = {\n  id?: number;\n  image: string;\n  labels: string;\n  part: string;\n  is_relabel: boolean;\n  confidence: number;\n};\n\n// Describe the different ACTION NAMES available\nexport const GET_LABEL_IMAGE_SUCCESS = 'GET_LABEL_IMAGE_SUCCESS';\nexport const POST_LABEL_IMAGE_SUCCESS = 'POST_LABEL_IMAGE_SUCCESS';\nexport const DELETE_LABEL_IMAGE_SUCCESS = 'DELETE_LABEL_IMAGE_SUCCESS';\nexport const REQUEST_LABEL_IMAGE_FAILURE = 'REQUEST_LABEL_IMAGE_FAILURE';\nexport const UPDATE_LABEL_IMAGE_ANNOTATION = 'UPDATE_LABEL_IMAGE_ANNOTATION';\n\nexport type GetLabelImagesSuccess = { type: typeof GET_LABEL_IMAGE_SUCCESS; payload: LabelImage[] };\nexport type PostLabelImageSuccess = { type: typeof POST_LABEL_IMAGE_SUCCESS; payload: LabelImage };\nexport type DeleteLabelImageSuccess = { type: typeof DELETE_LABEL_IMAGE_SUCCESS; payload: { id: number } };\nexport type RequestLabelImagesFailure = { type: typeof REQUEST_LABEL_IMAGE_FAILURE };\nexport type UpdateLabelImageAnnotation = {\n  type: typeof UPDATE_LABEL_IMAGE_ANNOTATION;\n  payload: { id: number; labels: any };\n};\n\nexport type LabelImageAction =\n  | GetLabelImagesSuccess\n  | PostLabelImageSuccess\n  | DeleteLabelImageSuccess\n  | RequestLabelImagesFailure\n  | UpdateLabelImageAnnotation;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport camerasReducer from './camera/cameraReducer';\nimport partReducer from './part/partReducer';\nimport labelingPageStateReducer from './labelingPage/labelingPageReducer';\nimport locationsReducer from './location/locationReducer';\nimport dialogIsOpenReducer from './dialog/dialogIsOpenReducer';\nimport projectReducer from './project/projectReducer';\nimport labelImagesReducer from './image/imageReducer';\n\nconst rootReducer = combineReducers({\n  cameras: camerasReducer,\n  locations: locationsReducer,\n  part: partReducer,\n  labelingPageState: labelingPageStateReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  project: projectReducer,\n  images: labelImagesReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State } from './State';\nimport { persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex, Text, Image } from '@fluentui/react-northstar';\n\ntype BgImgStyle = {\n  backgroundSize?: '60%';\n  backgroundPosition?: 'center';\n  backgroundRepeat?: 'no-repeat';\n};\ninterface ImageLinkProps {\n  to?: string;\n  imgSrc?: string;\n  defaultSrc?: string;\n  bgImgSrc?: string;\n  label?: string;\n  imgPadding?: string;\n  width: string;\n  height?: string;\n  bgImgStyle?: BgImgStyle;\n  pointerCursor?: boolean;\n  onClick?: (event: any) => void;\n}\nconst ImageLink: FC<ImageLinkProps> = ({\n  to = '',\n  imgSrc,\n  defaultSrc,\n  bgImgSrc,\n  label = '',\n  imgPadding = '10px',\n  width = '100px',\n  height = '100px',\n  bgImgStyle,\n  pointerCursor = false,\n  onClick,\n}) => {\n  return (\n    <Flex column styles={{ width }}>\n      {to === '' ? (\n        <div style={{ height }} onClick={onClick}>\n          <Image\n            src={imgSrc ?? defaultSrc}\n            styles={{\n              padding: imgPadding,\n              height: '100%',\n              objectFit: 'contain',\n              backgroundImage: `url(${bgImgSrc})`,\n              cursor: pointerCursor ? 'pointer' : 'default',\n              ...bgImgStyle,\n            }}\n          />\n        </div>\n      ) : (\n        <Link to={to}>\n          <div style={{ height }} onClick={onClick}>\n            <Image\n              src={imgSrc ?? defaultSrc}\n              styles={{\n                padding: imgPadding,\n                height: '100%',\n                objectFit: 'contain',\n                backgroundImage: `url(${bgImgSrc})`,\n                ...bgImgStyle,\n              }}\n            />\n          </div>\n        </Link>\n      )}\n      <Text align=\"center\">{label}</Text>\n    </Flex>\n  );\n};\n\nexport default ImageLink;\n","import React, { FC } from 'react';\nimport { Text, Flex } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ImageLink from '../components/ImageLink';\nimport { openDialog } from '../store/dialog/dialogIsOpenActions';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text size=\"larger\" weight=\"semibold\">\n        Hello User!\n      </Text>\n      <Text>\n      </Text>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '2px 2px 2px 10px' }}>\n        GET STARTED:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/location-filled.png\"\n          to=\"/locations/register\"\n          label=\"Register a new Location\"\n          width=\"100px\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/camera-filled.png\"\n          to=\"/cameras\"\n          label=\"Register a new Camera\"\n          width=\"100px\"\n          imgPadding=\"10px 3px 10px 3px\"\n          onClick={(): void => {\n            dispatch(openDialog());\n          }}\n        />\n        <ImageLink\n          imgSrc=\"/icons/part-filled.png\"\n          to=\"/parts/detail\"\n          label=\"Register a new Part\"\n          width=\"100px\"\n        />\n      </Flex>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '2px 2px 2px 10px' }}>\n        SELECT FROM THE FOLLOWING TASKS:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/doubleCube.png\"\n          to=\"/partIdentification\"\n          label=\"Identify Parts\"\n          width=\"100px\"\n        />\n        <ImageLink imgSrc=\"/icons/defects.png\" to=\"/\" label=\"Identify Defects\" width=\"100px\" />\n        <ImageLink\n          imgSrc=\"/icons/manual-filled.png\"\n          to=\"/manual\"\n          label=\"Identify items manually\"\n          width=\"100px\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { OpenDialog, CloseDialog, OPEN_DIALOG, CLOSE_DIALOG } from './dialogIsOpenTypes';\n\nexport const openDialog = (): OpenDialog => ({ type: OPEN_DIALOG });\nexport const closeDialog = (): CloseDialog => ({ type: CLOSE_DIALOG });\n","import axios from 'axios';\nimport {\n  GET_CAMERA_SUCCESS,\n  POST_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  GetCamerasSuccess,\n  RequestCamerasFailure,\n  PostCameraSuccess,\n  Camera,\n  DELETE_CAMERA_SUCCESS,\n  DeleteCameraSuccess,\n} from './cameraTypes';\n\nconst getCamerasSuccess = (data: Camera[]): GetCamerasSuccess => ({\n  type: GET_CAMERA_SUCCESS,\n  payload: data,\n});\n\nconst deleteCameraSuccess = (id: number): DeleteCameraSuccess => ({\n  type: DELETE_CAMERA_SUCCESS,\n  payload: { id },\n});\n\nconst requestCamerasFailure = (error: any): RequestCamerasFailure => {\n  console.error(error);\n  return { type: REQUEST_CAMERA_FAILURE };\n};\n\nconst postCameraSuccess = (data: Camera): PostCameraSuccess => ({\n  type: POST_CAMERA_SUCCESS,\n  payload: data,\n});\n\nexport const getCameras = () => (dispatch): Promise<void> => {\n  return axios('/api/cameras/')\n    .then(({ data }) => {\n      dispatch(getCamerasSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const postCamera = (newCamera: Camera) => (dispatch): Promise<void> => {\n  return axios('/api/cameras/', {\n    method: 'POST',\n    data: newCamera,\n  })\n    .then(({ data }) => {\n      dispatch(postCameraSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const deleteCamera = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/cameras/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteCameraSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Flex, Button, Dialog, Input, Grid, AddIcon } from '@fluentui/react-northstar';\n\nimport { postCamera, getCameras } from '../store/camera/cameraActions';\nimport ImageLink from '../components/ImageLink';\nimport { State } from '../store/State';\nimport { closeDialog, openDialog } from '../store/dialog/dialogIsOpenActions';\nimport { Camera } from '../store/camera/cameraTypes';\n\nconst Cameras: FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { dialogIsOpen, cameras } = useSelector<State, { dialogIsOpen: boolean; cameras: Camera[] }>(\n    (state) => ({ dialogIsOpen: state.dialogIsOpen, cameras: state.cameras }),\n  );\n\n  const [name, setName] = useState<string>('');\n  const [rtsp, setRtsp] = useState<string>('');\n  const [model_name, setModel_name] = useState<string>('');\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return (\n    <Flex column gap=\"gap.large\" padding=\"padding.medium\" styles={{ height: '100%' }}>\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {cameras.map((camera, i) => (\n          <ImageLink\n            key={i}\n            to={`/cameras/${camera.name}`}\n            defaultSrc=\"/icons/Play.png\"\n            bgImgSrc=\"/icons/defaultCamera.png\"\n            width=\"100px\"\n            height=\"100px\"\n            bgImgStyle={{\n              backgroundSize: '60%',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n            }}\n            label={camera.name}\n          />\n        ))}\n      </Grid>\n      <Dialog\n        trigger={\n          <Flex hAlign=\"end\">\n            <Button\n              primary\n              fluid\n              circular\n              content={<AddIcon size=\"largest\" circular />}\n              style={{ width: '6em', height: '6em' }}\n            />\n          </Flex>\n        }\n        confirmButton=\"Submit\"\n        onConfirm={(): void => {\n          dispatch(postCamera({ name, rtsp, model_name }));\n          setName('');\n          setRtsp('');\n          setModel_name('');\n          dispatch(closeDialog());\n        }}\n        cancelButton=\"Cancel\"\n        header=\"Add Camera\"\n        open={dialogIsOpen}\n        onOpen={(): void => {\n          dispatch(openDialog());\n        }}\n        onCancel={(): void => {\n          dispatch(closeDialog());\n        }}\n        content={\n          <Flex column gap=\"gap.small\">\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              onChange={(_, newProps): void => setName(newProps.value)}\n            />\n            <Input\n              placeholder=\"RTSP URL\"\n              value={rtsp}\n              onChange={(_, newProps): void => setRtsp(newProps.value)}\n            />\n            <Input\n              placeholder=\"Model Name\"\n              value={model_name}\n              onChange={(_, newProps): void => setModel_name(newProps.value)}\n            />\n          </Flex>\n        }\n      />\n    </Flex>\n  );\n};\n\nexport default Cameras;\n","import React, { FC, useState, CSSProperties } from 'react';\nimport { Flex, Text, Button, Dialog } from '@fluentui/react-northstar';\n\n/**\n * @param trigger Trigger Button\n * @param primaryStyles CSS style of Confirm Button\n */\ninterface FluentUIStylesProperties extends CSSProperties {\n  [':hover']: any;\n  [':active']: any;\n}\n\ninterface ConfirmDialogProps {\n  trigger: JSX.Element;\n  onConfirm: () => void;\n  primaryStyles: FluentUIStylesProperties;\n  content: string;\n}\nconst ConfirmDialog: FC<ConfirmDialogProps> = ({ trigger, onConfirm, primaryStyles, content }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '20em', padding: '0.5em' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      footer={\n        <Flex column gap=\"gap.large\">\n          <Text size=\"large\" align=\"center\">\n            {content}\n          </Text>\n          <Flex space=\"around\">\n            <Button primary content=\"Confirm\" styles={primaryStyles} onClick={onConfirm} />\n            <Button content=\"Cancel\" onClick={(): void => setOpen(false)} />\n          </Flex>\n        </Flex>\n      }\n    />\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { FC, memo } from 'react';\nimport { Flex, Text, Grid, Button } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ConfirmDialog from '../ConfirmDialog';\nimport ImageLink from '../ImageLink';\nimport { deleteCamera } from '../../store/camera/cameraActions';\n\ninterface CameraDetailInfoProps {\n  name: string;\n  rtsp: string;\n  modelName: string;\n  id: number;\n}\nconst CameraDetailInfo: FC<CameraDetailInfoProps> = ({ id, name, rtsp, modelName }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex styles={{ padding: '1em 2em' }} column space=\"between\">\n      <Grid columns=\"2\" styles={{ gap: '3em' }}>\n        <Text size=\"larger\" weight=\"semibold\">\n          Details\n        </Text>\n        <ImageLink defaultSrc=\"/icons/defaultCamera.png\" width=\"100px\" height=\"100px\" />\n        <Flex column gap=\"gap.small\">\n          <Text size=\"large\" content={'Name:'} />\n          <Text size=\"large\" content={'RTSP Url:'} />\n          <Text size=\"large\" content={'Model:'} />\n        </Flex>\n        <Flex column gap=\"gap.medium\">\n          <Text size=\"large\" content={name} />\n          <Text size=\"large\" content={rtsp} />\n          <Text size=\"large\" content={modelName} />\n        </Flex>\n      </Grid>\n      <ConfirmDialog\n        trigger={\n          <Button\n            primary\n            content=\"Delete Camera\"\n            styles={{\n              backgroundColor: '#C4314B',\n              ':hover': { backgroundColor: '#A72037' },\n              ':active': { backgroundColor: '#8E192E' },\n            }}\n          />\n        }\n        content=\"Delete Camera\"\n        primaryStyles={{\n          backgroundColor: '#C4314B',\n          ':hover': { backgroundColor: '#A72037' },\n          ':active': { backgroundColor: '#8E192E' },\n        }}\n        onConfirm={(): void => {\n          dispatch(deleteCamera(id));\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default memo(CameraDetailInfo);\n","import Axios from 'axios';\nimport {\n  ProjectThunk,\n  GetProjectSuccessAction,\n  GET_PROJECT_SUCCESS,\n  GetProjectFailedAction,\n  GET_PROJECT_FAILED,\n  PostProjectSuccessAction,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  PostProjectFaliedAction,\n  DeleteProjectSuccessAction,\n  DELETE_PROJECT_SUCCESS,\n  DeleteProjectFaliedAction,\n  DELETE_PROJECT_FALIED,\n  ProjectData,\n  PostProjectRequestAction,\n  POST_PROJECT_REQUEST,\n  GetProjectRequestAction,\n  GET_PROJECT_REQUEST,\n  UpdateProjectDataAction,\n  UPDATE_PROJECT_DATA,\n  GetTrainingStatusRequesAction,\n  GET_TRAINING_STATUS_REQUEST,\n  GetTrainingStatusSuccessAction,\n  GET_TRAINING_STATUS_SUCCESS,\n  GetTrainingStatusFailedAction,\n  GET_TRAINING_STATUS_FAILED,\n} from './projectTypes';\n\nconst getProjectRequest = (): GetProjectRequestAction => ({ type: GET_PROJECT_REQUEST });\nconst getProjectSuccess = (project: ProjectData): GetProjectSuccessAction => ({\n  type: GET_PROJECT_SUCCESS,\n  payload: { project },\n});\nconst getProjectFailed = (error: Error): GetProjectFailedAction => ({ type: GET_PROJECT_FAILED, error });\n\nconst getTrainingStatusRequest = (): GetTrainingStatusRequesAction => ({ type: GET_TRAINING_STATUS_REQUEST });\nconst getTrainingStatusSuccess = (\n  trainingStatus: string,\n  modelUrl?: string,\n  successRate?: number,\n  successfulInferences?: number,\n  unIdetifiedItems?: number,\n): GetTrainingStatusSuccessAction => ({\n  type: GET_TRAINING_STATUS_SUCCESS,\n  payload: { trainingStatus, modelUrl, successRate, successfulInferences, unIdetifiedItems },\n});\nconst getTrainingStatusFailed = (error: Error): GetTrainingStatusFailedAction => ({\n  type: GET_TRAINING_STATUS_FAILED,\n  error,\n});\n\nconst postProjectRequest = (): PostProjectRequestAction => ({ type: POST_PROJECT_REQUEST });\nconst postProjectSuccess = (): PostProjectSuccessAction => ({ type: POST_PROJECT_SUCCESS });\nconst postProjectFail = (error: Error): PostProjectFaliedAction => ({ type: POST_PROJECT_FALIED, error });\n\nconst deleteProjectSuccess = (): DeleteProjectSuccessAction => ({ type: DELETE_PROJECT_SUCCESS });\nconst deleteProjectFailed = (): DeleteProjectFaliedAction => ({ type: DELETE_PROJECT_FALIED });\n\nexport const updateProjectData = (projectData: ProjectData): UpdateProjectDataAction => ({\n  type: UPDATE_PROJECT_DATA,\n  payload: projectData,\n});\n\nexport const thunkGetProject = (): ProjectThunk => (dispatch): Promise<void> => {\n  dispatch(getProjectRequest());\n\n  return Axios.get('/api/projects/')\n    .then(({ data }) => {\n      const project: ProjectData = {\n        id: data[0]?.id ?? null,\n        camera: parseInt(data[0]?.camera.split('/')[5], 10) ?? null,\n        location: parseInt(data[0]?.location.split('/')[5], 10) ?? null,\n        parts: data[0]?.parts.map((ele) => parseInt(ele.split('/')[5], 10)) ?? [],\n        modelUrl: data[0]?.download_uri ?? '',\n        status: data[0]?.status ?? 'online',\n        needRetraining: data[0]?.needRetraining ?? true,\n        accuracyRangeMin: data[0]?.accuracyRangeMin ?? 60,\n        accuracyRangeMax: data[0]?.accuracyRangeMax ?? 80,\n        maxImages: data[0]?.maxImages ?? 50,\n        successRate: data[0]?.successRate ?? 0,\n        successfulInferences: data[0]?.successfulInferences ?? 0,\n        unIdetifiedItems: data[0]?.unIdetifiedItems ?? 0,\n      };\n      dispatch(getProjectSuccess(project));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(getProjectFailed(err));\n    });\n};\n\nexport const thunkPostProject = (\n  projectId,\n  selectedLocations,\n  selectedParts,\n  selectedCamera,\n): ProjectThunk => (dispatch, getState): Promise<number> => {\n  const isProjectEmpty = projectId === null;\n  const url = isProjectEmpty ? `/api/projects/` : `/api/projects/${projectId}/`;\n\n  dispatch(postProjectRequest());\n\n  const projectData = getState().project.data;\n\n  return Axios(url, {\n    data: {\n      location: `http://localhost:8000/api/locations/${selectedLocations.id}/`,\n      parts: selectedParts.map((e) => `http://localhost:8000/api/parts/${e.id}/`),\n      camera: `http://localhost:8000/api/cameras/${selectedCamera.id}/`,\n      download_uri: projectData.modelUrl,\n      needRetraining: projectData.needRetraining,\n      accuracyRangeMin: projectData.accuracyRangeMin,\n      accuracyRangeMax: projectData.accuracyRangeMax,\n      maxImages: projectData.maxImages,\n    },\n    method: isProjectEmpty ? 'POST' : 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(({ data }) => {\n      dispatch(postProjectSuccess());\n      getTrain(data.id);\n      return data.id;\n    })\n    .catch((err) => {\n      dispatch(postProjectFail(err));\n    }) as Promise<number>;\n};\n\nexport const thunkDeleteProject = (projectId): ProjectThunk => (dispatch): Promise<any> => {\n  return Axios.delete(`/api/projects/${projectId}/`)\n    .then(() => {\n      return dispatch(deleteProjectSuccess());\n    })\n    .catch((err) => {\n      alert(err);\n      dispatch(deleteProjectFailed());\n    });\n};\n\nexport const thunkGetTrainingStatus = (projectId: number) => (dispatch, getState): Promise<any> => {\n  dispatch(getTrainingStatusRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      if (data.status !== 'ok') dispatch(getTrainingStatusSuccess(data.status));\n      // else if (data.status === 'ok' && !data.download_uri) dispatch(getTrainingStatusSuccess(data.status));\n      else {\n        dispatch(\n          getTrainingStatusSuccess(\n            '',\n            data.download_uri,\n            data.success_rate,\n            data.inference_num,\n            data.unidentified_num,\n          ),\n        );\n      }\n      return void 0;\n    })\n    .catch((err) => dispatch(getTrainingStatusFailed(err)));\n};\n\nconst getTrain = (projectId): void => {\n  Axios.get(`/api/projects/${projectId}/train`).catch((err) => console.error(err));\n};\n","import axios from 'axios';\nimport {\n  LabelImage,\n  GetLabelImagesSuccess,\n  GET_LABEL_IMAGE_SUCCESS,\n  DeleteLabelImageSuccess,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  PostLabelImageSuccess,\n  POST_LABEL_IMAGE_SUCCESS,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n  UpdateLabelImageAnnotation,\n} from './imageTypes';\nimport { Annotation } from '../labelingPage/labelingPageTypes';\n\nconst getLabelImagesSuccess = (data: LabelImage[]): GetLabelImagesSuccess => ({\n  type: GET_LABEL_IMAGE_SUCCESS,\n  payload: data,\n});\n\nconst deleteLabelImageSuccess = (id: number): DeleteLabelImageSuccess => ({\n  type: DELETE_LABEL_IMAGE_SUCCESS,\n  payload: { id },\n});\n\nconst requestLabelImagesFailure = (error: any): any => {\n  console.error(error);\n  return { type: REQUEST_LABEL_IMAGE_FAILURE };\n};\n\nconst postLabelImageSuccess = (image: LabelImage): PostLabelImageSuccess => ({\n  type: POST_LABEL_IMAGE_SUCCESS,\n  payload: image,\n});\n\nexport const getLabelImages = () => (dispatch): Promise<void> => {\n  return axios('/api/images/')\n    .then(({ data }) => {\n      dispatch(getLabelImagesSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\n\nexport const postLabelImage = (newImage: LabelImage | FormData) => (dispatch): Promise<void> => {\n  return axios('/api/images/', {\n    method: 'POST',\n    data: newImage,\n  })\n    .then(({ data }) => {\n      dispatch(postLabelImageSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const deleteLabelImage = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/images/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteLabelImageSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const saveLabelImageAnnotation = (imageId: number, annotations: Annotation[]) => (\n  dispatch,\n): Promise<void> => {\n  const url = `/api/images/${imageId}/`;\n  return axios({\n    url,\n    method: 'PATCH',\n    data: {\n      labels: JSON.stringify(annotations.map((e) => e.label)),\n    },\n  })\n    .then(({ data }) => {\n      console.info('Save successfully');\n      dispatch(updateLabelImageAnnotation(data.id, data.labels));\n      // dispatch(requestAnnotationsSuccess(annotations));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const updateLabelImageAnnotation = (imageId: number, labels: any): UpdateLabelImageAnnotation => ({\n  type: UPDATE_LABEL_IMAGE_ANNOTATION,\n  payload: { id: imageId, labels },\n});","import { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { thunkAddCapturedImages } from \"../../store/part/partActions\";\nimport React from \"react\";\nimport { Button, PlayIcon, CallControlPresentNewIcon, PauseThickIcon, Image } from \"@fluentui/react-northstar\";\n\nexport const RTSPVideo = ({ selectedCamera, partId, canCapture }): JSX.Element => {\n  const [streamId, setStreamId] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const onCreateStream = (): void => {\n    let url = `/api/streams/connect/?part_id=${partId}&rtsp=${selectedCamera.rtsp}`;\n    if(!canCapture) url += '&inference=1';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.status === 'ok') {\n          setStreamId(data.stream_id);\n        }\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const onCapturePhoto = (): void => {\n    dispatch(thunkAddCapturedImages(streamId));\n  };\n\n  const onDisconnect = useCallback((): void => {\n    setStreamId('');\n    fetch(`/api/streams/${streamId}/disconnect`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [streamId]);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onDisconnect);\n    return (): void => {\n      window.removeEventListener('beforeunload', onDisconnect);\n    };\n  }, [onDisconnect]);\n\n  const src = streamId ? `/api/streams/${streamId}/video_feed` : '';\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {src ? <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'contain' }} /> : null}\n      </div>\n      <Button.Group\n        styles={{ alignSelf: 'center' }}\n        buttons={[\n          {\n            key: 'start',\n            icon: <PlayIcon />,\n            iconOnly: true,\n            onClick: onCreateStream,\n            disabled: selectedCamera === null,\n          },\n          (canCapture && {\n            key: 'capture',\n            icon: <CallControlPresentNewIcon />,\n            iconOnly: true,\n            onClick: onCapturePhoto,\n            disabled: !streamId,\n          }),\n          {\n            key: 'stop',\n            icon: <PauseThickIcon />,\n            iconOnly: true,\n            onClick: onDisconnect,\n            disabled: !streamId,\n          },\n        ]}\n      />\n    </>\n  );\n};","import {\n  AddCapturedImageAction,\n  ADD_CAPTURED_IMAGE,\n  PartThunk,\n  UpdateCapturedImageAction,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\nimport { LabelImage } from '../image/imageTypes';\nimport { getLabelImages } from '../image/imageActions';\n\nexport const addCapturedImages = (newCapturedImage: LabelImage): AddCapturedImageAction => ({\n  type: ADD_CAPTURED_IMAGE,\n  payload: { newCapturedImage },\n});\n\nexport const updateCapturedImages = (capturedImages: LabelImage[]): UpdateCapturedImageAction => ({\n  type: UPDATE_CAPTURED_IMAGES,\n  payload: { capturedImages },\n});\n\nexport const thunkAddCapturedImages = (streamId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/streams/${streamId}/capture`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 'ok') {\n        dispatch(addCapturedImages(data.image));\n        dispatch(getLabelImages());\n      }\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const thunkGetCapturedImages = (partId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/images`)\n    .then((response) => response.json())\n    .then((data) => {\n      const imagesWithRelatedPart = data.reduce((acc, cur) => {\n        if (cur.part.split('/')[5] === partId) acc.push(cur);\n        return acc;\n      }, []);\n      dispatch(updateCapturedImages(imagesWithRelatedPart));\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","import { useEffect, useState } from 'react';\n\n/**\n * Fetch the parts data from server\n */\nexport const useParts = (): any[] => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/parts/')\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data);\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  return parts;\n};\n","import React, { useEffect } from 'react';\nimport { Flex, Text, Status, Button, Loader } from '@fluentui/react-northstar';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useInterval } from '../../hooks/useInterval';\nimport {\n  thunkDeleteProject,\n  thunkGetTrainingStatus,\n  thunkGetProject,\n} from '../../store/project/projectActions';\nimport { Project } from '../../store/project/projectTypes';\nimport { State } from '../../store/State';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport { RTSPVideo } from '../RTSPVideo';\nimport { useParts } from '../../hooks/useParts';\n\nexport const CameraConfigureInfo: React.FC<{ camera: Camera; projectId: number }> = ({\n  camera,\n  projectId,\n}) => {\n  const { isLoading, error, data: project, trainingStatus } = useSelector<State, Project>(\n    (state) => state.project,\n  );\n  const parts = useParts();\n  const dispatch = useDispatch();\n  const { name } = useParams();\n  const history = useHistory();\n\n  const onDeleteConfigure = (): void => {\n    // eslint-disable-next-line no-restricted-globals\n    const sureDelete = confirm('Delete this configuration?');\n    if (!sureDelete) return;\n    const result = (dispatch(thunkDeleteProject(projectId)) as unknown) as Promise<any>;\n    result\n      .then((data) => {\n        if (data) return history.push(`/cameras/${name}`);\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  };\n\n  /**\n   * Call custom Vision to export\n   */\n  useEffect(() => {\n    dispatch(thunkGetTrainingStatus(projectId));\n  }, [dispatch, projectId]);\n  useInterval(() => {\n    dispatch(thunkGetTrainingStatus(projectId));\n  }, 5000);\n\n  useEffect(() => {\n    dispatch(thunkGetProject());\n  }, [dispatch]);\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Configuration</h1>\n      {trainingStatus ? (\n        <Loader\n          size=\"largest\"\n          label={trainingStatus}\n          labelPosition=\"below\"\n          design={{ paddingTop: '300px' }}\n        />\n      ) : (\n        <>\n          <ListItem title=\"Status\" content={<CameraStatus online={project.status === 'online'} />} />\n          <ListItem\n            title=\"Configured for\"\n            content={parts\n              .filter((e) => project.parts.includes(e.id))\n              .map((e) => e.name)\n              .join(', ')}\n          />\n          <Flex column gap=\"gap.small\">\n            <Text styles={{ width: '150px' }} size=\"large\">\n              Live View:\n            </Text>\n            <RTSPVideo selectedCamera={camera} partId={project.parts[0]} canCapture={false} />\n          </Flex>\n          <ListItem\n            title=\"Success Rate\"\n            content={\n              <Text styles={{ color: 'rgb(244, 152, 40)', fontWeight: 'bold' }} size=\"large\">\n                {`${project.successRate}%`}\n              </Text>\n            }\n          />\n          <ListItem title=\"Successful Inferences\" content={project.successfulInferences} />\n          <ListItem\n            title=\"Unidentified Items\"\n            content={\n              <>\n                <Text styles={{ margin: '5px' }} size=\"large\">\n                  {project.unIdetifiedItems}\n                </Text>\n                <Button\n                  content=\"Identify Manually\"\n                  primary\n                  styles={{\n                    backgroundColor: 'red',\n                    marginLeft: '100px',\n                    ':hover': {\n                      backgroundColor: '#A72037',\n                    },\n                    ':active': {\n                      backgroundColor: '#8E192E',\n                    },\n                  }}\n                  as={Link}\n                  to=\"/manual\"\n                />\n              </>\n            }\n          />\n          <Button primary onClick={onDeleteConfigure}>\n            Delete Configuration\n          </Button>\n          <Button primary as={Link} to=\"/partIdentification\">\n            Edit Configuration\n          </Button>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nconst ListItem = ({ title, content }): JSX.Element => {\n  const getContent = (): JSX.Element => {\n    if (typeof content === 'string' || typeof content === 'number')\n      return <Text size=\"large\">{content}</Text>;\n    return content;\n  };\n\n  return (\n    <Flex vAlign=\"center\">\n      <Text styles={{ width: '200px' }} size=\"large\">{`${title}: `}</Text>\n      {getContent()}\n    </Flex>\n  );\n};\n\nconst CameraStatus = ({ online }): JSX.Element => {\n  const text = online ? 'Online' : 'Offline';\n  const state = online ? 'success' : 'unknown';\n\n  return (\n    <Flex gap=\"gap.smaller\" vAlign=\"center\">\n      <Status state={state} />\n      <Text styles={{ margin: '5px' }} size=\"large\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay): void => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick(): void {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return (): void => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import React from 'react';\nimport { Button, Flex, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const CreateCameraConfig: React.FC = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <h1>Configuration</h1>\n      <Flex hAlign=\"center\" vAlign=\"center\" design={{ height: '100%' }} column gap=\"gap.large\">\n        <Button\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular color=\"brand\" />}\n          style={{ width: 100, height: 100, border: '5px solid #0094d8' }}\n          color=\"brand\"\n          as={Link}\n          to=\"/partIdentification\"\n        />\n        <h2>Configure Task for the Device</h2>\n      </Flex>\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { getCameras } from '../store/camera/cameraActions';\n\n/**\n * Fetch the cameras data from server and set to Redux Store\n */\nexport const useCameras = (): Camera[] => {\n  const dispatch = useDispatch();\n  const cameras: Camera[] = useSelector<State, Camera[]>((state) => state.cameras);\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return cameras;\n};\n","import React, { FC, useEffect } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CameraDetailInfo from '../components/CameraDetails/CameraDetailInfo';\nimport { CameraConfigureInfo, CreateCameraConfig } from '../components/CameraConfigure';\nimport { useCameras } from '../hooks/useCameras';\nimport { Project } from '../store/project/projectTypes';\nimport { State } from '../store/State';\nimport { thunkGetProject } from '../store/project/projectActions';\n\nconst CameraDetails: FC = (): JSX.Element => {\n  const { name } = useParams();\n  const camera = useCameras().find((ele) => ele.name === name);\n  const project = useSelector<State, Project>((state) => state.project);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(thunkGetProject());\n  }, [dispatch]);\n\n  if (!camera) return <Redirect to=\"/cameras\" />;\n\n  const hasProject = project.data.camera === camera.id;\n\n  return (\n    <Grid columns=\"2\" design={{ height: '100%' }}>\n      <CameraDetailInfo id={camera.id} name={name} rtsp={camera.rtsp} modelName={camera.model_name} />\n      {hasProject ? (\n        <CameraConfigureInfo camera={camera} projectId={project.data.id} />\n      ) : (\n        <CreateCameraConfig />\n      )}\n    </Grid>\n  );\n};\n\nexport default CameraDetails;\n","import { useState, useEffect, useRef } from 'react';\n\ntype ImageState = {\n  image: HTMLImageElement;\n  status: string;\n  size: { width: number; height: number };\n};\nconst defaultState: ImageState = {\n  image: undefined,\n  status: 'loading',\n  size: { width: 0, height: 0 },\n};\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nconst useImage = (url: string, crossOrigin: string): [HTMLImageElement, string, { width: number; height: number }] => {\n  const [imageState, setImageState] = useState<ImageState>(defaultState);\n  const { image, status, size } = imageState;\n\n  const prevUrl = usePrevious<string>(url);\n\n  useEffect(() => {\n    if (!url) return;\n\n    const img = document.createElement('img');\n\n    if (url !== prevUrl) {\n      setImageState((prev) => ({ ...prev, image: prev.image, status: 'loading' }));\n    }\n\n    const onload = (): void => {\n      setImageState({\n        image: img,\n        status: 'loaded',\n        size: { width: img.width, height: img.height },\n      });\n    };\n\n    const onerror = (): void => {\n      setImageState((prev) => ({ ...prev, image: undefined, status: 'failed' }));\n    };\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n\n    img.src = url;\n\n    return (): void => {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, prevUrl]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status, size];\n};\n\nexport default useImage;\n","import { Size2D } from '../../../store/labelingPage/labelingPageTypes';\n\nconst getResizeImageFunction = (defaultSize: Size2D) => (size: Size2D): [Size2D, number] => {\n  if (size.width !== 0) {\n    if (size.width > size.height) {\n      const scaleX = defaultSize.width / size.width;\n\n      return [{ width: defaultSize.width, height: size.height * scaleX }, scaleX];\n    }\n    const scaleY = defaultSize.height / size.height;\n\n    return [{ height: defaultSize.height, width: size.width * scaleY }, scaleY];\n  }\n  return [defaultSize, 1];\n};\n\nexport default getResizeImageFunction;\n","import {\n  Annotation,\n  AnnotationState,\n  BoxObject,\n  Position2D,\n  REQUEST_ANNOTATION_SUCCESS,\n  REMOVE_ANNOTATION,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  UPDATE_ANNOTATION,\n  RESET_ANNOTATION,\n  RequestAnnotationSuccessAction,\n  CreateAnnotationAction,\n  UpdateAnnotationAction,\n  UpdateCreatingAnnotationAction,\n  RemoveAnnotationAction,\n  ResetAnnotationAction,\n} from './labelingPageTypes';\n\nexport const requestAnnotationsSuccess = (data: Annotation[]): RequestAnnotationSuccessAction => ({\n  type: REQUEST_ANNOTATION_SUCCESS,\n  payload: { annotations: data },\n});\n\nexport const getAnnotations = (imageId: number) => (dispatch, getState): void => {\n  const { images } = getState();\n  const { labels } = images.find((image) => image.id === imageId);\n\n  if (labels === null) {\n    dispatch(requestAnnotationsSuccess([]));\n  } else {\n    const annotations = JSON.parse(labels).map((parsedLabels) => ({\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n\n    dispatch(requestAnnotationsSuccess(annotations));\n  }\n};\n\nexport const createAnnotation = (pos: Position2D): CreateAnnotationAction => {\n  const annotation = BoxObj.createWithPoint(pos, '');\n  return {\n    type: CREATE_ANNOTATION,\n    payload: { annotation },\n  };\n};\n\nexport const updateCreatingAnnotation = (pos: Position2D): UpdateCreatingAnnotationAction => {\n  const updater = (annotation: Annotation): Annotation => BoxObj.add(pos, annotation);\n  return {\n    type: UPDATE_CREATING_ANNOTATION,\n    payload: { updater },\n  };\n};\n\nexport const updateAnnotation = (index: number = null, annotation: Annotation): UpdateAnnotationAction => ({\n  type: UPDATE_ANNOTATION,\n  payload: { index, annotation: BoxObj.setVerticesToValidValue(annotation) },\n});\n\nexport const removeAnnotation = (index: number = null): RemoveAnnotationAction => ({\n  type: REMOVE_ANNOTATION,\n  payload: { index },\n});\n\nexport const resetAnnotation = (): ResetAnnotationAction => ({\n  type: RESET_ANNOTATION,\n});\n\n// * Annotation Functions\nexport const BoxObj: BoxObject = {\n  init(): Annotation {\n    return {\n      label: { x1: 0, y1: 0, x2: 0, y2: 0 },\n      attribute: '',\n      annotationState: AnnotationState.Empty,\n    };\n  },\n  createWithPoint(p: Position2D, attribute) {\n    const obj = {\n      ...this.init(),\n      attribute,\n    };\n    return this.add(p, obj);\n  },\n  add({ x, y }, obj) {\n    // make the original object immutable, for future history usage\n    const newObj = { ...obj };\n\n    if (obj.annotationState === AnnotationState.Empty) {\n      newObj.label.x1 = x;\n      newObj.label.y1 = y;\n      newObj.label.x2 = x; // initialize x2 y2\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.P1Added;\n    } else if (obj.annotationState === AnnotationState.P1Added) {\n      newObj.label.x2 = x;\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.Finish;\n    }\n\n    return this.setVerticesToValidValue(newObj);\n  },\n  setVerticesToInt(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    newObj.label = {\n      x1: Math.round(x1),\n      y1: Math.round(y1),\n      x2: Math.round(x2),\n      y2: Math.round(y2),\n    };\n    return newObj;\n  },\n  setVerticesPointsOrder(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    if (x1 > x2) {\n      newObj.label.x1 = x2;\n      newObj.label.x2 = x1;\n    }\n    if (y1 > y2) {\n      newObj.label.y1 = y2;\n      newObj.label.y2 = y1;\n    }\n\n    return newObj;\n  },\n  setVerticesToValidValue(object: Annotation): Annotation {\n    return this.setVerticesPointsOrder(this.setVerticesToInt(object));\n  },\n  // setFinished(obj: Annotation): Annotation {\n  //   if (obj.state === AnnotationState.Created) return;\n\n  //   const newObj = R.clone(obj);\n  //   newObj.state = AnnotationState.Created;\n  //   newObj.creatingState = undefined;\n\n  //   return newObj;\n  // },\n  // setStateCreated(idx: number, annotations: Annotation[]): Annotation[] {\n  //   const { creatingState } = annotations[idx];\n\n  //   if (creatingState === 'addedX2Y2') return R.update(idx, this.setFinished, annotations);\n  //   if (creatingState === 'addedX1Y1') return R.remove(idx, 1, annotations);\n  //   return R.clone(annotations);\n  // },\n};\n","import React, { useState, useRef, useEffect, FC, useCallback } from 'react';\nimport { Line, Group, Circle } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport {\n  BoxLabel,\n  Box2dComponentProps,\n  WorkState,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport { updateAnnotation } from '../../store/labelingPage/labelingPageActions';\n\nexport const Box2d: FC<Box2dComponentProps> = ({\n  scale,\n  workState,\n  onSelect,\n  selected,\n  annotationIndex,\n  visible = true,\n  annotation,\n  dispatch,\n  changeCursorState = null,\n}) => {\n  const [vertices, setVertices] = useState<BoxLabel>(annotation.label);\n  const anchorRadius: number = 5 / scale;\n  const strokeWidth: number = 2 / scale;\n  const boxRef = useRef(null);\n\n  const dispatchLabel = (): void => {\n    changeCursorState();\n\n    if (!dispatch) return;\n    const newAnnotation = { ...annotation };\n    newAnnotation.label = vertices;\n    dispatch(updateAnnotation(annotationIndex, newAnnotation));\n  };\n\n  const mouseMoveListener = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (workState === WorkState.Creating && selected) {\n        setVertices((prev) => ({ ...prev, x2: e.evt.offsetX / scale, y2: e.evt.offsetY / scale }));\n      }\n    },\n    [workState, setVertices, selected, scale],\n  );\n\n  const onDragAnchor = useCallback(\n    ({ xi = 'x1', yi = 'y1' }) => (e: KonvaEventObject<DragEvent>): void => {\n      const stage = e.target.getStage();\n      const { width, height } = stage.getSize();\n      let x = Math.round(e.target.position().x);\n      let y = Math.round(e.target.position().y);\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > width / scale) x = width / scale;\n      if (y > height / scale) y = height / scale;\n      // * Round the anchor (circle) position so user can only drag anchor on integer.\n      e.target.setAttr('x', x);\n      e.target.setAttr('y', y);\n\n      const anotherPosXArr = ['x1', 'x2'];\n      const anotherPosYArr = ['y1', 'y2'];\n      anotherPosXArr.splice(\n        anotherPosXArr.findIndex((xx) => xx === xi),\n        1,\n      );\n      anotherPosYArr.splice(\n        anotherPosYArr.findIndex((yy) => yy === yi),\n        1,\n      );\n      if (vertices[anotherPosXArr[0]] > vertices[xi]) {\n        if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n          changeCursorState(LabelingCursorStates.nwseResize);\n        } else {\n          changeCursorState(LabelingCursorStates.neswResize);\n        }\n      } else if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n        changeCursorState(LabelingCursorStates.neswResize);\n      } else {\n        changeCursorState(LabelingCursorStates.nwseResize);\n      }\n\n      setVertices((prevVertices) => ({ ...prevVertices, [xi]: x, [yi]: y }));\n    },\n    [changeCursorState, scale, vertices],\n  );\n\n  useEffect(() => {\n    const layer = boxRef.current.getLayer();\n    layer.on('mousemove', mouseMoveListener);\n    return (): void => {\n      layer.off('mousemove', mouseMoveListener);\n    };\n  }, [mouseMoveListener]);\n  useEffect(() => {\n    setVertices(annotation.label);\n  }, [annotation.label]);\n\n  return (\n    <Group\n      ref={(e): void => {\n        if (e) {\n          boxRef.current = e;\n        }\n      }}\n      visible={visible}\n      onMouseDown={(e): void => {\n        if (workState === WorkState.None) {\n          onSelect(annotationIndex);\n          e.cancelBubble = true;\n        }\n      }}\n    >\n      <Line\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke=\"red\"\n        strokeWidth={strokeWidth}\n        closed={true}\n      />\n      <Group visible={selected}>\n        <Circle\n          key={'anchor-0'}\n          name={'anchor-0'}\n          x={vertices.x1}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-1'}\n          name={'anchor-1'}\n          x={vertices.x2}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-2'}\n          name={'anchor-2'}\n          x={vertices.x2}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-3'}\n          name={'anchor-3'}\n          x={vertices.x1}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n      </Group>\n    </Group>\n  );\n};\n\nexport const DisplayBox: FC<{ vertices: BoxLabel; color: string; scale: number }> = ({\n  scale,\n  vertices,\n  color,\n}) => {\n  return (\n    <>\n      <Line\n        ref={(ref): void => {\n          if (ref) ref.cache();\n        }}\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke={color}\n        strokeWidth={1 / scale}\n        closed={true}\n      />\n      <Circle x={vertices.x1} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y2} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x1} y={vertices.y2} radius={3 / scale} fill={color} />\n    </>\n  );\n};\n","import React, { FC, memo, Dispatch, useState, useEffect } from 'react';\nimport { Group, Line, Rect } from 'react-konva';\n\nimport { Size2D, LabelingCursorStates, BoxLabel } from '../../store/labelingPage/labelingPageTypes';\n\ninterface RemoveBoxButtonProps {\n  visible: boolean;\n  imageSize: Size2D;\n  label: BoxLabel;\n  changeCursorState: (cursorType?: LabelingCursorStates) => void;\n  scale: number;\n  setShowOuterRemoveButton: Dispatch<boolean>;\n  removeBox: () => void;\n}\nconst RemoveBoxButton: FC<RemoveBoxButtonProps> = ({\n  visible,\n  imageSize,\n  label,\n  changeCursorState,\n  scale,\n  setShowOuterRemoveButton,\n  removeBox,\n}) => {\n  const [color, setColor] = useState<string>('#F9526B');\n  const [strokeWidth, setStrokeWidth] = useState<number>(1.5 / scale);\n  let x: number;\n  let y: number;\n\n  if (label.x1 > 30 / scale || label.x2 < (imageSize.width - 25) / scale) {\n    if (label.x1 > 30 / scale) x = label.x1 - 20 / scale;\n    else x = label.x2 + 25 / scale;\n\n    if (label.y1 > 12 / scale) {\n      y = label.y1 - 10 / scale;\n    } else {\n      y = label.y1 + 12 / scale;\n    }\n  } else {\n    x = 12 / scale;\n    if (label.y1 > 20 / scale) {\n      y = label.y1 - 20 / scale;\n    } else {\n      // * Make remove button disappear\n      y = -60;\n    }\n  }\n  if (y === -60) setShowOuterRemoveButton(true);\n  else setShowOuterRemoveButton(false);\n\n  useEffect(() => {\n    setStrokeWidth(1.5 / scale);\n  }, [scale]);\n\n  return (\n    <Group\n      visible={visible}\n      x={x}\n      y={y}\n      onMouseEnter={(): void => {\n        changeCursorState(LabelingCursorStates.pointer);\n        setColor('#E73550');\n        setStrokeWidth(3 / scale);\n      }}\n      onMouseLeave={(): void => {\n        changeCursorState();\n        setColor('#F9526B');\n        setStrokeWidth(1.5 / scale);\n      }}\n      onClick={(e): void => {\n        removeBox();\n        e.cancelBubble = true;\n      }}\n    >\n      <Rect x={-5 / scale} y={-5 / scale} width={10 / scale} height={10 / scale} />\n      <Line\n        points={[-5 / scale, -5 / scale, 5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n      <Line\n        points={[5 / scale, -5 / scale, -5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n    </Group>\n  );\n};\n\nexport default memo(RemoveBoxButton);\n","import React, { FC, useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport { Text, Button, CloseIcon } from '@fluentui/react-northstar';\nimport { Stage, Layer, Image, Group } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useDispatch } from 'react-redux';\n\nimport useImage from './util/useImage';\nimport getResizeImageFunction from './util/resizeImage';\nimport { Box2d } from './Box';\nimport {\n  Size2D,\n  Annotation,\n  WorkState,\n  LabelingType,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport {\n  createAnnotation,\n  updateCreatingAnnotation,\n  removeAnnotation,\n} from '../../store/labelingPage/labelingPageActions';\nimport RemoveBoxButton from './RemoveBoxButton';\n\nconst defaultSize: Size2D = {\n  width: 800,\n  height: 600,\n};\n\ninterface SceneProps {\n  url?: string;\n  labelingType: LabelingType;\n  annotations: Annotation[];\n}\nconst Scene: FC<SceneProps> = ({ url = '', labelingType, annotations }) => {\n  const dispatch = useDispatch();\n  const resizeImage = useCallback(getResizeImageFunction(defaultSize), [defaultSize]);\n  const [imageSize, setImageSize] = useState<Size2D>(defaultSize);\n  const noMoreCreate = useMemo(\n    () => labelingType === LabelingType.SingleAnnotation && annotations.length === 1,\n    [labelingType, annotations],\n  );\n  const [cursorState, setCursorState] = useState<LabelingCursorStates>(LabelingCursorStates.default);\n  const [image, status, size] = useImage(url, 'anonymous');\n  const [selectedAnnotationIndex, setSelectedAnnotationIndex] = useState<number>(null);\n  const [workState, setWorkState] = useState<WorkState>(WorkState.None);\n  const [showOuterRemoveButton, setShowOuterRemoveButton] = useState<boolean>(false);\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const scale = useRef<number>(1);\n  const changeCursorState = useCallback(\n    (cursorType?: LabelingCursorStates): void => {\n      if (!cursorType) {\n        if (noMoreCreate) {\n          setCursorState(LabelingCursorStates.default);\n        } else {\n          setCursorState(LabelingCursorStates.crosshair);\n        }\n      } else {\n        setCursorState(cursorType);\n      }\n    },\n    [noMoreCreate],\n  );\n  const removeBox = useCallback((): void => {\n    dispatch(removeAnnotation(selectedAnnotationIndex));\n    setWorkState(WorkState.None);\n    setShowOuterRemoveButton(false);\n  }, [dispatch, selectedAnnotationIndex, setWorkState, setShowOuterRemoveButton]);\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate || workState === WorkState.Creating) return;\n\n    dispatch(createAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }));\n    setSelectedAnnotationIndex(annotations.length - 1);\n    setWorkState(WorkState.Creating);\n  };\n\n  const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\n    if (workState === WorkState.Creating) {\n      dispatch(\n        updateCreatingAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }),\n      );\n      if (annotations.length - 1 === selectedAnnotationIndex) {\n        setWorkState(WorkState.Selecting);\n      } else {\n        setWorkState(WorkState.None);\n      }\n    }\n  };\n\n  const onSelect = (index: number): void => {\n    setSelectedAnnotationIndex(index);\n    setWorkState(WorkState.Selecting);\n  };\n\n  useEffect(() => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) {\n      changeCursorState();\n      setSelectedAnnotationIndex(0);\n    } else {\n      changeCursorState();\n    }\n  }, [noMoreCreate, changeCursorState]);\n  useEffect(() => {\n    if (workState === WorkState.None && !noMoreCreate) setSelectedAnnotationIndex(null);\n  }, [workState, noMoreCreate]);\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  if (status === 'loading' || (imageSize.height === 0 && imageSize.width === 0))\n    return (\n      <Text align=\"center\" color=\"red\">\n        Loading...\n      </Text>\n    );\n\n  return (\n    <div style={{ margin: '0.2em' }}>\n      {annotations.length !== 0 &&\n      showOuterRemoveButton &&\n      !isDragging &&\n      workState !== WorkState.Creating ? (\n        <Button\n          iconOnly\n          text\n          styles={{ color: '#F9526B', ':hover': { color: '#E73550' } }}\n          content={<CloseIcon size=\"large\" />}\n          onClick={removeBox}\n        />\n      ) : (\n        <div style={{ height: '2em' }} />\n      )}\n      <Stage\n        width={imageSize.width}\n        height={imageSize.height}\n        scale={{ x: scale.current, y: scale.current }}\n        style={{ cursor: cursorState }}\n      >\n        <Layer\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onDragStart={(): void => {\n            setIsDragging(true);\n          }}\n          onDragEnd={(): void => {\n            setIsDragging(false);\n          }}\n        >\n          <Image image={image} />\n          {annotations.map((annotation, i) => (\n            <Group key={i}>\n              <RemoveBoxButton\n                imageSize={imageSize}\n                visible={!isDragging && workState !== WorkState.Creating && i === selectedAnnotationIndex}\n                label={annotation.label}\n                scale={scale.current}\n                changeCursorState={changeCursorState}\n                setShowOuterRemoveButton={setShowOuterRemoveButton}\n                removeBox={removeBox}\n              />\n              <Box2d\n                workState={workState}\n                onSelect={onSelect}\n                annotation={annotation}\n                scale={scale.current}\n                annotationIndex={i}\n                selected={i === selectedAnnotationIndex}\n                dispatch={dispatch}\n                changeCursorState={changeCursorState}\n              />\n            </Group>\n          ))}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Scene;\n","export const getIdFromUrl = (url: string): number => parseInt(url.split(\"/\")[5], 10) ;","import { LabelImage } from '../store/image/imageTypes';\nimport { getIdFromUrl } from './GetIDFromUrl';\n\ninterface Options {\n  partId?: number;\n  isRelabel?: boolean;\n}\nexport const getFilteredImages = (\n  images: LabelImage[],\n  { partId, isRelabel = false }: Options,\n): LabelImage[] => {\n  if (partId === undefined) return images;\n  return images.filter((image) => getIdFromUrl(image.part) === partId && image.is_relabel === isRelabel);\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Button, Text, ChevronStartIcon, ChevronEndIcon } from '@fluentui/react-northstar';\n\nimport Scene from '../components/LabelingPage/Scene';\nimport { LabelingType, Annotation } from '../store/labelingPage/labelingPageTypes';\nimport { State } from '../store/State';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getAnnotations, resetAnnotation } from '../store/labelingPage/labelingPageActions';\nimport { saveLabelImageAnnotation } from '../store/image/imageActions';\nimport { getFilteredImages } from '../util/getFilteredImages';\n\ninterface LabelingPageProps {\n  labelingType: LabelingType;\n  imageIndex: number;\n  closeDialog: () => void;\n  partId?: number;\n  isRelabel: boolean;\n}\nconst LabelingPage: FC<LabelingPageProps> = ({\n  labelingType,\n  imageIndex,\n  closeDialog,\n  partId,\n  isRelabel,\n}) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState<number>(imageIndex);\n  const { images, annotations } = useSelector<State, { images: LabelImage[]; annotations: Annotation[] }>(\n    (state) => ({\n      images: state.images,\n      annotations: state.labelingPageState.annotations,\n    }),\n  );\n  const filteredImages = getFilteredImages(images, { partId, isRelabel });\n  const imageUrl = filteredImages[index]?.image;\n  const imageId = filteredImages[index]?.id;\n\n  useEffect(() => {\n    if (typeof imageId === 'number') dispatch(getAnnotations(imageId));\n    return (): void => {\n      dispatch(resetAnnotation());\n    };\n  }, [dispatch, imageId]);\n\n  return (\n    <Flex column hAlign=\"center\">\n      <Text size=\"larger\" weight=\"semibold\">\n        DRAW A RECTANGLE AROUND THE PART\n      </Text>\n      <Flex vAlign=\"center\">\n        {!isRelabel && (\n          <Button\n            text\n            disabled={index === 0 || isOnePointBox(annotations)}\n            icon={<ChevronStartIcon size=\"larger\" />}\n            onClick={(): void => {\n              dispatch(saveLabelImageAnnotation(filteredImages[index].id, annotations));\n              setIndex((prev) => (prev - 1 + filteredImages.length) % filteredImages.length);\n            }}\n          />\n        )}\n        <Scene url={imageUrl ?? '/icons/Play.png'} annotations={annotations} labelingType={labelingType} />\n        {!isRelabel && (\n          <Button\n            text\n            disabled={index === filteredImages.length - 1 || isOnePointBox(annotations)}\n            icon={<ChevronEndIcon size=\"larger\" />}\n            onClick={(): void => {\n              dispatch(saveLabelImageAnnotation(filteredImages[index].id, annotations));\n              setIndex((prev) => (prev + 1) % filteredImages.length);\n            }}\n          />\n        )}\n      </Flex>\n      <Flex gap=\"gap.medium\">\n        <Button\n          primary\n          content=\"Save\"\n          disabled={isOnePointBox(annotations)}\n          onClick={(): void => {\n            dispatch(saveLabelImageAnnotation(filteredImages[index].id, annotations));\n            closeDialog();\n          }}\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            closeDialog();\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst isOnePointBox = (annotations: Annotation[]): boolean => {\n  if (annotations.length === 0) return false;\n  const { label } = annotations[annotations.length - 1];\n  return label.x1 === label.x2 && label.y1 === label.y2;\n};\n\nexport default LabelingPage;\n","import React, { memo, FC, useState } from 'react';\nimport { Dialog } from '@fluentui/react-northstar';\n\nimport LabelingPage from '../pages/LabelingPage';\nimport { LabelingType } from '../store/labelingPage/labelingPageTypes';\n\ninterface LabelingPageDialogProps {\n  trigger: JSX.Element;\n  imageIndex: number;\n  partId?: number;\n  isRelabel: boolean;\n}\nconst LabelingPageDialog: FC<LabelingPageDialogProps> = ({ trigger, imageIndex, partId, isRelabel }): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '80%' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      content={\n        <LabelingPage\n          closeDialog={(): void => setOpen(false)}\n          labelingType={LabelingType.SingleAnnotation}\n          imageIndex={imageIndex}\n          partId={partId}\n          isRelabel={isRelabel}\n        />\n      }\n    />\n  );\n};\n\nexport default memo(LabelingPageDialog);\n","import React, { useState, useRef, useEffect, FC, useMemo, useCallback } from 'react';\nimport { Stage, FastLayer, Image as KonvaImage } from 'react-konva';\nimport { Flex, Text } from '@fluentui/react-northstar';\n\nimport useImage from './LabelingPage/util/useImage';\nimport { Size2D, AnnotationState, Annotation } from '../store/labelingPage/labelingPageTypes';\nimport { DisplayBox } from './LabelingPage/Box';\nimport { LabelImage } from '../store/image/imageTypes';\nimport getResizeImageFunction from './LabelingPage/util/resizeImage';\n\ninterface LabelDisplayImageProps {\n  labelImage: LabelImage;\n  labelText?: string;\n  width: number;\n  height?: number;\n  pointerCursor?: boolean;\n  onClick?: (event: any) => void;\n}\nconst LabelDisplayImage: FC<LabelDisplayImageProps> = ({\n  labelImage,\n  labelText = '',\n  width = 300,\n  height = 150,\n  pointerCursor = false,\n  onClick,\n}) => {\n  const [image, _, size] = useImage(labelImage.image, 'anonymous');\n  const [imageSize, setImageSize] = useState<Size2D>({ width, height });\n  const resizeImage = useCallback(getResizeImageFunction({ width, height }), [width, height]);\n  const scale = useRef<number>(1);\n\n  const annotations = useMemo<Annotation[]>(() => {\n    if (!labelImage?.labels) return [];\n\n    return JSON.parse(labelImage.labels).map((parsedLabels) => ({\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n  }, [labelImage]);\n\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  return (\n    <div onClick={onClick} style={{ cursor: pointerCursor ? 'pointer' : 'default' }}>\n      <Flex column>\n        <Stage\n          width={imageSize.width}\n          height={imageSize.height}\n          scale={{ x: scale.current, y: scale.current }}\n        >\n          <FastLayer>\n            <KonvaImage image={image} />\n            {annotations.map((annotation, i) => (\n              <DisplayBox key={i} scale={scale.current} vertices={annotation.label} color=\"red\" />\n            ))}\n          </FastLayer>\n        </Stage>\n        <Text align=\"center\">{labelText}</Text>\n      </Flex>\n    </div>\n  );\n};\n\nexport default LabelDisplayImage;\n","import { DropdownItemProps } from '@fluentui/react-northstar';\n\nexport const formatDropdownValue = (value): DropdownItemProps | DropdownItemProps[] => {\n  if (Array.isArray(value)) {\n    return value.map((e) => ({\n      header: e.name,\n      content: {\n        key: e.id,\n      },\n    }));\n  }\n  if (value) {\n    return {\n      header: value.name,\n      content: {\n        key: value.id,\n      },\n    };\n  }\n  return null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Dropdown, Text, DropdownItemProps } from '@fluentui/react-northstar';\nimport { Link, useParams, Prompt } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useCameras } from '../../hooks/useCameras';\nimport { State } from '../../store/State';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { RTSPVideo } from '../RTSPVideo';\nimport { getLabelImages } from '../../store/image/imageActions';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { formatDropdownValue } from '../../util/formatDropdownValue';\n\nexport const CapturePhotos: React.FC = () => {\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n  const { partId } = useParams();\n\n  return (\n    <>\n      <CameraSelector selectedCamera={selectedCamera} setSelectedCamera={setSelectedCamera} />\n      <RTSPVideo selectedCamera={selectedCamera} partId={partId} canCapture={true} />\n      <CapturedImagesContainer partId={parseInt(partId, 10)} />\n    </>\n  );\n};\n\nconst CameraSelector = ({ selectedCamera, setSelectedCamera }): JSX.Element => {\n  const availableCameras = useCameras();\n\n  const items: DropdownItemProps[] = availableCameras.map((ele) => ({\n    header: ele.name,\n    content: {\n      key: ele.id,\n    },\n  }));\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setSelectedCamera((prev) => prev);\n    else {\n      const { key } = data.value.content;\n      const newSelectedCamera = availableCameras.find((ele) => ele.id === key);\n      if (newSelectedCamera) setSelectedCamera(newSelectedCamera);\n    }\n  };\n\n  return (\n    <Flex gap=\"gap.small\" vAlign=\"center\">\n      <Text>Select Camera</Text>\n      <Dropdown items={items} onChange={onDropdownChange} value={formatDropdownValue(selectedCamera)} />\n      <Link to=\"/addCamera\">Add Camera</Link>\n    </Flex>\n  );\n};\n\nconst CapturedImagesContainer = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images).filter(\n    (image) => !image.is_relabel,\n  );\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  const imageCount = filteredImages.length;\n\n  return (\n    <>\n      <Text>Total: {imageCount}</Text>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Flex\n        styles={{\n          overflow: 'scroll',\n          border: '1px solid grey',\n          height: '150px',\n          borderColor: isValid ? '' : 'red',\n        }}\n        gap=\"gap.small\"\n        vAlign=\"center\"\n      >\n        {filteredImages.map((image, i) => (\n          <div key={image.id}>\n            <span>{i + 1}</span>\n            <LabelingPageDialog\n              key={i}\n              imageIndex={i}\n              partId={partId}\n              trigger={<LabelDisplayImage labelImage={image} pointerCursor width={200} height={150} />}\n              isRelabel={false}\n            />\n          </div>\n        ))}\n      </Flex>\n      <Prompt\n        when={imageCount < 15}\n        message=\"The count of images is less than 15, which may cause error when configure part identification. Sure you want to leave?\"\n      />\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Text, Grid } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/State';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getLabelImages, postLabelImage } from '../../store/image/imageActions';\n\nexport const UploadPhotos = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  function handleUpload(e: React.ChangeEvent<HTMLInputElement>): void {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const formData = new FormData();\n      formData.append('image', e.target.files[i]);\n      formData.append('part', `/api/parts/${partId}/`);\n      dispatch(postLabelImage(formData));\n    }\n  }\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleUpload} accept=\"image/*\" multiple />\n      <CapturedImagesContainer capturedImages={filteredImages} isValid={isValid} partId={partId} />\n    </>\n  );\n};\n\nconst CapturedImagesContainer = ({ capturedImages, isValid, partId }): JSX.Element => {\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"2\"\n        styles={{\n          border: '1px solid grey',\n          height: '100%',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n          justifyItems: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {capturedImages.map((image, i) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor width={300} height={225} />}\n            partId={partId}\n            isRelabel={false}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Input, TextArea, Button, Menu, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useLocation, Switch, Route, useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { CapturePhotos } from '../components/CapturePhoto';\nimport { UploadPhotos } from '../components/UploadPhotos';\n\nexport const PartDetails = (): JSX.Element => {\n  return (\n    <Grid columns={'repeat(12, 1fr)'} styles={{ gridColumnGap: '20px', height: '100%' }}>\n      <LeftPanel />\n      <RightPanel />\n    </Grid>\n  );\n};\n\nconst LeftPanel = (): JSX.Element => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const { partId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (partId) {\n      axios\n        .get(`/api/parts/${partId}/`)\n        .then(({ data }) => {\n          setName(data.name);\n          setDescription(data.description);\n          return void 0;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [partId]);\n\n  const onSave = (): void => {\n    const hasPartId = partId !== undefined;\n    const url = hasPartId ? `/api/parts/${partId}/` : `/api/parts/`;\n\n    axios({\n      method: hasPartId ? 'PUT' : 'POST',\n      url,\n      data: {\n        name,\n        description,\n      },\n    })\n      .then(({ data }) => {\n        history.push(`/parts/detail/${data.id}/capturePhotos`);\n        return void 0;\n      })\n      .catch((err) => {\n        setError(JSON.stringify(err.response.data));\n      });\n  };\n\n  return (\n    <Flex column space=\"around\" styles={{ gridColumn: '1 / span 4' }}>\n      <Input\n        placeholder=\"Enter Part Name...\"\n        fluid\n        styles={{ fontSize: '2em' }}\n        value={name}\n        onChange={(_, newProps): void => {\n          setName(newProps.value);\n        }}\n      />\n      <TextArea\n        placeholder=\"Enter Description...\"\n        design={{ height: '80%' }}\n        value={description}\n        onChange={(_, newProps): void => {\n          setDescription(newProps.value);\n        }}\n      />\n      <Flex space=\"around\">\n        <Button content=\"Save\" primary onClick={onSave} disabled={!name || !description} />\n        <Button content=\"Cancel\" />\n      </Flex>\n      {!!error && <Alert danger content={error} dismissible />}\n    </Flex>\n  );\n};\n\nconst RightPanel = (): JSX.Element => {\n  const { partId } = useParams();\n\n  return (\n    <Flex column gap=\"gap.small\" styles={{ gridColumn: '5 / span 8' }}>\n      {partId ? <Tab partId={partId} /> : null}\n      <Switch>\n        <Route path=\"/parts/detail/:partId/capturePhotos\" component={CapturePhotos} />\n        <Route path=\"/parts/detail/:partId/uploadPhotos\">\n          <UploadPhotos partId={parseInt(partId, 10)} />\n        </Route>\n      </Switch>\n    </Flex>\n  );\n};\n\nconst Tab = ({ partId }): JSX.Element => {\n  const items = [\n    {\n      key: 'uploadPhotos',\n      as: Link,\n      to: `/parts/detail/${partId}/uploadPhotos`,\n      content: 'Upload Photos',\n    },\n    {\n      key: 'capturePhotos',\n      as: Link,\n      to: `/parts/detail/${partId}/capturePhotos`,\n      content: 'Capture Photo',\n    },\n  ];\n\n  const { pathname } = useLocation();\n  const activeIndex = items.findIndex((ele) => ele.to === pathname);\n\n  return <Menu items={items} activeIndex={activeIndex} pointing primary />;\n};\n","import {\n  GET_LOCATION_SUCCESS,\n  POST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  GetLocationsSuccess,\n  RequestLocationsFailure,\n  PostLocationSuccess,\n  Location,\n} from './locationTypes';\n\nconst getLocationsSuccess = (data: Location[]): GetLocationsSuccess => ({\n  type: GET_LOCATION_SUCCESS,\n  payload: data,\n});\n\nconst requestLocationsFailure = (error: any): RequestLocationsFailure => {\n  console.error(error);\n  return { type: REQUEST_LOCATION_FAILURE };\n};\n\nconst postLocationSuccess = (data: Location): PostLocationSuccess => ({\n  type: POST_LOCATION_SUCCESS,\n  payload: data,\n});\n\nexport const getLocations = () => (dispatch): Promise<void> => {\n  return fetch('/api/locations/')\n    .then((res) => {\n      return res.json();\n    })\n    .then((data) => {\n      dispatch(getLocationsSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n\nexport const postLocation = (newLocation: Location) => (dispatch): Promise<void> => {\n  return fetch('/api/locations/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newLocation),\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .then((data) => {\n      dispatch(postLocationSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n","import React, { useEffect, FC } from 'react';\nimport { Flex, Grid, Button, AddIcon } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { State } from '../store/State';\nimport { Location } from '../store/location/locationTypes';\nimport ImageLink from '../components/ImageLink';\nimport { getLocations } from '../store/location/locationActions';\n\nconst Locations: FC = () => {\n  const dispatch = useDispatch();\n  const locations = useSelector<State, Location[]>((state) => state.locations);\n\n  useEffect(() => {\n    dispatch(getLocations());\n  }, [dispatch]);\n  return (\n    <Flex column gap=\"gap.large\" padding=\"padding.medium\" styles={{ height: '100%' }}>\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {locations.map((location, i) => (\n          <ImageLink\n            key={i}\n            to={`/locations/${location.name}`}\n            defaultSrc=\"/icons/defaultLocation.png\"\n            width=\"100px\"\n            height=\"100px\"\n            label={location.name}\n          />\n        ))}\n      </Grid>\n      <Flex hAlign=\"end\">\n      <Link to=\"/locations/register\">\n        <Button\n          primary\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular />}\n          style={{ width: '6em', height: '6em' }}\n        />\n        </Link>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Locations;\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Flex, Text, Input, TextArea, Button, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { postLocation } from '../store/location/locationActions';\n\nconst LocationRegister: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState<string>('');\n  const [coordinates, setCoordinates] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Register Location\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"100px\" height=\"100px\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Input\n            styles={{ paddingTop: '10px', minHeight: '100px' }}\n            placeholder=\"Location Name\"\n            value={name}\n            onChange={(_, newProps): void => setName(newProps.value)}\n          />\n          <Input value={coordinates} onChange={(_, newProps): void => setCoordinates(newProps.value)} />\n          <TextArea\n            styles={{ height: '60%' }}\n            value={description}\n            onChange={(_, newProps): void => setDescription(newProps.value)}\n          />\n        </Flex>\n      </Grid>\n      <Flex gap=\"gap.medium\" padding=\"padding.medium\">\n        <Button\n          primary\n          disabled={[name, coordinates, description].includes('')}\n          onClick={(): void => {\n            dispatch(postLocation({ name, coordinates, description }));\n            history.push('/locations');\n          }}\n          content=\"Save\"\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            history.push('/locations');\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default LocationRegister;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Flex, Text, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { Location } from '../store/location/locationTypes';\nimport { State } from '../store/State';\n\nconst LocationDetails: FC = () => {\n  const { name } = useParams();\n  const location = useSelector<State, Location>((state) => state.locations.find((e) => e.name === name));\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Details\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"100px\" height=\"100px\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Text styles={{ paddingTop: '10px', minHeight: '100px' }}>{location.name}</Text>\n          <Text>{location.coordinates}</Text>\n          <Text styles={{ height: '60%' }}>{location.description}</Text>\n        </Flex>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationDetails;\n","import React, { useState, useEffect, useMemo, FC, Dispatch, SetStateAction } from 'react';\nimport {\n  Dropdown,\n  DropdownItemProps,\n  Grid,\n  Flex,\n  Text,\n  Divider,\n  Button,\n  RadioGroup,\n  ArrowDownIcon,\n  ArrowUpIcon,\n} from '@fluentui/react-northstar';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport { Range, Handle } from 'rc-slider';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../rc-slider.css';\n\nimport LabelingPageDialog from '../components/LabelingPageDialog';\nimport { State } from '../store/State';\nimport { useParts } from '../hooks/useParts';\nimport LabelDisplayImage from '../components/LabelDisplayImage';\nimport { ProjectData } from '../store/project/projectTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getFilteredImages } from '../util/getFilteredImages';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { getLabelImages } from '../store/image/imageActions';\n\nlet sorting = false;\n\ntype JudgedImages = { correct: number[]; incorrect: number[] };\nconst ManualIdentification: FC = () => {\n  const dispatch = useDispatch();\n  const { projectData, images } = useSelector<State, { projectData: ProjectData; images: LabelImage[] }>(\n    (state) => ({\n      projectData: state.project.data,\n      images: state.images,\n    }),\n  );\n  const parts = useParts();\n  const partItems = useMemo<DropdownItemProps[]>(() => {\n    if (parts.length === 0 || projectData.parts.length === 0) return [];\n\n    return projectData.parts.map((partId) => {\n      const part = parts.find((e) => e.id === partId);\n\n      return {\n        header: part.name,\n        content: {\n          key: part.id,\n        },\n      };\n    });\n  }, [parts, projectData]);\n\n  const [selectedPartId, setSelectedPartId] = useState<number>(null);\n  const [confidenceLevelRange, setConfidenceLevelRange] = useState<[number, number]>([\n    projectData.accuracyRangeMin,\n    projectData.accuracyRangeMax,\n  ]);\n  const [ascend, setAscend] = useState<boolean>(false);\n  const [judgedImages, setJudgedImages] = useState<JudgedImages>({\n    correct: [],\n    incorrect: [],\n  });\n\n  const showImages = useMemo(() => {\n    const filteredImages = getFilteredImages(images, { partId: selectedPartId, isRelabel: true })\n      .map((e) => ({ ...e, confidenceLevel: ((e.confidence * 1000) | 0) / 10 }))\n      .filter(\n        (e) => e.confidenceLevel >= confidenceLevelRange[0] && e.confidenceLevel <= confidenceLevelRange[1],\n      );\n\n    if (sorting) {\n      if (ascend) filteredImages.sort((a, b) => a.confidenceLevel - b.confidenceLevel);\n      else filteredImages.sort((a, b) => b.confidenceLevel - a.confidenceLevel);\n    }\n\n    return filteredImages;\n  }, [confidenceLevelRange, ascend, images, selectedPartId]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value === null) {\n      setSelectedPartId((prev) => prev);\n    } else {\n      const { key } = value.content;\n      setSelectedPartId(key);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(thunkGetProject());\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  const selectedPartValue = partItems.find((e) => (e.content as any).key === selectedPartId);\n\n  return (\n    <div>\n      <Text size=\"larger\" weight=\"semibold\">\n        Manual Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.medium\" space=\"between\" styles={{ height: '75vh', padding: '1em' }}>\n        <Grid columns=\"3\" styles={{ columnGap: '1em', justifyItems: 'center' }}>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text truncated>Select Part:</Text>\n            <Dropdown items={partItems} onChange={onDropdownChange} value={selectedPartValue} />\n          </Flex>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\" styles={{ width: '80%' }}>\n            <Text>Confidence Level:</Text>\n            <div style={{ width: '70%' }}>\n              <Range\n                value={confidenceLevelRange}\n                allowCross={false}\n                onChange={(e): void => setConfidenceLevelRange(e)}\n                handle={({ value, dragging, index, ...restProps }): JSX.Element => {\n                  return (\n                    <Tooltip\n                      prefixCls=\"rc-slider-tooltip\"\n                      overlay={`${value}%`}\n                      visible={dragging}\n                      placement=\"top\"\n                      key={index}\n                    >\n                      <Handle value={value} {...restProps} />\n                    </Tooltip>\n                  );\n                }}\n              />\n            </div>\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text truncated>Sort:</Text>\n            <Button\n              icon={ascend ? <ArrowDownIcon /> : <ArrowUpIcon />}\n              styles={{ color: sorting ? '#0094d8' : 'grey' }}\n              text\n              iconOnly\n              onClick={(): void => {\n                sorting = true;\n                setAscend((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Grid>\n        <Grid\n          columns=\"2\"\n          styles={{\n            width: '100%',\n            height: '80%',\n            borderStyle: 'solid',\n            overflow: 'scroll',\n            borderWidth: '1px',\n          }}\n        >\n          {showImages.map((e, i) => (\n            <ImageIdentificationItem\n              key={i}\n              confidenceLevel={e.confidenceLevel}\n              imageIndex={i}\n              labelImage={e}\n              judgedImages={judgedImages}\n              setJudgedImages={setJudgedImages}\n              partId={selectedPartId}\n            />\n          ))}\n        </Grid>\n        <Button\n          content=\"Update\"\n          styles={{ width: '15%' }}\n          primary\n          disabled={judgedImages.correct.length === 0 && judgedImages.incorrect.length === 0}\n          onClick={(): void => {\n            axios({ method: 'POST', url: '/api/relabel/update', data: judgedImages })\n              .then(() => {\n                dispatch(getLabelImages());\n                setJudgedImages({\n                  correct: [],\n                  incorrect: [],\n                });\n                return void 0;\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n          }}\n        />\n      </Flex>\n    </div>\n  );\n};\n\ninterface ImageIdentificationItemProps {\n  confidenceLevel: number;\n  labelImage: LabelImage;\n  imageIndex: number;\n  judgedImages: JudgedImages;\n  setJudgedImages: Dispatch<SetStateAction<JudgedImages>>;\n  partId: number;\n}\nconst ImageIdentificationItem: FC<ImageIdentificationItemProps> = ({\n  confidenceLevel,\n  labelImage,\n  imageIndex,\n  judgedImages,\n  setJudgedImages,\n  partId,\n}) => {\n  let isPartCorrect: number;\n  if (judgedImages.correct.indexOf(labelImage.id) >= 0) {\n    isPartCorrect = 1;\n  } else if (judgedImages.incorrect.indexOf(labelImage.id) >= 0) {\n    isPartCorrect = 0;\n  } else {\n    isPartCorrect = null;\n  }\n\n  return (\n    <Flex hAlign=\"center\" padding=\"padding.medium\">\n      <div style={{ margin: '0.2em' }}>\n        <LabelDisplayImage labelImage={labelImage} width={100} height={100} />\n      </div>\n      <Flex column gap=\"gap.smaller\" styles={{ width: '30%' }}>\n        <Text truncated>Confidence Level: {confidenceLevel}%</Text>\n        <Flex column>\n          <RadioGroup\n            checkedValue={isPartCorrect}\n            onCheckedValueChange={(_, newProps): void => {\n              setJudgedImages((prev) => {\n                if (newProps.value === 1) {\n                  const idxInIncorrect = prev.incorrect.indexOf(labelImage.id);\n                  const idxInCorrect = prev.correct.indexOf(labelImage.id);\n                  if (idxInIncorrect >= 0) prev.incorrect.splice(idxInIncorrect, 1);\n                  if (idxInCorrect === -1) prev.correct.push(labelImage.id);\n                }\n                if (newProps.value === 0) {\n                  const idxInCorrect = prev.correct.indexOf(labelImage.id);\n                  const idxInIncorrect = prev.incorrect.indexOf(labelImage.id);\n                  if (idxInCorrect >= 0) prev.correct.splice(idxInCorrect, 1);\n                  if (idxInIncorrect === -1) prev.incorrect.push(labelImage.id);\n                }\n                return { ...prev };\n              });\n            }}\n            items={[\n              {\n                key: '1',\n                label: 'Yes',\n                value: 1,\n              },\n              {\n                key: '0',\n                label: 'No',\n                value: 0,\n              },\n            ]}\n          />\n        </Flex>\n        <LabelingPageDialog\n          imageIndex={imageIndex}\n          isRelabel={true}\n          partId={partId}\n          trigger={<Button primary content=\"Identify\" disabled={!isPartCorrect} />}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ManualIdentification;\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text, Button, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\n\nexport const Parts: React.FC = () => {\n  const [parts, setParts] = useState([]);\n\n  const partsAPI = Axios.get('/api/parts/');\n  const imagesAPI = Axios.get('/api/images/');\n\n  useEffect(() => {\n    Axios.all([partsAPI, imagesAPI]).then(\n      Axios.spread((...responses) => {\n        const {data: parts} = responses[0];\n        const {data: images} = responses[1];\n        setParts(parts.map(e => ({...e, images: images.find(img => getIdFromUrl(img.part) === e.id)?.image })))\n      }),\n    ).catch(err => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <Flex gap=\"gap.large\" wrap>\n        {parts.map((ele) => (\n          <Item key={ele.id} src={ele.images} id={ele.id} name={ele.name} />\n        ))}\n      </Flex>\n      <Button\n        primary\n        fluid\n        circular\n        content={<AddIcon size=\"largest\" circular />}\n        style={{\n          width: 100,\n          height: 100,\n          position: 'fixed',\n          right: '100px',\n          bottom: '100px',\n        }}\n        as={Link}\n        to=\"/parts/detail\"\n      />\n    </div>\n  );\n};\n\nconst Item = ({ src, id, name }): JSX.Element => {\n  return (\n    <Flex column hAlign=\"center\" gap=\"gap.large\" as={Link} to={`/parts/detail/${id}/capturePhotos`}>\n      <div style={{ width: '250px', height: '250px' }}>\n        <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n      </div>\n      <Text size=\"larger\">{name}</Text>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Divider,\n  Text,\n  Flex,\n  Dropdown,\n  Button,\n  DropdownItemProps,\n  Checkbox,\n  Input,\n  Alert,\n} from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { thunkGetProject, thunkPostProject, updateProjectData } from '../store/project/projectActions';\nimport { Project, ProjectData } from '../store/project/projectTypes';\nimport { State } from '../store/State';\nimport { formatDropdownValue } from '../util/formatDropdownValue';\n\nexport const PartIdentification: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error, data } = useSelector<State, Project>((state) => state.project);\n  const {\n    id: projectId,\n    camera,\n    location,\n    parts,\n    needRetraining,\n    accuracyRangeMin,\n    accuracyRangeMax,\n    maxImages: maxImage,\n  } = data;\n  const [cameraLoading, dropDownCameras, selectedCamera, setSelectedCameraById] = useDropdownItems<any>(\n    'cameras',\n  );\n  const [partLoading, dropDownParts, selectedParts, setSelectedPartsById] = useDropdownItems<any>(\n    'parts',\n    true,\n  );\n  const [locationLoading, dropDownLocations, selectedLocations, setSelectedLocationById] = useDropdownItems<\n    any\n  >('locations');\n  const history = useHistory();\n  const [maxImgCountError, setMaxImgCountError] = useState(false);\n\n  useEffect(() => {\n    if (!cameraLoading && !partLoading && !locationLoading) {\n      dispatch(thunkGetProject());\n    }\n  }, [dispatch, cameraLoading, locationLoading, partLoading]);\n\n  useEffect(() => {\n    if (location) setSelectedLocationById(location);\n    if (parts.length) setSelectedPartsById(parts);\n    if (camera) setSelectedCameraById(camera);\n  }, [camera, location, parts, setSelectedCameraById, setSelectedLocationById, setSelectedPartsById]);\n\n  const handleSubmitConfigure = (): void => {\n    ((dispatch(\n      thunkPostProject(projectId, selectedLocations, selectedParts, selectedCamera),\n    ) as unknown) as Promise<number>)\n      .then((id) => {\n        if (typeof id !== 'undefined') history.push(`/cameras/${selectedCamera.name}/${id}`);\n        return void 0;\n      })\n      .catch((e) => e);\n  };\n\n  const setData = (keyName: keyof ProjectData, value: ProjectData[keyof ProjectData]): void => {\n    dispatch(updateProjectData({ ...data, [keyName]: value }));\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Part Identification\n      </Text>\n      <Divider color=\"black\" />\n      {error && (\n        <Alert danger header=\"Load Part Identification Error\" content={`${error.name}: ${error.message}`} />\n      )}\n      <Flex column gap=\"gap.large\" design={{ paddingTop: '30px' }}>\n        <ModuleSelector\n          moduleName=\"cameras\"\n          to=\"/cameras\"\n          value={selectedCamera}\n          setSelectedModuleItem={setSelectedCameraById}\n          items={dropDownCameras}\n          isMultiple={false}\n        />\n        <ModuleSelector\n          moduleName=\"parts\"\n          to=\"/parts\"\n          value={selectedParts}\n          setSelectedModuleItem={setSelectedPartsById}\n          items={dropDownParts}\n          isMultiple={true}\n        />\n        <ModuleSelector\n          moduleName=\"locations\"\n          to=\"/locations\"\n          value={selectedLocations}\n          setSelectedModuleItem={setSelectedLocationById}\n          items={dropDownLocations}\n          isMultiple={false}\n        />\n        <Checkbox\n          label=\"Set up retraining\"\n          checked={needRetraining}\n          onChange={(_, { checked }): void => setData('needRetraining', checked)}\n        />\n        <Text disabled={!needRetraining}>Accuracy Range</Text>\n        <Text disabled={!needRetraining}>\n          Minimum:{' '}\n          <Input\n            type=\"number\"\n            disabled={!needRetraining}\n            inline\n            value={accuracyRangeMin}\n            onChange={(_, { value }): void => setData('accuracyRangeMin', value)}\n          />\n          %\n        </Text>\n        <Text disabled={!needRetraining}>\n          Maximum:{' '}\n          <Input\n            type=\"number\"\n            disabled={!needRetraining}\n            inline\n            value={accuracyRangeMax}\n            onChange={(_, { value }): void => setData('accuracyRangeMax', value)}\n          />\n          %\n        </Text>\n        <Text disabled={!needRetraining}>\n          Maximum Images:{' '}\n          <Input\n            type=\"number\"\n            disabled={!needRetraining}\n            inline\n            value={maxImage}\n            onChange={(_, { value }): void => {\n              if ((value as any) < 15) setMaxImgCountError(true);\n              else setMaxImgCountError(false);\n              setData('maxImages', value);\n            }}\n          />\n          {maxImgCountError && <Text error>Cannot be less than 15</Text>}\n        </Text>\n        <Link to=\"\">Advanced Configuration</Link>\n        <Button\n          content=\"Configure\"\n          primary\n          onClick={handleSubmitConfigure}\n          disabled={!selectedCamera || !selectedLocations || !selectedParts || isLoading}\n          loading={isLoading}\n        />\n      </Flex>\n    </>\n  );\n};\n\n// TODO Make this integrate with Redux\nfunction useDropdownItems<T>(\n  moduleName: string,\n  isMultiple?: boolean,\n): [boolean, DropdownItemProps[], T | T[], (id: string | string[]) => void] {\n  const originItems = useRef<(T & { id: number })[]>([]);\n  const [dropDownItems, setDropDownItems] = useState<DropdownItemProps[]>([]);\n  const [selectedItem, setSelectedItem] = useState<T | T[]>(isMultiple ? [] : null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`/api/${moduleName}/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setDropDownItems(\n          data.map((e) => ({\n            header: e.name,\n            content: {\n              key: e.id,\n            },\n          })),\n        );\n        originItems.current = data;\n        setLoading(false);\n        return void 0;\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.error(err);\n      });\n  }, [moduleName]);\n\n  const setSelectedItemById = useCallback((id: string | string[]): void => {\n    if (Array.isArray(id)) {\n      const correspondedItems = id.reduce((acc, cur) => {\n        const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === cur.toString());\n        if (correspondedItem) acc.push(correspondedItem);\n        return acc;\n      }, []);\n      setSelectedItem(correspondedItems as any);\n    } else {\n      const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === id.toString());\n      if (correspondedItem) setSelectedItem(correspondedItem);\n    }\n  }, []);\n\n  return [loading, dropDownItems, selectedItem, setSelectedItemById];\n}\n\nconst ModuleSelector = ({ moduleName, to, value, setSelectedModuleItem, items, isMultiple }): JSX.Element => {\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setSelectedModuleItem((prev) => prev);\n    else if (Array.isArray(data.value)) {\n      const ids = data.value.map((ele) => ele.content.key);\n      setSelectedModuleItem(ids);\n    } else {\n      const { key } = data.value.content;\n      setSelectedModuleItem(key);\n    }\n  };\n\n  return (\n    <Flex vAlign=\"center\" gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }}>{`Select ${moduleName}`}</Text>\n      <Dropdown\n        items={items}\n        onChange={onDropdownChange}\n        value={formatDropdownValue(value)}\n        multiple={isMultiple}\n      />\n      <Link to={to}>{`Add ${moduleName}`}</Link>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Divider, Flex, Text, Input, Button, Alert } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nexport const Setting = (): JSX.Element => {\n  const [settingData, setSettingData] = useState({\n    id: null,\n    key: '',\n    namespace: '',\n    iotHubConnectionString: '',\n    deviceId: '',\n    moduleId: '',\n  });\n  const [saveStatus, setSaveStatus] = useState({\n    success: false,\n    content: '',\n  });\n\n  useEffect(() => {\n    Axios.get('/api/settings/')\n      .then(({ data }) => {\n        if (data.length > 0) {\n          setSettingData({\n            id: data[0].id,\n            key: data[0].training_key,\n            namespace: data[0].endpoint,\n            iotHubConnectionString: data[0].iot_hub_connection_string,\n            deviceId: data[0].device_id,\n            moduleId: data[0].module_id,\n          });\n        }\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const onSave = (): void => {\n    const isSettingEmpty = settingData.id === null;\n    const url = isSettingEmpty ? `/api/settings/` : `/api/settings/${settingData.id}/`;\n\n    Axios(url, {\n      data: {\n        training_key: settingData.key,\n        endpoint: settingData.namespace,\n        iot_hub_connection_string: settingData.iotHubConnectionString,\n        device_id: settingData.deviceId,\n        module_id: settingData.moduleId,\n      },\n      method: isSettingEmpty ? 'POST' : 'PUT',\n    })\n      .then(() => {\n        setSaveStatus({ success: true, content: 'Save Setting Successfully' });\n        return void 0;\n      })\n      .catch((err) => {\n        setSaveStatus({ success: false, content: `Fail to save settings: /n ${err.toString()}` });\n      });\n  };\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Setting</h1>\n      <Divider color=\"grey\" />\n      <Text size=\"large\" weight=\"bold\">\n        Azure Cognitive Services Settings:{' '}\n      </Text>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Namespace:\n        </Text>\n        <Input\n          value={settingData.namespace}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, namespace: value }))}\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Key:\n        </Text>\n        <Input\n          value={settingData.key}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, key: value }))}\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Iot Hub Connection String:\n        </Text>\n        <Input\n          value={settingData.iotHubConnectionString}\n          onChange={(_, { value }): void =>\n            setSettingData((prev) => ({ ...prev, iotHubConnectionString: value }))\n          }\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Device ID:\n        </Text>\n        <Input\n          value={settingData.deviceId}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, deviceId: value }))}\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Module ID:\n        </Text>\n        <Input\n          value={settingData.moduleId}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, moduleId: value }))}\n        />\n      </Flex>\n      <Flex gap=\"gap.large\">\n        <Button primary onClick={onSave} disabled={Object.values(settingData).some((e) => !e)}>\n          Save\n        </Button>\n        <Button primary as={Link} to=\"/\">\n          Cancel\n        </Button>\n      </Flex>\n      {saveStatus.content ? (\n        <Alert\n          success={saveStatus.success}\n          danger={!saveStatus.success}\n          content={saveStatus.content}\n          dismissible\n        />\n      ) : null}\n    </Flex>\n  );\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Cameras from '../pages/Cameras';\nimport CameraDetails from '../pages/CameraDetails';\nimport { PartDetails } from '../pages/PartDetails';\nimport LabelingPage from '../pages/LabelingPage';\nimport Locations from '../pages/Locations';\nimport LocationRegister from '../pages/LocationRegister';\nimport LocationDetails from '../pages/LocationDetails';\nimport ManualIdentification from '../pages/ManualIdentification';\nimport { Parts } from '../pages/Parts';\nimport { PartIdentification } from '../pages/PartIdentification';\nimport { Setting } from '../pages/Setting';\n\nexport const RootRouter: FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/manual\" component={ManualIdentification} />\n      <Route path=\"/locations/register\" component={LocationRegister} />\n      <Route path=\"/locations/:name\" component={LocationDetails} />\n      <Route path=\"/locations\" component={Locations} />\n      <Route path=\"/label/:imageIndex\" component={LabelingPage} />\n      <Route path=\"/cameras/:name/:projectId\" component={CameraDetails} />\n      <Route path=\"/cameras/:name/\" component={CameraDetails} />\n      <Route path=\"/cameras\" component={Cameras} />\n      <Route path=\"/parts/detail/:partId\" component={PartDetails} />\n      <Route path=\"/parts/detail/\" component={PartDetails} />\n      <Route path=\"/parts\" component={Parts} />\n      <Route path=\"/partIdentification\" component={PartIdentification} />\n      <Route path=\"/setting\" component={Setting} />\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nconst getTitle = (pathname: string): string => {\n  switch (pathname) {\n    case 'cameras':\n      return 'Camera';\n    case 'parts':\n      return 'Part';\n    case 'locations':\n      return 'Location';\n    case 'register':\n      return 'Register';\n    case 'label':\n      return 'Label';\n    case 'manual':\n      return 'Identify Manually';\n    case 'detail':\n      return 'Register Part';\n    case 'partIdentification':\n      return 'Job Configuration';\n    case 'capturePhotos':\n      return null;\n    case 'uploadPhotos':\n      return null;\n    default:\n      if (typeof pathname === 'string') return 'Details';      \n      return null;\n  }\n};\n\nconst Breadcrumb: FC = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/') return <Text color=\"black\">Home</Text>;\n\n  const pathTitles = pathname.split('/').slice(1);\n\n  return (\n    <Flex gap=\"gap.smaller\">\n      <Link to={'/'} style={{ color: '#0094d8', textDecoration: 'none' }}>\n        <Text>Home</Text>\n      </Link>\n      {pathTitles.map((e, i, arr) => {\n        const title = getTitle(e);\n\n        return (\n          <Fragment key={i}>\n            <Text color=\"black\">{'>'}</Text>\n            {i === arr.length - 1 ? (\n              <Text color=\"black\">{title}</Text>\n            ) : (\n              <Link to={`/${e}`} style={{ color: '#0094d8', textDecoration: 'none' }}>\n                <Text>{title}</Text>\n              </Link>\n            )}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { FC } from 'react';\nimport { Grid, Segment, Image, Flex, Text, MenuIcon } from '@fluentui/react-northstar';\nimport { NavLink, Link } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\n\nexport const MainLayout: React.FC = ({ children }) => {\n  return (\n    <Grid\n      columns=\"60px auto\"\n      rows=\"50px auto\"\n      design={{ height: '100vh' }}\n      styles={{ justifyContent: 'stretch' }}\n    >\n      <TopNav />\n      <LeftNav\n        styles={{\n          gridColumn: '1 / span 1',\n          gridRow: '2 / span 1',\n          boxShadow: '1px 0px 10px 0px rgba(0,0,0,0.75)',\n          zIndex: 1,\n        }}\n      />\n\n      <Segment styles={{ gridColumn: 'span 1', padding: '30px' }}>\n        <Breadcrumb />\n        {children}\n      </Segment>\n    </Grid>\n  );\n};\n\nconst TopNav: FC = () => {\n  return (\n    <Flex\n      space=\"between\"\n      vAlign=\"center\"\n      padding=\"padding.medium\"\n      styles={{\n        backgroundColor: '#0094d8',\n        gridColumn: '1 / span 2',\n        boxShadow: '0px 1px 10px 0px rgba(0,0,0,0.75)',\n        zIndex: 2,\n        fontSize: '20px',\n        padding: '0.5em 1em',\n      }}\n    >\n      <Flex gap=\"gap.large\" vAlign=\"center\">\n        <MenuIcon size=\"large\" styles={{ color: 'white' }} />\n        <NavLink to={'/'} style={{ textDecoration: 'none' }}>\n          <Text color=\"white\">Vision on Edge</Text>\n        </NavLink>\n      </Flex>\n      <Flex vAlign=\"center\" hAlign=\"end\" gap=\"gap.medium\" styles={{ height: '100%' }}>\n        <Link to=\"/setting\" style={{ height: '100%' }}>\n          <Image styles={{ height: '100%' }} src=\"/icons/setting.png\" />\n        </Link>\n        <Text color=\"white\">User</Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst LeftNav: FC<any> = ({ styles }): JSX.Element => {\n  return (\n    <Segment color=\"grey\" inverted styles={{ ...styles, padding: 0, paddingTop: '1em' }}>\n      <Flex column gap=\"gap.large\" hAlign=\"center\">\n        <NavItem src=\"/icons/location.png\" to=\"/locations\"></NavItem>\n        <NavItem src=\"/icons/camera.png\" to=\"/cameras\"></NavItem>\n        <NavItem src=\"/icons/part.png\" to=\"/parts\"></NavItem>\n        <NavItem src=\"/icons/manual.png\" to=\"/manual\"></NavItem>\n        <NavItem src=\"/icons/partIdentification.png\" to=\"/partIdentification\"></NavItem>\n      </Flex>\n    </Segment>\n  );\n};\n\nconst NavItem = ({ src, to }): JSX.Element => {\n  return (\n    <NavLink\n      to={to}\n      style={{ display: 'flex', justifyContent: 'center', padding: '0.8em' }}\n      activeStyle={{ backgroundColor: 'rgba(250, 83, 5, 0.5)' }}\n    >\n      <Image src={src} design={{ width: '100%' }}></Image>\n    </NavLink>\n  );\n};\n","import { ThemeInput, mergeThemes, themes } from '@fluentui/react-northstar';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colors: {\n      brand: {\n        '50': '#f3fafd',\n        '100': '#d1ecf9',\n        '200': '#aadcf4',\n        '300': '#5dbce8',\n        '400': '#1ba0dd',\n        '500': '#0094d8',\n        '600': '#0085c3',\n        '700': '#0071a5',\n        '800': '#005379',\n        '900': 'black',\n      },\n    },\n    colorScheme: {\n      brand: {\n        foreground: '#0094d8',\n        background: '#0094d8',\n        border: '#E1DFDD',\n        shadow: '#000',\n        foregroundHover: '#0094d8',\n        backgroundHover: '#0085c3',\n        borderHover: '#5dbce8',\n        shadowHover: '#000',\n        foregroundActive: '#0094d8',\n        backgroundActive: '#0094d8',\n        borderActive: '#E1DFDD',\n        shadowActive: undefined,\n        foregroundFocus: '#0094d8',\n        backgroundFocus: '#0094d8',\n        borderFocus: '#000',\n        shadowFocus: undefined,\n        foregroundPressed: '#0071a5',\n        backgroundPressed: '#0071a5',\n        borderPressed: '#5dbce8',\n        shadowPressed: undefined,\n        foregroundDisabled: '#C8C6C4',\n        backgroundDisabled: '#EDEBE9',\n        borderDisabled: '#EDEBE9',\n        shadowDisabled: undefined,\n        foreground1: '#0094d8',\n        foreground2: '#0085c3',\n        foreground3: '#aadcf4',\n        foreground4: '#fff',\n        background1: '#d1ecf9',\n        background2: '#005379',\n        background3: '#373644',\n        background4: '#0071a5',\n        border1: '#aadcf4',\n        border2: '#5dbce8',\n        foregroundHover1: '#fff',\n        foregroundHover2: '#aadcf4',\n        backgroundHover1: '#f3fafd',\n        foregroundPressed1: '#fff',\n        foregroundActive1: '#0094d8',\n        foregroundActive2: '#aadcf4',\n        backgroundActive1: '#0094d8',\n        borderActive1: '#aadcf4',\n        borderActive2: '#5dbce8',\n        foregroundFocus1: '#0094d8',\n        foregroundFocus2: '#0085c3',\n        foregroundFocus3: '#aadcf4',\n        foregroundFocus4: '#fff',\n        backgroundFocus1: '#d1ecf9',\n        backgroundFocus2: '#005379',\n        backgroundFocus3: '#373644',\n        borderFocusWithin: '#fff',\n        borderFocus1: '#0094d8',\n        foregroundDisabled1: '#C8C6C4',\n        backgroundDisabled1: '#EDEBE9',\n      },\n    },\n  },\n};\n\n/**\n * Primary color is based on #0094d8 and generated by https://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/theming-designer/index.html\n */\nexport const myTheme = mergeThemes(themes.teams, theme);\n","import React, { FC } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from '@fluentui/react-northstar';\nimport { RootRouter } from './routes/RootRouter';\nimport { MainLayout } from './components/MainLayout';\nimport { myTheme } from './theme';\n\nconst App: FC = (): JSX.Element => {\n  return (\n    <Provider theme={myTheme}>\n      <Router>\n        <div className=\"App\">\n          <MainLayout>\n            <RootRouter />\n          </MainLayout>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/State';\n\nconst { store, persistor } = configureStore(initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading..</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}