# =========================================================
# === Build Static UI                                   ===
# =========================================================
FROM node:12 as builder

WORKDIR /
COPY ui app
WORKDIR /app
RUN rm -rf node_modules/
RUN rm -rf build/
RUN yarn install --production
RUN yarn build

# =========================================================
# === Build Backend Base                                ===
# =========================================================
FROM arm64v8/ubuntu as backend-base

RUN apt-get update
RUN apt-get install -y locales \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG=en_US.UTF-8
ENV LANG en_US.UTF-8 
ENV LC_ALL en_US.UTF-8
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get install -y python3
RUN apt-get -y install python3-pip
RUN apt-get install -y libgl1-mesa-glx
RUN apt-get install -y python3-cryptography
RUN apt-get install -y python3-zmq
RUN apt-get install -y python3-opencv
RUN apt-get install -y python3-ruamel.yaml
RUN apt-get install -y python3-psycopg2

# =========================================================
# === Build Backend Production                          ===
# =========================================================
FROM backend-base as backend-production

WORKDIR /app

COPY backend_v2/requirements requirements
RUN pip3 install -r ./requirements/production-arm.txt

COPY backend_v2/manage.py .
COPY backend_v2/config.py .
COPY backend_v2/vision_on_edge vision_on_edge
COPY backend_v2/configs configs
RUN python3 manage.py makemigrations
RUN python3 manage.py migrate

RUN rm -rf ui_production
COPY --from=builder /app/build vision_on_edge/ui_production
EXPOSE 8000

CMD python3 manage.py runserver 0.0.0.0:8000
