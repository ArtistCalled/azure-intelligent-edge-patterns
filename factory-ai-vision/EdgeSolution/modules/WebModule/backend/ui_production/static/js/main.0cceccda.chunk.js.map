{"version":3,"sources":["store/project/projectTypes.ts","store/part/partReducer.ts","store/labelingPage/labelingPageTypes.ts","store/State.ts","store/camera/cameraReducer.ts","store/camera/cameraTypes.ts","store/part/partTypes.ts","store/labelingPage/labelingPageReducer.ts","store/location/locationReducer.ts","store/location/locationTypes.ts","store/dialog/dialogIsOpenReducer.ts","store/dialog/dialogIsOpenTypes.ts","store/project/projectReducer.ts","store/image/imageReducer.ts","store/image/imageTypes.ts","store/rootReducer.ts","store/index.ts","components/ImageLink.tsx","pages/Home.tsx","store/dialog/dialogIsOpenActions.ts","store/camera/cameraActions.ts","components/AddButton.tsx","pages/Cameras.tsx","components/ConfirmDialog.tsx","components/CameraDetails/CameraDetailInfo.tsx","hooks/useInterval.ts","store/project/projectActions.ts","hooks/useParts.ts","hooks/useQuery.ts","components/LabelingPage/util/useImage.ts","components/LiveViewContainer/LiveViewScene.tsx","components/LiveViewContainer/LiveViewContainer.tsx","components/CameraConfigure/CameraConfigureInfo.tsx","components/CameraConfigure/CreateCameraConfig.tsx","pages/CameraDetails.tsx","components/LabelingPage/util/resizeImage.ts","store/labelingPage/labelingPageActions.ts","components/LabelingPage/Box.tsx","components/LabelingPage/RemoveBoxButton.tsx","components/LabelingPage/Scene.tsx","store/image/imageActions.ts","components/LabelingPage/PrevNextButton.tsx","pages/LabelingPage.tsx","components/LabelingPageDialog.tsx","components/LabelDisplayImage.tsx","components/RTSPVideo/RTSPVideo.tsx","store/part/partActions.ts","util/GetIDFromUrl.ts","util/getFilteredImages.ts","util/formatDropdownValue.ts","components/CapturePhoto/CapturePhotos.tsx","hooks/useCameras.ts","components/UploadPhotos/UploadPhotos.tsx","pages/PartDetails.tsx","store/location/locationActions.ts","pages/Locations.tsx","pages/LocationRegister.tsx","pages/LocationDetails.tsx","components/ManualIdentification/ImageItem.tsx","components/ManualIdentification/ImagesContainer.tsx","pages/ManualIdentification.tsx","pages/Parts.tsx","pages/PartIdentification.tsx","pages/Setting.tsx","routes/RootRouter.tsx","components/Breadcrumb.tsx","components/MainLayout/LeftNav.tsx","components/MainLayout/MainLayout.tsx","theme.ts","TelemetryService.ts","components/TelemetryProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Status","reducer","AnnotationState","LabelingCursorStates","WorkState","LabelingType","initialState","dialogIsOpen","cameras","locations","images","labelingPageState","annotations","part","capturedImages","isValid","project","isLoading","data","id","camera","location","parts","needRetraining","accuracyRangeMin","accuracyRangeMax","maxImages","modelUrl","trainingMetrics","prevConsequence","curConsequence","inferenceMetrics","successRate","successfulInferences","unIdetifiedItems","status","None","error","trainingLog","camerasReducer","state","action","type","payload","concat","idx","findIndex","e","slice","checkIfImagesCountIsValidToTrain","newCapturedImage","newState","filter","image","labels","length","labelingPageStateReducer","push","annotation","creatingAnnotation","updater","annotationState","Finish","label","x1","x2","y1","y2","pop","index","locationsReducer","dialogIsOpenReducer","projectReducer","newStatus","TrainingFailed","StartInference","labelImagesReducer","updatedImageIdx","rootReducer","combineReducers","partReducer","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","memo","to","imgSrc","defaultSrc","bgImgSrc","imgPadding","width","height","bgImgStyle","pointerCursor","onClick","Flex","column","styles","style","Image","src","padding","objectFit","backgroundImage","cursor","Text","align","Home","dispatch","useDispatch","gap","size","weight","color","backgroundColor","requestCamerasFailure","console","getCameras","axios","then","getCamerasSuccess","catch","err","AddButton","Button","primary","fluid","circular","content","Cameras","useSelector","useState","name","setName","rtsp","setRtsp","model_name","setModel_name","useEffect","display","flexFlow","justifyContent","Grid","columns","map","i","backgroundSize","backgroundPosition","backgroundRepeat","Dialog","open","trigger","alignSelf","alignItems","Input","placeholder","value","onChange","_","newProps","disabled","newCamera","method","postCameraSuccess","ConfirmDialog","onConfirm","primaryStyles","setOpen","onOpen","footer","space","modelName","deleteCameraSuccess","deleteCamera","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","getTrainingLogSuccess","thunkGetProject","Axios","get","parseInt","split","ele","download_uri","getProjectSuccess","getTrain","projectId","thunkGetTrainingLog","Error","log","FinishTraining","WaitTraining","useParts","setParts","fetch","res","json","useQuery","URLSearchParams","useLocation","search","defaultState","undefined","useImage","url","crossOrigin","imageState","setImageState","prevUrl","ref","usePrevious","img","document","createElement","prev","onload","onerror","addEventListener","removeEventListener","LiveViewScene","AOIs","setAOIs","visible","divRef","stageRef","imgRef","layerRef","window","hostname","imgEle","imgWidth","imgHeight","anim","Konva","Animation","start","stop","getBoundingClientRect","divWidth","divHeight","stageWidth","stageHeight","scale","Math","min","x","y","offsetX","offsetY","position","AOILayer","holes","box","boundary","onBoxChange","updateBox","newBox","tmp","newAOIs","Mask","fill","sceneFunc","ctx","shape","beginPath","moveTo","lineTo","forEach","fillStrokeShape","listening","AOIBox","handleDrag","target","points","closed","stroke","strokeWidth","draggable","radius","onDragMove","LiveViewContainer","showVideo","initialAOIData","cameraId","useAOI","showAOI","setShowAOI","lasteUpdatedAOIs","showUpdateSuccessTxt","setShowUpdateSuccessTxt","loading","setLoading","setError","onCheckboxClick","a","patch","area","JSON","stringify","onUpdate","R","timer","setTimeout","clearTimeout","hasEdit","updateBtnDisabled","Alert","danger","header","message","hAlign","vAlign","Checkbox","labelPosition","toggle","checked","visibility","CameraConfigureInfo","allTrainingLog","useAllTrainingLog","cameraName","history","useHistory","onDeleteConfigure","useCallback","confirm","delete","alert","thunkDeleteProject","CameraConfigStatus","dispacth","new","precision","recall","mAP","previous","getTrainingMetricsSuccess","thunkGetTrainingMetrics","success_rate","inference_num","unidentified_num","thunkGetInferenceMetrics","isCameraOnline","includes","Loader","title","online","join","fontWeight","margin","marginLeft","as","Link","allLogs","setAllLogs","ConsequenceDashboard","ListItem","children","CameraStatus","text","CreateCameraConfig","design","border","CameraDetails","cameraIdInproject","find","hasProject","aoiData","getAOIData","cameraArea","parse","getResizeImageFunction","defaultSize","scaleX","scaleY","requestAnnotationsSuccess","BoxObj","init","attribute","Empty","createWithPoint","p","obj","this","add","newObj","P1Added","setVerticesToValidValue","setVerticesToInt","round","setVerticesPointsOrder","object","Box2d","workState","onSelect","selected","annotationIndex","changeCursorState","vertices","setVertices","anchorRadius","boxRef","dispatchLabel","newAnnotation","updateAnnotation","mouseMoveListener","Creating","evt","onDragAnchor","xi","yi","getStage","getSize","setAttr","anotherPosXArr","anotherPosYArr","splice","xx","yy","nwseResize","neswResize","prevVertices","layer","getLayer","on","off","onMouseDown","cancelBubble","onDragEnd","onMouseEnter","onMouseLeave","DisplayBox","cache","imageSize","setShowOuterRemoveButton","removeBox","setColor","setStrokeWidth","pointer","Scene","labelingType","setWorkState","resizeImage","setImageSize","noMoreCreate","useMemo","SingleAnnotation","default","cursorState","setCursorState","selectedAnnotationIndex","setSelectedAnnotationIndex","showOuterRemoveButton","isDragging","setIsDragging","cursorType","crosshair","removeAnnotation","Selecting","outcomeSize","outcomeScale","iconOnly","pos","onMouseUp","onDragStart","requestLabelImagesFailure","getLabelImages","getLabelImagesSuccess","postLabelImage","newImage","saveLabelImageAnnotation","imageId","info","updateLabelImageAnnotation","PrevNextButton","isRelabel","prevDisabled","nextDisabled","onPrevClick","onNextClick","icon","checkOnePointBox","LabelingPage","imageIndex","closeDialog","setIndex","isOnePointBox","imageUrl","getState","parsedLabels","getAnnotations","labelImage","labelText","RTSPVideo","React","partId","canCapture","onVideoStart","onVideoPause","streamId","setStreamId","onDisconnect","response","Group","buttons","stream_id","thunkAddCapturedImages","getIdFromUrl","getFilteredImages","is_relabel","formatDropdownValue","Array","isArray","CapturePhotos","selectedCamera","setSelectedCamera","CameraSelector","availableCameras","useCameras","items","Dropdown","newSelectedCamera","CapturedImagesContainer","filteredImages","imageCount","overflow","borderColor","arr","when","UploadPhotos","files","formData","FormData","append","accept","multiple","gridGap","justifyItems","PartDetails","gridColumnGap","LeftPanel","description","setDescription","gridColumn","fontSize","TextArea","hasPartId","dismissible","RightPanel","path","Tab","pathname","activeIndex","Menu","pointing","requestLocationsFailure","Locations","getLocationsSuccess","LocationRegister","coordinates","setCoordinates","Divider","paddingTop","minHeight","newLocation","postLocationSuccess","LocationDetails","confidenceLevel","relabelImages","setJudgedImageList","partItems","isPartCorrect","filteredPartItems","selectedPartItem","setSelectedPartItem","maxHeight","truncated","RadioGroup","checkedValue","onCheckedValueChange","next","judgedImageList","selectedPartId","borderWidth","borderStyle","ManualIdentification","projectData","confidenceLevelRange","setConfidenceLevelRange","ascend","setAscend","sortRef","sorted","prevIsAscend","setRelabelImages","confidence","reverse","sort","b","columnGap","allowCross","handle","dragging","restProps","prefixCls","overlay","placement","Parts","partsAPI","imagesAPI","all","spread","wrap","right","bottom","Item","testModelValue","PartIdentification","maxImage","useDropdownItems","cameraLoading","dropDownCameras","setSelectedCameraById","partLoading","dropDownParts","selectedParts","setSelectedPartsById","locationLoading","dropDownLocations","selectedLocations","setSelectedLocationById","maxImgCountError","setMaxImgCountError","isTestModel","setIsTestModel","setData","keyName","accracyRangeDisabled","moduleName","setSelectedModuleItem","isMultiple","inline","isProjectEmpty","headers","thunkPostProject","TestModelButton","flexDirection","cancelButton","confirmButton","theme","siteVariables","colorScheme","brand","foreground","originItems","dropDownItems","setDropDownItems","selectedItem","setSelectedItem","correspondedItems","reduce","acc","cur","correspondedItem","toString","ModuleSelector","ids","Setting","namespace","iotHubConnectionString","deviceId","moduleId","settingData","setSettingData","success","saveStatus","setSaveStatus","training_key","endpoint","iot_hub_connection_string","device_id","module_id","isSettingEmpty","Object","values","some","RootRouter","component","Breadcrumb","pathTitles","getTitle","textDecoration","NavItem","activeStyle","Segment","inverted","MainLayout","rows","gridRow","boxShadow","zIndex","TopNav","colors","background","shadow","foregroundHover","backgroundHover","borderHover","shadowHover","foregroundActive","backgroundActive","borderActive","shadowActive","foregroundFocus","backgroundFocus","borderFocus","shadowFocus","foregroundPressed","backgroundPressed","borderPressed","shadowPressed","foregroundDisabled","backgroundDisabled","borderDisabled","shadowDisabled","foreground1","foreground2","foreground3","foreground4","background1","background2","background3","background4","border1","border2","foregroundHover1","foregroundHover2","backgroundHover1","foregroundPressed1","foregroundActive1","foregroundActive2","backgroundActive1","borderActive1","borderActive2","foregroundFocus1","foregroundFocus2","foregroundFocus3","foregroundFocus4","backgroundFocus1","backgroundFocus2","backgroundFocus3","borderFocusWithin","borderFocus1","foregroundDisabled1","backgroundDisabled1","myTheme","mergeThemes","themes","teams","reactPlugin","appInsights","ai","initialize","instrumentationKey","browserHistory","ReactPlugin","ApplicationInsights","config","maxBatchInterval","disableFetchTracking","extensions","extensionConfig","identifier","loadAppInsights","TelemetryProvider","initialized","props","AppInsightsInstrumentationKey","Boolean","setState","after","Component","withRouter","withAITracking","App","Provider","className","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uLAqBYA,E,0HAAAA,K,YAAAA,E,4BAAAA,E,gCAAAA,E,gCAAAA,E,iCAAAA,M,KA2BL,IC5BmCC,ECmC9BC,EAMAC,EA4BAC,EAMAC,EC5ECC,EAAsB,CACjCC,cAAc,EACdC,QAAS,GACTC,UAAW,GACXC,OAAQ,GACRC,kBAAmB,CAAEC,YAAa,IAClCC,KAAM,CACJC,eAAgB,GAChBC,SAAS,GAEXC,QAAS,CACPC,WAAW,EACXC,KAAM,CACJC,GAAI,KACJC,OAAQ,KACRC,SAAU,KACVC,MAAO,GACPC,gBAAgB,EAChBC,iBAAkB,GAClBC,iBAAkB,GAClBC,UAAW,GACXC,SAAU,IAEZC,gBAAiB,CACfC,gBAAiB,KACjBC,eAAgB,MAElBC,iBAAkB,CAChBC,YAAa,KACbC,qBAAsB,KACtBC,iBAAkB,MAEpBC,OAAQnC,EAAOoC,KACfC,MAAO,KACPC,YAAa,KCzBFC,EAlBQ,WAAmE,IAAlEC,EAAiE,uDAAzDlC,EAAaE,QAASiC,EAAmC,uCACvF,OAAQA,EAAOC,MACb,ICR8B,qBDS5B,OAAOD,EAAOE,QAChB,ICPkC,yBDQhC,OAAOH,EACT,ICX+B,sBDY7B,OAAOA,EAAMI,OAAOH,EAAOE,SAC7B,ICZiC,wBDa/B,IAAME,EAAML,EAAMM,WAAU,SAACC,GAAD,OAAOA,EAAE5B,KAAOsB,EAAOE,QAAQxB,MAC3D,OAAa,IAAT0B,EAAmBL,EAAMQ,MAAM,EAAGH,GAAKD,OAAOJ,EAAMQ,MAAMH,EAAM,IAC7DL,EAET,QACE,OAAOA,I,gBHKES,GAT2BhD,EAZtB,WAA+D,IAA9DuC,EAA6D,uDAArDlC,EAAaO,KAAM4B,EAAkC,uCAChF,OAAQA,EAAOC,MACb,IKF8B,qBLG5B,OAAO,eAAKF,EAAZ,CAAmB1B,eAAe,GAAD,mBAAM0B,EAAM1B,gBAAZ,CAA4B2B,EAAOE,QAAQO,qBAC9E,IKKkC,yBLJhC,OAAO,eAAKV,EAAZ,CAAmB1B,eAAgB2B,EAAOE,QAAQ7B,iBACpD,QACE,OAAO0B,IAK0D,WAG3D,IAFVA,EAES,uDAFDlC,EAAaO,KACrB4B,EACS,uCACHU,EAAWlD,EAAQuC,EAAOC,GAC1B1B,EAAUoC,EAASrC,eAAesC,QAAO,SAACC,GAAD,OAAWA,EAAMC,UAAQC,QAAU,GAClF,OAAO,eAAKJ,EAAZ,CAAsBpC,e,SC6BZb,K,cAAAA,E,kBAAAA,E,iBAAAA,M,cAMAC,K,kBAAAA,E,kBAAAA,E,sBAAAA,E,yBAAAA,E,0BAAAA,M,cA4BAC,K,oBAAAA,E,sBAAAA,E,aAAAA,M,cAMAC,O,uCAAAA,I,sCAAAA,M,KKlFZ,IAkDemD,EAlDkB,WAGR,IAFvBhB,EAEsB,uDAFdlC,EAAaK,kBACrB8B,EACsB,uCAChBU,EAAWX,EACjB,OAAQC,EAAOC,MACb,ILhBsC,6BKiBpCS,EAASvC,YAAc6B,EAAOE,QAAQ/B,YACtC,MACF,ILrBsC,6BKsBpC,MACF,ILjB6B,oBKkB3BuC,EAASvC,YAAY6C,KAAKhB,EAAOE,QAAQe,YACzC,MACF,ILlBsC,6BKoBlC,IAAMC,EAAqBlB,EAAOE,QAAQiB,QACxCT,EAASvC,YAAYuC,EAASvC,YAAY2C,OAAS,IAGjDI,EAAmBE,kBAAoB3D,EAAgB4D,UAExB,EAA9BH,EAAmBI,MAAMC,OAA2C,EAA9BL,EAAmBI,MAAME,MACjC,EAA9BN,EAAmBI,MAAMG,OAA2C,EAA9BP,EAAmBI,MAAMI,IAEhEhB,EAASvC,YAAYwD,OAErBjB,EAASvC,YAAYuC,EAASvC,YAAY2C,OAAS,GAAKI,EACxDR,EAASvC,YAAT,YAA2BuC,EAASvC,eAI1C,MACF,ILhC6B,oBKiC3BuC,EAASvC,YAAY6B,EAAOE,QAAQ0B,OAAS5B,EAAOE,QAAQe,WAC5D,MACF,IL9B6B,oBK+B3BP,EAASvC,YAAcuC,EAASvC,YAC7BoC,MAAM,EAAGP,EAAOE,QAAQ0B,OACxBzB,OAAOO,EAASvC,YAAYoC,MAAMP,EAAOE,QAAQ0B,MAAQ,IAC5D,MACF,IL9B4B,mBK+B1BlB,EAASvC,YAAcN,EAAaK,kBAAkBC,YACtD,MACF,QACE,OAAO4B,EAEX,OAAOW,GCtCMmB,EAbU,WAAyE,IAAxE9B,EAAuE,uDAA/DlC,EAAaG,UAAWgC,EAAuC,uCAC/F,OAAQA,EAAOC,MACb,ICDgC,uBDE9B,OAAOD,EAAOE,QAChB,ICFoC,2BDGlC,OAAOH,EACT,ICHiC,wBDI/B,OAAOA,EAAMI,OAAOH,EAAOE,SAC7B,QACE,OAAOH,IEAE+B,EAXa,WAA6E,IAA5E/B,EAA2E,uDAAnElC,EAAaC,aAAckC,EAAwC,uCACtG,OAAQA,EAAOC,MACb,ICTuB,cDUrB,OAAO,EACT,ICVwB,eDWtB,OAAO,EACT,QACE,OAAOF,IEmGEgC,EAxFQ,WAAwE,IAAvEhC,EAAsE,uDAA9DlC,EAAaU,QAASyB,EAAwC,uCAC5F,OAAQA,EAAOC,MACb,IZqB+B,sBYpB7B,OAAO,eAAKF,EAAZ,CAAmBvB,WAAW,EAAMoB,MAAO,OAC7C,IZwB+B,sBYvB7B,OAAO,eAAKG,EAAZ,CAAmBvB,WAAW,EAAOC,KAAK,eAAMuB,EAAOE,QAAQ3B,SAAWqB,MAAO,OACnF,IZ8B8B,qBY7B5B,OAAO,eAAKG,EAAZ,CAAmBvB,WAAW,EAAOoB,MAAOI,EAAOJ,QACrD,IZ+FgC,uBY9F9B,OAAO,eAAKG,EAAZ,CAAmBvB,WAAW,IAChC,IZkGgC,uBYjG9B,OAAO,eAAKuB,EAAZ,CAAmBvB,WAAW,IAChC,IZqG+B,sBYpG7B,OAAO,eAAKuB,EAAZ,CAAmBvB,WAAW,EAAOoB,MAAOI,EAAOJ,QACrD,IZyGkC,yBYxGhC,OAAO,eACFG,EADL,CAEEvB,WAAW,EACXC,KAAM,CACJC,GAAI,KACJC,OAAQ,KACRC,SAAU,KACVC,MAAO,GACPC,gBAAgB,EAChBC,iBAAkB,GAClBC,iBAAkB,GAClBC,UAAW,GACXC,SAAU,IAEZI,iBAAkB,CAChBC,YAAa,EACbC,qBAAsB,EACtBC,iBAAkB,GAEpBN,gBAAiB,CACfE,eAAgB,KAChBD,gBAAiB,MAEnBS,YAAa,GACbH,OAAQnC,EAAOoC,KACfC,MAAO,OAEX,IZkFiC,wBYjF/B,OAAO,eAAKG,GACd,IZqF+B,sBYpF7B,OAAO,eAAKA,EAAZ,CAAmBtB,KAAMuB,EAAOE,UAClC,IZJoC,2BYKlC,OAAO,eACFH,GAEP,IZHoC,2BYIlC,OAAO,eACFA,EADL,CAEEF,YAAaG,EAAOE,QAAQL,YAC5BH,OAAQM,EAAOE,QAAQ8B,YAE3B,IZAmC,0BYCjC,OAAO,eACFjC,EADL,CAEEF,YAAa,GACbpB,KAAK,eAAMsB,EAAMtB,MACjBiB,OAAQnC,EAAO0E,eACfrC,MAAOI,EAAOJ,QAElB,IZFwC,+BYGtC,OAAOG,EACT,IZCwC,+BYAtC,OAAO,eACFA,EADL,CAEEZ,gBAAiBa,EAAOE,QACxBR,OAAQnC,EAAO2E,iBAEnB,IZIuC,8BYHrC,OAAO,eACFnC,EADL,CAEEH,MAAOI,EAAOJ,QAElB,IZKyC,iCYJvC,OAAOG,EACT,IZQyC,gCYPvC,OAAO,eAAKA,EAAZ,CAAmBT,iBAAkBU,EAAOE,UAC9C,IZgBwC,+BYftC,OAAO,eAAKH,EAAZ,CAAmBH,MAAOI,EAAOJ,QACnC,QACE,OAAO,eAAKG,KCvEHoC,EA3BY,WAA0E,IAAzEpC,EAAwE,uDAAhElC,EAAaI,OAAQ+B,EAA2C,uCAClG,OAAQA,EAAOC,MACb,ICFmC,0BDGjC,OAAOD,EAAOE,QAChB,ICDuC,8BDErC,OAAOH,EACT,ICLoC,2BDMlC,OAAOA,EAAMI,OAAOH,EAAOE,SAC7B,ICNsC,6BDOpC,IAAME,EAAML,EAAMM,WAAU,SAACC,GAAD,OAAOA,EAAE5B,KAAOsB,EAAOE,QAAQxB,MAC3D,OAAa,IAAT0B,EAAmBL,EAAMQ,MAAM,EAAGH,GAAKD,OAAOJ,EAAMQ,MAAMH,EAAM,IAC7DL,EAET,ICTyC,gCDUvC,IAAMW,EAAQ,YAAOX,GACfqC,EAAkB1B,EAASL,WAAU,SAACC,GAAD,OAAOA,EAAE5B,KAAOsB,EAAOE,QAAQxB,MAK1E,OAJAgC,EAAS0B,GAAT,eACK1B,EAAS0B,GADd,CAEEvB,OAAQb,EAAOE,QAAQW,SAElBH,EAET,QACE,OAAOX,IEtBPsC,EAAcC,0BAAgB,CAClCvE,QAAS+B,EACT9B,UAAW6D,EACXzD,KAAMmE,EACNrE,kBAAmB6C,EACnBjD,aAAcgE,EACdvD,QAASwD,EACT9D,OAAQkE,IAGJK,EAAgB,CACpBC,IAAK,OACLC,aAGWC,EAAmBC,YAAeJ,EAAeH,GCR/CQ,EAXQ,SAAChF,GACtB,IAAMiF,EAAc,CAACC,KACfC,EAAqBC,kBAAe,WAAf,EAAmBH,GACxCI,EAAmBC,8BAAoBH,GAEvCI,EAAQC,sBAAYV,EAAkB9E,EAAcqF,GAG1D,MAAO,CAAEE,QAAOE,UAFEC,YAAaH,K,mDC0DlBI,kBAlDuB,SAAC,GAYhC,IAAD,IAXJC,UAWI,MAXC,GAWD,EAVJC,EAUI,EAVJA,OACAC,EASI,EATJA,WACAC,EAQI,EARJA,SAQI,IAPJtC,aAOI,MAPI,GAOJ,MANJuC,kBAMI,MANS,UAMT,MALJC,aAKI,MALI,SAKJ,MAJJC,cAII,MAJK,SAIL,EAHJC,EAGI,EAHJA,WAGI,IAFJC,qBAEI,SADJC,EACI,EADJA,QAEA,OACE,kBAACC,EAAA,EAAD,CAAMC,QAAM,EAACC,OAAQ,CAAEP,UACb,KAAPL,EACC,yBAAKa,MAAO,CAAEP,UAAUG,QAASA,GAC/B,kBAACK,EAAA,EAAD,CACEC,IAAG,OAAEd,QAAF,IAAEA,IAAUC,EACfU,OAAM,aACJI,QAASZ,EACTE,OAAQ,OACRW,UAAW,UACXC,gBAAgB,OAAD,OAASf,EAAT,KACfgB,OAAQX,EAAgB,UAAY,WACjCD,MAKT,kBAAC,IAAD,CAAMP,GAAIA,GACR,yBAAKa,MAAO,CAAEP,UAAUG,QAASA,GAC/B,kBAACK,EAAA,EAAD,CACEC,IAAG,OAAEd,QAAF,IAAEA,IAAUC,EACfU,OAAM,aACJI,QAASZ,EACTE,OAAQ,OACRW,UAAW,UACXC,gBAAgB,OAAD,OAASf,EAAT,MACZI,OAMb,kBAACa,EAAA,EAAD,CAAMC,MAAM,UAAUxD,OCFbyD,EA1DE,WACf,IAAMC,EAAWC,cACjB,OACE,kBAACd,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,cACf,kBAACL,EAAA,EAAD,CAAMM,KAAK,SAASC,OAAO,YAA3B,eAGA,kBAACP,EAAA,EAAD,MAEA,kBAACA,EAAA,EAAD,CAAMQ,MAAM,QAAQhB,OAAQ,CAAEiB,gBAAiB,UAAWb,QAAS,oCAAnE,gBAGA,kBAACN,EAAA,EAAD,CAAMe,IAAI,aACR,kBAAC,EAAD,CACExB,OAAO,6BACPD,GAAG,sBACHnC,MAAM,0BACNwC,MAAM,WAER,kBAAC,EAAD,CACEJ,OAAO,2BACPD,GAAG,WACHnC,MAAM,wBACNwC,MAAM,SACND,WAAW,oCACXK,QAAS,WACPc,EC/BiC,CAAE/E,KRFpB,mBOoCnB,kBAAC,EAAD,CACEyD,OAAO,yBACPD,GAAG,gBACHnC,MAAM,sBACNwC,MAAM,YAGV,kBAACe,EAAA,EAAD,CAAMQ,MAAM,QAAQhB,OAAQ,CAAEiB,gBAAiB,UAAWb,QAAS,oCAAnE,oCAGA,kBAACN,EAAA,EAAD,CAAMe,IAAI,aACR,kBAAC,EAAD,CACExB,OAAO,wBACPD,GAAG,sBACHnC,MAAM,iBACNwC,MAAM,WAER,kBAAC,EAAD,CAAWJ,OAAO,qBAAqBD,GAAG,IAAInC,MAAM,mBAAmBwC,MAAM,WAC7E,kBAAC,EAAD,CACEJ,OAAO,2BACPD,GAAG,UACHnC,MAAM,0BACNwC,MAAM,c,4DEnCVyB,EAAwB,SAAC3F,GAE7B,OADA4F,QAAQ5F,MAAMA,GACP,CAAEK,KflB2B,2Be0BzBwF,EAAa,kBAAM,SAACT,GAC/B,OAAOU,IAAM,iBACVC,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACPuG,EAvBoB,SAACvG,GAAD,MAAwC,CAChEwB,KfVgC,qBeWhCC,QAASzB,GAqBImH,CAAkBnH,OAG5BoH,OAAM,SAACC,GACNd,EAASO,EAAsBO,S,QCvBtBC,EAXuB,SAAC,GAAD,IAAG7B,EAAH,EAAGA,QAAH,OACpC,kBAAC8B,EAAA,EAAD,CACEC,SAAO,EACPC,OAAK,EACLC,UAAQ,EACRC,QAAS,kBAAC,UAAD,CAASjB,KAAK,UAAUgB,UAAQ,IACzC9B,OAAQ,CAAEP,MAAO,MAAOC,OAAQ,OAChCG,QAASA,KCsHEmC,GAvHK,WAClB,IAAMrB,EAAWC,cADoB,EAEHqB,aAChC,SAACvG,GAAD,MAAY,CAAEjC,aAAciC,EAAMjC,aAAcC,QAASgC,EAAMhC,YADzDD,EAF6B,EAE7BA,aAAcC,EAFe,EAEfA,QAFe,EAMbwI,mBAAiB,IANJ,mBAM9BC,EAN8B,KAMxBC,EANwB,OAObF,mBAAiB,IAPJ,mBAO9BG,EAP8B,KAOxBC,EAPwB,OAQDJ,mBAAiB,IARhB,mBAQ9BK,EAR8B,KAQlBC,EARkB,KAcrC,OAJAC,qBAAU,WACR9B,EAASS,OACR,CAACT,IAGF,yBACEV,MAAO,CACLyC,QAAS,OACTC,SAAU,SACVC,eAAgB,gBAChBxC,QAAS,MACTV,OAAQ,SAGV,kBAACmD,EAAA,EAAD,CAAMC,QAAQ,IAAI9C,OAAQ,CAAEN,OAAQ,QACjChG,EAAQqJ,KAAI,SAACzI,EAAQ0I,GAAT,OACX,kBAAC,EAAD,CACE5E,IAAK4E,EACL5D,GAAE,+BAA0B9E,EAAO6H,MACnC7C,WAAW,kBACXC,SAAS,2BACTE,MAAM,SACNC,OAAO,SACPC,WAAY,CACVsD,eAAgB,MAChBC,mBAAoB,SACpBC,iBAAkB,aAEpBlG,MAAO3C,EAAO6H,WAIpB,kBAACiB,EAAA,EAAD,CACEpD,OAAQ,CAAEP,MAAO,MAAOC,OAAQ,MAAOU,QAAS,EAAGsC,QAAS,QAC5DW,KAAM5J,EACN6J,QACE,yBAAKrD,MAAO,CAAEsD,UAAW,aACvB,kBAAC,EAAD,CACE1D,QAAS,WACPc,EH3D6B,CAAE/E,KRFpB,oBWkEnBmG,QACE,yBACE9B,MAAO,CACLP,OAAQ,OACRgD,QAAS,OACTC,SAAU,SACVC,eAAgB,gBAChBY,WAAY,WAGd,kBAAChD,EAAA,EAAD,CAAMM,KAAK,SAASC,OAAO,YAA3B,cAGA,yBACEd,MAAO,CACLyC,QAAS,OACTC,SAAU,SACVjD,OAAQ,MACRkD,eAAgB,iBAGlB,kBAACa,EAAA,EAAD,CACEC,YAAY,OACZC,MAAOxB,EACPyB,SAAU,SAACC,EAAGC,GAAJ,OAAuB1B,EAAQ0B,EAASH,UAGpD,kBAACF,EAAA,EAAD,CACEC,YAAY,WACZC,MAAOtB,EACPuB,SAAU,SAACC,EAAGC,GAAJ,OAAuBxB,EAAQwB,EAASH,UAEpD,kBAACF,EAAA,EAAD,CACEC,YAAY,aACZC,MAAOpB,EACPqB,SAAU,SAACC,EAAGC,GAAJ,OAAuBtB,EAAcsB,EAASH,WAG5D,yBAAK1D,MAAO,CAAEyC,QAAS,OAAQE,eAAgB,eAAgBnD,MAAO,SACpE,kBAACkC,EAAA,EAAD,CACEC,SAAO,EACPG,QAAQ,SACRgC,SAAmB,KAAT5B,GAAwB,KAATE,GAA8B,KAAfE,EACxC1C,QAAS,WFjEC,IAACmE,EEkETrD,GFlESqD,EEkEW,CAAE7B,OAAME,OAAME,cFlEH,SAAC5B,GAChD,OAAOU,IAAM,gBAAiB,CAC5B4C,OAAQ,OACR7J,KAAM4J,IAEL1C,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACPuG,EAtBoB,SAACvG,GAAD,MAAsC,CAC9DwB,KfxBiC,sBeyBjCC,QAASzB,GAoBI8J,CAAkB9J,OAG5BoH,OAAM,SAACC,GACNd,EAASO,EAAsBO,UEyDnBW,EAAQ,IACRE,EAAQ,IACRE,EAAc,IACd7B,EH/G6B,CAAE/E,KRFrB,oBWoHd,kBAAC+F,EAAA,EAAD,CACEI,QAAQ,SACRlC,QAAS,WACPc,EHrH6B,CAAE/E,KRFrB,0BYwCbuI,GAvB+B,SAAC,GAAoD,IAAlDb,EAAiD,EAAjDA,QAASc,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,cAAetC,EAAc,EAAdA,QAAc,EACxEG,oBAAkB,GADsD,mBACzFmB,EADyF,KACnFiB,EADmF,KAEhG,OACE,kBAAClB,EAAA,EAAD,CACEE,QAASA,EACTtD,OAAQ,CAAEP,MAAO,OAAQW,QAAS,SAClCiD,KAAMA,EACNkB,OAAQ,kBAAYD,GAAQ,IAC5BE,OACE,kBAAC1E,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,kBAACL,EAAA,EAAD,CAAMM,KAAK,QAAQL,MAAM,UACtBsB,GAEH,kBAACjC,EAAA,EAAD,CAAM2E,MAAM,UACV,kBAAC9C,EAAA,EAAD,CAAQC,SAAO,EAACG,QAAQ,UAAU/B,OAAQqE,EAAexE,QAASuE,IAClE,kBAACzC,EAAA,EAAD,CAAQI,QAAQ,SAASlC,QAAS,kBAAYyE,GAAQ,WC4BnDnF,mBA/CqC,SAAC,GAAmC,IAAjC9E,EAAgC,EAAhCA,GAAI8H,EAA4B,EAA5BA,KAAME,EAAsB,EAAtBA,KAAMqC,EAAgB,EAAhBA,UAC/D/D,EAAWC,cAEjB,OACE,kBAACd,EAAA,EAAD,CAAME,OAAQ,CAAEI,QAAS,WAAaL,QAAM,EAAC0E,MAAM,WACjD,kBAAC5B,EAAA,EAAD,CAAMC,QAAQ,IAAI9C,OAAQ,CAAEa,IAAK,QAC/B,kBAACL,EAAA,EAAD,CAAMM,KAAK,SAASC,OAAO,YAA3B,WAGA,kBAAC,EAAD,CAAWzB,WAAW,2BAA2BG,MAAM,QAAQC,OAAO,UACtE,kBAACI,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,kBAACL,EAAA,EAAD,CAAMM,KAAK,QAAQiB,QAAS,UAC5B,kBAACvB,EAAA,EAAD,CAAMM,KAAK,QAAQiB,QAAS,cAC5B,kBAACvB,EAAA,EAAD,CAAMM,KAAK,QAAQiB,QAAS,YAE9B,kBAACjC,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,cACf,kBAACL,EAAA,EAAD,CAAMM,KAAK,QAAQiB,QAASI,IAC5B,kBAAC3B,EAAA,EAAD,CAAMM,KAAK,QAAQiB,QAASM,IAC5B,kBAAC7B,EAAA,EAAD,CAAMM,KAAK,QAAQiB,QAAS2C,MAGhC,kBAAC,GAAD,CACEpB,QACE,kBAAC3B,EAAA,EAAD,CACEC,SAAO,EACPG,QAAQ,gBACR/B,OAAQ,CACNiB,gBAAiB,UACjB,SAAU,CAAEA,gBAAiB,WAC7B,UAAW,CAAEA,gBAAiB,cAIpCc,QAAQ,gBACRsC,cAAe,CACbpD,gBAAiB,UACjB,SAAU,CAAEA,gBAAiB,WAC7B,UAAW,CAAEA,gBAAiB,YAEhCmD,UAAW,WACTzD,EJIkB,SAACtG,GAAD,OAAgB,SAACsG,GAC3C,OAAOU,IAAM,gBAAD,OAAiBhH,EAAjB,KAAwB,CAClC4J,OAAQ,WAEP3C,MAAK,WACJX,EA7CsB,SAACtG,GAAD,MAAsC,CAChEuB,KfbmC,wBecnCC,QAAS,CAAExB,OA2CEsK,CAAoBtK,OAG9BmH,OAAM,SAACC,GACNd,EAASO,EAAsBO,QIblBmD,CAAavK,W,8BCpDnBwK,GAAc,SAACC,EAAUC,GACpC,IAAMC,EAAgBC,iBAAO,MAE7BxC,qBAAU,WACRuC,EAAcE,QAAUJ,IACvB,CAACA,IAEJrC,qBAAU,WAIR,GAAc,OAAVsC,EAAgB,CAClB,IAAM1K,EAAK8K,aAJb,WACEH,EAAcE,YAGeH,GAC7B,OAAO,kBAAYK,cAAc/K,OAElC,CAAC0K,KCuCAM,GAAwB,SAAC7J,EAAqBmC,GAAtB,MAA0E,CACtG/B,K1BesC,2B0BdtCC,QAAS,CACPL,cACAmC,eA2DS2H,GAAkB,kBAAoB,SAAC3E,GAGlD,OAFAA,EAxEwD,CAAE/E,K1BAzB,wB0B0E1B2J,IAAMC,IAAI,kBACdlE,MAAK,YAAe,IAAD,oCAAXlH,EAAW,EAAXA,KACDF,EAAuB,CAC3BG,GAAE,oBAAED,EAAK,UAAP,aAAE,EAASC,UAAX,QAAiB,KACnBC,OAAM,UAAEmL,SAAQ,UAACrL,EAAK,UAAN,aAAC,EAASE,OAAOoL,MAAM,KAAK,GAAI,WAA1C,QAAiD,KACvDnL,SAAQ,UAAEkL,SAAQ,UAACrL,EAAK,UAAN,aAAC,EAASG,SAASmL,MAAM,KAAK,GAAI,WAA5C,QAAmD,KAC3DlL,MAAK,oBAAEJ,EAAK,UAAP,aAAE,EAASI,MAAMuI,KAAI,SAAC4C,GAAD,OAASF,SAASE,EAAID,MAAM,KAAK,GAAI,cAA1D,QAAkE,GACvE7K,SAAQ,oBAAET,EAAK,UAAP,aAAE,EAASwL,oBAAX,QAA2B,GACnCnL,eAAc,oBAAEL,EAAK,UAAP,aAAE,EAASK,sBAAX,SACdC,iBAAgB,oBAAEN,EAAK,UAAP,aAAE,EAASM,wBAAX,QAA+B,GAC/CC,iBAAgB,oBAAEP,EAAK,UAAP,aAAE,EAASO,wBAAX,QAA+B,GAC/CC,UAAS,oBAAER,EAAK,UAAP,aAAE,EAASQ,iBAAX,QAAwB,IAEnC+F,EAtFoB,SAACzG,GAAD,MAAoD,CAC5E0B,K1BGiC,sB0BFjCC,QAAS,CAAE3B,YAoFE2L,CAAkB3L,OAG5BsH,OAAM,SAACC,GACNd,EAtF8D,CAAE/E,K1BQpC,qB0BR8DL,MAsFhEkG,SA0C1BqE,GAAW,SAACC,GAChBR,IAAMC,IAAN,wBAA2BO,EAA3B,WAA8CvE,OAAM,SAACC,GAAD,OAASN,QAAQ5F,MAAMkG,OAchEuE,GAAsB,SAACD,GAAD,OAAuB,SAACpF,GAGzD,OAFAA,EA9I+D,CAAE/E,K1BY3B,6B0BoI/B2J,IAAMC,IAAN,wBAA2BO,EAA3B,YACJzE,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACP,GAAoB,WAAhBA,EAAKiB,OAAqB,MAAM,IAAI4K,MAAM7L,EAAK8L,KAC1B,OAAhB9L,EAAKiB,OAAiBsF,EAAS0E,GAAsB,GAAInM,EAAOiN,iBACpExF,EAAS0E,GAAsBjL,EAAK8L,IAAKhN,EAAOkN,kBAGtD5E,OAAM,SAACC,GAAD,OAASd,EA/I2D,CAC7E/E,K1BiBqC,0B0BhBrCL,MA6ImDkG,SCzMxC4E,GAAW,WAAc,IAAD,EACTnE,mBAAS,IADA,mBAC5B1H,EAD4B,KACrB8L,EADqB,KAenC,OAZA7D,qBAAU,WACR8D,MAAM,eACHjF,MAAK,SAACkF,GAAD,OAASA,EAAIC,UAClBnF,MAAK,SAAClH,GACLkM,EAASlM,MAGVoH,OAAM,SAACC,GACNN,QAAQ5F,MAAMkG,QAEjB,IAEIjH,GCfIkM,GAAW,WACtB,OAAO,IAAIC,gBAAgBC,cAAcC,S,2FCCrCC,GAA2B,CAC/BvK,WAAOwK,EACP1L,OAAQ,UACRyF,KAAM,CAAErB,MAAO,EAAGC,OAAQ,IAwDbsH,GA7CE,SAACC,EAAaC,GAAwF,IAAD,EAChFhF,mBAAqB4E,IAD2D,mBAC7GK,EAD6G,KACjGC,EADiG,KAE5G7K,EAAwB4K,EAAxB5K,MAAOlB,EAAiB8L,EAAjB9L,OAAQyF,EAASqG,EAATrG,KAEjBuG,EAZY,SAAI1D,GACtB,IAAM2D,EAAMrC,mBAIZ,OAHAxC,qBAAU,WACR6E,EAAIpC,QAAUvB,IACb,CAACA,IACG2D,EAAIpC,QAOKqC,CAAoBN,GAsCpC,OApCAxE,qBAAU,WACR,GAAKwE,EAAL,CAEA,IAAMO,EAAMC,SAASC,cAAc,OAE/BT,IAAQI,GACVD,GAAc,SAACO,GAAD,sBAAgBA,EAAhB,CAAsBpL,MAAOoL,EAAKpL,MAAOlB,OAAQ,eAGjE,IAAMuM,EAAS,WACbR,EAAc,CACZ7K,MAAOiL,EACPnM,OAAQ,SACRyF,KAAM,CAAErB,MAAO+H,EAAI/H,MAAOC,OAAQ8H,EAAI9H,WAIpCmI,EAAU,WACdT,GAAc,SAACO,GAAD,sBAAgBA,EAAhB,CAAsBpL,WAAOwK,EAAW1L,OAAQ,eAShE,OANAmM,EAAIM,iBAAiB,OAAQF,GAC7BJ,EAAIM,iBAAiB,QAASD,GAC1BX,IAAaM,EAAIN,YAAcA,GAEnCM,EAAIrH,IAAM8G,EAEH,WACLO,EAAIO,oBAAoB,OAAQH,GAChCJ,EAAIO,oBAAoB,QAASF,OAElC,CAACZ,EAAKC,EAAaG,IAKf,CAAC9K,EAAOlB,EAAQyF,ICvDZkH,GAAyC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAChEC,EAASnD,iBAAuB,MAChCoD,EAAWpD,iBAAO,MAClBqD,EAASrD,iBAAO,MAChBsD,EAAWtD,iBAAO,MAJ4D,EAMnB+B,GAAS,UAAD,OAC7DwB,OAAOjO,SAASkO,SAD6C,gCAEvE,IARkF,mBAM7EC,EAN6E,KAMrErN,EANqE,YAMpDsN,EANoD,EAM3DlJ,MAAyBmJ,EANkC,EAM1ClJ,OAqC1C,OA5BA+C,qBAAU,WACR,IAAMoG,EAAO,IAAIC,KAAMC,WAAU,cAAUR,EAASrD,SAGpD,OAFA2D,EAAKG,QAEE,WACLH,EAAKI,UAEN,IAEHxG,qBAAU,WAAO,IAAD,EACiC2F,EAAOlD,QAAQgE,wBAA/CC,EADD,EACN1J,MAAyB2J,EADnB,EACW1J,OACzB2I,EAASnD,QAAQzF,MAAM0J,GACvBd,EAASnD,QAAQxF,OAAO0J,KACvB,IAGH3G,qBAAU,WACR,GAAiB,IAAbkG,GAAgC,IAAdC,EAAiB,CAAC,IAAD,EACcP,EAASnD,QAAQpE,OAArDuI,EADsB,EAC7B5J,MAA2B6J,EADE,EACV5J,OACrB6J,EAAQC,KAAKC,IAAIJ,EAAaV,EAAUW,EAAcV,GAC5DL,EAASrD,QAAQqE,MAAM,CAAEG,EAAGH,EAAOI,EAAGJ,IAEtC,IAAMK,GAAWP,EAAaV,EAAWY,GAAS,EAC5CM,GAAWP,EAAcV,EAAYW,GAAS,EACpDhB,EAASrD,QAAQ4E,SAAS,CAAEJ,EAAGE,EAASD,EAAGE,OAE5C,CAACjB,EAAWD,IAGb,yBAAKrB,IAAKc,EAAQnI,MAAO,CAAER,MAAO,OAAQC,OAAQ,SAChD,kBAAC,SAAD,CAAO4H,IAAKe,GACV,kBAAC,SAAD,CAAOf,IAAKiB,GACV,kBAAC,SAAD,CAAYhM,MAAOmM,EAAQpB,IAAKgB,IAGnB,WAAXjN,GACE,kBAAC,GAAD,CACEsN,SAAUA,EACVC,UAAWA,EACXX,KAAMA,EACNC,QAASA,EACTC,QAASA,QAUnB4B,GAAoC,SAAC,GAAkE,IAAhEpB,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,UAAWX,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,QAC/E,OACE,oCACE,kBAAC,GAAD,CAAM1I,MAAOkJ,EAAUjJ,OAAQkJ,EAAWoB,MAAO/B,EAAME,QAASA,IAC/DF,EAAKlF,KAAI,SAAC9G,EAAG+G,GAAJ,OACR,kBAAC,GAAD,CACE5E,IAAK4E,EACLiH,IAAKhO,EACLkM,QAASA,EACT+B,SAAU,CAAEhN,GAAI,EAAGE,GAAI,EAAGD,GAAIwL,EAAUtL,GAAIuL,GAC5CuB,YAAa,SAACC,GAAD,OACXlC,GAAQ,SAACP,GACP,IAAM0C,EAASD,EAAUzC,EAAK3E,IAC9B,GAAIqH,EAAOnN,GAAKmN,EAAOlN,GAAI,CACzB,IAAMmN,EAAMD,EAAOnN,GACnBmN,EAAOnN,GAAKmN,EAAOlN,GACnBkN,EAAOlN,GAAKmN,EAGd,GAAID,EAAOjN,GAAKiN,EAAOhN,GAAI,CACzB,IAAMiN,EAAMD,EAAOjN,GACnBiN,EAAOjN,GAAKiN,EAAOhN,GACnBgN,EAAOhN,GAAKiN,EAGd,IAAMC,EAAO,YAAO5C,GAEpB,OADA4C,EAAQvH,GAAKqH,EACNE,aASfC,GAA4B,SAAC,GAAuC,IAArC/K,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,OAAQsK,EAAqB,EAArBA,MAAO7B,EAAc,EAAdA,QACzD,OACE,kBAAC,SAAD,CACE1I,MAAOA,EACPC,OAAQA,EACR+K,KAAM,kBACNtC,QAASA,EACTuC,UAAW,SAACC,EAAKC,GACfD,EAAIE,YACJF,EAAIG,OAAO,EAAG,GACdH,EAAII,OAAOH,EAAMnL,QAAS,GAC1BkL,EAAII,OAAOH,EAAMnL,QAASmL,EAAMlL,UAChCiL,EAAII,OAAO,EAAGH,EAAMlL,UACpBiL,EAAII,OAAO,EAAG,GAGdf,EAAMgB,SAAQ,YAAyB,IAAtB9N,EAAqB,EAArBA,GAAIE,EAAiB,EAAjBA,GAAID,EAAa,EAAbA,GAAIE,EAAS,EAATA,GAC3BsN,EAAIG,OAAO5N,EAAIE,GACfuN,EAAII,OAAO7N,EAAIG,GACfsN,EAAII,OAAO5N,EAAIE,GACfsN,EAAII,OAAO5N,EAAIC,GACfuN,EAAII,OAAO7N,EAAIE,MAGjBuN,EAAIM,gBAAgBL,IAEtBM,WAAW,KAKXC,GAAgC,SAAC,GAA6C,IAA3ClB,EAA0C,EAA1CA,IAAKE,EAAqC,EAArCA,YAAahC,EAAwB,EAAxBA,QAAS+B,EAAe,EAAfA,SAC1DhN,EAAmB+M,EAAnB/M,GAAIE,EAAe6M,EAAf7M,GAAID,EAAW8M,EAAX9M,GAAIE,EAAO4M,EAAP5M,GAId+N,EAAa,SAACnP,GAA0C,IAAD,EAC5CA,EAAEoP,OAAOvB,WAAlBJ,EADqD,EACrDA,EAAGC,EADkD,EAClDA,EAsBT,OApBID,EAAIQ,EAAShN,KACfwM,EAAIQ,EAAShN,GACbjB,EAAEoP,OAAO3B,EAAEA,IAGTA,EAAIQ,EAAS/M,KACfuM,EAAIQ,EAAS/M,GACblB,EAAEoP,OAAO3B,EAAEA,IAGTC,EAAIO,EAAS9M,KACfuM,EAAIO,EAAS9M,GACbnB,EAAEoP,OAAO1B,EAAEA,IAGTA,EAAIO,EAAS7M,KACfsM,EAAIO,EAAS7M,GACbpB,EAAEoP,OAAO1B,EAAEA,IAGL1N,EAAEoP,OAAOlJ,QACf,IAAK,UACHgI,GAAY,SAACxC,GAAD,sBAAgBA,EAAhB,CAAsBzK,GAAIwM,EAAGtM,GAAIuM,OAC7C,MACF,IAAK,WACHQ,GAAY,SAACxC,GAAD,sBAAgBA,EAAhB,CAAsBxK,GAAIuM,EAAGtM,GAAIuM,OAC7C,MACF,IAAK,cACHQ,GAAY,SAACxC,GAAD,sBAAgBA,EAAhB,CAAsBxK,GAAIuM,EAAGrM,GAAIsM,OAC7C,MACF,IAAK,aACHQ,GAAY,SAACxC,GAAD,sBAAgBA,EAAhB,CAAsBzK,GAAIwM,EAAGrM,GAAIsM,SAOnD,OACE,kBAAC,SAAD,CAAOxB,QAASA,GACd,kBAAC,QAAD,CAAMmD,OAAQ,CAACpO,EAAIE,EAAIF,EAAIG,EAAIF,EAAIE,EAAIF,EAAIC,GAAKmO,QAAM,EAACC,OA9C7C,QA8C4DC,YAAa,KACnF,kBAAC,UAAD,CAAQC,WAAS,EAACvJ,KAAK,UAAUuH,EAAGxM,EAAIyM,EAAGvM,EAAIuO,OA9CpC,GA8CoDlB,KA/CrD,QA+CkEmB,WAAYR,IACxF,kBAAC,UAAD,CAAQM,WAAS,EAACvJ,KAAK,WAAWuH,EAAGvM,EAAIwM,EAAGvM,EAAIuO,OA/CrC,GA+CqDlB,KAhDtD,QAgDmEmB,WAAYR,IACzF,kBAAC,UAAD,CACEM,WAAS,EACTvJ,KAAK,cACLuH,EAAGvM,EACHwM,EAAGtM,EACHsO,OArDS,GAsDTlB,KAvDQ,QAwDRmB,WAAYR,IAEd,kBAAC,UAAD,CACEM,WAAS,EACTvJ,KAAK,aACLuH,EAAGxM,EACHyM,EAAGtM,EACHsO,OA9DS,GA+DTlB,KAhEQ,QAiERmB,WAAYR,MCxMPS,GAIR,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAAe,EAClB9J,mBAAS6J,EAAeE,QADN,mBACzCC,EADyC,KAChCC,EADgC,KAE1CC,EAAmBnH,iBAAO8G,EAAe9D,MAFC,EAGxB/F,mBAAgBkK,EAAiBlH,SAHT,mBAGzC+C,EAHyC,KAGnCC,EAHmC,OAIQhG,oBAAS,GAJjB,mBAIzCmK,EAJyC,KAInBC,EAJmB,OAKlBpK,oBAAS,GALS,mBAKzCqK,EALyC,KAKhCC,EALgC,OAMtBtK,mBAAgB,MANM,mBAMzC3G,EANyC,KAMlCkR,EANkC,KAQ1CC,EAAe,yCAAG,uBAAAC,EAAA,6DACtBR,GAAYD,GACZM,GAAW,GAFW,kBAIdjH,IAAMqH,MAAN,uBAA4BZ,EAA5B,KAAyC,CAC7Ca,KAAMC,KAAKC,UAAU,CACnBd,QAASC,EACTjE,KAAMmE,EAAiBlH,YAPP,OAUpBoH,GAAwB,GACnBJ,GAAShE,EAAQkE,EAAiBlH,SAXnB,gDAcpBiH,EAAWD,GACXO,EAAS,EAAD,IAfY,QAiBtBD,GAAW,GAjBW,yDAAH,qDAoBfQ,EAAQ,yCAAG,uBAAAL,EAAA,6DACfH,GAAW,GADI,kBAGPjH,IAAMqH,MAAN,uBAA4BZ,EAA5B,KAAyC,CAC7Ca,KAAMC,KAAKC,UAAU,CACnBd,OAAQC,EACRjE,WANS,OASbqE,GAAwB,GACxBF,EAAiBlH,QAAU+H,KAAQhF,GAVtB,gDAYbwE,EAAS,EAAD,IAZK,QAcfD,GAAW,GAdI,yDAAH,qDAiBd/J,qBAAU,WACR,GAAI4J,EAAsB,CACxB,IAAMa,EAAQC,YAAW,WACvBb,GAAwB,KACvB,KACH,OAAO,kBAAYc,aAAaF,OAEjC,CAACb,IAEJ,IAAMgB,GAAWJ,KAASb,EAAiBlH,QAAS+C,GAC9CqF,GAAqBpB,IAAYmB,EAEvC,OACE,kBAACvN,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,cACf,kBAACL,EAAA,EAAD,CAAMR,OAAQ,CAAEP,MAAO,SAAWqB,KAAK,SAAvC,cAGCvF,GAAS,kBAACgS,GAAA,EAAD,CAAOC,QAAM,EAACC,OAAO,oBAAoB1L,QAAO,UAAKxG,EAAM4G,KAAX,aAAoB5G,EAAMmS,WACpF,kBAAC5N,EAAA,EAAD,CAAM6N,OAAO,MAAM9M,IAAI,YAAY+M,OAAO,UACxC,kBAACC,GAAA,EAAD,CACEC,cAAc,QACd7Q,MAAM,wBACN8Q,QAAM,EACNC,QAAS9B,EACTrM,QAAS6M,IAEX,kBAAC/K,EAAA,EAAD,CAAQI,QAAQ,SAASH,SAAO,EAACmC,SAAUuJ,EAAmBzN,QAASmN,EAAUT,QAASA,IAC1F,kBAAC/L,EAAA,EAAD,CAAMR,OAAQ,CAAEiO,WAAY5B,EAAuB,UAAY,WAA/D,aAEF,yBAAKpM,MAAO,CAAER,MAAO,OAAQC,OAAQ,QAASuB,gBAAiB,UAC5D6K,EAAY,kBAAC,GAAD,CAAe7D,KAAMA,EAAMC,QAASA,EAASC,QAAS+D,IAAc,QCpE5EgC,GAAsE,SAAC,GAAyB,IAAD,YAAtBnI,EAAsB,EAAtBA,UAAWkC,EAAW,EAAXA,KAAW,EACjBhG,aAGvF,SAACvG,GAAD,OAAWA,EAAMxB,WAHXqB,EADkG,EAClGA,MAAarB,EADqF,EAC3FE,KAAeoB,EAD4E,EAC5EA,YAAaH,EAD+D,EAC/DA,OAAQP,EADuD,EACvDA,gBAAiBG,EADsC,EACtCA,iBAI9DkT,EAAiBC,GAAkB5S,GACnChB,EAAQ6L,KACR1F,EAAWC,cACXyN,EAAa3H,KAAWlB,IAAI,QAC5B8I,EAAUC,cAEVC,EAAoBC,uBAAY,WAEjBC,QAAQ,+BAEX/N,ENuJc,SAACoF,GAAD,OAA6B,SAACpF,GAC9D,OAAO4E,IAAMoJ,OAAN,wBAA8B5I,EAA9B,MACJzE,MAAK,WACJ,OAAOX,EApHmD,CAAE/E,K1BwE5B,8B0B8CjC4F,OAAM,SAACC,GACNmN,MAAMnN,GACNd,EAvHwD,CAAE/E,K1B4E3B,8BgCnHRiT,CAAmB9I,IAEzCzE,MAAK,SAAClH,GACL,GAAIA,EAAM,OAAOkU,EAAQ3R,KAAR,+BAAqC0R,OAGvD7M,OAAM,SAACC,GAAD,OAASN,QAAQ5F,MAAMkG,QAC/B,CAACd,EAAU2N,EAASD,EAAYtI,IAEnCtD,qBAAU,WACR9B,EAASqF,GAAoBD,MAC5B,CAACpF,EAAUoF,IACdlB,IACE,WACElE,EAASqF,GAAoBD,MAE/B1K,IAAWyT,EAAmB1I,aAAe,IAAO,MAGtD3D,qBAAU,WACJpH,IAAWyT,EAAmB3I,gBAChCxF,EN0JiC,SAACoF,GAAD,OAAuB,SAACgJ,GAG7D,OAFAA,EAvIwE,CACxEnT,K1BW0C,iC0B6HnC2J,IAAMC,IAAN,wBAA2BO,EAA3B,uBACJzE,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACDY,EAA8BZ,EAAK4U,IACrC,CACEC,UAAW7U,EAAK4U,IAAIC,UACpBC,OAAQ9U,EAAK4U,IAAIE,OACjBC,IAAK/U,EAAK4U,IAAIjM,KAEhB,KAEEhI,EAA+BX,EAAKgV,SACtC,CACEH,UAAW7U,EAAKgV,SAASH,UACzBC,OAAQ9U,EAAKgV,SAASF,OACtBC,IAAK/U,EAAKgV,SAASrM,KAErB,KAEJ,OAAOgM,EAxJqB,SAChC/T,EACAD,GAFgC,MAGK,CACrCa,K1BU0C,+B0BT1CC,QAAS,CAAEd,kBAAiBC,mBAmJRqU,CAA0BrU,EAAgBD,OAE3DyG,OAAM,SAACC,GAAD,OAASsN,EAnJgE,CAClFnT,K1BeyC,8B0BdzCL,MAiJoDkG,QMjLvC6N,CAAwBvJ,MAElC,CAACpF,EAAUtF,EAAQ0K,IAEtBlB,IACE,WACElE,EN8KkC,SAACoF,GAAD,OAAuB,SAACpF,GAG9D,OAFAA,EAlJ0E,CAC1E/E,K1BgB2C,mC0BmIpC2J,IAAMC,IAAN,wBAA2BO,EAA3B,YACJzE,MAAK,YAAe,IAjJvBpG,EACAC,EACAC,EA+IWhB,EAAW,EAAXA,KACP,OAAOuG,GAlJXzF,EAmJiCd,EAAKmV,aAlJtCpU,EAkJoDf,EAAKoV,cAjJzDpU,EAiJwEhB,EAAKqV,iBAhJvC,CACtC7T,K1Bc2C,gC0Bb3CC,QAAS,CAAEX,cAAaC,uBAAsBC,0BAiJ3CoG,OAAM,SAACC,GAAD,OAASd,EA/IkE,CACpF/E,K1BoB0C,+B0BnB1CL,MA6IqDkG,QMvLxCiO,CAAyB3J,MAEpC1K,IAAWyT,EAAmBjR,eAAiB,IAAO,MAGxD,IAAM8R,EAAiB,CAACb,EAAmB3I,eAAgB2I,EAAmBjR,gBAAgB+R,SAC5FvU,GAGF,OACE,kBAACyE,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,6CACCtF,GAAS,kBAACgS,GAAA,EAAD,CAAOC,QAAM,EAACC,OAAQlS,EAAM4G,KAAMJ,QAAO,UAAKxG,EAAMmS,WAC7DrS,IAAWyT,EAAmB1I,aAC7B,oCACE,kBAACyJ,GAAA,EAAD,CAAQ/O,KAAK,aACb,6BAAMqN,IAGR,oCACE,kBAAC,GAAD,CAAU2B,MAAM,UACd,kBAAC,GAAD,CAAcC,OAAQJ,KAExB,kBAAC,GAAD,CAAUG,MAAM,kBACbtV,EACE8B,QAAO,SAACL,GAAD,OAAO/B,EAAQM,MAAMoV,SAAS3T,EAAE5B,OACvC0I,KAAI,SAAC9G,GAAD,OAAOA,EAAEkG,QACb6N,KAAK,OAEV,kBAAClQ,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,kBAAC,GAAD,CAAmBiL,WAAW,EAAMC,eAAgB9D,EAAM+D,SAAU9R,EAAQI,UAE9E,kBAAC,GAAD,CAAUwV,MAAM,gBACd,kBAACtP,EAAA,EAAD,CAAMR,OAAQ,CAAEgB,MAAO,oBAAqBiP,WAAY,QAAUnP,KAAK,SAAvE,UACM7F,EAAiBC,YADvB,OAIF,kBAAC,GAAD,CAAU4U,MAAM,yBAAyB7U,EAAiBE,sBAC1D,kBAAC,GAAD,CAAU2U,MAAM,sBACd,kBAACtP,EAAA,EAAD,CAAMR,OAAQ,CAAEkQ,OAAQ,OAASpP,KAAK,SACnC7F,EAAiBG,kBAEpB,kBAACuG,EAAA,EAAD,CACEI,QAAQ,oBACRH,SAAO,EACP5B,OAAQ,CACNiB,gBAAiB,MACjBkP,WAAY,QACZ,SAAU,CACRlP,gBAAiB,WAEnB,UAAW,CACTA,gBAAiB,YAGrBmP,GAAIC,IACJjR,GAAG,aAGNtE,EAAgBC,iBACf,oCACE,kBAACyF,EAAA,EAAD,+BACA,kBAAC,GAAD,CACEyO,UAAS,UAAEnU,EAAgBC,uBAAlB,aAAE,EAAiCkU,UAC5CC,OAAM,UAAEpU,EAAgBC,uBAAlB,aAAE,EAAiCmU,OACzCC,IAAG,UAAErU,EAAgBC,uBAAlB,aAAE,EAAiCoU,OAI5C,kBAAC3O,EAAA,EAAD,8BACA,kBAAC,GAAD,CACEyO,UAAS,UAAEnU,EAAgBE,sBAAlB,aAAE,EAAgCiU,UAC3CC,OAAM,UAAEpU,EAAgBE,sBAAlB,aAAE,EAAgCkU,OACxCC,IAAG,UAAErU,EAAgBE,sBAAlB,aAAE,EAAgCmU,MAEvC,kBAACxN,EAAA,EAAD,CAAQC,SAAO,EAAC/B,QAAS2O,GAAzB,wBAGA,kBAAC7M,EAAA,EAAD,CAAQC,SAAO,EAACwO,GAAIC,IAAMjR,GAAG,uBAA7B,yBAaJgP,GAAoB,SAAC5S,GAAiC,IAAD,EAC3B0G,mBAAS1G,GADkB,mBAClD8U,EADkD,KACzCC,EADyC,KAKzD,OAHA9N,qBAAU,WACR8N,GAAW,SAAC5I,GAAD,gBAAaA,EAAb,aAAsBnM,QAChC,CAACA,IACG8U,GAQHE,GAAsD,SAAC,GAAgC,IAA9BvB,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IAChF,OACE,kBAACtM,EAAA,EAAD,CAAMC,QAAS,GACb,yBAAK7C,MAAO,CAAEP,OAAQ,MAAOgD,QAAS,OAAQC,SAAU,SAAUC,eAAgB,kBAChF,kBAACpC,EAAA,EAAD,CAAMC,MAAM,SAASK,KAAK,QAAQC,OAAO,YAAzC,YAGA,kBAACP,EAAA,EAAD,CAAMC,MAAM,SAASK,KAAK,QAAQC,OAAO,WAAWf,OAAQ,CAAEgB,MAAO,YACpD,OAAdiO,EAAqB,GAArB,WAA2C,IAAZA,EAAoB,GAAK,GAAxD,OAGL,yBAAKhP,MAAO,CAAEP,OAAQ,MAAOgD,QAAS,OAAQC,SAAU,SAAUC,eAAgB,kBAChF,kBAACpC,EAAA,EAAD,CAAMC,MAAM,SAASK,KAAK,QAAQC,OAAO,YAAzC,UAGA,kBAACP,EAAA,EAAD,CAAMC,MAAM,SAASK,KAAK,QAAQC,OAAO,WAAWf,OAAQ,CAAEgB,MAAO,YACvD,OAAXkO,EAAkB,GAAlB,WAAqC,IAATA,EAAiB,GAAK,GAAlD,OAGL,yBAAKjP,MAAO,CAAEP,OAAQ,MAAOgD,QAAS,OAAQC,SAAU,SAAUC,eAAgB,kBAChF,kBAACpC,EAAA,EAAD,CAAMC,MAAM,SAASK,KAAK,QAAQC,OAAO,YAAzC,OAGA,kBAACP,EAAA,EAAD,CAAMC,MAAM,SAASK,KAAK,QAAQC,OAAO,WAAWf,OAAQ,CAAEgB,MAAO,YAC1D,OAARmO,EAAe,GAAf,WAA+B,IAANA,EAAc,GAAK,GAA5C,SAOLsB,GAAW,SAAC,GAAsC,IAApCX,EAAmC,EAAnCA,MAAOY,EAA4B,EAA5BA,SACzB,OACE,kBAAC5Q,EAAA,EAAD,CAAM8N,OAAO,UACX,kBAACpN,EAAA,EAAD,CAAMP,MAAO,CAAER,MAAO,SAAWqB,KAAK,SAAtC,UAAkDgP,EAAlD,OACqB,kBAAbY,GAA6C,kBAAbA,EACtC,kBAAClQ,EAAA,EAAD,CAAMM,KAAK,SAAS4P,GAEpBA,IAMFC,GAAe,SAAC,GAA6B,IAA3BZ,EAA0B,EAA1BA,OAChBa,EAAOb,EAAS,SAAW,UAC3BrU,EAAQqU,EAAS,UAAY,UAEnC,OACE,kBAACjQ,EAAA,EAAD,CAAMe,IAAI,cAAc+M,OAAO,UAC7B,kBAAC,KAAD,CAAQlS,MAAOA,IACf,kBAAC8E,EAAA,EAAD,CAAMR,OAAQ,CAAEkQ,OAAQ,OAASpP,KAAK,SACnC8P,KCrNIC,GAA+B,WAC1C,OACE,yBAAK5Q,MAAO,CAAEP,OAAQ,SACpB,6CACA,kBAACI,EAAA,EAAD,CAAM6N,OAAO,SAASC,OAAO,SAASkD,OAAQ,CAAEpR,OAAQ,QAAUK,QAAM,EAACc,IAAI,aAC3E,kBAACc,EAAA,EAAD,CACEE,OAAK,EACLC,UAAQ,EACRC,QAAS,kBAAC,UAAD,CAASjB,KAAK,UAAUgB,UAAQ,EAACd,MAAM,UAChDf,MAAO,CAAER,MAAO,IAAKC,OAAQ,IAAKqR,OAAQ,qBAC1C/P,MAAM,QACNoP,GAAIC,IACJjR,GAAG,wBAEL,gECqBO4R,GAzBW,WACxB,IAAMC,EAAoBhP,aAA2B,SAACvG,GAAD,OAAWA,EAAMxB,QAAQE,KAAKE,UAC7EyL,EAAY9D,aAA2B,SAACvG,GAAD,OAAWA,EAAMxB,QAAQE,KAAKC,MACrEsG,EAAWC,cACXuB,EAAOuE,KAAWlB,IAAI,QACtBlL,EAAS2H,aAA2B,SAACvG,GAAD,OAAWA,EAAMhC,QAAQwX,MAAK,SAACvL,GAAD,OAASA,EAAIxD,OAASA,QAO9F,GALAM,qBAAU,WACR9B,EAAS2E,MACT3E,EAASS,OACR,CAACT,KAECrG,EAAQ,OAAO,kBAAC,IAAD,CAAU8E,GAAG,aAEjC,IAAM+R,EAAaF,IAAsB3W,EAAOD,GAC1C+W,EAAUC,GAAW/W,EAAOuS,MAElC,OACE,kBAAChK,EAAA,EAAD,CAAMC,QAAQ,IAAIgO,OAAQ,CAAEpR,OAAQ,SAClC,kBAAC,GAAD,CAAkBrF,GAAIC,EAAOD,GAAI8H,KAAMA,EAAME,KAAM/H,EAAO+H,KAAMqC,UAAWpK,EAAOiI,aACjF4O,EAAa,kBAAC,GAAD,CAAqBpL,UAAWA,EAAWkC,KAAMmJ,IAAc,kBAAC,GAAD,QAO7EC,GAAa,SAACC,GAClB,IACE,OAAOxE,KAAKyE,MAAMD,GAClB,MAAOrV,GACP,MAAO,CACLgQ,QAAQ,EACRhE,KAAM,CAAC,CAAE/K,GAAI,GAAIE,GAAI,GAAID,GAAI,IAAKE,GAAI,S,8BC/B7BmU,GAdgB,SAACC,GAAD,OAAyB,SAAC3Q,GACvD,GAAmB,IAAfA,EAAKrB,MAAa,CACpB,GAAIqB,EAAKrB,MAAQqB,EAAKpB,OAAQ,CAC5B,IAAMgS,EAASD,EAAYhS,MAAQqB,EAAKrB,MAExC,MAAO,CAAC,CAAEA,MAAOgS,EAAYhS,MAAOC,OAAQoB,EAAKpB,OAASgS,GAAUA,GAEtE,IAAMC,EAASF,EAAY/R,OAASoB,EAAKpB,OAEzC,MAAO,CAAC,CAAEA,OAAQ+R,EAAY/R,OAAQD,MAAOqB,EAAKrB,MAAQkS,GAAUA,GAEtE,MAAO,CAACF,EAAa,K,UCMVG,GAA4B,SAACxX,GAAD,MAAyD,CAChGwB,KlCjBwC,6BkCkBxCC,QAAS,CAAE/B,YAAaM,KAmDbyX,GAAoB,CAC/BC,KAD+B,WAE7B,MAAO,CACL7U,MAAO,CAAEC,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAClC0U,UAAW,GACXhV,gBAAiB3D,EAAgB4Y,QAGrCC,gBAR+B,SAQfC,EAAeH,GAC7B,IAAMI,EAAG,eACJC,KAAKN,OADD,CAEPC,cAEF,OAAOK,KAAKC,IAAIH,EAAGC,IAErBE,IAf+B,WAejBF,GAAM,IAAdzI,EAAa,EAAbA,EAAGC,EAAU,EAAVA,EAED2I,EAAM,eAAQH,GAcpB,OAZIA,EAAIpV,kBAAoB3D,EAAgB4Y,OAC1CM,EAAOrV,MAAMC,GAAKwM,EAClB4I,EAAOrV,MAAMG,GAAKuM,EAClB2I,EAAOrV,MAAME,GAAKuM,EAClB4I,EAAOrV,MAAMI,GAAKsM,EAClB2I,EAAOvV,gBAAkB3D,EAAgBmZ,SAChCJ,EAAIpV,kBAAoB3D,EAAgBmZ,UACjDD,EAAOrV,MAAME,GAAKuM,EAClB4I,EAAOrV,MAAMI,GAAKsM,EAClB2I,EAAOvV,gBAAkB3D,EAAgB4D,QAGpCoV,KAAKI,wBAAwBF,IAEtCG,iBAjC+B,SAiCdN,GACf,IAAMG,EAAM,eAAQH,GADwB,EAEjBG,EAAOrV,MAA1BC,EAFoC,EAEpCA,GAAIE,EAFgC,EAEhCA,GAAID,EAF4B,EAE5BA,GAAIE,EAFwB,EAExBA,GAOpB,OANAiV,EAAOrV,MAAQ,CACbC,GAAIsM,KAAKkJ,MAAMxV,GACfE,GAAIoM,KAAKkJ,MAAMtV,GACfD,GAAIqM,KAAKkJ,MAAMvV,GACfE,GAAImM,KAAKkJ,MAAMrV,IAEViV,GAETK,uBA5C+B,SA4CRR,GACrB,IAAMG,EAAM,eAAQH,GAD8B,EAEvBG,EAAOrV,MAA1BC,EAF0C,EAE1CA,GAAIE,EAFsC,EAEtCA,GAAID,EAFkC,EAElCA,GAAIE,EAF8B,EAE9BA,GAUpB,OATIH,EAAKC,IACPmV,EAAOrV,MAAMC,GAAKC,EAClBmV,EAAOrV,MAAME,GAAKD,GAEhBE,EAAKC,IACPiV,EAAOrV,MAAMG,GAAKC,EAClBiV,EAAOrV,MAAMI,GAAKD,GAGbkV,GAETE,wBA1D+B,SA0DPI,GACtB,OAAOR,KAAKO,uBAAuBP,KAAKK,iBAAiBG,MCvHhDC,GAAiC,SAAC,GAUxC,IATLtJ,EASI,EATJA,MACAuJ,EAQI,EARJA,UACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,SACAC,EAKI,EALJA,gBAKI,IAJJ9K,eAII,SAHJvL,EAGI,EAHJA,WACA+D,EAEI,EAFJA,SAEI,IADJuS,yBACI,MADgB,KAChB,IAC4BhR,mBAAmBtF,EAAWK,OAD1D,mBACGkW,EADH,KACaC,EADb,KAEEC,EAAuB,EAAI9J,EAC3BkC,EAAsB,EAAIlC,EAC1B+J,EAASrO,iBAAO,MAEhBsO,EAAgB,WAGpB,GAFAL,IAEKvS,EAAL,CACA,IAAM6S,EAAa,eAAQ5W,GAC3B4W,EAAcvW,MAAQkW,EACtBxS,EDuB4B,eAACpD,EAAD,uDAAiB,KAAMX,EAAvB,6CAA2E,CACzGhB,KlC5C+B,oBkC6C/BC,QAAS,CAAE0B,QAAOX,WAAYiV,GAAOW,wBAAwB5V,KCzBlD6W,CAAiBR,EAAiBO,MAGvCE,EAAoBjF,uBACxB,SAACxS,GACK6W,IAAcxZ,EAAUqa,UAAYX,GACtCI,GAAY,SAACzL,GAAD,sBAAgBA,EAAhB,CAAsBxK,GAAIlB,EAAE2X,IAAIhK,QAAUL,EAAOlM,GAAIpB,EAAE2X,IAAI/J,QAAUN,SAGrF,CAACuJ,EAAWM,EAAaJ,EAAUzJ,IAG/BsK,EAAepF,uBACnB,oBAAGqF,UAAH,MAAQ,KAAR,MAAcC,UAAd,MAAmB,KAAnB,SAA8B,SAAC9X,GAC7B,IADsE,EACxDA,EAAEoP,OAAO2I,WACSC,UAAxBxU,EAF8D,EAE9DA,MAAOC,EAFuD,EAEvDA,OACXgK,EAAIF,KAAKkJ,MAAMzW,EAAEoP,OAAOvB,WAAWJ,GACnCC,EAAIH,KAAKkJ,MAAMzW,EAAEoP,OAAOvB,WAAWH,GAEnCD,EAAI,IAAGA,EAAI,GACXC,EAAI,IAAGA,EAAI,GACXD,EAAIjK,EAAQ8J,IAAOG,EAAIjK,EAAQ8J,GAC/BI,EAAIjK,EAAS6J,IAAOI,EAAIjK,EAAS6J,GAErCtN,EAAEoP,OAAO6I,QAAQ,IAAKxK,GACtBzN,EAAEoP,OAAO6I,QAAQ,IAAKvK,GAEtB,IAAMwK,EAAiB,CAAC,KAAM,MACxBC,EAAiB,CAAC,KAAM,MAC9BD,EAAeE,OACbF,EAAenY,WAAU,SAACsY,GAAD,OAAQA,IAAOR,KACxC,GAEFM,EAAeC,OACbD,EAAepY,WAAU,SAACuY,GAAD,OAAQA,IAAOR,KACxC,GAEEZ,EAASgB,EAAe,IAAMhB,EAASW,GACrCX,EAASiB,EAAe,IAAMjB,EAASY,GACzCb,EAAkB7Z,EAAqBmb,YAEvCtB,EAAkB7Z,EAAqBob,YAEhCtB,EAASiB,EAAe,IAAMjB,EAASY,GAChDb,EAAkB7Z,EAAqBob,YAEvCvB,EAAkB7Z,EAAqBmb,YAGzCpB,GAAY,SAACsB,GAAD,4BAAwBA,GAAxB,oBAAuCZ,EAAKpK,GAA5C,eAAgDqK,EAAKpK,GAArD,UAEd,CAACuJ,EAAmB3J,EAAO4J,IAc7B,OAXA1Q,qBAAU,WACR,IAAMkS,EAAQrB,EAAOpO,QAAQ0P,WAE7B,OADAD,EAAME,GAAG,YAAanB,GACf,WACLiB,EAAMG,IAAI,YAAapB,MAExB,CAACA,IACJjR,qBAAU,WACR2Q,EAAYxW,EAAWK,SACtB,CAACL,EAAWK,QAGb,kBAAC,SAAD,CACEqK,IAAK,SAACrL,GACAA,IACFqX,EAAOpO,QAAUjJ,IAGrBkM,QAASA,EACT4M,YAAa,SAAC9Y,GACR6W,IAAcxZ,EAAUgC,OAC1ByX,EAASE,GACThX,EAAE+Y,cAAe,KAIrB,kBAAC,QAAD,CACE1J,OAAQ,CACN6H,EAASjW,GACTiW,EAAS/V,GACT+V,EAAShW,GACTgW,EAAS/V,GACT+V,EAAShW,GACTgW,EAAS9V,GACT8V,EAASjW,GACTiW,EAAS9V,GACT8V,EAASjW,GACTiW,EAAS/V,IAEXoO,OAAO,MACPC,YAAaA,EACbF,QAAQ,IAEV,kBAAC,SAAD,CAAOpD,QAAS6K,GACd,kBAAC,UAAD,CACE5U,IAAK,WACL+D,KAAM,WACNuH,EAAGyJ,EAASjW,GACZyM,EAAGwJ,EAAS/V,GACZuO,OAAQ0H,EACR5I,KAAK,MACLiB,WAAW,EACXE,WAAYiI,EAAa,CAAEC,GAAI,KAAMC,GAAI,OACzCkB,UAAW1B,EACX2B,aAAc,WACRpC,IAAcxZ,EAAUqa,UAAUT,EAAkB7Z,EAAqBmb,aAE/EW,aAAc,WACZjC,OAGJ,kBAAC,UAAD,CACE9U,IAAK,WACL+D,KAAM,WACNuH,EAAGyJ,EAAShW,GACZwM,EAAGwJ,EAAS/V,GACZuO,OAAQ0H,EACR5I,KAAK,MACLiB,WAAW,EACXE,WAAYiI,EAAa,CAAEC,GAAI,KAAMC,GAAI,OACzCkB,UAAW1B,EACX2B,aAAc,WACRpC,IAAcxZ,EAAUqa,UAAUT,EAAkB7Z,EAAqBob,aAE/EU,aAAc,WACZjC,OAGJ,kBAAC,UAAD,CACE9U,IAAK,WACL+D,KAAM,WACNuH,EAAGyJ,EAAShW,GACZwM,EAAGwJ,EAAS9V,GACZsO,OAAQ0H,EACR5I,KAAK,MACLiB,WAAW,EACXE,WAAYiI,EAAa,CAAEC,GAAI,KAAMC,GAAI,OACzCkB,UAAW1B,EACX2B,aAAc,WACRpC,IAAcxZ,EAAUqa,UAAUT,EAAkB7Z,EAAqBmb,aAE/EW,aAAc,WACZjC,OAGJ,kBAAC,UAAD,CACE9U,IAAK,WACL+D,KAAM,WACNuH,EAAGyJ,EAASjW,GACZyM,EAAGwJ,EAAS9V,GACZsO,OAAQ0H,EACR5I,KAAK,MACLiB,WAAW,EACXE,WAAYiI,EAAa,CAAEC,GAAI,KAAMC,GAAI,OACzCkB,UAAW1B,EACX2B,aAAc,WACRpC,IAAcxZ,EAAUqa,UAAUT,EAAkB7Z,EAAqBob,aAE/EU,aAAc,WACZjC,UAQCkC,GAAuE,SAAC,GAI9E,IAHL7L,EAGI,EAHJA,MACA4J,EAEI,EAFJA,SACAnS,EACI,EADJA,MAEA,OACE,oCACE,kBAAC,QAAD,CACEsG,IAAK,SAACA,GACAA,GAAKA,EAAI+N,SAEf/J,OAAQ,CACN6H,EAASjW,GACTiW,EAAS/V,GACT+V,EAAShW,GACTgW,EAAS/V,GACT+V,EAAShW,GACTgW,EAAS9V,GACT8V,EAASjW,GACTiW,EAAS9V,GACT8V,EAASjW,GACTiW,EAAS/V,IAEXoO,OAAQxK,EACRyK,YAAa,EAAIlC,EACjBgC,QAAQ,IAEV,kBAAC,UAAD,CAAQ7B,EAAGyJ,EAASjW,GAAIyM,EAAGwJ,EAAS/V,GAAIuO,OAAQ,EAAIpC,EAAOkB,KAAMzJ,IACjE,kBAAC,UAAD,CAAQ0I,EAAGyJ,EAAShW,GAAIwM,EAAGwJ,EAAS/V,GAAIuO,OAAQ,EAAIpC,EAAOkB,KAAMzJ,IACjE,kBAAC,UAAD,CAAQ0I,EAAGyJ,EAAShW,GAAIwM,EAAGwJ,EAAS9V,GAAIsO,OAAQ,EAAIpC,EAAOkB,KAAMzJ,IACjE,kBAAC,UAAD,CAAQ0I,EAAGyJ,EAASjW,GAAIyM,EAAGwJ,EAAS9V,GAAIsO,OAAQ,EAAIpC,EAAOkB,KAAMzJ,MC3IxD7B,mBAlFmC,SAAC,GAQ5C,IAGDuK,EACAC,EAXJxB,EAOI,EAPJA,QACAmN,EAMI,EANJA,UACArY,EAKI,EALJA,MACAiW,EAII,EAJJA,kBACA3J,EAGI,EAHJA,MACAgM,EAEI,EAFJA,yBACAC,EACI,EADJA,UACI,EACsBtT,mBAAiB,WADvC,mBACGlB,EADH,KACUyU,EADV,OAEkCvT,mBAAiB,IAAMqH,GAFzD,mBAEGkC,EAFH,KAEgBiK,EAFhB,KAuCJ,OAhCEzY,EAAMC,GAAK,GACXD,EAAME,GAAKmY,EAAU7V,MAAQ8J,GAC7BtM,EAAMG,GAAK,GACXH,EAAMI,GAAKiY,EAAU5V,OAAS6J,GAE9BG,EAAI,EACJC,GAAK,IACI1M,EAAMC,GAAK,GAAKqM,GAAStM,EAAME,IAAMmY,EAAU7V,MAAQ,IAAM8J,GAC3CG,EAAvBzM,EAAMC,GAAK,GAAKqM,EAAWtM,EAAMC,GAAK,GAAKqM,EACtCtM,EAAME,GAAK,GAAKoM,EAGvBI,EADE1M,EAAMG,GAAK,GAAKmM,EACdtM,EAAMG,GAAK,GAAKmM,EAEhBtM,EAAMG,GAAK,GAAKmM,IAGtBG,EAAI,GAAKH,EAEPI,EADE1M,EAAMG,GAAK,GAAKmM,EACdtM,EAAMG,GAAK,GAAKmM,GAGf,IAGMgM,GAAJ,KAAP5L,GAGJlH,qBAAU,WACRiT,EAAe,IAAMnM,KACpB,CAACA,IAGF,kBAAC,SAAD,CACEpB,QAASA,EACTuB,EAAGA,EACHC,EAAGA,EACHuL,aAAc,WACZhC,EAAkB7Z,EAAqBsc,SACvCF,EAAS,WACTC,EAAe,EAAInM,IAErB4L,aAAc,WACZjC,IACAuC,EAAS,WACTC,EAAe,IAAMnM,IAEvB1J,QAAS,SAAC5D,GACRuZ,IACAvZ,EAAE+Y,cAAe,IAGnB,kBAAC,QAAD,CAAMtL,GAAI,EAAIH,EAAOI,GAAI,EAAIJ,EAAO9J,MAAO,GAAK8J,EAAO7J,OAAQ,GAAK6J,IACpE,kBAAC,QAAD,CACE+B,OAAQ,EAAE,EAAI/B,GAAQ,EAAIA,EAAO,EAAIA,EAAO,EAAIA,GAChDiC,OAAQxK,EACRyK,YAAaA,IAEf,kBAAC,QAAD,CACEH,OAAQ,CAAC,EAAI/B,GAAQ,EAAIA,GAAQ,EAAIA,EAAO,EAAIA,GAChDiC,OAAQxK,EACRyK,YAAaA,QCnEfgG,GAAsB,CAC1BhS,MAAO,IACPC,OAAQ,KA6JKkW,GAnJe,SAAC,GAAsE,IAAD,IAAnE3O,WAAmE,MAA7D,GAA6D,EAAzD4O,EAAyD,EAAzDA,aAAc/b,EAA2C,EAA3CA,YAAagZ,EAA8B,EAA9BA,UAAWgD,EAAmB,EAAnBA,aACzEnV,EAAWC,cACXmV,EAActH,sBAAY+C,GAAuBC,IAAc,CAACA,KAF4B,EAGhEvP,mBAAiBuP,IAH+C,mBAG3F6D,EAH2F,KAGhFU,EAHgF,KAI5FC,EAAeC,mBACnB,kBAAML,IAAiBtc,EAAa4c,kBAA2C,IAAvBrc,EAAY2C,SACpE,CAACoZ,EAAc/b,IANiF,EAQ5DoI,mBAA+B7I,EAAqB+c,SARQ,mBAQ3FC,EAR2F,KAQ9EC,EAR8E,OASpEtP,GAASC,EAAK,aATsD,mBAS3F1K,EAT2F,KASpFlB,EAToF,KAS5EyF,EAT4E,OAUpCoB,mBAAiB,MAVmB,mBAU3FqU,EAV2F,KAUlEC,EAVkE,OAWxCtU,oBAAkB,GAXsB,mBAW3FuU,EAX2F,KAWpElB,EAXoE,OAY9DrT,oBAAkB,GAZ4C,mBAY3FwU,EAZ2F,KAY/EC,EAZ+E,KAa5FpN,EAAQtE,iBAAe,GACvBiO,EAAoBzE,uBACxB,SAACmI,GAQGN,EAPGM,IACCX,EACa5c,EAAqB+c,QAErB/c,EAAqBwd,cAM1C,CAACZ,IAEGT,EAAY/G,uBAAY,WAC5B9N,EHF4B,eAACpD,EAAD,uDAAiB,KAAjB,MAAmD,CACjF3B,KlC5C+B,oBkC6C/BC,QAAS,CAAE0B,UGAAuZ,CAAiBP,IAC1BT,EAAaxc,EAAUgC,MACvBia,GAAyB,KACxB,CAAC5U,EAAU4V,EAAyBT,EAAcP,IAuB/CxC,EAAW,SAACxV,GAChBiZ,EAA2BjZ,GAC3BuY,EAAaxc,EAAUyd,YAqBzB,OAlBAtU,qBAAU,WAEJwT,GACF/C,IACAsD,EAA2B,IAE3BtD,MAED,CAAC+C,EAAc/C,IAClBzQ,qBAAU,WACJqQ,IAAcxZ,EAAUgC,MAAS2a,GAAcO,EAA2B,QAC7E,CAAC1D,EAAWmD,IACfxT,qBAAU,WAAO,IAAD,EACsBsT,EAAYjV,GADlC,mBACPkW,EADO,KACMC,EADN,KAEdjB,EAAagB,GACbzN,EAAMrE,QAAU+R,IACf,CAACnW,EAAMiV,IAEK,YAAX1a,GAA8C,IAArBia,EAAU5V,QAAoC,IAApB4V,EAAU7V,MAE7D,kBAACe,EAAA,EAAD,CAAMC,MAAM,SAASO,MAAM,OAA3B,cAMF,yBAAKf,MAAO,CAAEiQ,OAAQ,UACI,IAAvBpW,EAAY2C,QACbga,IACCC,GACD5D,IAAcxZ,EAAUqa,SACtB,kBAAChS,EAAA,EAAD,CACEuV,UAAQ,EACRtG,MAAI,EACJ5Q,OAAQ,CAAEgB,MAAO,UAAW,SAAU,CAAEA,MAAO,YAC/Ce,QAAS,kBAAC,YAAD,CAAWjB,KAAK,UACzBjB,QAAS2V,IAGX,yBAAKvV,MAAO,CAAEP,OAAQ,SAExB,kBAAC,SAAD,CACED,MAAO6V,EAAU7V,MACjBC,OAAQ4V,EAAU5V,OAClB6J,MAAO,CAAEG,EAAGH,EAAMrE,QAASyE,EAAGJ,EAAMrE,SACpCjF,MAAO,CAAEM,OAAQ8V,IAEjB,kBAAC,SAAD,CACEtB,YA3EY,SAAC9Y,GH3BS,IAACkb,EG6BzBlB,GAAgBnD,IAAcxZ,EAAUqa,WAE5ChT,GH/B6BwW,EG+BH,CAAEzN,EAAGzN,EAAE2X,IAAIhK,QAAUL,EAAMrE,QAASyE,EAAG1N,EAAE2X,IAAI/J,QAAUN,EAAMrE,SH7BlF,CACLtJ,KlCrC6B,oBkCsC7BC,QAAS,CAAEe,WAHMiV,GAAOI,gBAAgBkF,EAAK,QG+B7CX,EAA2B1c,EAAY2C,OAAS,GAChDqZ,EAAaxc,EAAUqa,YAsEjByD,UAnEU,SAACnb,GH5BmB,IAACkb,EG6BjCrE,IAAcxZ,EAAUqa,WAC1BhT,GH9BmCwW,EG+BR,CAAEzN,EAAGzN,EAAE2X,IAAIhK,QAAUL,EAAMrE,QAASyE,EAAG1N,EAAE2X,IAAI/J,QAAUN,EAAMrE,SH7BrF,CACLtJ,KlC3CsC,6BkC4CtCC,QAAS,CAAEiB,QAHG,SAACF,GAAD,OAAwCiV,GAAOQ,IAAI8E,EAAKva,QGgChE9C,EAAY2C,OAAS,IAAM8Z,EAC7BT,EAAaxc,EAAUyd,WAEvBjB,EAAaxc,EAAUgC,QA4DrB+b,YAAa,WACXV,GAAc,IAEhB1B,UAAW,WACT0B,GAAc,KAGhB,kBAAC,SAAD,CAAOpa,MAAOA,IACbzC,EAAYiJ,KAAI,SAACnG,EAAYoG,GAAb,OACf,kBAAC,SAAD,CAAO5E,IAAK4E,GACV,kBAAC,GAAD,CACEsS,UAAWA,EACXnN,SAAUuO,GAAc5D,IAAcxZ,EAAUqa,UAAY3Q,IAAMuT,EAClEtZ,MAAOL,EAAWK,MAClBsM,MAAOA,EAAMrE,QACbgO,kBAAmBA,EACnBqC,yBAA0BA,EAC1BC,UAAWA,IAEb,kBAAC,GAAD,CACE1C,UAAWA,EACXC,SAAUA,EACVnW,WAAYA,EACZ2M,MAAOA,EAAMrE,QACb+N,gBAAiBjQ,EACjBgQ,SAAUhQ,IAAMuT,EAChB5V,SAAUA,EACVuS,kBAAmBA,YCnJ7BoE,GAA4B,SAAC/b,GAEjC,OADA4F,QAAQ5F,MAAMA,GACP,CAAEK,K1BbgC,gC0BqB9B2b,GAAiB,kBAAM,SAAC5W,GACnC,OAAOU,IAAM,gBACVC,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACPuG,EAvBwB,SAACvG,GAAD,MAAgD,CAC5EwB,K1BLqC,0B0BMrCC,QAASzB,GAqBIod,CAAsBpd,OAGhCoH,OAAM,SAACC,GACNd,EAAS2W,GAA0B7V,SAK5BgW,GAAiB,SAACC,GAAD,OAAqC,SAAC/W,GAClE,OAAOU,IAAM,eAAgB,CAC3B4C,OAAQ,OACR7J,KAAMsd,IAELpW,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACPuG,EAvBuE,CAC3E/E,K1BnBsC,2B0BoBtCC,QAqBmCzB,OAGhCoH,OAAM,SAACC,GACNd,EAAS2W,GAA0B7V,SAiB5BkW,GAA2B,SAACC,EAAiB9d,GAAlB,OAAgD,SACtF6G,GAEA,IAAMsG,EAAG,sBAAkB2Q,EAAlB,KACT,OAAOvW,IAAM,CACX4F,MACAhD,OAAQ,QACR7J,KAAM,CACJoC,OAAQsQ,KAAKC,UAAUjT,EAAYiJ,KAAI,SAAC9G,GAAD,OAAOA,EAAEgB,aAGjDqE,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACP+G,QAAQ0W,KAAK,qBACblX,EAASmX,GAA2B1d,EAAKC,GAAID,EAAKoC,YAInDgF,OAAM,SAACC,GACNd,EAAS2W,GAA0B7V,SAI5BqW,GAA6B,SAACF,EAAiBpb,GAAlB,MAA+D,CACvGZ,K1BlF2C,gC0BmF3CC,QAAS,CAAExB,GAAIud,EAASpb,YC9DXub,GA1BiC,SAAC,GAO1C,IANLC,EAMI,EANJA,UACAtH,EAKI,EALJA,SACAuH,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEA,OACE,kBAACtY,EAAA,EAAD,CAAM8N,OAAO,WACToK,GACA,kBAACrW,EAAA,EAAD,CACEiP,MAAI,EACJ7M,SAAUkU,EACVI,KAAM,kBAAC,mBAAD,CAAkBvX,KAAK,WAC7BjB,QAASsY,IAGZzH,GACCsH,GACA,kBAACrW,EAAA,EAAD,CAAQiP,MAAI,EAAC7M,SAAUmU,EAAcG,KAAM,kBAAC,iBAAD,CAAgBvX,KAAK,WAAajB,QAASuY,MC6DxFE,GAAmB,SAACxe,GACxB,GAA2B,IAAvBA,EAAY2C,OAAc,OAAO,EAD0B,IAEvDQ,EAAUnD,EAAYA,EAAY2C,OAAS,GAA3CQ,MACR,OAAOA,EAAMC,KAAOD,EAAME,IAAMF,EAAMG,KAAOH,EAAMI,IAGtCkb,GA7E6B,SAAC,GAMtC,IAAD,IALJ1C,EAKI,EALJA,aACAjc,EAII,EAJJA,OACA4e,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAT,EACI,EADJA,UAEMrX,EAAWC,cADb,EAEsBsB,mBAAiBsW,GAFvC,mBAEGjb,EAFH,KAEUmb,EAFV,OAG8BxW,mBAAoB5I,EAAUgC,MAH5D,mBAGGwX,EAHH,KAGcgD,EAHd,KAKEhc,EAAcmI,aAAiC,SAACvG,GAAD,OAAWA,EAAM7B,kBAAkBC,eAElF6e,EAAgBL,GAAiBxe,GACjC8e,EAAQ,UAAGhf,EAAO2D,UAAV,aAAG,EAAehB,MAC1Bqb,EAAO,UAAGhe,EAAO2D,UAAV,aAAG,EAAelD,GAS/B,OAPAoI,qBAAU,WAER,MADuB,kBAAZmV,GAAsBjX,ENdP,SAACiX,GAAD,OAAqB,SAACjX,EAAUkY,GAAoB,IAExErc,EADWqc,IAAXjf,OACkBsX,MAAK,SAAC3U,GAAD,OAAWA,EAAMlC,KAAOud,KAA/Cpb,OAER,GAAe,OAAXA,EACFmE,EAASiR,GAA0B,SAC9B,CACL,IAAM9X,EAAcgT,KAAKyE,MAAM/U,GAAQuG,KAAI,SAAC+V,GAAD,MAAmB,CAC5D7b,MAAO6b,EACP/G,UAAW,GACXhV,gBAAiB3D,EAAgB4D,WAGnC2D,EAASiR,GAA0B9X,MMCOif,CAAenB,IAClD,WACLjX,EN2BuD,CAC3D/E,KlC5C8B,wBwCkB3B,CAAC+E,EAAUiX,IAGZ,kBAAC9X,EAAA,EAAD,CAAMC,QAAM,EAAC4N,OAAO,UAClB,kBAACnN,EAAA,EAAD,CAAMM,KAAK,SAASC,OAAO,YAA3B,oCAGA,kBAAC,GAAD,CACEiX,UAAWA,EACXC,aAAwB,IAAV1a,GAAeuV,IAAcxZ,EAAUqa,UAAYgF,EACjET,aAAc3a,IAAU3D,EAAO6C,OAAS,GAAKqW,IAAcxZ,EAAUqa,UAAYgF,EACjFR,YAAa,WACXxX,EAASgX,GAAyB/d,EAAO2D,GAAOlD,GAAIP,IACpD4e,GAAS,SAAC/Q,GAAD,OAAWA,EAAO,EAAI/N,EAAO6C,QAAU7C,EAAO6C,WAEzD2b,YAAa,WACXzX,EAASgX,GAAyB/d,EAAO2D,GAAOlD,GAAIP,IACpD4e,GAAS,SAAC/Q,GAAD,OAAWA,EAAO,GAAK/N,EAAO6C,YAGzC,kBAAC,GAAD,CACEwK,IAAG,OAAE2R,QAAF,IAAEA,IAAY,kBACjB9e,YAAaA,EACbgZ,UAAWA,EACXgD,aAAcA,EACdD,aAAcA,KAGlB,kBAAC/V,EAAA,EAAD,CAAMe,IAAI,cACR,kBAACc,EAAA,EAAD,CACEC,SAAO,EACPG,QAAQ,OACRgC,SAAU4U,GAAiB7F,IAAcxZ,EAAUqa,SACnD9T,QAAS,WACPc,EAASgX,GAAyB/d,EAAO2D,GAAOlD,GAAIP,IACpD2e,OAGJ,kBAAC9W,EAAA,EAAD,CACEI,QAAQ,SACRlC,QAAS,WACP4Y,UC3CGtZ,mBA1ByC,SAAC,GAKrC,IAJlBmE,EAIiB,EAJjBA,QACA1J,EAGiB,EAHjBA,OACA4e,EAEiB,EAFjBA,WACAR,EACiB,EADjBA,UACiB,EACO9V,oBAAS,GADhB,mBACVmB,EADU,KACJiB,EADI,KAEjB,OACE,kBAAClB,EAAA,EAAD,CACEE,QAASA,EACTtD,OAAQ,CAAEP,MAAO,OACjB4D,KAAMA,EACNkB,OAAQ,kBAAYD,GAAQ,IAC5BvC,QACE,kBAAC,GAAD,CACE0W,YAAa,kBAAYnU,GAAQ,IACjCuR,aAActc,EAAa4c,iBAC3Bvc,OAAQA,EACR4e,WAAYA,EACZR,UAAWA,SCiCN7Y,mBAhDuC,SAAC,GAOhD,IANL6Z,EAMI,EANJA,WAMI,IALJC,iBAKI,MALQ,GAKR,MAJJxZ,aAII,MAJI,IAIJ,MAHJC,cAGI,MAHK,IAGL,MAFJE,qBAEI,SADJC,EACI,EADJA,QACI,EACqBmH,GAASgS,EAAWzc,MAAO,aADhD,mBACGA,EADH,KACauE,GADb,aAE8BoB,mBAAiB,CAAEzC,QAAOC,WAFxD,mBAEG4V,EAFH,KAEcU,EAFd,KAGED,EAActH,sBAAY+C,GAAuB,CAAE/R,QAAOC,WAAW,CAACD,EAAOC,IAC7E6J,EAAQtE,iBAAe,GAEvBnL,EAAcoc,mBAAsB,WACxC,OAAI,OAAC8C,QAAD,IAACA,OAAD,EAACA,EAAYxc,QAEVsQ,KAAKyE,MAAMyH,EAAWxc,QAAQuG,KAAI,SAAC+V,GAAD,MAAmB,CAC1D7b,MAAO6b,EACP/G,UAAW,GACXhV,gBAAiB3D,EAAgB4D,WALH,KAO/B,CAACgc,IASJ,OAPAvW,qBAAU,WAAO,IAAD,EACsBsT,EAAYjV,GADlC,mBACPkW,EADO,KACMC,EADN,KAEdjB,EAAagB,GAEbzN,EAAMrE,QAAU+R,IACf,CAACnW,EAAMiV,IAGR,yBACElW,QAASA,EACTI,MAAO,CAAEM,OAAQX,EAAgB,UAAY,UAAW8C,QAAS,OAAQC,SAAU,WAEnF,kBAAC,SAAD,CAAOlD,MAAO6V,EAAU7V,MAAOC,OAAQ4V,EAAU5V,OAAQ6J,MAAO,CAAEG,EAAGH,EAAMrE,QAASyE,EAAGJ,EAAMrE,UAC3F,kBAAC,aAAD,KACE,kBAAC,SAAD,CAAY3I,MAAOA,IAClBzC,EAAYiJ,KAAI,SAACnG,EAAYoG,GAAb,OACf,kBAAC,GAAD,CAAY5E,IAAK4E,EAAGuG,MAAOA,EAAMrE,QAASiO,SAAUvW,EAAWK,MAAO+D,MAAM,aAIlF,kBAACR,EAAA,EAAD,CAAMC,MAAM,UAAUwY,OCyCfC,GAAYC,IAAMha,MAzF6B,SAAC,GAMtD,IAAD,IALJkD,YAKI,MALG,KAKH,EAJJ+W,EAII,EAJJA,OACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aACI,EAC4BrX,mBAAiB,IAD7C,mBACGsX,EADH,KACaC,EADb,KAEE9Y,EAAWC,cAuBX8Y,EAAe,WACnBD,EAAY,IACZlT,MAAM,gBAAD,OAAiBiT,EAAjB,gBACFlY,MAAK,SAACqY,GAAD,OAAcA,EAASlT,UAC5BnF,MAAK,SAAClH,GAEL,OADA+G,QAAQ+E,IAAI9L,GACL,QAERoH,OAAM,SAACC,GACNN,QAAQ5F,MAAMkG,MAEd8X,GAAcA,KAGpB9W,qBAAU,WAER,OADA+F,OAAOV,iBAAiB,eAAgB4R,GACjC,WACLlR,OAAOT,oBAAoB,eAAgB2R,OAI/C,IAAMvZ,EAAMqZ,EAAQ,uBAAmBA,EAAnB,eAA2C,GAE/D,OACE,oCACE,yBAAKvZ,MAAO,CAAER,MAAO,OAAQC,OAAQ,QAASuB,gBAAiB,UAC5Dd,EAAM,kBAACD,EAAA,EAAD,CAAOC,IAAKA,EAAKH,OAAQ,CAAEP,MAAO,OAAQC,OAAQ,OAAQW,UAAW,aAAkB,MAEhG,kBAACsB,EAAA,EAAOiY,MAAR,CACE5Z,OAAQ,CAAEuD,UAAW,UACrBsW,QAAS,CACP,CACEzb,IAAK,QACLia,KAAM,kBAAC,WAAD,MACNnB,UAAU,EACVrX,QAxDa,WACrB,IAAIoH,EAAG,wCAAoCmS,EAApC,iBAAmD/W,GACrDgX,IAAYpS,GAAO,gBACxBV,MAAMU,GACH3F,MAAK,SAACqY,GAAD,OAAcA,EAASlT,UAC5BnF,MAAK,SAAClH,GAIL,MAHqB,QAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,SACRoe,EAAYrf,EAAK0f,WAEZ,QAERtY,OAAM,SAACC,GACNN,QAAQ5F,MAAMkG,MAEd6X,GAAcA,KA2CVvV,SAAmB,OAAT1B,GAEZgX,GAAc,CACZjb,IAAK,UACLia,KAAM,kBAAC,4BAAD,MACNnB,UAAU,EACVrX,QA9Ca,WACrBc,ECrBkC,SAAC6Y,GAAD,gDAAiC,WAAO7Y,GAAP,UAAAgM,EAAA,sDACrEpG,MAAM,gBAAD,OAAiBiT,EAAjB,aACFlY,MAAK,SAACqY,GAAD,OAAcA,EAASlT,UAC5BnF,MAAK,SAAClH,GAKL,MAJoB,OAAhBA,EAAKiB,SACPsF,EAfoF,CAC1F/E,KxCHgC,qBwCIhCC,QAAS,CAAEO,iBAasBhC,EAAKmC,SAChCoE,EAAS4W,OAEJ,QAER/V,OAAM,SAACC,GACNN,QAAQ5F,MAAMkG,MAXmD,2CAAjC,sDDqBzBsY,CAAuBP,KA8CxBzV,UAAWyV,GAEb,CACEpb,IAAK,OACLia,KAAM,kBAAC,iBAAD,MACNnB,UAAU,EACVrX,QAAS6Z,EACT3V,UAAWyV,UE9FVQ,GAAe,SAAC/S,GAAD,OAAyBxB,SAASwB,EAAIvB,MAAM,KAAK,GAAI,KCOpEuU,GAAoB,SAC/BrgB,EAD+B,GAGb,IADhBwf,EACe,EADfA,OACe,IADPpB,iBACO,SACjB,YAAejR,IAAXqS,EAA6Bxf,EAC1BA,EAAO0C,QAAO,SAACC,GAAD,OAAWyd,GAAazd,EAAMxC,QAAUqf,GAAU7c,EAAM2d,aAAelC,MCRjFmC,GAAsB,SAACxW,GAClC,OAAIyW,MAAMC,QAAQ1W,GACTA,EAAMZ,KAAI,SAAC9G,GAAD,MAAQ,CACvBwR,OAAQxR,EAAEkG,KACVJ,QAAS,CACP3D,IAAKnC,EAAE5B,QAITsJ,EACK,CACL8J,OAAQ9J,EAAMxB,KACdJ,QAAS,CACP3D,IAAKuF,EAAMtJ,KAIV,MCLIigB,GAA8C,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OAAa,EAC7BlX,mBAAiB,MADY,mBAClEqY,EADkE,KAClDC,EADkD,KAGzE,OACE,oCACE,kBAAC,GAAD,CAAgBD,eAAgBA,EAAgBC,kBAAmBA,IACnE,kBAACtB,GAAD,CAAW7W,KAAI,OAAEkY,QAAF,IAAEA,OAAF,EAAEA,EAAgBlY,KAAM+W,OAAQA,EAAQC,YAAY,IACnE,kBAAC,GAAD,CAAyBD,OAAQA,MAKjCqB,GAAiB,SAAC,GAAwD,IAAtDF,EAAqD,EAArDA,eAAgBC,EAAqC,EAArCA,kBAClCE,ECnBkB,WACxB,IAAM/Z,EAAWC,cACXlH,EAAoBuI,aAA6B,SAACvG,GAAD,OAAWA,EAAMhC,WAMxE,OAJA+I,qBAAU,WACR9B,EAASS,OACR,CAACT,IAEGjH,EDWkBihB,GAEnBC,EAA6BF,EAAiB3X,KAAI,SAAC4C,GAAD,MAAU,CAChE8H,OAAQ9H,EAAIxD,KACZJ,QAAS,CACP3D,IAAKuH,EAAItL,QAab,OACE,kBAACyF,EAAA,EAAD,CAAMe,IAAI,YAAY+M,OAAO,UAC3B,kBAACpN,EAAA,EAAD,sBACA,kBAACqa,GAAA,EAAD,CAAUD,MAAOA,EAAOhX,SAZH,SAACC,EAAGzJ,GAC3B,GAAmB,OAAfA,EAAKuJ,MAAgB6W,GAAkB,SAAC7S,GAAD,OAAUA,SAChD,CAAC,IACIvJ,EAAQhE,EAAKuJ,MAAM5B,QAAnB3D,IACF0c,EAAoBJ,EAAiBxJ,MAAK,SAACvL,GAAD,OAASA,EAAItL,KAAO+D,KAChE0c,GAAmBN,EAAkBM,KAOWnX,MAAOwW,GAAoBI,KAC/E,kBAAC,IAAD,CAAMnb,GAAG,cAAT,gBAKA2b,GAA0B,SAAC,GAA6B,IAA3B3B,EAA0B,EAA1BA,OAC3BzY,EAAWC,cACXhH,EAASqI,aAAiC,SAACvG,GAAD,OAAWA,EAAM9B,UAAQ0C,QACvE,SAACC,GAAD,OAAYA,EAAM2d,cAEdc,EAAiBf,GAAkBrgB,EAAQ,CAAEwf,SAAQpB,WAAW,IAChE/d,EAAU+gB,EAAe1e,QAAO,SAACC,GAAD,OAAWA,EAAMC,UAAQC,QAAU,GAEzEgG,qBAAU,WACR9B,EAAS4W,QACR,CAAC5W,IAEJ,IAAMsa,EAAaD,EAAeve,OAElC,OACE,oCACE,kBAAC+D,EAAA,EAAD,eAAcya,IACZhhB,GAAW,kBAACuG,EAAA,EAAD,CAAMjF,OAAK,GAAX,iDACb,kBAACuE,EAAA,EAAD,CACEE,OAAQ,CACNkb,SAAU,SACVnK,OAAQ,iBACRrR,OAAQ,QACRyb,YAAalhB,EAAU,GAAK,OAE9B4G,IAAI,YACJ+M,OAAO,UAENoN,EAAejY,KAAI,SAACxG,EAAOyG,EAAGoY,GAAX,OAClB,yBAAKhd,IAAK7B,EAAMlC,IACd,8BAAO2I,EAAI,GACX,kBAAC,GAAD,CACE5E,IAAK4E,EACLwV,WAAYxV,EACZpJ,OAAQwhB,EACR9X,QAAS,kBAAC,GAAD,CAAmB0V,WAAYzc,EAAOqD,eAAa,EAACH,MAAO,IAAKC,OAAQ,MACjFsY,WAAW,SAKnB,kBAAC,IAAD,CACEqD,KAAMJ,EAAa,GACnBvN,QAAQ,6HExFH4N,GAAe,SAAC,GAA6B,IAA3BlC,EAA0B,EAA1BA,OACvBzY,EAAWC,cACXhH,EAASqI,aAAiC,SAACvG,GAAD,OAAWA,EAAM9B,UAC3DohB,EAAiBf,GAAkBrgB,EAAQ,CAAEwf,SAAQpB,WAAW,IAChE/d,EAAU+gB,EAAe1e,QAAO,SAACC,GAAD,OAAWA,EAAMC,UAAQC,QAAU,GAezE,OAbAgG,qBAAU,WACR9B,EAAS4W,QACR,CAAC5W,IAYF,oCACE,2BAAO/E,KAAK,OAAOgI,SAXvB,SAAsB3H,GACpB,IAAK,IAAI+G,EAAI,EAAGA,EAAI/G,EAAEoP,OAAOkQ,MAAM9e,OAAQuG,IAAK,CAC9C,IAAMwY,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASzf,EAAEoP,OAAOkQ,MAAMvY,IACxCwY,EAASE,OAAO,OAAhB,qBAAsCtC,EAAtC,MACAzY,EAAS8W,GAAe+D,MAMmBG,OAAO,UAAUC,UAAQ,IACpE,kBAAC,GAAD,CAAyB5hB,eAAgBghB,EAAgB/gB,QAASA,EAASmf,OAAQA,MAKnF2B,GAA0B,SAAC,GAAsD,IAApD/gB,EAAmD,EAAnDA,eAAgBC,EAAmC,EAAnCA,QAAmC,EAA1Bmf,OAC1D,OACE,qCACInf,GAAW,kBAACuG,EAAA,EAAD,CAAMjF,OAAK,GAAX,iDACb,kBAACsH,EAAA,EAAD,CACEC,QAAQ,IACR9C,OAAQ,CACN+Q,OAAQ,iBACRrR,OAAQ,OACRmc,QAAS,OACTzb,QAAS,OACT+a,YAAalhB,EAAU,GAAK,MAC5B6hB,aAAc,SACdtY,WAAY,WAGbxJ,EAAe+I,KAAI,SAACxG,EAAOyG,EAAGoY,GAAX,OAClB,kBAAC,GAAD,CACEhd,IAAK4E,EACLwV,WAAYxV,EACZpJ,OAAQwhB,EACR9X,QAAS,kBAAC,GAAD,CAAmB0V,WAAYzc,EAAOqD,eAAa,EAACH,MAAO,IAAKC,OAAQ,MACjFsY,WAAW,UCnDV+D,GAAc,WACzB,IAAM3C,EAAS1S,KAAWlB,IAAI,UAE9B,OACE,kBAAC3C,EAAA,EAAD,CAAMC,QAAS,kBAAmB9C,OAAQ,CAAEgc,cAAe,OAAQtc,OAAQ,SACzE,kBAAC,GAAD,CAAW0Z,OAAQA,IACnB,kBAAC,GAAD,CAAYA,OAAQA,MAKpB6C,GAAY,SAAC,GAA6B,IAA3B7C,EAA0B,EAA1BA,OAA0B,EACrBlX,mBAAS,IADY,mBACtCC,EADsC,KAChCC,EADgC,OAEPF,mBAAS,IAFF,mBAEtCga,EAFsC,KAEzBC,EAFyB,OAGnBja,mBAAS,IAHU,mBAGtC3G,EAHsC,KAG/BkR,EAH+B,KAIvC6B,EAAUC,cAEhB9L,qBAAU,WACJ2W,GACF/X,IACGmE,IADH,qBACqB4T,EADrB,MAEG9X,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACPgI,EAAQhI,EAAK+H,MACbga,EAAe/hB,EAAK8hB,gBAGrB1a,OAAM,SAACC,GACNN,QAAQ5F,MAAMkG,QAGnB,CAAC2X,IAuBJ,OACE,kBAACtZ,EAAA,EAAD,CAAMC,QAAM,EAAC0E,MAAM,SAASzE,OAAQ,CAAEoc,WAAY,eAChD,kBAAC3Y,EAAA,EAAD,CACEC,YAAY,qBACZ7B,OAAK,EACL7B,OAAQ,CAAEqc,SAAU,OACpB1Y,MAAOxB,EACPyB,SAAU,SAACC,EAAGC,GACZ1B,EAAQ0B,EAASH,UAGrB,kBAAC2Y,GAAA,EAAD,CACE5Y,YAAY,uBACZoN,OAAQ,CAAEpR,OAAQ,OAClBiE,MAAOuY,EACPtY,SAAU,SAACC,EAAGC,GACZqY,EAAerY,EAASH,UAG5B,kBAAC7D,EAAA,EAAD,CAAM2E,MAAM,UACV,kBAAC9C,EAAA,EAAD,CAAQI,QAAQ,OAAOH,SAAO,EAAC/B,QAzCtB,WACb,IAAM0c,GAAa,MAACxV,EAAW,MAAM6I,SAASwJ,GACxCnS,EAAMsV,EAAS,qBAAiBnD,EAAjB,mBAErB/X,IAAM,CACJ4C,OAAQsY,EAAY,MAAQ,OAC5BtV,MACA7M,KAAM,CACJ+H,OACA+Z,iBAGD5a,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACPkU,EAAQ3R,KAAR,6CAAmDvC,EAAKC,QAGzDmH,OAAM,SAACC,GACNgL,EAASK,KAAKC,UAAUtL,EAAIkY,SAASvf,WAwBW2J,UAAW5B,IAAS+Z,IACpE,kBAACva,EAAA,EAAD,CAAQI,QAAQ,cAEfxG,GAAS,kBAACgS,GAAA,EAAD,CAAOC,QAAM,EAACzL,QAASxG,EAAOihB,aAAW,MAKrDC,GAAa,SAAC,GAA6B,IAA3BrD,EAA0B,EAA1BA,OACpB,OACE,kBAACtZ,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,YAAYb,OAAQ,CAAEoc,WAAY,eAChDhD,EAAS,kBAAC,GAAD,CAAKA,OAAQA,IAAa,KACpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsD,KAAI,+BACT,kBAAC,GAAD,CAAetD,OAAQ3T,SAAS2T,EAAQ,OAE1C,kBAAC,IAAD,CAAOsD,KAAI,8BACT,kBAAC,GAAD,CAActD,OAAQ3T,SAAS2T,EAAQ,UAO3CuD,GAAM,SAAC,GAA6B,IAA3BvD,EAA0B,EAA1BA,OACPwB,EAAQ,CACZ,CACExc,IAAK,eACLgS,GAAIC,IACJjR,GAAG,qCAAD,OAAuCga,GACzCrX,QAAS,iBAEX,CACE3D,IAAK,gBACLgS,GAAIC,IACJjR,GAAG,sCAAD,OAAwCga,GAC1CrX,QAAS,kBAIL6a,EAAahW,cAAbgW,SACFC,EAAcjC,EAAM5e,WAAU,SAAC2J,GAAD,OAASA,EAAIvG,GAAGsG,MAAM,KAAK,KAAOkX,KAEtE,OAAO,kBAACE,GAAA,EAAD,CAAMlC,MAAOA,EAAOiC,YAAaA,EAAaE,UAAQ,EAACnb,SAAO,KC7GjEob,GAA0B,SAACzhB,GAE/B,OADA4F,QAAQ5F,MAAMA,GACP,CAAEK,K7CP6B,6B8CsCzBqhB,GAtCO,WACpB,IAAMtc,EAAWC,cACXjH,EAAYsI,aAA+B,SAACvG,GAAD,OAAWA,EAAM/B,aAKlE,OAHA8I,qBAAU,WACR9B,GDU8B,SAACA,GACjC,OAAOU,IAAM,mBACVC,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACPuG,EAlBsB,SAACvG,GAAD,MAA4C,CACtEwB,K7CFkC,uB6CGlCC,QAASzB,GAgBI8iB,CAAoB9iB,OAG9BoH,OAAM,SAACC,GACNd,EAASqc,GAAwBvb,YChBlC,CAACd,IAEF,yBACEV,MAAO,CACLyC,QAAS,OACTC,SAAU,SACVC,eAAgB,gBAChBxC,QAAS,MACTV,OAAQ,SAGV,kBAACmD,EAAA,EAAD,CAAMC,QAAQ,IAAI9C,OAAQ,CAAEN,OAAQ,QACjC/F,EAAUoJ,KAAI,SAACxI,EAAUyI,GAAX,OACb,kBAAC,EAAD,CACE5E,IAAK4E,EACL5D,GAAE,iCAA4B7E,EAAS4H,MACvC7C,WAAW,6BACXG,MAAM,SACNC,OAAO,SACPzC,MAAO1C,EAAS4H,WAItB,yBAAKlC,MAAO,CAAEsD,UAAW,aACvB,kBAAC,IAAD,CAAMnE,GAAG,uBACP,kBAAC,EAAD,U,UCoBK+d,GAvDc,WAC3B,IAAMxc,EAAWC,cACX0N,EAAUC,cAFiB,EAGTrM,mBAAiB,IAHR,mBAG1BC,EAH0B,KAGpBC,EAHoB,OAIKF,mBAAiB,IAJtB,mBAI1Bkb,EAJ0B,KAIbC,EAJa,OAKKnb,mBAAiB,IALtB,mBAK1Bga,EAL0B,KAKbC,EALa,KAOjC,OACE,oCACE,kBAAC3b,EAAA,EAAD,CAAMM,KAAK,SAASC,OAAO,YAA3B,qBAGA,kBAACuc,GAAA,EAAD,CAAStc,MAAM,UACf,kBAAC6B,EAAA,EAAD,CAAMC,QAAQ,cAAc9C,OAAQ,CAAEN,OAAQ,QAC5C,kBAACI,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,kBAAC,EAAD,CAAWvB,WAAW,6BAA6BG,MAAM,QAAQC,OAAO,UACxE,kBAACc,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,sBAEF,kBAACV,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,kBAAC4C,EAAA,EAAD,CACEzD,OAAQ,CAAEud,WAAY,OAAQC,UAAW,SACzC9Z,YAAY,gBACZC,MAAOxB,EACPyB,SAAU,SAACC,EAAGC,GAAJ,OAAuB1B,EAAQ0B,EAASH,UAEpD,kBAACF,EAAA,EAAD,CAAOE,MAAOyZ,EAAaxZ,SAAU,SAACC,EAAGC,GAAJ,OAAuBuZ,EAAevZ,EAASH,UACpF,kBAAC2Y,GAAA,EAAD,CACEtc,OAAQ,CAAEN,OAAQ,OAClBiE,MAAOuY,EACPtY,SAAU,SAACC,EAAGC,GAAJ,OAAuBqY,EAAerY,EAASH,YAI/D,kBAAC7D,EAAA,EAAD,CAAMe,IAAI,aAAaT,QAAQ,kBAC7B,kBAACuB,EAAA,EAAD,CACEC,SAAO,EACPmC,SAAU,CAAC5B,EAAMib,EAAalB,GAAatM,SAAS,IACpD/P,QAAS,WFRS,IAAC4d,EESjB9c,GFTiB8c,EESK,CAAEtb,OAAMib,cAAalB,eFTA,SAACvb,GACtD,OAAOU,IAAM,kBAAmB,CAC9B4C,OAAQ,OACR7J,KAAMqjB,IAELnc,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACPuG,EAtBsB,SAACvG,GAAD,MAA0C,CACpEwB,K7CVmC,wB6CWnCC,QAASzB,GAoBIsjB,CAAoBtjB,OAG9BoH,OAAM,SAACC,GACNd,EAASqc,GAAwBvb,UEA3B6M,EAAQ3R,KAAK,eAEfoF,QAAQ,SAEV,kBAACJ,EAAA,EAAD,CACEI,QAAQ,SACRlC,QAAS,WACPyO,EAAQ3R,KAAK,oBCpBVghB,GA1Ba,WAC1B,IAAMxb,EAAOuE,KAAWlB,IAAI,QACtBjL,EAAW0H,aAA6B,SAACvG,GAAD,OAAWA,EAAM/B,UAAUuX,MAAK,SAACjV,GAAD,OAAOA,EAAEkG,OAASA,QAEhG,OACE,oCACE,kBAAC3B,EAAA,EAAD,CAAMM,KAAK,SAASC,OAAO,YAA3B,WAGA,kBAACuc,GAAA,EAAD,CAAStc,MAAM,UACf,kBAAC6B,EAAA,EAAD,CAAMC,QAAQ,cAAc9C,OAAQ,CAAEN,OAAQ,QAC5C,kBAACI,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,kBAAC,EAAD,CAAWvB,WAAW,6BAA6BG,MAAM,SAASC,OAAO,WACzE,kBAACc,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,sBAEF,kBAACV,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,kBAACL,EAAA,EAAD,CAAMR,OAAQ,CAAEud,WAAY,UAAWC,UAAW,WAAajjB,EAAS4H,MACxE,kBAAC3B,EAAA,EAAD,KAAOjG,EAAS6iB,aAChB,kBAAC5c,EAAA,EAAD,CAAMR,OAAQ,CAAEN,OAAQ,QAAUnF,EAAS2hB,iB,wDCqItC/c,mBAjJmD,SAAC,GAQ5D,IAPLye,EAOI,EAPJA,gBACAC,EAMI,EANJA,cACArF,EAKI,EALJA,WACAsF,EAII,EAJJA,mBACA1E,EAGI,EAHJA,OACA2E,EAEI,EAFJA,UACAC,EACI,EADJA,cAEMC,EAAoB/H,mBACxB,kBACE,CACEzI,OAAQ,YACR1L,QAAS,CACP3D,IAAK,QAJX,mBAOK2f,EAAUzhB,QAAO,SAACL,GAAD,OAAQA,EAAE8F,QAAgB3D,MAAQgb,SAExD,CAACA,EAAQ2E,IAXP,EAa4C7b,mBAA4B+b,EAAkB,IAb1F,mBAaGC,EAbH,KAaqBC,EAbrB,KAkEJ,OALA1b,qBAAU,WACRqb,EAAmB,IACnBK,EAAoBF,EAAkB,MACrC,CAACA,EAAmBE,EAAqBL,IAG1C,yBACE7d,MAAO,CACLyC,QAAS,OACT8a,UAAW,MACXY,UAAW,MACXxb,eAAgB,SAChBxC,QAAS,QAGX,yBAAKH,MAAO,CAAEiQ,OAAQ,UACpB,kBAAC,GAAD,CAAmB8I,WAAY6E,EAAcrF,GAAa/Y,MAAO,IAAKC,OAAQ,OAEhF,yBACEO,MAAO,CACLP,OAAQ,OACRD,MAAO,MACPiD,QAAS,OACTC,SAAU,SACVC,eAAgB,kBAGlB,kBAACpC,EAAA,EAAD,CAAM6d,WAAS,GAAf,qBACoB,2BAAIT,EAAJ,MAEpB,yBACE3d,MAAO,CACLyC,QAAS,OACTc,WAAY,SACZ/D,MAAO,OACPC,OAAQ,QAGV,kBAAC4e,GAAA,EAAD,CACEC,aAAcP,EACdQ,qBAjEiB,SAAC3a,EAAGC,GAC7Bga,GAAmB,SAACnW,GAClB,IAAM8W,EAAI,YAAO9W,GAEjB,GAAuB,IAAnB7D,EAASH,MAAa,CACxB,IAAM5H,EAAM0iB,EAAKziB,WAAU,SAACC,GAAD,OAAOA,EAAE2b,UAAYiG,EAAcrF,GAAYne,MAEtE0B,GAAO,EAAG0iB,EAAK1iB,GAAL,eAAiB0iB,EAAK1iB,GAAtB,CAA4Bqd,WACrCqF,EAAK9hB,KAAK,CAAEib,QAASiG,EAAcrF,GAAYne,GAAI+e,WAE1D,GAAuB,IAAnBtV,EAASH,MAAa,CACxB,IAAM5H,EAAM0iB,EAAKziB,WAAU,SAACC,GAAD,OAAOA,EAAE2b,UAAYiG,EAAcrF,GAAYne,MAEtE0B,GAAO,EAAG0iB,EAAK1iB,GAAL,eAAiB0iB,EAAK1iB,GAAtB,CAA4Bqd,OAAQ,OAEhDqF,EAAK9hB,KAAK,CACRib,QAASiG,EAAcrF,GAAYne,GACnC+e,OAAQ,OAId,OAAOqF,MA6CD7D,MAAO,CACL,CACExc,IAAK,IACLnB,MAAO,MACP0G,MAAO,GAET,CACEvF,IAAK,IACLnB,MAAO,KACP0G,MAAO,MAIM,IAAlBqa,GAAuBC,EAAkBxhB,OAAS,GACjD,yBAAKwD,MAAO,CAAER,MAAO,QACnB,kBAACob,GAAA,EAAD,CACEhZ,OAAK,EACL+Y,MAAOqD,EACPra,SAzGW,SAACC,EAAD,GAAyB,IAAnBF,EAAkB,EAAlBA,MACf,OAAVA,IACFwa,EAAoBxa,GAEpBma,GAAmB,SAACnW,GAClB,IAAM8W,EAAI,YAAO9W,GACX5L,EAAM0iB,EAAKziB,WAAU,SAACC,GAAD,OAAOA,EAAE2b,UAAYiG,EAAcrF,GAAYne,MAU1E,OARI0B,GAAO,EAAG0iB,EAAK1iB,GAAL,eAAiB0iB,EAAK1iB,GAAtB,CAA4Bqd,OAAQzV,EAAM5B,QAAQ3D,MAE9DqgB,EAAK9hB,KAAK,CACRib,QAASiG,EAAcrF,GAAYne,GACnC+e,OAAQzV,EAAM5B,QAAQ3D,MAInBqgB,OA0FC9a,MAAOua,MAKf,kBAAC,GAAD,CACE1F,WAAYA,EACZ5e,OAAQikB,EACR7F,WAAW,EACX1U,QAAS,kBAAC3B,EAAA,EAAD,CAAQC,SAAO,EAACG,QAAQ,WAAWgC,UAAWia,WC7FlD7e,mBAhDmC,SAAC,GAM5C,IALLvF,EAKI,EALJA,OACA8kB,EAII,EAJJA,gBACAZ,EAGI,EAHJA,mBACAa,EAEI,EAFJA,eACAZ,EACI,EADJA,UAEA,OACE,kBAAClb,EAAA,EAAD,CACEC,QAAQ,IACR9C,OAAQ,CACNP,MAAO,OACPC,OAAQ,MACRwb,SAAU,SACV0D,YAAa,WACbC,YAAa,UAGdjlB,EAAOmJ,KAAI,SAACyE,EAAKxE,EAAGoY,GACnB,GAAI5T,EAAI9E,QAAS,CACf,IAAIsb,EAAwB,KACtBjiB,EAAM2iB,EAAgB1iB,WAAU,SAACC,GAAD,OAAOA,EAAE2b,UAAYpQ,EAAInN,MAQ/D,OANI0B,GAAO,IAEPiiB,EADEU,EAAgB3iB,GAAKqd,SAAWuF,EAClB,EACK,GAIvB,kBAAC,GAAD,CACEvgB,IAAKoJ,EAAInN,GACTujB,gBAAiBpW,EAAIoW,gBACrBpF,WAAYxV,EACZ6a,cAAezC,EACf4C,cAAeA,EACfF,mBAAoBA,EACpB1E,OAAQuF,EACRZ,UAAWA,YCiJVe,GAtKkB,WAAO,IAAD,IAC/Bne,EAAWC,cADoB,EAELqB,aAC9B,SAACvG,GAAD,MAAY,CACVqjB,YAAarjB,EAAMxB,QAAQE,KAC3BR,OAAQ8B,EAAM9B,WAHVmlB,EAF6B,EAE7BA,YAAanlB,EAFgB,EAEhBA,OAMfY,EAAQ6L,KACR0X,EAAY7H,mBAA6B,WAC7C,OAAqB,IAAjB1b,EAAMiC,QAA6C,IAA7BsiB,EAAYvkB,MAAMiC,OAAqB,GAE1DsiB,EAAYvkB,MAAMuI,KAAI,SAACqW,GAC5B,IAAMrf,EAAOS,EAAM0W,MAAK,SAACjV,GAAD,OAAOA,EAAE5B,KAAO+e,KAExC,MAAO,CACL3L,OAAQ1T,EAAKoI,KACbJ,QAAS,CACP3D,IAAKrE,EAAKM,UAIf,CAACG,EAAOukB,IAtB0B,EAwBW7c,mBAA4B,MAxBvC,mBAwB9Bgc,EAxB8B,KAwBZC,EAxBY,KAyB/BQ,EAAsB,2BAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBnc,eAAtB,aAAG,EAAoC3D,WAAvC,QAA8C,KAzBrC,EA2BmB8D,mBAA2B,CACjF6c,EAAYrkB,iBACZqkB,EAAYpkB,mBA7BuB,mBA2B9BqkB,EA3B8B,KA2BRC,EA3BQ,OA+BT/c,oBAAkB,GA/BT,mBA+B9Bgd,EA/B8B,KA+BtBC,EA/BsB,KAgC/BC,EAAUna,iBAAO,CAAEoa,QAAQ,EAAOC,cAAc,IAhCjB,EAiCSpd,mBAA0B,IAjCnC,mBAiC9Bwc,EAjC8B,KAiCbZ,EAjCa,OAmCK5b,mBAAyB,IAnC9B,mBAmC9B2b,EAnC8B,KAmCf0B,EAnCe,KAqCrC9c,qBAAU,WACR9B,EAAS2E,MACT3E,EAAS4W,QACR,CAAC5W,IAEJ8B,qBAAU,WAcR,OAbA8c,EACEtF,GAAkBrgB,EAAQ,CACxBwf,OAAQuF,EACR3G,WAAW,IACVjV,KAAI,SAAC9G,GACN,IAAM2hB,GAAmC,IAAf3hB,EAAEujB,WAAqB,GAAK,GACtD,OAAO,eACFvjB,EADL,CAEE2hB,kBACAlb,QAASkb,GAAmBoB,EAAqB,IAAMpB,GAAmBoB,EAAqB,SAI9F,WACLG,GAAU,GACVC,EAAQla,QAAU,CAAEma,QAAQ,EAAOC,cAAc,MAElD,CAACN,EAAsBplB,EAAQ+kB,IAElClc,qBAAU,WACJ2c,EAAQla,QAAQma,OACdD,EAAQla,QAAQoa,eAAiBJ,IACnCK,GAAiB,SAAC5X,GAChB,IAAM8W,EAAI,YAAO9W,GAEjB,OADA8W,EAAKgB,UACEhB,KAETW,EAAQla,QAAQoa,aAAeJ,IAGjCK,GAAiB,SAAC5X,GAGhB,OAFIuX,EAAQvX,EAAK+X,MAAK,SAAC/S,EAAGgT,GAAJ,OAAUhT,EAAEiR,gBAAkB+B,EAAE/B,mBACjDjW,EAAK+X,MAAK,SAAC/S,EAAGgT,GAAJ,OAAUA,EAAE/B,gBAAkBjR,EAAEiR,mBACxC,YAAIjW,MAEbyX,EAAQla,QAAU,CAAEma,QAAQ,EAAMC,cAAc,MAGjD,CAACJ,IAQJ,OACE,oCACE,kBAAC1e,EAAA,EAAD,CAAMM,KAAK,SAASC,OAAO,YAA3B,yBAGA,kBAACuc,GAAA,EAAD,CAAStc,MAAM,UACf,kBAAClB,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aAAa4D,MAAM,UAAUzE,OAAQ,CAAEN,OAAQ,OAAQU,QAAS,QAC/E,kBAACyC,EAAA,EAAD,CAAMC,QAAQ,IAAI9C,OAAQ,CAAE4f,UAAW,MAAO9D,aAAc,WAC1D,kBAAChc,EAAA,EAAD,CAAM8N,OAAO,SAAS/M,IAAI,eACxB,kBAACL,EAAA,EAAD,CAAM6d,WAAS,GAAf,gBACA,kBAACxD,GAAA,EAAD,CAAUD,MAAOmD,EAAWna,SAhBb,SAACC,EAAD,GAAyB,IAAnBF,EAAkB,EAAlBA,MACf,OAAVA,GACFwa,EAAoBxa,IAc0CA,MAAOua,KAEjE,kBAACpe,EAAA,EAAD,CAAM8N,OAAO,SAAS/M,IAAI,cAAcb,OAAQ,CAAEP,MAAO,QACvD,kBAACe,EAAA,EAAD,0BACA,yBAAKP,MAAO,CAAER,MAAO,QACnB,kBAAC,KAAD,CACEkE,MAAOqb,EACPa,YAAY,EACZjc,SAAUqb,EACVa,OAAQ,YAA4D,IAAzDnc,EAAwD,EAAxDA,MAAOoc,EAAiD,EAAjDA,SAAUxiB,EAAuC,EAAvCA,MAAUyiB,EAA6B,6CACjE,OACE,kBAAC,KAAD,CACEC,UAAU,oBACVC,QAAO,UAAKvc,EAAL,KACPwE,QAAS4X,EACTI,UAAU,MACV/hB,IAAKb,GAEL,kBAAC,KAAD,eAAQoG,MAAOA,GAAWqc,UAOtC,kBAAClgB,EAAA,EAAD,CAAM8N,OAAO,UACX,kBAACpN,EAAA,EAAD,CAAM6d,WAAS,GAAf,SACA,kBAAC1c,EAAA,EAAD,CACE0W,KAAM6G,EAAS,kBAAC,gBAAD,MAAoB,kBAAC,cAAD,MACnClf,OAAQ,CAAEgB,MAAOoe,EAAQla,QAAQma,OAAS,UAAY,QACtDzO,MAAI,EACJsG,UAAQ,EACRrX,QAAS,WACPsf,GAAU,SAACxX,GAAD,OAAWA,UAK7B,kBAAC,GAAD,CACE/N,OAAQikB,EACRa,gBAAiBA,EACjBZ,mBAAoBA,EACpBa,eAAgBA,EAChBZ,UAAWA,IAEb,kBAACpc,EAAA,EAAD,CACEI,QAAQ,SACR/B,OAAQ,CAAEP,MAAO,OACjBmC,SAAO,EACPmC,SAAqC,IAA3B2a,EAAgBjiB,OAC1BoD,QAAS,WACPwB,IAAM,CAAE4C,OAAQ,OAAQgD,IAAK,sBAAuB7M,KAAMskB,IACvDpd,MAAK,WACJX,EAAS4W,MACTuG,EAAmB,OAGpBtc,OAAM,SAACC,GACNN,QAAQ5F,MAAMkG,YCpLjB2e,GAAkB,WAAO,IAAD,EACTle,mBAAS,IADA,mBAC5B1H,EAD4B,KACrB8L,EADqB,KAG7B+Z,EAAW9a,IAAMC,IAAI,eACrB8a,EAAY/a,IAAMC,IAAI,gBAmB5B,OAjBA/C,qBAAU,WACR8C,IAAMgb,IAAI,CAACF,EAAUC,IAClBhf,KACCiE,IAAMib,QAAO,WAAmB,IAAD,0CACfhmB,EADe,EACrBJ,KADqB,0CAEfR,EAFe,EAErBQ,KACRkM,EACE9L,EAAMuI,KAAI,SAAC9G,GAAD,4BACLA,EADK,CAERrC,OAAM,UAAEA,EAAOsX,MAAK,SAAC1J,GAAD,OAASwS,GAAaxS,EAAIzN,QAAUkC,EAAE5B,aAApD,aAAE,EAAuDkC,gBAKtEiF,OAAM,SAACC,GAAD,OAASN,QAAQ5F,MAAMkG,QAC/B,IAGD,yBAAKxB,MAAO,CAAE6J,SAAU,WAAYpK,OAAQ,SAC1C,kBAACI,EAAA,EAAD,CAAMe,IAAI,YAAY4f,MAAI,GACvBjmB,EAAMuI,KAAI,SAAC4C,GAAD,OACT,kBAAC,GAAD,CAAMvH,IAAKuH,EAAItL,GAAI8F,IAAKwF,EAAI/L,OAAQS,GAAIsL,EAAItL,GAAI8H,KAAMwD,EAAIxD,WAG9D,kBAACR,EAAA,EAAD,CACEC,SAAO,EACPC,OAAK,EACLC,UAAQ,EACRC,QAAS,kBAAC,UAAD,CAASjB,KAAK,UAAUgB,UAAQ,IACzC7B,MAAO,CACLR,MAAO,IACPC,OAAQ,IACRoK,SAAU,QACV4W,MAAO,QACPC,OAAQ,SAEVvQ,GAAIC,IACJjR,GAAG,oBAMLwhB,GAAO,SAAC,GAAoC,IAAlCzgB,EAAiC,EAAjCA,IAAK9F,EAA4B,EAA5BA,GAAI8H,EAAwB,EAAxBA,KACvB,OACE,kBAACrC,EAAA,EAAD,CAAMC,QAAM,EAAC4N,OAAO,SAAS9M,IAAI,YAAYuP,GAAIC,IAAMjR,GAAE,6CAAwC/E,IAC/F,yBAAK4F,MAAO,CAAER,MAAO,QAASC,OAAQ,UACpC,kBAACQ,EAAA,EAAD,CAAOC,IAAKA,EAAKH,OAAQ,CAAEP,MAAO,OAAQC,OAAQ,OAAQW,UAAW,YAEvE,kBAACG,EAAA,EAAD,CAAMM,KAAK,UAAUqB,KCvCrB0e,GAAiB,CACrBvmB,OAAQ,CACND,GAAI,KACJ8H,KAAM,cAER3H,MAAO,CACL,CACEH,GAAI,KACJ8H,KAAM,UAER,CACE9H,GAAI,KACJ8H,KAAM,UAER,CACE9H,GAAI,KACJ8H,KAAM,WAGV5H,SAAU,CACRF,GAAI,KACJ8H,KAAM,kBAIG2e,GAA+B,WAC1C,IAAMngB,EAAWC,cAD+B,EAEbqB,aAA4B,SAACvG,GAAD,OAAWA,EAAMxB,WAAxEC,EAFwC,EAExCA,UAAWoB,EAF6B,EAE7BA,MAAOnB,EAFsB,EAEtBA,KAEpB2L,EAQF3L,EARFC,GACAC,EAOEF,EAPFE,OACAC,EAMEH,EANFG,SACAC,EAKEJ,EALFI,MACAC,EAIEL,EAJFK,eACAC,EAGEN,EAHFM,iBACAC,EAEEP,EAFFO,iBACWomB,EACT3mB,EADFQ,UAX8C,EAagComB,GAC9E,WAd8C,mBAazCC,EAbyC,KAa1BC,EAb0B,KAaT3G,EAbS,KAaO4G,EAbP,OAgB0BH,GACxE,SACA,GAlB8C,mBAgBzCI,EAhByC,KAgB5BC,EAhB4B,KAgBbC,EAhBa,KAgBEC,EAhBF,OAoByCP,GAEvF,aAtB8C,mBAoBzCQ,EApByC,KAoBxBC,EApBwB,KAoBLC,EApBK,KAoBcC,EApBd,KAuB1CrT,EAAUC,cAvBgC,EAwBArM,oBAAS,GAxBT,mBAwBzC0f,EAxByC,KAwBvBC,EAxBuB,OAyBV3f,oBAAS,GAzBC,mBAyBzC4f,EAzByC,KAyB5BC,EAzB4B,KA2BhDtf,qBAAU,WACHwe,GAAkBG,GAAgBI,GACrC7gB,EAAS2E,QAEV,CAAC3E,EAAUsgB,EAAeO,EAAiBJ,IAE9C3e,qBAAU,WACJlI,GAAUonB,EAAwBpnB,GAClCC,EAAMiC,QAAQ8kB,EAAqB/mB,GACnCF,GAAQ6mB,EAAsB7mB,KACjC,CAACA,EAAQC,EAAUC,EAAO2mB,EAAuBQ,EAAyBJ,IAE7E,IAWMS,EAAU,SAACC,EAA4Bte,GAC3ChD,EpCgBqF,CACvF/E,K1BuCiC,sB0BtCjCC,QoClB6B,eAAKzB,EAAN,gBAAa6nB,EAAUte,OAG7Cue,GAAwBznB,GAAkBqnB,EAEhD,OACE,oCACE,kBAACthB,EAAA,EAAD,CAAMM,KAAK,SAASC,OAAO,YAA3B,uBAGA,kBAACuc,GAAA,EAAD,CAAStc,MAAM,UACdzF,GACC,kBAACgS,GAAA,EAAD,CAAOC,QAAM,EAACC,OAAO,iCAAiC1L,QAAO,UAAKxG,EAAM4G,KAAX,aAAoB5G,EAAMmS,WAEzF,kBAAC,GAAD,CAAiBoU,YAAaA,EAAaC,eAAgBA,IAC3D,kBAACjiB,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,YAAYiQ,OAAQ,CAAEyM,WAAY,SACjD,kBAAC,GAAD,CACE4E,WAAW,UACX/iB,GAAG,WACHuE,MAAOme,EAAcjB,GAAevmB,OAASigB,EAC7C6H,sBAAuBjB,EACvBvG,MAAOsG,EACPmB,YAAY,EACZP,YAAaA,IAEf,kBAAC,GAAD,CACEK,WAAW,QACX/iB,GAAG,SACHuE,MAAOme,EAAcjB,GAAermB,MAAQ8mB,EAC5Cc,sBAAuBb,EACvB3G,MAAOyG,EACPgB,YAAY,EACZP,YAAaA,IAEf,kBAAC,GAAD,CACEK,WAAW,YACX/iB,GAAG,aACHuE,MAAOme,EAAcjB,GAAetmB,SAAWmnB,EAC/CU,sBAAuBT,EACvB/G,MAAO6G,EACPY,YAAY,EACZP,YAAaA,IAEf,kBAACjU,GAAA,EAAD,CACE5Q,MAAM,oBACN+Q,QAASvT,EACTmJ,SAAU,SAACC,EAAD,OAAMmK,EAAN,EAAMA,QAAN,OAA0BgU,EAAQ,iBAAkBhU,IAC9DjK,SAAU+d,IAEZ,kBAACthB,EAAA,EAAD,CAAMuD,SAAUme,GAAhB,kBACA,kBAAC1hB,EAAA,EAAD,CAAMuD,SAAUme,GAAhB,WACW,IACT,kBAACze,EAAA,EAAD,CACE7H,KAAK,SACLmI,SAAUme,EACVI,QAAM,EACN3e,MAAOjJ,EACPkJ,SAAU,SAACC,EAAD,OAAMF,EAAN,EAAMA,MAAN,OAAwBqe,EAAQ,mBAAoBre,MAPlE,KAWA,kBAACnD,EAAA,EAAD,CAAMuD,SAAUme,GAAhB,WACW,IACT,kBAACze,EAAA,EAAD,CACE7H,KAAK,SACLmI,SAAUme,EACVI,QAAM,EACN3e,MAAOhJ,EACPiJ,SAAU,SAACC,EAAD,OAAMF,EAAN,EAAMA,MAAN,OAAwBqe,EAAQ,mBAAoBre,MAPlE,KAWA,kBAACnD,EAAA,EAAD,CAAMuD,SAAUme,GAAhB,kBACkB,IAChB,kBAACze,EAAA,EAAD,CACE7H,KAAK,SACLmI,SAAUme,EACVI,QAAM,EACN3e,MAAOod,EACPnd,SAAU,SAACC,EAAD,GAAyB,IAAnBF,EAAkB,EAAlBA,MACWke,EAApBle,EAAgB,IAErBqe,EAAQ,YAAare,MAGxBie,GAAoB,kBAACphB,EAAA,EAAD,CAAMjF,OAAK,GAAX,2BAEvB,kBAAC,IAAD,CAAM6D,GAAG,IAAT,0BACA,kBAACuC,EAAA,EAAD,CACEI,QAAQ,YACRH,SAAO,EACP/B,QAvGsB,WAC1Bc,EpCwD0B,SAC9BoF,EACA2b,EACAJ,EACA/G,GAJ8B,OAKb,SAAC5Z,EAAUkY,GAC5B,IAAM0J,EAA+B,OAAdxc,EACjBkB,EAAMsb,EAAc,yCAAuCxc,EAAvC,KAE1BpF,EApF0D,CAAE/E,K1B4D1B,yB0B0BlC,IAAMmjB,EAAclG,IAAW3e,QAAQE,KAEvC,OAAOmL,IAAM0B,EAAK,CAChB7M,KAAM,CACJG,SAAS,uCAAD,OAAyCmnB,EAAkBrnB,GAA3D,KACRG,MAAO8mB,EAAcve,KAAI,SAAC9G,GAAD,gDAA0CA,EAAE5B,GAA5C,QACzBC,OAAO,qCAAD,OAAuCigB,EAAelgB,GAAtD,KACNuL,aAAcmZ,EAAYlkB,SAC1BJ,eAAgBskB,EAAYtkB,eAC5BC,iBAAkBqkB,EAAYrkB,iBAC9BC,iBAAkBokB,EAAYpkB,iBAC9BC,UAAWmkB,EAAYnkB,WAEzBqJ,OAAQse,EAAiB,OAAS,MAClCC,QAAS,CACP,eAAgB,sBAGjBlhB,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KAGP,OAFAuG,EAxGsD,CAAE/E,K1BgE1B,yB0ByC9BkK,GAAS1L,EAAKC,IACPD,EAAKC,MAEbmH,OAAM,SAACC,GACNd,EA5G8D,CAAE/E,K1BoEnC,sB0BpE8DL,MA4GlEkG,QoC1FzBghB,CAAiB1c,EAAW2b,EAAmBJ,EAAe/G,IAE7DjZ,MAAK,SAACjH,GACa,qBAAPA,GAAoBiU,EAAQ3R,KAAR,+BAAqC4d,EAAepY,UAGpFX,OAAM,SAACvF,GAAD,OAAOA,MAgGV8H,WAAYwW,IAAmBmH,IAAsBJ,GAAiBnnB,KAAe2nB,EACrFvV,QAASpS,OAObuoB,GAAkB,SAAC,GAAkD,IAAhDZ,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,eACtC,OAAID,EAEA,kBAACngB,EAAA,EAAD,CACE3B,OAAQ,CACNiB,gBAAiB,UACjB,SAAU,CACRA,gBAAiB,WAEnB,UAAW,CACTA,gBAAiB,YAGrBc,QAAQ,OACRlC,QAAS,kBAAYkiB,GAAe,IACpCngB,SAAO,IAMX,kBAACwB,EAAA,EAAD,CACEpD,OAAQ,CAAE0C,QAAS,OAAQigB,cAAe,SAAUnf,WAAY,UAChEof,aAAa,SACbC,cAAc,4BACdze,UAAW,kBAAY2d,GAAe,IACtChgB,QACE,oCACE,kBAACjC,EAAA,EAAD,CAAM6N,OAAO,SAAS5N,QAAM,GAC1B,kBAAC,wBAAD,CACEe,KAAK,UACLd,OAAQ,kBAAwC,CAC9CgB,MADM,EAAG8hB,MAASC,cACGC,YAAYC,MAAMC,eAG3C,6BACE,wGACA,sFAKR5f,QACE,kBAAC3B,EAAA,EAAD,CACE3B,OAAQ,CACNiB,gBAAiB,UACjB,SAAU,CACRA,gBAAiB,WAEnB,UAAW,CACTA,gBAAiB,YAGrBc,QAAQ,aACRH,SAAO,OAQjB,SAASof,GACPmB,EACAE,GAEA,IAAMc,EAAcle,iBAA+B,IADuB,EAEhC/C,mBAA8B,IAFE,mBAEnEkhB,EAFmE,KAEpDC,EAFoD,OAGlCnhB,mBAAkBmgB,EAAa,GAAK,MAHF,mBAGnEiB,EAHmE,KAGrDC,EAHqD,OAI5CrhB,oBAAS,GAJmC,mBAInEqK,EAJmE,KAI1DC,EAJ0D,KA2C1E,OArCA/J,qBAAU,WACR+J,GAAW,GACXjG,MAAM,QAAD,OAAS4b,EAAT,MACF7gB,MAAK,SAACkF,GAAD,OAASA,EAAIC,UAClBnF,MAAK,SAAClH,GACLipB,EACEjpB,EAAK2I,KAAI,SAAC9G,GAAD,MAAQ,CACfwR,OAAQxR,EAAEkG,KACVJ,QAAS,CACP3D,IAAKnC,EAAE5B,SAIb8oB,EAAYje,QAAU9K,EACtBoS,GAAW,MAGZhL,OAAM,SAACC,GACN+K,GAAW,GACXrL,QAAQ5F,MAAMkG,QAEjB,CAAC0gB,IAgBG,CAAC5V,EAAS6W,EAAeE,EAdJ7U,uBAAY,SAACpU,GACvC,GAAI+f,MAAMC,QAAQhgB,GAAK,CACrB,IAAMmpB,EAAoBnpB,EAAGopB,QAAO,SAACC,EAAKC,GACxC,IAAMC,EAAmBT,EAAYje,QAAQgM,MAAK,SAACvL,GAAD,OAASA,EAAItL,GAAGwpB,SAAS,MAAQF,EAAIE,cAEvF,OADID,GAAkBF,EAAI/mB,KAAKinB,GACxBF,IACN,IACHH,EAAgBC,OACX,CACL,IAAMI,EAAmBT,EAAYje,QAAQgM,MAAK,SAACvL,GAAD,OAASA,EAAItL,GAAGwpB,SAAS,MAAQxpB,EAAGwpB,cAClFD,GAAkBL,EAAgBK,MAEvC,KAiBL,IAAME,GAAgD,SAAC,GAQnC,IAPlB3B,EAOiB,EAPjBA,WACA/iB,EAMiB,EANjBA,GACAuE,EAKiB,EALjBA,MACAye,EAIiB,EAJjBA,sBACAxH,EAGiB,EAHjBA,MACAyH,EAEiB,EAFjBA,WACAP,EACiB,EADjBA,YAaA,OACE,kBAAChiB,EAAA,EAAD,CAAM8N,OAAO,SAAS/M,IAAI,cACxB,kBAACL,EAAA,EAAD,CAAMR,OAAQ,CAAEP,MAAO,UAAvB,iBAA6C0iB,IAC5CL,EACC,kBAACjH,GAAA,EAAD,CAAUD,MAAOA,EAAOjX,MAAOwW,GAAoBxW,GAAQiY,SAAUyG,EAAYhf,MAAM,IAEvF,kBAACwX,GAAA,EAAD,CACED,MAAOA,EACPhX,SAnBiB,SAACC,EAAGzJ,GAC3B,GAAmB,OAAfA,EAAKuJ,MACT,GAAIyW,MAAMC,QAAQjgB,EAAKuJ,OAAQ,CAC7B,IAAMogB,EAAM3pB,EAAKuJ,MAAMZ,KAAI,SAAC4C,GAAD,OAASA,EAAI5D,QAAQ3D,OAChDgkB,EAAsB2B,OACjB,CAAC,IACE3lB,EAAQhE,EAAKuJ,MAAM5B,QAAnB3D,IACRgkB,EAAsBhkB,KAalBuF,MAAOwW,GAAoBxW,GAC3BiY,SAAUyG,IAGd,kBAAC,IAAD,CAAMjjB,GAAIA,GAAV,cAAsB+iB,MC7Vf6B,GAAU,WAAoB,IAAD,EACF9hB,mBAAS,CAC7C7H,GAAI,KACJ+D,IAAK,GACL6lB,UAAW,GACXC,uBAAwB,GACxBC,SAAU,GACVC,SAAU,KAP4B,mBACjCC,EADiC,KACpBC,EADoB,OASJpiB,mBAAS,CAC3CqiB,SAAS,EACTxiB,QAAS,KAX6B,mBASjCyiB,EATiC,KASrBC,EATqB,KAcxChiB,qBAAU,WACR8C,IAAMC,IAAI,kBACPlE,MAAK,YAAe,IAAZlH,EAAW,EAAXA,KACHA,EAAKqC,OAAS,GAChB6nB,EAAe,CACbjqB,GAAID,EAAK,GAAGC,GACZ+D,IAAKhE,EAAK,GAAGsqB,aACbT,UAAW7pB,EAAK,GAAGuqB,SACnBT,uBAAwB9pB,EAAK,GAAGwqB,0BAChCT,SAAU/pB,EAAK,GAAGyqB,UAClBT,SAAUhqB,EAAK,GAAG0qB,eAKvBtjB,OAAM,SAACC,GACNN,QAAQ5F,MAAMkG,QAEjB,IAyBH,OACE,kBAAC3B,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,aACf,uCACA,kBAACyc,GAAA,EAAD,CAAStc,MAAM,SACf,kBAACR,EAAA,EAAD,CAAMM,KAAK,QAAQC,OAAO,QAA1B,qCACqC,KAErC,kBAACjB,EAAA,EAAD,CAAM8N,OAAO,UACX,kBAACpN,EAAA,EAAD,CAAMM,KAAK,QAAQgQ,OAAQ,CAAErR,MAAO,UAApC,cAGA,kBAACgE,EAAA,EAAD,CACEE,MAAO0gB,EAAYJ,UACnBrgB,SAAU,SAACC,EAAD,OAAMF,EAAN,EAAMA,MAAN,OAAwB2gB,GAAe,SAAC3c,GAAD,sBAAgBA,EAAhB,CAAsBsc,UAAWtgB,WAGtF,kBAAC7D,EAAA,EAAD,CAAM8N,OAAO,UACX,kBAACpN,EAAA,EAAD,CAAMM,KAAK,QAAQgQ,OAAQ,CAAErR,MAAO,UAApC,QAGA,kBAACgE,EAAA,EAAD,CACEE,MAAO0gB,EAAYjmB,IACnBwF,SAAU,SAACC,EAAD,OAAMF,EAAN,EAAMA,MAAN,OAAwB2gB,GAAe,SAAC3c,GAAD,sBAAgBA,EAAhB,CAAsBvJ,IAAKuF,WAGhF,kBAAC7D,EAAA,EAAD,CAAM8N,OAAO,UACX,kBAACpN,EAAA,EAAD,CAAMM,KAAK,QAAQgQ,OAAQ,CAAErR,MAAO,UAApC,8BAGA,kBAACgE,EAAA,EAAD,CACEE,MAAO0gB,EAAYH,uBACnBtgB,SAAU,SAACC,EAAD,OAAMF,EAAN,EAAMA,MAAN,OACR2gB,GAAe,SAAC3c,GAAD,sBAAgBA,EAAhB,CAAsBuc,uBAAwBvgB,WAInE,kBAAC7D,EAAA,EAAD,CAAM8N,OAAO,UACX,kBAACpN,EAAA,EAAD,CAAMM,KAAK,QAAQgQ,OAAQ,CAAErR,MAAO,UAApC,cAGA,kBAACgE,EAAA,EAAD,CACEE,MAAO0gB,EAAYF,SACnBvgB,SAAU,SAACC,EAAD,OAAMF,EAAN,EAAMA,MAAN,OAAwB2gB,GAAe,SAAC3c,GAAD,sBAAgBA,EAAhB,CAAsBwc,SAAUxgB,WAGrF,kBAAC7D,EAAA,EAAD,CAAM8N,OAAO,UACX,kBAACpN,EAAA,EAAD,CAAMM,KAAK,QAAQgQ,OAAQ,CAAErR,MAAO,UAApC,cAGA,kBAACgE,EAAA,EAAD,CACEE,MAAO0gB,EAAYD,SACnBxgB,SAAU,SAACC,EAAD,OAAMF,EAAN,EAAMA,MAAN,OAAwB2gB,GAAe,SAAC3c,GAAD,sBAAgBA,EAAhB,CAAsByc,SAAUzgB,WAGrF,kBAAC7D,EAAA,EAAD,CAAMe,IAAI,aACR,kBAACc,EAAA,EAAD,CAAQC,SAAO,EAAC/B,QA9EP,WACb,IAAMklB,EAAoC,OAAnBV,EAAYhqB,GAC7B4M,EAAM8d,EAAc,yCAAuCV,EAAYhqB,GAAnD,KAE1BkL,IAAM0B,EAAK,CACT7M,KAAM,CACJsqB,aAAcL,EAAYjmB,IAC1BumB,SAAUN,EAAYJ,UACtBW,0BAA2BP,EAAYH,uBACvCW,UAAWR,EAAYF,SACvBW,UAAWT,EAAYD,UAEzBngB,OAAQ8gB,EAAiB,OAAS,QAEjCzjB,MAAK,WACJmjB,EAAc,CAAEF,SAAS,EAAMxiB,QAAS,iCAGzCP,OAAM,SAACC,GACNgjB,EAAc,CAAEF,SAAS,EAAOxiB,QAAQ,6BAAD,OAA+BN,EAAIoiB,kBA2DzC9f,SAAUihB,OAAOC,OAAOZ,GAAaa,MAAK,SAACjpB,GAAD,OAAQA,MAAnF,QAGA,kBAAC0F,EAAA,EAAD,CAAQC,SAAO,EAACwO,GAAIC,IAAMjR,GAAG,KAA7B,WAIDolB,EAAWziB,QACV,kBAACwL,GAAA,EAAD,CACEgX,QAASC,EAAWD,QACpB/W,QAASgX,EAAWD,QACpBxiB,QAASyiB,EAAWziB,QACpBya,aAAW,IAEX,OCrHG2I,GAAiB,WAC5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzI,KAAK,UAAU0I,UAAWtG,KACjC,kBAAC,IAAD,CAAOpC,KAAK,sBAAsB0I,UAAWjI,KAC7C,kBAAC,IAAD,CAAOT,KAAK,oBAAoB0I,UAAWzH,KAC3C,kBAAC,IAAD,CAAOjB,KAAK,aAAa0I,UAAWnI,KACpC,kBAAC,IAAD,CAAOP,KAAK,kBAAkB0I,UAAWpU,KACzC,kBAAC,IAAD,CAAO0L,KAAK,WAAW0I,UAAWpjB,KAClC,kBAAC,IAAD,CAAO0a,KAAK,gBAAgB0I,UAAWrJ,KACvC,kBAAC,IAAD,CAAOW,KAAK,SAAS0I,UAAWhF,KAChC,kBAAC,IAAD,CAAO1D,KAAK,sBAAsB0I,UAAWtE,KAC7C,kBAAC,IAAD,CAAOpE,KAAK,WAAW0I,UAAWpB,KAClC,kBAAC,IAAD,CAAOtH,KAAK,IAAI0I,UAAW1kB,M,UCqDlB2kB,GAhDQ,WAAO,IACpBzI,EAAahW,cAAbgW,SAER,GAAiB,MAAbA,EAAkB,OAAO,kBAACpc,EAAA,EAAD,CAAMQ,MAAM,SAAZ,QAHF,IAKnBskB,EAAe1I,EACpBlX,MAAM,KACNxJ,MAAM,GACNunB,QACC,SAACC,EAAKC,GACJ,IAAM7T,EAtCG,SAAC8M,GAChB,OAAQA,GACN,IAAK,UACH,MAAO,SACT,IAAK,QACH,MAAO,OACT,IAAK,YACH,MAAO,WACT,IAAK,WACH,MAAO,WACT,IAAK,QACH,MAAO,QACT,IAAK,SACH,MAAO,oBACT,IAAK,SACH,MAAO,UACT,IAAK,qBACH,MAAO,oBACT,IAAK,gBAEL,IAAK,eACH,OAAO,KACT,QACE,MAAwB,kBAAbA,EAA8B,UAClC,MAcS2I,CAAS5B,GACvB,IAAK7T,EAAO,OAAO4T,EAEnB,IAAMhH,EAAI,UAAMgH,EAAIhH,KAAV,YAAkBiH,GAE5B,MAAO,CACL2B,WAAW,GAAD,mBAAM5B,EAAI4B,YAAV,CAAsB,CAAExV,QAAO1Q,GAAIsd,KAC7CA,UAGJ,CAAE4I,WAAY,GAAI5I,KAAM,KAfpB4I,WAkBR,OACE,kBAACxlB,EAAA,EAAD,CAAMe,IAAI,eACR,kBAAC,IAAD,CAAMzB,GAAI,IAAKa,MAAO,CAAEe,MAAO,UAAWwkB,eAAgB,SACxD,kBAAChlB,EAAA,EAAD,cAED8kB,EAAWviB,KAAI,SAAC9G,EAAG+G,EAAGoY,GAGrB,OACE,kBAAC,WAAD,CAAUhd,IAAK4E,GACb,kBAACxC,EAAA,EAAD,CAAMQ,MAAM,SAAS,KACpBgC,IAAMoY,EAAI3e,OAAS,EAClB,kBAAC+D,EAAA,EAAD,CAAMQ,MAAM,SAAS/E,EAAE6T,OAEvB,kBAAC,IAAD,CAAM1Q,GAAE,UAAKnD,EAAEmD,IAAMa,MAAO,CAAEe,MAAO,UAAWwkB,eAAgB,SAC9D,kBAAChlB,EAAA,EAAD,KAAOvE,EAAE6T,cCpDnB2V,GAAU,SAAC,GAA8B,IAA5BtlB,EAA2B,EAA3BA,IAAKf,EAAsB,EAAtBA,GACtB,OACE,kBAAC,IAAD,CACEA,GAAIA,EACJa,MAAO,CAAEyC,QAAS,OAAQE,eAAgB,SAAUxC,QAAS,SAC7DslB,YAAa,CAAEzkB,gBAAiB,0BAEhC,kBAACf,EAAA,EAAD,CAAOC,IAAKA,EAAK2Q,OAAQ,CAAErR,MAAO,YAKzBN,mBA1BU,SAAC,GAA6B,IAA3Ba,EAA0B,EAA1BA,OAC1B,OACE,kBAAC2lB,GAAA,EAAD,CAAS3kB,MAAM,OAAO4kB,UAAQ,EAAC5lB,OAAM,eAAOA,EAAP,CAAeI,QAAS,EAAGmd,WAAY,SAC1E,kBAACzd,EAAA,EAAD,CAAMC,QAAM,EAACc,IAAI,YAAY8M,OAAO,UAClC,kBAAC,GAAD,CAASxN,IAAI,sBAAsBf,GAAG,eACtC,kBAAC,GAAD,CAASe,IAAI,oBAAoBf,GAAG,aACpC,kBAAC,GAAD,CAASe,IAAI,kBAAkBf,GAAG,WAClC,kBAAC,GAAD,CAASe,IAAI,oBAAoBf,GAAG,YACpC,kBAAC,GAAD,CAASe,IAAI,gCAAgCf,GAAG,6BCN3CymB,GAAuB,SAAC,GAAkB,IAAhBnV,EAAe,EAAfA,SACrC,OACE,kBAAC7N,EAAA,EAAD,CACEC,QAAQ,YACRgjB,KAAK,YACLhV,OAAQ,CAAEpR,OAAQ,SAClBM,OAAQ,CAAE4C,eAAgB,YAE1B,kBAAC,GAAD,MACA,kBAAC,GAAD,CACE5C,OAAQ,CACNoc,WAAY,aACZ2J,QAAS,aACTC,UAAW,oCACXC,OAAQ,KAIZ,kBAACN,GAAA,EAAD,CAAS3lB,OAAQ,CAAEoc,WAAY,SAAUhc,QAAS,SAChD,kBAAC,GAAD,MACCsQ,KAMHwV,GAAa,WACjB,OACE,kBAACpmB,EAAA,EAAD,CACE2E,MAAM,UACNmJ,OAAO,SACPxN,QAAQ,iBACRJ,OAAQ,CACNiB,gBAAiB,UACjBmb,WAAY,aACZ4J,UAAW,oCACXC,OAAQ,EACR5J,SAAU,OACVjc,QAAS,cAGX,kBAACN,EAAA,EAAD,CAAMe,IAAI,YAAY+M,OAAO,UAC3B,kBAAC,WAAD,CAAU9M,KAAK,QAAQd,OAAQ,CAAEgB,MAAO,WACxC,kBAAC,IAAD,CAAS5B,GAAI,IAAKa,MAAO,CAAEulB,eAAgB,SACzC,kBAAChlB,EAAA,EAAD,CAAMQ,MAAM,SAAZ,oBAGJ,kBAAClB,EAAA,EAAD,CAAM8N,OAAO,SAASD,OAAO,MAAM9M,IAAI,aAAab,OAAQ,CAAEN,OAAQ,SACpE,kBAAC,IAAD,CAAMN,GAAG,WAAWa,MAAO,CAAEP,OAAQ,SACnC,kBAACQ,EAAA,EAAD,CAAOF,OAAQ,CAAEN,OAAQ,QAAUS,IAAI,wBAEzC,kBAACK,EAAA,EAAD,CAAMQ,MAAM,SAAZ,WCvDF8hB,GAAoB,CACxBC,cAAe,CACboD,OAAQ,CACNlD,MAAO,CACL,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UAGXD,YAAa,CACXC,MAAO,CACLC,WAAY,UACZkD,WAAY,UACZrV,OAAQ,UACRsV,OAAQ,OACRC,gBAAiB,UACjBC,gBAAiB,UACjBC,YAAa,UACbC,YAAa,OACbC,iBAAkB,UAClBC,iBAAkB,UAClBC,aAAc,UACdC,kBAAc9f,EACd+f,gBAAiB,UACjBC,gBAAiB,UACjBC,YAAa,OACbC,iBAAalgB,EACbmgB,kBAAmB,UACnBC,kBAAmB,UACnBC,cAAe,UACfC,mBAAetgB,EACfugB,mBAAoB,UACpBC,mBAAoB,UACpBC,eAAgB,UAChBC,oBAAgB1gB,EAChB2gB,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,OACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,QAAS,UACTC,iBAAkB,OAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,mBAAoB,OACpBC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UACnBC,cAAe,UACfC,cAAe,UACfC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,OAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,kBAAmB,OACnBC,aAAc,UACdC,oBAAqB,UACrBC,oBAAqB,cAShBC,GAAUC,sBAAYC,SAAOC,MAAO7G,I,sEC/E7C8G,GAAc,KACdC,GAAc,KA2CLC,GAHJ,CAAEF,eAAaC,eAAaE,WA3BhB,SAACC,EAA4BC,GAC9C,IAAKA,EACH,MAAM,IAAIhkB,MAAM,0CAElB,IAAK+jB,EACH,MAAM,IAAI/jB,MAAM,6EAGlB2jB,GAAc,IAAIM,MAElBL,GAAc,IAAIM,KAAoB,CACpCC,OAAQ,CACNJ,qBACAK,iBAAkB,EAClBC,sBAAsB,EACtBC,WAAY,CAACX,IACbY,gBAAgB,gBACbZ,GAAYa,WAAa,CACxBnc,QAAS2b,QAMLS,oBC9BVC,G,+MACJjvB,MAAQ,CACNkvB,aAAa,G,mEAGY,IACjBtc,EAAY8D,KAAKyY,MAAjBvc,QACAsc,EAAgBxY,KAAK1W,MAArBkvB,YACFE,EAAgC1Y,KAAKyY,MAAMb,oBAC5CY,GAAeG,QAAQD,IAAkCC,QAAQzc,KACpEwb,GAAGC,WAAWe,EAA+Bxc,GAC7C8D,KAAK4Y,SAAS,CAAEJ,aAAa,KAG/BxY,KAAKyY,MAAMI,U,+BAGQ,IACXva,EAAa0B,KAAKyY,MAAlBna,SACR,OAAO,oCAAGA,O,GAnBkBwa,aAuBjBC,eAAWC,aAAetB,GAAGF,YAAae,KCF1CU,GAvBC,WAGd,OACE,kBAACC,EAAA,EAAD,CAAUxI,MAAO0G,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEyB,MAAO,WFgCwBpB,IE7B/BG,mBAAmB,wCAEnB,yBAAKuB,UAAU,OACb,kBAAC,GAAD,KACE,kBAAC,GAAD,YCXMR,QACW,cAA7BviB,OAAOjO,SAASkO,UAEe,UAA7BD,OAAOjO,SAASkO,UAEhBD,OAAOjO,SAASkO,SAAS+iB,MACvB,2D,OCRuBhtB,EAAehF,GAApCuF,G,GAAAA,MAAOE,G,GAAAA,UAEfwsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAU5sB,MAAOA,IACf,kBAAC,IAAD,CAAawN,QAAS,0CAAsBtN,UAAWA,IACrD,kBAAC,GAAD,SAINwI,SAASmkB,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzqB,MAAK,SAAA0qB,GACJA,EAAaC,gBAEdzqB,OAAM,SAAAjG,GACL4F,QAAQ5F,MAAMA,EAAMmS,c","file":"static/js/main.0cceccda.chunk.js","sourcesContent":["import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport type { State } from '../State';\n\nexport type Project = {\n  isLoading: boolean;\n  trainingLog: string;\n  data: ProjectData;\n  inferenceMetrics: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n  };\n  trainingMetrics: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n  status: Status;\n  error: Error;\n};\n\nexport enum Status {\n  None = 'none',\n  WaitTraining = 'waitTraining',\n  FinishTraining = 'finishTraining',\n  TrainingFailed = 'trainingFailed',\n  StartInference = 'startInference',\n}\n\nexport type Consequence = {\n  precision: number;\n  recall: number;\n  mAP: number;\n};\n\nexport type ProjectData = {\n  id: number;\n  camera: any;\n  location: any;\n  parts: any[];\n  needRetraining: boolean;\n  accuracyRangeMin: number;\n  accuracyRangeMax: number;\n  maxImages: number;\n  modelUrl: string;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_PROJECT_REQUEST = 'GET_PROJECT_REQUEST';\nexport type GetProjectRequestAction = {\n  type: typeof GET_PROJECT_REQUEST;\n};\n\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\nexport type GetProjectSuccessAction = {\n  type: typeof GET_PROJECT_SUCCESS;\n  payload: {\n    project: ProjectData;\n  };\n};\n\nexport const GET_PROJECT_FAILED = 'GET_PROJECT_FAILED';\nexport type GetProjectFailedAction = {\n  type: typeof GET_PROJECT_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_LOG_REQUEST = 'GET_TRAINING_LOG_REQUEST';\nexport type GetTrainingLogRequesAction = {\n  type: typeof GET_TRAINING_LOG_REQUEST;\n};\n\nexport const GET_TRAINING_LOG_SUCCESS = 'GET_TRAINING_LOG_SUCCESS';\nexport type GetTrainingLogSuccessAction = {\n  type: typeof GET_TRAINING_LOG_SUCCESS;\n  payload: {\n    trainingLog: string;\n    newStatus: Status;\n  };\n};\n\nexport const GET_TRAINING_LOG_FAILED = 'GET_TRAINING_LOG_FAILED';\nexport type GetTrainingLogFailedAction = {\n  type: typeof GET_TRAINING_LOG_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_METRICS_REQUEST = 'GET_TRAINING_METRICS_REQUEST';\nexport type GetTrainingMetricsRequestAction = {\n  type: typeof GET_TRAINING_METRICS_REQUEST;\n};\n\nexport const GET_TRAINING_METRICS_SUCCESS = 'GET_TRAINING_METRICS_SUCCESS';\nexport type GetTrainingMetricsSuccessAction = {\n  type: typeof GET_TRAINING_METRICS_SUCCESS;\n  payload: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n};\n\nexport const GET_TRAINING_METRICS_FAILED = 'GET_TRAINING_METRICS_FAILED';\nexport type GetTrainingMetricsFailedAction = {\n  type: typeof GET_TRAINING_METRICS_FAILED;\n  error: Error;\n};\n\nexport const GET_INFERENCE_METRICS_REQUEST = 'GET_TRAINING_INFERENCE_REQUEST';\nexport type GetInferenceMetricsRequestAction = {\n  type: typeof GET_INFERENCE_METRICS_REQUEST;\n};\n\nexport const GET_INFERENCE_METRICS_SUCCESS = 'GET_INFERENCE_METRICS_SUCCESS';\nexport type GetInferenceMetricsSuccessAction = {\n  type: typeof GET_INFERENCE_METRICS_SUCCESS;\n  payload: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n  };\n};\n\nexport const GET_INFERENCE_METRICS_FAILED = 'GET_INFERENCE_METRICS_FAILED';\nexport type GetInferenceMetricsFailedAction = {\n  type: typeof GET_INFERENCE_METRICS_FAILED;\n  error: Error;\n};\n\nexport const POST_PROJECT_REQUEST = 'POST_PROJECT_REQUEST';\nexport type PostProjectRequestAction = {\n  type: typeof POST_PROJECT_REQUEST;\n};\n\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\nexport type PostProjectSuccessAction = {\n  type: typeof POST_PROJECT_SUCCESS;\n};\n\nexport const POST_PROJECT_FALIED = 'POST_PROJECT_FALIED';\nexport type PostProjectFaliedAction = {\n  type: typeof POST_PROJECT_FALIED;\n  error: Error;\n};\n\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport type DeleteProjectSuccessAction = {\n  type: typeof DELETE_PROJECT_SUCCESS;\n};\n\nexport const DELETE_PROJECT_FALIED = 'DELETE_PROJECT_FALIED';\nexport type DeleteProjectFaliedAction = {\n  type: typeof DELETE_PROJECT_FALIED;\n};\n\nexport const UPDATE_PROJECT_DATA = 'UPDATE_PROJECT_DATA';\nexport type UpdateProjectDataAction = {\n  type: typeof UPDATE_PROJECT_DATA;\n  payload: ProjectData;\n};\n\nexport const START_INFERENCE = 'START_INFERENCE';\nexport type StartInferenceAction = {\n  type: typeof START_INFERENCE;\n};\n\nexport const STOP_INFERENCE = 'STOP_INFERENCE';\nexport type StopInferenceAction = {\n  type: typeof STOP_INFERENCE;\n};\n\nexport type ProjectActionTypes =\n  | GetProjectRequestAction\n  | GetProjectSuccessAction\n  | GetProjectFailedAction\n  | GetTrainingLogRequesAction\n  | GetTrainingLogSuccessAction\n  | GetTrainingLogFailedAction\n  | PostProjectRequestAction\n  | PostProjectSuccessAction\n  | PostProjectFaliedAction\n  | DeleteProjectSuccessAction\n  | DeleteProjectFaliedAction\n  | UpdateProjectDataAction\n  | GetTrainingMetricsRequestAction\n  | GetTrainingMetricsSuccessAction\n  | GetTrainingMetricsFailedAction\n  | GetInferenceMetricsRequestAction\n  | GetInferenceMetricsSuccessAction\n  | GetInferenceMetricsFailedAction\n  | StartInferenceAction\n  | StopInferenceAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type ProjectThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, Action<string>>;\n","import { initialState } from '../State';\nimport {\n  PartActionTypes,\n  ADD_CAPTURED_IMAGE,\n  Part,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\n\nconst partReducer = (state = initialState.part, action: PartActionTypes): Part => {\n  switch (action.type) {\n    case ADD_CAPTURED_IMAGE:\n      return { ...state, capturedImages: [...state.capturedImages, action.payload.newCapturedImage] };\n    case UPDATE_CAPTURED_IMAGES:\n      return { ...state, capturedImages: action.payload.capturedImages };\n    default:\n      return state;\n  }\n};\n\ntype PartReducerType = typeof partReducer;\nconst checkIfImagesCountIsValidToTrain = (reducer: PartReducerType) => (\n  state = initialState.part,\n  action: PartActionTypes,\n): Part => {\n  const newState = reducer(state, action);\n  const isValid = newState.capturedImages.filter((image) => image.labels).length >= 15;\n  return { ...newState, isValid };\n};\n\nexport default checkIfImagesCountIsValidToTrain(partReducer);\n","// * Request Operation\nexport const REQUEST_ANNOTATION_FAILURE = 'REQUEST_ANNOTATION_FAILURE';\nexport type RequestAnnotationSuccessAction = { type: typeof REQUEST_ANNOTATION_SUCCESS; payload: any };\nexport const REQUEST_ANNOTATION_SUCCESS = 'REQUEST_ANNOTATION_SUCCESS';\nexport type RequestAnnotationFailureAction = { type: typeof REQUEST_ANNOTATION_FAILURE };\n\n// * Store Operation\nexport const CREATE_ANNOTATION = 'CREATE_ANNOTATION';\nexport type CreateAnnotationAction = { type: typeof CREATE_ANNOTATION; payload: { annotation: Annotation } };\nexport const UPDATE_CREATING_ANNOTATION = 'UPDATE_CREATING_ANNOTATION';\nexport type UpdateCreatingAnnotationAction = {\n  type: typeof UPDATE_CREATING_ANNOTATION;\n  payload: { updater: (annotation: Annotation) => Annotation };\n};\nexport const UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nexport type UpdateAnnotationAction = {\n  type: typeof UPDATE_ANNOTATION;\n  payload: { annotation: Annotation; index: number };\n};\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport type RemoveAnnotationAction = {\n  type: typeof REMOVE_ANNOTATION;\n  payload: { index: number };\n};\nexport const RESET_ANNOTATION = 'RESET_ANNOTATION';\nexport type ResetAnnotationAction = {\n  type: typeof RESET_ANNOTATION;\n};\n\nexport type AnnotationAction =\n  | RequestAnnotationSuccessAction\n  | RequestAnnotationFailureAction\n  | CreateAnnotationAction\n  | UpdateCreatingAnnotationAction\n  | UpdateAnnotationAction\n  | RemoveAnnotationAction\n  | ResetAnnotationAction;\n\nexport type Position2D = {\n  x: number;\n  y: number;\n};\nexport type BoxLabel = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\nexport type Size2D = { width: number; height: number };\nexport type Annotation = {\n  label: BoxLabel;\n  attribute: string;\n  annotationState: AnnotationState;\n};\n\nexport enum AnnotationState {\n  Empty = 'Empty',\n  P1Added = 'P1Added',\n  Finish = 'Finish',\n}\n\nexport enum LabelingCursorStates {\n  default = 'default',\n  pointer = 'pointer',\n  crosshair = 'crosshair',\n  neswResize = 'nesw-resize',\n  nwseResize = 'nwse-resize',\n}\nexport interface Box2dComponentProps {\n  workState: WorkState;\n  scale: number;\n  onSelect: Function;\n  annotation: Annotation;\n  annotationIndex: number;\n  selected: boolean;\n  visible?: boolean;\n  dispatch: any;\n  changeCursorState?: (cursorType?: LabelingCursorStates) => void;\n  // instanceID: number;\n}\nexport type BoxObject = {\n  init: () => Annotation;\n  createWithPoint: (point: Position2D, attribute: string) => Annotation;\n  add: (point: Position2D, arg1: Annotation) => Annotation;\n  setVerticesToValidValue: (arg0: Annotation) => Annotation;\n  setVerticesToInt: (arg0: Annotation) => Annotation;\n  setVerticesPointsOrder: (arg0: Annotation) => Annotation;\n};\n\nexport enum WorkState {\n  Creating = 'Creating',\n  Selecting = 'Selecting',\n  None = 'None',\n}\n\nexport enum LabelingType {\n  SingleAnnotation = 0,\n  MultiAnnotation = 1,\n}\n","import { Annotation } from './labelingPage/labelingPageTypes';\nimport { Camera } from './camera/cameraTypes';\nimport { Part } from './part/partTypes';\nimport { Location } from './location/locationTypes';\nimport { Project, Status } from './project/projectTypes';\nimport { LabelImage } from './image/imageTypes';\n\nexport interface State {\n  dialogIsOpen: boolean;\n  cameras: Camera[];\n  locations: Location[];\n  labelingPageState: LabelingPageState;\n  part: Part;\n  project: Project;\n  images: LabelImage[];\n}\n\nexport type LabelingPageState = { annotations: Annotation[] };\n\nexport const initialState: State = {\n  dialogIsOpen: false,\n  cameras: [],\n  locations: [],\n  images: [],\n  labelingPageState: { annotations: [] },\n  part: {\n    capturedImages: [],\n    isValid: true,\n  },\n  project: {\n    isLoading: false,\n    data: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 50,\n      modelUrl: '',\n    },\n    trainingMetrics: {\n      prevConsequence: null,\n      curConsequence: null,\n    },\n    inferenceMetrics: {\n      successRate: null,\n      successfulInferences: null,\n      unIdetifiedItems: null,\n    },\n    status: Status.None,\n    error: null,\n    trainingLog: '',\n  },\n};\n","import {\n  GET_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  POST_CAMERA_SUCCESS,\n  Camera,\n  CameraAction,\n  DELETE_CAMERA_SUCCESS,\n} from './cameraTypes';\nimport { initialState } from '../State';\n\nconst camerasReducer = (state = initialState.cameras, action: CameraAction): Camera[] => {\n  switch (action.type) {\n    case GET_CAMERA_SUCCESS:\n      return action.payload;\n    case REQUEST_CAMERA_FAILURE:\n      return state;\n    case POST_CAMERA_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_CAMERA_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default camerasReducer;\n","// Describing the shape of the camera's slice of state\nexport type Camera = { id?: number; name: string; rtsp: string; model_name: string; area?: string };\n\n// Describing the different ACTION NAMES available\nexport const GET_CAMERA_SUCCESS = 'GET_CAMERA_SUCCESS';\nexport const POST_CAMERA_SUCCESS = 'POST_CAMERA_SUCCESS';\nexport const DELETE_CAMERA_SUCCESS = 'DELETE_CAMERA_SUCCESS';\nexport const REQUEST_CAMERA_FAILURE = 'REQUEST_CAMERA_FAILURE';\n\nexport type GetCamerasSuccess = { type: typeof GET_CAMERA_SUCCESS; payload: Camera[] };\nexport type PostCameraSuccess = { type: typeof POST_CAMERA_SUCCESS; payload: Camera };\nexport type DeleteCameraSuccess = { type: typeof DELETE_CAMERA_SUCCESS; payload: { id: number } };\nexport type RequestCamerasFailure = { type: typeof REQUEST_CAMERA_FAILURE };\n\nexport type CameraAction =\n  | GetCamerasSuccess\n  | PostCameraSuccess\n  | DeleteCameraSuccess\n  | RequestCamerasFailure;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { LabelImage } from '../image/imageTypes';\n\n// Describing the shape of the chat's slice of state\nexport type Part = { capturedImages: LabelImage[]; isValid: boolean };\n\n// Describing the different ACTION NAMES available\nexport const ADD_CAPTURED_IMAGE = 'ADD_CAPTURED_IMAGE';\n\nexport type AddCapturedImageAction = {\n  type: typeof ADD_CAPTURED_IMAGE;\n  payload: {\n    newCapturedImage: LabelImage;\n  };\n};\n\nexport const UPDATE_CAPTURED_IMAGES = 'UPDATE_CAPTURED_IMAGES';\n\nexport type UpdateCapturedImageAction = {\n  type: typeof UPDATE_CAPTURED_IMAGES;\n  payload: {\n    capturedImages: LabelImage[];\n  };\n};\n\nexport type PartActionTypes = AddCapturedImageAction | UpdateCapturedImageAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type PartThunk<ReturnType = void> = ThunkAction<ReturnType, Part, unknown, Action<string>>;\n","import {\n  AnnotationState,\n  UPDATE_ANNOTATION,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  REMOVE_ANNOTATION,\n  AnnotationAction,\n  RESET_ANNOTATION,\n} from './labelingPageTypes';\nimport { initialState, LabelingPageState } from '../State';\n\nconst labelingPageStateReducer = (\n  state = initialState.labelingPageState,\n  action: AnnotationAction,\n): LabelingPageState => {\n  const newState = state;\n  switch (action.type) {\n    case REQUEST_ANNOTATION_SUCCESS:\n      newState.annotations = action.payload.annotations;\n      break;\n    case REQUEST_ANNOTATION_FAILURE:\n      break;\n    case CREATE_ANNOTATION:\n      newState.annotations.push(action.payload.annotation);\n      break;\n    case UPDATE_CREATING_ANNOTATION:\n      {\n        const creatingAnnotation = action.payload.updater(\n          newState.annotations[newState.annotations.length - 1],\n        );\n\n        if (creatingAnnotation.annotationState === AnnotationState.Finish) {\n          if (\n            (creatingAnnotation.label.x1 | 0) === (creatingAnnotation.label.x2 | 0) &&\n            (creatingAnnotation.label.y1 | 0) === (creatingAnnotation.label.y2 | 0)\n          ) {\n            newState.annotations.pop();\n          } else {\n            newState.annotations[newState.annotations.length - 1] = creatingAnnotation;\n            newState.annotations = [...newState.annotations];\n          }\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION:\n      newState.annotations[action.payload.index] = action.payload.annotation;\n      break;\n    case REMOVE_ANNOTATION:\n      newState.annotations = newState.annotations\n        .slice(0, action.payload.index)\n        .concat(newState.annotations.slice(action.payload.index + 1));\n      break;\n    case RESET_ANNOTATION:\n      newState.annotations = initialState.labelingPageState.annotations;\n      break;\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport default labelingPageStateReducer;\n","import {\n  GET_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  POST_LOCATION_SUCCESS,\n  Location,\n  LocationAction,\n} from './locationTypes';\nimport { initialState } from '../State';\n\nconst locationsReducer = (state = initialState.locations, action: LocationAction): Location[] => {\n  switch (action.type) {\n    case GET_LOCATION_SUCCESS:\n      return action.payload;\n    case REQUEST_LOCATION_FAILURE:\n      return state;\n    case POST_LOCATION_SUCCESS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default locationsReducer;\n","// Describing the shape of the loaction's slice of state\nexport type Location = {\n  id?: number;\n  name: string;\n  coordinates: string;\n  description: string;\n  projectId?: number;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const REQUEST_LOCATION_FAILURE = 'REQUEST_LOCATION_FAILURE';\nexport const POST_LOCATION_SUCCESS = 'POST_LOCATION_SUCCESS';\n\nexport type GetLocationsSuccess = { type: typeof GET_LOCATION_SUCCESS; payload: Location[] };\nexport type RequestLocationsFailure = { type: typeof REQUEST_LOCATION_FAILURE };\nexport type PostLocationSuccess = { type: typeof POST_LOCATION_SUCCESS; payload: Location };\n\nexport type LocationAction = GetLocationsSuccess | RequestLocationsFailure | PostLocationSuccess;\n","import {\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n  DialogIsOpenAction,\n} from './dialogIsOpenTypes';\nimport { initialState } from '../State';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import { initialState } from '../State';\nimport {\n  Project,\n  ProjectActionTypes,\n  GET_PROJECT_SUCCESS,\n  GET_PROJECT_FAILED,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FALIED,\n  GET_PROJECT_REQUEST,\n  UPDATE_PROJECT_DATA,\n  POST_PROJECT_REQUEST,\n  GET_TRAINING_LOG_REQUEST,\n  GET_TRAINING_LOG_SUCCESS,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GET_TRAINING_METRICS_REQUEST,\n  GET_TRAINING_METRICS_SUCCESS,\n  GET_TRAINING_METRICS_FAILED,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GET_INFERENCE_METRICS_FAILED,\n} from './projectTypes';\n\nconst projectReducer = (state = initialState.project, action: ProjectActionTypes): Project => {\n  switch (action.type) {\n    case GET_PROJECT_REQUEST:\n      return { ...state, isLoading: true, error: null };\n    case GET_PROJECT_SUCCESS:\n      return { ...state, isLoading: false, data: { ...action.payload.project }, error: null };\n    case GET_PROJECT_FAILED:\n      return { ...state, isLoading: false, error: action.error };\n    case POST_PROJECT_REQUEST:\n      return { ...state, isLoading: true };\n    case POST_PROJECT_SUCCESS:\n      return { ...state, isLoading: false };\n    case POST_PROJECT_FALIED:\n      return { ...state, isLoading: false, error: action.error };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n        },\n        inferenceMetrics: {\n          successRate: 0,\n          successfulInferences: 0,\n          unIdetifiedItems: 0,\n        },\n        trainingMetrics: {\n          curConsequence: null,\n          prevConsequence: null,\n        },\n        trainingLog: '',\n        status: Status.None,\n        error: null,\n      };\n    case DELETE_PROJECT_FALIED:\n      return { ...state };\n    case UPDATE_PROJECT_DATA:\n      return { ...state, data: action.payload };\n    case GET_TRAINING_LOG_REQUEST:\n      return {\n        ...state,\n      };\n    case GET_TRAINING_LOG_SUCCESS:\n      return {\n        ...state,\n        trainingLog: action.payload.trainingLog,\n        status: action.payload.newStatus,\n      };\n    case GET_TRAINING_LOG_FAILED:\n      return {\n        ...state,\n        trainingLog: '',\n        data: { ...state.data },\n        status: Status.TrainingFailed,\n        error: action.error,\n      };\n    case GET_TRAINING_METRICS_REQUEST:\n      return state;\n    case GET_TRAINING_METRICS_SUCCESS:\n      return {\n        ...state,\n        trainingMetrics: action.payload,\n        status: Status.StartInference,\n      };\n    case GET_TRAINING_METRICS_FAILED:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case GET_INFERENCE_METRICS_REQUEST:\n      return state;\n    case GET_INFERENCE_METRICS_SUCCESS:\n      return { ...state, inferenceMetrics: action.payload };\n    case GET_INFERENCE_METRICS_FAILED:\n      return { ...state, error: action.error };\n    default:\n      return { ...state };\n  }\n};\n\nexport default projectReducer;\n","import {\n  GET_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  POST_LABEL_IMAGE_SUCCESS,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  LabelImageAction,\n  LabelImage,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n} from './imageTypes';\nimport { initialState } from '../State';\n\nconst labelImagesReducer = (state = initialState.images, action: LabelImageAction): LabelImage[] => {\n  switch (action.type) {\n    case GET_LABEL_IMAGE_SUCCESS:\n      return action.payload;\n    case REQUEST_LABEL_IMAGE_FAILURE:\n      return state;\n    case POST_LABEL_IMAGE_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_LABEL_IMAGE_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    case UPDATE_LABEL_IMAGE_ANNOTATION: {\n      const newState = [...state];\n      const updatedImageIdx = newState.findIndex((e) => e.id === action.payload.id);\n      newState[updatedImageIdx] = {\n        ...newState[updatedImageIdx],\n        labels: action.payload.labels,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default labelImagesReducer;\n","// Describe the shape of the labelImage's slice of state\nexport type LabelImage = {\n  id?: number;\n  image: string;\n  labels: string;\n  part: string;\n  is_relabel: boolean;\n  confidence: number;\n};\n\n// Describe the different ACTION NAMES available\nexport const GET_LABEL_IMAGE_SUCCESS = 'GET_LABEL_IMAGE_SUCCESS';\nexport const POST_LABEL_IMAGE_SUCCESS = 'POST_LABEL_IMAGE_SUCCESS';\nexport const DELETE_LABEL_IMAGE_SUCCESS = 'DELETE_LABEL_IMAGE_SUCCESS';\nexport const REQUEST_LABEL_IMAGE_FAILURE = 'REQUEST_LABEL_IMAGE_FAILURE';\nexport const UPDATE_LABEL_IMAGE_ANNOTATION = 'UPDATE_LABEL_IMAGE_ANNOTATION';\n\nexport type GetLabelImagesSuccess = { type: typeof GET_LABEL_IMAGE_SUCCESS; payload: LabelImage[] };\nexport type PostLabelImageSuccess = { type: typeof POST_LABEL_IMAGE_SUCCESS; payload: LabelImage };\nexport type DeleteLabelImageSuccess = { type: typeof DELETE_LABEL_IMAGE_SUCCESS; payload: { id: number } };\nexport type RequestLabelImagesFailure = { type: typeof REQUEST_LABEL_IMAGE_FAILURE };\nexport type UpdateLabelImageAnnotation = {\n  type: typeof UPDATE_LABEL_IMAGE_ANNOTATION;\n  payload: { id: number; labels: any };\n};\n\nexport type LabelImageAction =\n  | GetLabelImagesSuccess\n  | PostLabelImageSuccess\n  | DeleteLabelImageSuccess\n  | RequestLabelImagesFailure\n  | UpdateLabelImageAnnotation;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport camerasReducer from './camera/cameraReducer';\nimport partReducer from './part/partReducer';\nimport labelingPageStateReducer from './labelingPage/labelingPageReducer';\nimport locationsReducer from './location/locationReducer';\nimport dialogIsOpenReducer from './dialog/dialogIsOpenReducer';\nimport projectReducer from './project/projectReducer';\nimport labelImagesReducer from './image/imageReducer';\n\nconst rootReducer = combineReducers({\n  cameras: camerasReducer,\n  locations: locationsReducer,\n  part: partReducer,\n  labelingPageState: labelingPageStateReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  project: projectReducer,\n  images: labelImagesReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State } from './State';\nimport { persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React, { FC, memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex, Text, Image } from '@fluentui/react-northstar';\n\ntype BgImgStyle = {\n  backgroundSize?: '60%';\n  backgroundPosition?: 'center';\n  backgroundRepeat?: 'no-repeat';\n};\ninterface ImageLinkProps {\n  to?: string;\n  imgSrc?: string;\n  defaultSrc?: string;\n  bgImgSrc?: string;\n  label?: string;\n  imgPadding?: string;\n  width: string;\n  height?: string;\n  bgImgStyle?: BgImgStyle;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst ImageLink: FC<ImageLinkProps> = ({\n  to = '',\n  imgSrc,\n  defaultSrc,\n  bgImgSrc,\n  label = '',\n  imgPadding = '0.625em',\n  width = '6.25em',\n  height = '6.25em',\n  bgImgStyle,\n  pointerCursor = false,\n  onClick,\n}) => {\n  return (\n    <Flex column styles={{ width }}>\n      {to === '' ? (\n        <div style={{ height }} onClick={onClick}>\n          <Image\n            src={imgSrc ?? defaultSrc}\n            styles={{\n              padding: imgPadding,\n              height: '100%',\n              objectFit: 'contain',\n              backgroundImage: `url(${bgImgSrc})`,\n              cursor: pointerCursor ? 'pointer' : 'default',\n              ...bgImgStyle,\n            }}\n          />\n        </div>\n      ) : (\n        <Link to={to}>\n          <div style={{ height }} onClick={onClick}>\n            <Image\n              src={imgSrc ?? defaultSrc}\n              styles={{\n                padding: imgPadding,\n                height: '100%',\n                objectFit: 'contain',\n                backgroundImage: `url(${bgImgSrc})`,\n                ...bgImgStyle,\n              }}\n            />\n          </div>\n        </Link>\n      )}\n      <Text align=\"center\">{label}</Text>\n    </Flex>\n  );\n};\n\nexport default memo(ImageLink);\n","import React, { FC } from 'react';\nimport { Text, Flex } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ImageLink from '../components/ImageLink';\nimport { openDialog } from '../store/dialog/dialogIsOpenActions';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text size=\"larger\" weight=\"semibold\">\n        Hello User!\n      </Text>\n      <Text>\n      </Text>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        GET STARTED:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/location-filled.png\"\n          to=\"/locations/register\"\n          label=\"Register a new Location\"\n          width=\"6.25em\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/camera-filled.png\"\n          to=\"/cameras\"\n          label=\"Register a new Camera\"\n          width=\"6.25em\"\n          imgPadding=\"0.625em 0.1875em 0.625em 0.1875em\"\n          onClick={(): void => {\n            dispatch(openDialog());\n          }}\n        />\n        <ImageLink\n          imgSrc=\"/icons/part-filled.png\"\n          to=\"/parts/detail\"\n          label=\"Register a new Part\"\n          width=\"6.25em\"\n        />\n      </Flex>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        SELECT FROM THE FOLLOWING TASKS:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/doubleCube.png\"\n          to=\"/partIdentification\"\n          label=\"Identify Parts\"\n          width=\"6.25em\"\n        />\n        <ImageLink imgSrc=\"/icons/defects.png\" to=\"/\" label=\"Identify Defects\" width=\"6.25em\" />\n        <ImageLink\n          imgSrc=\"/icons/manual-filled.png\"\n          to=\"/manual\"\n          label=\"Identify items manually\"\n          width=\"6.25em\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { OpenDialog, CloseDialog, OPEN_DIALOG, CLOSE_DIALOG } from './dialogIsOpenTypes';\n\nexport const openDialog = (): OpenDialog => ({ type: OPEN_DIALOG });\nexport const closeDialog = (): CloseDialog => ({ type: CLOSE_DIALOG });\n","import axios from 'axios';\nimport {\n  GET_CAMERA_SUCCESS,\n  POST_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  GetCamerasSuccess,\n  RequestCamerasFailure,\n  PostCameraSuccess,\n  Camera,\n  DELETE_CAMERA_SUCCESS,\n  DeleteCameraSuccess,\n} from './cameraTypes';\n\nconst getCamerasSuccess = (data: Camera[]): GetCamerasSuccess => ({\n  type: GET_CAMERA_SUCCESS,\n  payload: data,\n});\n\nconst deleteCameraSuccess = (id: number): DeleteCameraSuccess => ({\n  type: DELETE_CAMERA_SUCCESS,\n  payload: { id },\n});\n\nconst requestCamerasFailure = (error: any): RequestCamerasFailure => {\n  console.error(error);\n  return { type: REQUEST_CAMERA_FAILURE };\n};\n\nconst postCameraSuccess = (data: Camera): PostCameraSuccess => ({\n  type: POST_CAMERA_SUCCESS,\n  payload: data,\n});\n\nexport const getCameras = () => (dispatch): Promise<void> => {\n  return axios('/api/cameras/')\n    .then(({ data }) => {\n      dispatch(getCamerasSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const postCamera = (newCamera: Camera) => (dispatch): Promise<void> => {\n  return axios('/api/cameras/', {\n    method: 'POST',\n    data: newCamera,\n  })\n    .then(({ data }) => {\n      dispatch(postCameraSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const deleteCamera = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/cameras/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteCameraSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n","import React, { FC } from 'react';\nimport { Button, AddIcon } from '@fluentui/react-northstar';\n\ninterface AddButtonProps {\n  onClick?: () => void;\n}\nconst AddButton: FC<AddButtonProps> = ({ onClick }) => (\n  <Button\n    primary\n    fluid\n    circular\n    content={<AddIcon size=\"largest\" circular />}\n    styles={{ width: '6em', height: '6em' }}\n    onClick={onClick}\n  />\n);\n\nexport default AddButton;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text, Dialog, Input, Grid, Button } from '@fluentui/react-northstar';\n\nimport { postCamera, getCameras } from '../store/camera/cameraActions';\nimport ImageLink from '../components/ImageLink';\nimport { State } from '../store/State';\nimport { closeDialog, openDialog } from '../store/dialog/dialogIsOpenActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport AddButton from '../components/AddButton';\n\nconst Cameras: FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { dialogIsOpen, cameras } = useSelector<State, { dialogIsOpen: boolean; cameras: Camera[] }>(\n    (state) => ({ dialogIsOpen: state.dialogIsOpen, cameras: state.cameras }),\n  );\n\n  const [name, setName] = useState<string>('');\n  const [rtsp, setRtsp] = useState<string>('');\n  const [model_name, setModel_name] = useState<string>('');\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {cameras.map((camera, i) => (\n          <ImageLink\n            key={i}\n            to={`/cameras/detail?name=${camera.name}`}\n            defaultSrc=\"/icons/Play.png\"\n            bgImgSrc=\"/icons/defaultCamera.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            bgImgStyle={{\n              backgroundSize: '60%',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n            }}\n            label={camera.name}\n          />\n        ))}\n      </Grid>\n      <Dialog\n        styles={{ width: '20%', height: '40%', padding: 0, display: 'flex' }}\n        open={dialogIsOpen}\n        trigger={\n          <div style={{ alignSelf: 'flex-end' }}>\n            <AddButton\n              onClick={(): void => {\n                dispatch(openDialog());\n              }}\n            />\n          </div>\n        }\n        content={\n          <div\n            style={{\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'column',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Text size=\"larger\" weight=\"semibold\">\n              Add Camera\n            </Text>\n            <div\n              style={{\n                display: 'flex',\n                flexFlow: 'column',\n                height: '50%',\n                justifyContent: 'space-around',\n              }}\n            >\n              <Input\n                placeholder=\"Name\"\n                value={name}\n                onChange={(_, newProps): void => setName(newProps.value)}\n              />\n\n              <Input\n                placeholder=\"RTSP URL\"\n                value={rtsp}\n                onChange={(_, newProps): void => setRtsp(newProps.value)}\n              />\n              <Input\n                placeholder=\"Model Name\"\n                value={model_name}\n                onChange={(_, newProps): void => setModel_name(newProps.value)}\n              />\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', width: '100%' }}>\n              <Button\n                primary\n                content=\"Submit\"\n                disabled={name === '' || rtsp === '' || model_name === ''}\n                onClick={(): void => {\n                  dispatch(postCamera({ name, rtsp, model_name }));\n                  setName('');\n                  setRtsp('');\n                  setModel_name('');\n                  dispatch(closeDialog());\n                }}\n              />\n              <Button\n                content=\"Cancel\"\n                onClick={(): void => {\n                  dispatch(closeDialog());\n                }}\n              />\n            </div>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Cameras;\n","import React, { FC, useState, CSSProperties } from 'react';\nimport { Flex, Text, Button, Dialog } from '@fluentui/react-northstar';\n\n/**\n * @param trigger Trigger Button\n * @param primaryStyles CSS style of Confirm Button\n */\ninterface FluentUIStylesProperties extends CSSProperties {\n  [':hover']: any;\n  [':active']: any;\n}\n\ninterface ConfirmDialogProps {\n  trigger: JSX.Element;\n  onConfirm: () => void;\n  primaryStyles: FluentUIStylesProperties;\n  content: string;\n}\nconst ConfirmDialog: FC<ConfirmDialogProps> = ({ trigger, onConfirm, primaryStyles, content }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '20em', padding: '0.5em' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      footer={\n        <Flex column gap=\"gap.large\">\n          <Text size=\"large\" align=\"center\">\n            {content}\n          </Text>\n          <Flex space=\"around\">\n            <Button primary content=\"Confirm\" styles={primaryStyles} onClick={onConfirm} />\n            <Button content=\"Cancel\" onClick={(): void => setOpen(false)} />\n          </Flex>\n        </Flex>\n      }\n    />\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { FC, memo } from 'react';\nimport { Flex, Text, Grid, Button } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ConfirmDialog from '../ConfirmDialog';\nimport ImageLink from '../ImageLink';\nimport { deleteCamera } from '../../store/camera/cameraActions';\n\ninterface CameraDetailInfoProps {\n  name: string;\n  rtsp: string;\n  modelName: string;\n  id: number;\n}\nconst CameraDetailInfo: FC<CameraDetailInfoProps> = ({ id, name, rtsp, modelName }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex styles={{ padding: '1em 2em' }} column space=\"between\">\n      <Grid columns=\"2\" styles={{ gap: '3em' }}>\n        <Text size=\"larger\" weight=\"semibold\">\n          Details\n        </Text>\n        <ImageLink defaultSrc=\"/icons/defaultCamera.png\" width=\"100px\" height=\"100px\" />\n        <Flex column gap=\"gap.small\">\n          <Text size=\"large\" content={'Name:'} />\n          <Text size=\"large\" content={'RTSP Url:'} />\n          <Text size=\"large\" content={'Model:'} />\n        </Flex>\n        <Flex column gap=\"gap.medium\">\n          <Text size=\"large\" content={name} />\n          <Text size=\"large\" content={rtsp} />\n          <Text size=\"large\" content={modelName} />\n        </Flex>\n      </Grid>\n      <ConfirmDialog\n        trigger={\n          <Button\n            primary\n            content=\"Delete Camera\"\n            styles={{\n              backgroundColor: '#C4314B',\n              ':hover': { backgroundColor: '#A72037' },\n              ':active': { backgroundColor: '#8E192E' },\n            }}\n          />\n        }\n        content=\"Delete Camera\"\n        primaryStyles={{\n          backgroundColor: '#C4314B',\n          ':hover': { backgroundColor: '#A72037' },\n          ':active': { backgroundColor: '#8E192E' },\n        }}\n        onConfirm={(): void => {\n          dispatch(deleteCamera(id));\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default memo(CameraDetailInfo);\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay): void => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick(): void {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return (): void => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import Axios from 'axios';\nimport {\n  ProjectThunk,\n  GetProjectSuccessAction,\n  GET_PROJECT_SUCCESS,\n  GetProjectFailedAction,\n  GET_PROJECT_FAILED,\n  PostProjectSuccessAction,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  PostProjectFaliedAction,\n  DeleteProjectSuccessAction,\n  DELETE_PROJECT_SUCCESS,\n  DeleteProjectFaliedAction,\n  DELETE_PROJECT_FALIED,\n  ProjectData,\n  PostProjectRequestAction,\n  POST_PROJECT_REQUEST,\n  GetProjectRequestAction,\n  GET_PROJECT_REQUEST,\n  UpdateProjectDataAction,\n  UPDATE_PROJECT_DATA,\n  GetTrainingLogRequesAction,\n  GET_TRAINING_LOG_REQUEST,\n  GetTrainingLogSuccessAction,\n  GET_TRAINING_LOG_SUCCESS,\n  GetTrainingLogFailedAction,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GetTrainingMetricsRequestAction,\n  GET_TRAINING_METRICS_REQUEST,\n  GetTrainingMetricsSuccessAction,\n  GET_TRAINING_METRICS_SUCCESS,\n  GetTrainingMetricsFailedAction,\n  GET_TRAINING_METRICS_FAILED,\n  Consequence,\n  GetInferenceMetricsRequestAction,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GetInferenceMetricsSuccessAction,\n  GetInferenceMetricsFailedAction,\n  GET_INFERENCE_METRICS_FAILED,\n  StartInferenceAction,\n  START_INFERENCE,\n  STOP_INFERENCE,\n  StopInferenceAction,\n} from './projectTypes';\n\nconst getProjectRequest = (): GetProjectRequestAction => ({ type: GET_PROJECT_REQUEST });\nconst getProjectSuccess = (project: ProjectData): GetProjectSuccessAction => ({\n  type: GET_PROJECT_SUCCESS,\n  payload: { project },\n});\nconst getProjectFailed = (error: Error): GetProjectFailedAction => ({ type: GET_PROJECT_FAILED, error });\n\nconst getTrainingLogRequest = (): GetTrainingLogRequesAction => ({ type: GET_TRAINING_LOG_REQUEST });\nconst getTrainingLogSuccess = (trainingLog: string, newStatus: Status): GetTrainingLogSuccessAction => ({\n  type: GET_TRAINING_LOG_SUCCESS,\n  payload: {\n    trainingLog,\n    newStatus,\n  },\n});\nconst getTrainingStatusFailed = (error: Error): GetTrainingLogFailedAction => ({\n  type: GET_TRAINING_LOG_FAILED,\n  error,\n});\n\nconst postProjectRequest = (): PostProjectRequestAction => ({ type: POST_PROJECT_REQUEST });\nconst postProjectSuccess = (): PostProjectSuccessAction => ({ type: POST_PROJECT_SUCCESS });\nconst postProjectFail = (error: Error): PostProjectFaliedAction => ({ type: POST_PROJECT_FALIED, error });\n\nconst deleteProjectSuccess = (): DeleteProjectSuccessAction => ({ type: DELETE_PROJECT_SUCCESS });\nconst deleteProjectFailed = (): DeleteProjectFaliedAction => ({ type: DELETE_PROJECT_FALIED });\n\nconst getTrainingMetricsRequest = (): GetTrainingMetricsRequestAction => ({\n  type: GET_TRAINING_METRICS_REQUEST,\n});\nconst getTrainingMetricsSuccess = (\n  curConsequence: Consequence,\n  prevConsequence: Consequence,\n): GetTrainingMetricsSuccessAction => ({\n  type: GET_TRAINING_METRICS_SUCCESS,\n  payload: { prevConsequence, curConsequence },\n});\nconst getTrainingMetricsFailed = (error: Error): GetTrainingMetricsFailedAction => ({\n  type: GET_TRAINING_METRICS_FAILED,\n  error,\n});\n\nconst getInferenceMetricsRequest = (): GetInferenceMetricsRequestAction => ({\n  type: GET_INFERENCE_METRICS_REQUEST,\n});\nconst getInferenceMetricsSuccess = (\n  successRate: number,\n  successfulInferences: number,\n  unIdetifiedItems: number,\n): GetInferenceMetricsSuccessAction => ({\n  type: GET_INFERENCE_METRICS_SUCCESS,\n  payload: { successRate, successfulInferences, unIdetifiedItems },\n});\nconst getInferenceMetricsFailed = (error: Error): GetInferenceMetricsFailedAction => ({\n  type: GET_INFERENCE_METRICS_FAILED,\n  error,\n});\n\nexport const startInference = (): StartInferenceAction => ({\n  type: START_INFERENCE,\n});\n\nexport const stopInference = (): StopInferenceAction => ({\n  type: STOP_INFERENCE,\n});\n\nexport const updateProjectData = (projectData: ProjectData): UpdateProjectDataAction => ({\n  type: UPDATE_PROJECT_DATA,\n  payload: projectData,\n});\n\nexport const thunkGetProject = (): ProjectThunk => (dispatch): Promise<void> => {\n  dispatch(getProjectRequest());\n\n  return Axios.get('/api/projects/')\n    .then(({ data }) => {\n      const project: ProjectData = {\n        id: data[0]?.id ?? null,\n        camera: parseInt(data[0]?.camera.split('/')[5], 10) ?? null,\n        location: parseInt(data[0]?.location.split('/')[5], 10) ?? null,\n        parts: data[0]?.parts.map((ele) => parseInt(ele.split('/')[5], 10)) ?? [],\n        modelUrl: data[0]?.download_uri ?? '',\n        needRetraining: data[0]?.needRetraining ?? true,\n        accuracyRangeMin: data[0]?.accuracyRangeMin ?? 60,\n        accuracyRangeMax: data[0]?.accuracyRangeMax ?? 80,\n        maxImages: data[0]?.maxImages ?? 50,\n      };\n      dispatch(getProjectSuccess(project));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(getProjectFailed(err));\n    });\n};\n\nexport const thunkPostProject = (\n  projectId,\n  selectedLocations,\n  selectedParts,\n  selectedCamera,\n): ProjectThunk => (dispatch, getState): Promise<number> => {\n  const isProjectEmpty = projectId === null;\n  const url = isProjectEmpty ? `/api/projects/` : `/api/projects/${projectId}/`;\n\n  dispatch(postProjectRequest());\n\n  const projectData = getState().project.data;\n\n  return Axios(url, {\n    data: {\n      location: `http://localhost:8000/api/locations/${selectedLocations.id}/`,\n      parts: selectedParts.map((e) => `http://localhost:8000/api/parts/${e.id}/`),\n      camera: `http://localhost:8000/api/cameras/${selectedCamera.id}/`,\n      download_uri: projectData.modelUrl,\n      needRetraining: projectData.needRetraining,\n      accuracyRangeMin: projectData.accuracyRangeMin,\n      accuracyRangeMax: projectData.accuracyRangeMax,\n      maxImages: projectData.maxImages,\n    },\n    method: isProjectEmpty ? 'POST' : 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(({ data }) => {\n      dispatch(postProjectSuccess());\n      getTrain(data.id);\n      return data.id;\n    })\n    .catch((err) => {\n      dispatch(postProjectFail(err));\n    }) as Promise<number>;\n};\nconst getTrain = (projectId): void => {\n  Axios.get(`/api/projects/${projectId}/train`).catch((err) => console.error(err));\n};\n\nexport const thunkDeleteProject = (projectId): ProjectThunk => (dispatch): Promise<any> => {\n  return Axios.delete(`/api/projects/${projectId}/`)\n    .then(() => {\n      return dispatch(deleteProjectSuccess());\n    })\n    .catch((err) => {\n      alert(err);\n      dispatch(deleteProjectFailed());\n    });\n};\n\nexport const thunkGetTrainingLog = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getTrainingLogRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      if (data.status === 'failed') throw new Error(data.log);\n      else if (data.status === 'ok') dispatch(getTrainingLogSuccess('', Status.FinishTraining));\n      else dispatch(getTrainingLogSuccess(data.log, Status.WaitTraining));\n      return void 0;\n    })\n    .catch((err) => dispatch(getTrainingStatusFailed(err)));\n};\n\nexport const thunkGetTrainingMetrics = (projectId: number) => (dispacth): Promise<any> => {\n  dispacth(getTrainingMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/train_performance`)\n    .then(({ data }) => {\n      const curConsequence: Consequence = data.new\n        ? {\n            precision: data.new.precision,\n            recall: data.new.recall,\n            mAP: data.new.map,\n          }\n        : null;\n\n      const prevConsequence: Consequence = data.previous\n        ? {\n            precision: data.previous.precision,\n            recall: data.previous.recall,\n            mAP: data.previous.map,\n          }\n        : null;\n\n      return dispacth(getTrainingMetricsSuccess(curConsequence, prevConsequence));\n    })\n    .catch((err) => dispacth(getTrainingMetricsFailed(err)));\n};\n\nexport const thunkGetInferenceMetrics = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getInferenceMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      return dispatch(\n        getInferenceMetricsSuccess(data.success_rate, data.inference_num, data.unidentified_num),\n      );\n    })\n    .catch((err) => dispatch(getInferenceMetricsFailed(err)));\n};\n","import { useEffect, useState } from 'react';\n\n/**\n * Fetch the parts data from server\n */\nexport const useParts = (): any[] => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/parts/')\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data);\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  return parts;\n};\n","import { useLocation } from 'react-router-dom';\n\n/**\n * Get query parameter in the route\n */\nexport const useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import { useState, useEffect, useRef } from 'react';\n\ntype ImageState = {\n  image: HTMLImageElement;\n  status: string;\n  size: { width: number; height: number };\n};\nconst defaultState: ImageState = {\n  image: undefined,\n  status: 'loading',\n  size: { width: 0, height: 0 },\n};\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nconst useImage = (url: string, crossOrigin: string): [HTMLImageElement, string, { width: number; height: number }] => {\n  const [imageState, setImageState] = useState<ImageState>(defaultState);\n  const { image, status, size } = imageState;\n\n  const prevUrl = usePrevious<string>(url);\n\n  useEffect(() => {\n    if (!url) return;\n\n    const img = document.createElement('img');\n\n    if (url !== prevUrl) {\n      setImageState((prev) => ({ ...prev, image: prev.image, status: 'loading' }));\n    }\n\n    const onload = (): void => {\n      setImageState({\n        image: img,\n        status: 'loaded',\n        size: { width: img.width, height: img.height },\n      });\n    };\n\n    const onerror = (): void => {\n      setImageState((prev) => ({ ...prev, image: undefined, status: 'failed' }));\n    };\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n\n    img.src = url;\n\n    return (): void => {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, prevUrl]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status, size];\n};\n\nexport default useImage;\n","import React, { useEffect, useRef } from 'react';\nimport { Stage, Image as KonvaImage, Shape, Group, Line, Layer, Circle } from 'react-konva';\nimport Konva from 'konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport useImage from '../LabelingPage/util/useImage';\nimport { LiveViewProps, MaskProps, AOIBoxProps, AOILayerProps } from './LiveViewContainer.type';\n\nexport const LiveViewScene: React.FC<LiveViewProps> = ({ AOIs, setAOIs, visible }) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const stageRef = useRef(null);\n  const imgRef = useRef(null);\n  const layerRef = useRef(null);\n\n  const [imgEle, status, { width: imgWidth, height: imgHeight }] = useImage(\n    `http://${window.location.hostname}:5000/video_feed?inference=1`,\n    '',\n  );\n\n  /* The component need to support image with Content-type \"multipart/x-mixed-replace\",\n     which will keep updating the image data.\n     Keep updating the canvas by using Konva.Animation so we can see the latest image.\n  */\n  useEffect(() => {\n    const anim = new Konva.Animation(() => {}, layerRef.current);\n    anim.start();\n\n    return (): void => {\n      anim.stop();\n    };\n  }, []);\n\n  useEffect(() => {\n    const { width: divWidth, height: divHeight } = divRef.current.getBoundingClientRect();\n    stageRef.current.width(divWidth);\n    stageRef.current.height(divHeight);\n  }, []);\n\n  /* Fit Image to Stage */\n  useEffect(() => {\n    if (imgWidth !== 0 && imgHeight !== 0) {\n      const { width: stageWidth, height: stageHeight } = stageRef.current.size();\n      const scale = Math.min(stageWidth / imgWidth, stageHeight / imgHeight);\n      layerRef.current.scale({ x: scale, y: scale });\n\n      const offsetX = (stageWidth - imgWidth * scale) / 2;\n      const offsetY = (stageHeight - imgHeight * scale) / 2;\n      layerRef.current.position({ x: offsetX, y: offsetY });\n    }\n  }, [imgHeight, imgWidth]);\n\n  return (\n    <div ref={divRef} style={{ width: '100%', height: '100%' }}>\n      <Stage ref={stageRef}>\n        <Layer ref={layerRef}>\n          <KonvaImage image={imgEle} ref={imgRef} />\n          {\n            /* Render when image is loaded to prevent AOI boxes show in unscale size */\n            status === 'loaded' && (\n              <AOILayer\n                imgWidth={imgWidth}\n                imgHeight={imgHeight}\n                AOIs={AOIs}\n                setAOIs={setAOIs}\n                visible={visible}\n              />\n            )\n          }\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nconst AOILayer: React.FC<AOILayerProps> = ({ imgWidth, imgHeight, AOIs, setAOIs, visible }): JSX.Element => {\n  return (\n    <>\n      <Mask width={imgWidth} height={imgHeight} holes={AOIs} visible={visible} />\n      {AOIs.map((e, i) => (\n        <AOIBox\n          key={i}\n          box={e}\n          visible={visible}\n          boundary={{ x1: 0, y1: 0, x2: imgWidth, y2: imgHeight }}\n          onBoxChange={(updateBox): void =>\n            setAOIs((prev) => {\n              const newBox = updateBox(prev[i]);\n              if (newBox.x1 > newBox.x2) {\n                const tmp = newBox.x1;\n                newBox.x1 = newBox.x2;\n                newBox.x2 = tmp;\n              }\n\n              if (newBox.y1 > newBox.y2) {\n                const tmp = newBox.y1;\n                newBox.y1 = newBox.y2;\n                newBox.y2 = tmp;\n              }\n\n              const newAOIs = [...prev];\n              newAOIs[i] = newBox;\n              return newAOIs;\n            })\n          }\n        />\n      ))}\n    </>\n  );\n};\n\nconst Mask: React.FC<MaskProps> = ({ width, height, holes, visible }) => {\n  return (\n    <Shape\n      width={width}\n      height={height}\n      fill={'rgba(0,0,0,0.5)'}\n      visible={visible}\n      sceneFunc={(ctx, shape): void => {\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(shape.width(), 0);\n        ctx.lineTo(shape.width(), shape.height());\n        ctx.lineTo(0, shape.height());\n        ctx.lineTo(0, 0);\n\n        // Nonozero-rule\n        holes.forEach(({ x1, y1, x2, y2 }) => {\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x1, y2);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, y1);\n          ctx.lineTo(x1, y1);\n        });\n\n        ctx.fillStrokeShape(shape);\n      }}\n      listening={false}\n    />\n  );\n};\n\nconst AOIBox: React.FC<AOIBoxProps> = ({ box, onBoxChange, visible, boundary }) => {\n  const { x1, y1, x2, y2 } = box;\n  const COLOR = 'white';\n  const RADIUS = 20;\n\n  const handleDrag = (e: KonvaEventObject<DragEvent>): void => {\n    let { x, y } = e.target.position();\n\n    if (x < boundary.x1) {\n      x = boundary.x1;\n      e.target.x(x);\n    }\n\n    if (x > boundary.x2) {\n      x = boundary.x2;\n      e.target.x(x);\n    }\n\n    if (y < boundary.y1) {\n      y = boundary.y1;\n      e.target.y(y);\n    }\n\n    if (y > boundary.y2) {\n      y = boundary.y2;\n      e.target.y(y);\n    }\n\n    switch (e.target.name()) {\n      case 'leftTop':\n        onBoxChange((prev) => ({ ...prev, x1: x, y1: y }));\n        break;\n      case 'rightTop':\n        onBoxChange((prev) => ({ ...prev, x2: x, y1: y }));\n        break;\n      case 'rightBottom':\n        onBoxChange((prev) => ({ ...prev, x2: x, y2: y }));\n        break;\n      case 'leftBottom':\n        onBoxChange((prev) => ({ ...prev, x1: x, y2: y }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Group visible={visible}>\n      <Line points={[x1, y1, x1, y2, x2, y2, x2, y1]} closed stroke={COLOR} strokeWidth={10} />\n      <Circle draggable name=\"leftTop\" x={x1} y={y1} radius={RADIUS} fill={COLOR} onDragMove={handleDrag} />\n      <Circle draggable name=\"rightTop\" x={x2} y={y1} radius={RADIUS} fill={COLOR} onDragMove={handleDrag} />\n      <Circle\n        draggable\n        name=\"rightBottom\"\n        x={x2}\n        y={y2}\n        radius={RADIUS}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Circle\n        draggable\n        name=\"leftBottom\"\n        x={x1}\n        y={y2}\n        radius={RADIUS}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n    </Group>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as R from 'ramda';\nimport Axios from 'axios';\n\nimport { Text, Checkbox, Flex, Button, Alert } from '@fluentui/react-northstar';\nimport { LiveViewScene } from './LiveViewScene';\nimport { AOIData, Box } from '../../type';\n\nexport const LiveViewContainer: React.FC<{\n  showVideo: boolean;\n  initialAOIData: AOIData;\n  cameraId: number;\n}> = ({ showVideo, initialAOIData, cameraId }) => {\n  const [showAOI, setShowAOI] = useState(initialAOIData.useAOI);\n  const lasteUpdatedAOIs = useRef(initialAOIData.AOIs);\n  const [AOIs, setAOIs] = useState<Box[]>(lasteUpdatedAOIs.current);\n  const [showUpdateSuccessTxt, setShowUpdateSuccessTxt] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>(null);\n\n  const onCheckboxClick = async (): Promise<void> => {\n    setShowAOI(!showAOI);\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: !showAOI,\n          AOIs: lasteUpdatedAOIs.current,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      if (!showAOI) setAOIs(lasteUpdatedAOIs.current);\n    } catch (e) {\n      // Set back to the state before updating for switch case\n      setShowAOI(showAOI);\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  const onUpdate = async (): Promise<void> => {\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: showAOI,\n          AOIs,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      lasteUpdatedAOIs.current = R.clone(AOIs);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (showUpdateSuccessTxt) {\n      const timer = setTimeout(() => {\n        setShowUpdateSuccessTxt(false);\n      }, 3000);\n      return (): void => clearTimeout(timer);\n    }\n  }, [showUpdateSuccessTxt]);\n\n  const hasEdit = !R.equals(lasteUpdatedAOIs.current, AOIs);\n  const updateBtnDisabled = !showAOI || !hasEdit;\n\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }} size=\"large\">\n        Live View:\n      </Text>\n      {error && <Alert danger header=\"Failed to Update!\" content={`${error.name}: ${error.message}`} />}\n      <Flex hAlign=\"end\" gap=\"gap.small\" vAlign=\"center\">\n        <Checkbox\n          labelPosition=\"start\"\n          label=\"Show area of interest\"\n          toggle\n          checked={showAOI}\n          onClick={onCheckboxClick}\n        />\n        <Button content=\"Update\" primary disabled={updateBtnDisabled} onClick={onUpdate} loading={loading} />\n        <Text styles={{ visibility: showUpdateSuccessTxt ? 'visible' : 'hidden' }}>Updated!</Text>\n      </Flex>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {showVideo ? <LiveViewScene AOIs={AOIs} setAOIs={setAOIs} visible={showAOI} /> : null}\n      </div>\n    </Flex>\n  );\n};\n","import React, { useEffect, FC, useState, useCallback } from 'react';\nimport { Flex, Text, Status, Button, Loader, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useInterval } from '../../hooks/useInterval';\nimport {\n  thunkDeleteProject,\n  thunkGetTrainingLog,\n  thunkGetTrainingMetrics,\n  thunkGetInferenceMetrics,\n} from '../../store/project/projectActions';\nimport { Project, Status as CameraConfigStatus } from '../../store/project/projectTypes';\nimport { State } from '../../store/State';\nimport { useParts } from '../../hooks/useParts';\nimport { useQuery } from '../../hooks/useQuery';\nimport { LiveViewContainer } from '../LiveViewContainer';\nimport { AOIData } from '../../type';\n\nexport const CameraConfigureInfo: React.FC<{ projectId: number; AOIs: AOIData }> = ({ projectId, AOIs }) => {\n  const { error, data: project, trainingLog, status, trainingMetrics, inferenceMetrics } = useSelector<\n    State,\n    Project\n  >((state) => state.project);\n  const allTrainingLog = useAllTrainingLog(trainingLog);\n  const parts = useParts();\n  const dispatch = useDispatch();\n  const cameraName = useQuery().get('name');\n  const history = useHistory();\n\n  const onDeleteConfigure = useCallback((): void => {\n    // eslint-disable-next-line no-restricted-globals\n    const sureDelete = confirm('Delete this configuration?');\n    if (!sureDelete) return;\n    const result = (dispatch(thunkDeleteProject(projectId)) as unknown) as Promise<any>;\n    result\n      .then((data) => {\n        if (data) return history.push(`/cameras/detail?name=${cameraName}`);\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  }, [dispatch, history, cameraName, projectId]);\n\n  useEffect(() => {\n    dispatch(thunkGetTrainingLog(projectId));\n  }, [dispatch, projectId]);\n  useInterval(\n    () => {\n      dispatch(thunkGetTrainingLog(projectId));\n    },\n    status === CameraConfigStatus.WaitTraining ? 5000 : null,\n  );\n\n  useEffect(() => {\n    if (status === CameraConfigStatus.FinishTraining) {\n      dispatch(thunkGetTrainingMetrics(projectId));\n    }\n  }, [dispatch, status, projectId]);\n\n  useInterval(\n    () => {\n      dispatch(thunkGetInferenceMetrics(projectId));\n    },\n    status === CameraConfigStatus.StartInference ? 5000 : null,\n  );\n\n  const isCameraOnline = [CameraConfigStatus.FinishTraining, CameraConfigStatus.StartInference].includes(\n    status,\n  );\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Configuration</h1>\n      {error && <Alert danger header={error.name} content={`${error.message}`} />}\n      {status === CameraConfigStatus.WaitTraining ? (\n        <>\n          <Loader size=\"smallest\" />\n          <pre>{allTrainingLog}</pre>\n        </>\n      ) : (\n        <>\n          <ListItem title=\"Status\">\n            <CameraStatus online={isCameraOnline} />\n          </ListItem>\n          <ListItem title=\"Configured for\">\n            {parts\n              .filter((e) => project.parts.includes(e.id))\n              .map((e) => e.name)\n              .join(', ')}\n          </ListItem>\n          <Flex column gap=\"gap.small\">\n            <LiveViewContainer showVideo={true} initialAOIData={AOIs} cameraId={project.camera} />\n          </Flex>\n          <ListItem title=\"Success Rate\">\n            <Text styles={{ color: 'rgb(244, 152, 40)', fontWeight: 'bold' }} size=\"large\">\n              {`${inferenceMetrics.successRate}%`}\n            </Text>\n          </ListItem>\n          <ListItem title=\"Successful Inferences\">{inferenceMetrics.successfulInferences}</ListItem>\n          <ListItem title=\"Unidentified Items\">\n            <Text styles={{ margin: '5px' }} size=\"large\">\n              {inferenceMetrics.unIdetifiedItems}\n            </Text>\n            <Button\n              content=\"Identify Manually\"\n              primary\n              styles={{\n                backgroundColor: 'red',\n                marginLeft: '100px',\n                ':hover': {\n                  backgroundColor: '#A72037',\n                },\n                ':active': {\n                  backgroundColor: '#8E192E',\n                },\n              }}\n              as={Link}\n              to=\"/manual\"\n            />\n          </ListItem>\n          {trainingMetrics.prevConsequence && (\n            <>\n              <Text>Previous Model Metrics</Text>\n              <ConsequenceDashboard\n                precision={trainingMetrics.prevConsequence?.precision}\n                recall={trainingMetrics.prevConsequence?.recall}\n                mAP={trainingMetrics.prevConsequence?.mAP}\n              />\n            </>\n          )}\n          <Text>Updated Model Metrics</Text>\n          <ConsequenceDashboard\n            precision={trainingMetrics.curConsequence?.precision}\n            recall={trainingMetrics.curConsequence?.recall}\n            mAP={trainingMetrics.curConsequence?.mAP}\n          />\n          <Button primary onClick={onDeleteConfigure}>\n            Delete Configuration\n          </Button>\n          <Button primary as={Link} to=\"/partIdentification\">\n            Edit Configuration\n          </Button>\n        </>\n      )}\n    </Flex>\n  );\n};\n\n/**\n * Retrun a string which contains all logs get from server during training\n * @param trainingLog The log get from the api export\n */\nconst useAllTrainingLog = (trainingLog: string): string => {\n  const [allLogs, setAllLogs] = useState(trainingLog);\n  useEffect(() => {\n    setAllLogs((prev) => `${prev}\\n${trainingLog}`);\n  }, [trainingLog]);\n  return allLogs;\n};\n\ninterface ConsequenceDashboardProps {\n  precision: number;\n  recall: number;\n  mAP: number;\n}\nconst ConsequenceDashboard: FC<ConsequenceDashboardProps> = ({ precision, recall, mAP }) => {\n  return (\n    <Grid columns={3}>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Precison\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#9a0089' }}>\n          {precision === null ? '' : `${((precision * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Recall\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#0063b1' }}>\n          {recall === null ? '' : `${((recall * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          mAP\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#69c138' }}>\n          {mAP === null ? '' : `${((mAP * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n    </Grid>\n  );\n};\n\nconst ListItem = ({ title, children }): JSX.Element => {\n  return (\n    <Flex vAlign=\"center\">\n      <Text style={{ width: '200px' }} size=\"large\">{`${title}: `}</Text>\n      {typeof children === 'string' || typeof children === 'number' ? (\n        <Text size=\"large\">{children}</Text>\n      ) : (\n        children\n      )}\n    </Flex>\n  );\n};\n\nconst CameraStatus = ({ online }): JSX.Element => {\n  const text = online ? 'Online' : 'Offline';\n  const state = online ? 'success' : 'unknown';\n\n  return (\n    <Flex gap=\"gap.smaller\" vAlign=\"center\">\n      <Status state={state} />\n      <Text styles={{ margin: '5px' }} size=\"large\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const CreateCameraConfig: React.FC = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <h1>Configuration</h1>\n      <Flex hAlign=\"center\" vAlign=\"center\" design={{ height: '100%' }} column gap=\"gap.large\">\n        <Button\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular color=\"brand\" />}\n          style={{ width: 100, height: 100, border: '5px solid #0094d8' }}\n          color=\"brand\"\n          as={Link}\n          to=\"/partIdentification\"\n        />\n        <h2>Configure Task for the Device</h2>\n      </Flex>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CameraDetailInfo from '../components/CameraDetails/CameraDetailInfo';\nimport { CameraConfigureInfo, CreateCameraConfig } from '../components/CameraConfigure';\nimport { getCameras } from '../store/camera/cameraActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { State } from '../store/State';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { useQuery } from '../hooks/useQuery';\nimport { AOIData } from '../type';\n\nconst CameraDetails: FC = (): JSX.Element => {\n  const cameraIdInproject = useSelector<State, number>((state) => state.project.data.camera);\n  const projectId = useSelector<State, number>((state) => state.project.data.id);\n  const dispatch = useDispatch();\n  const name = useQuery().get('name');\n  const camera = useSelector<State, Camera>((state) => state.cameras.find((ele) => ele.name === name));\n\n  useEffect(() => {\n    dispatch(thunkGetProject());\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  if (!camera) return <Redirect to=\"/cameras\" />;\n\n  const hasProject = cameraIdInproject === camera.id;\n  const aoiData = getAOIData(camera.area);\n\n  return (\n    <Grid columns=\"2\" design={{ height: '100%' }}>\n      <CameraDetailInfo id={camera.id} name={name} rtsp={camera.rtsp} modelName={camera.model_name} />\n      {hasProject ? <CameraConfigureInfo projectId={projectId} AOIs={aoiData} /> : <CreateCameraConfig />}\n    </Grid>\n  );\n};\n\nexport default CameraDetails;\n\nconst getAOIData = (cameraArea: string): AOIData => {\n  try {\n    return JSON.parse(cameraArea);\n  } catch (e) {\n    return {\n      useAOI: true,\n      AOIs: [{ x1: 50, y1: 50, x2: 200, y2: 100 }],\n    };\n  }\n};\n","import { Size2D } from '../../../store/labelingPage/labelingPageTypes';\n\nconst getResizeImageFunction = (defaultSize: Size2D) => (size: Size2D): [Size2D, number] => {\n  if (size.width !== 0) {\n    if (size.width > size.height) {\n      const scaleX = defaultSize.width / size.width;\n\n      return [{ width: defaultSize.width, height: size.height * scaleX }, scaleX];\n    }\n    const scaleY = defaultSize.height / size.height;\n\n    return [{ height: defaultSize.height, width: size.width * scaleY }, scaleY];\n  }\n  return [defaultSize, 1];\n};\n\nexport default getResizeImageFunction;\n","import {\n  Annotation,\n  AnnotationState,\n  BoxObject,\n  Position2D,\n  REQUEST_ANNOTATION_SUCCESS,\n  REMOVE_ANNOTATION,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  UPDATE_ANNOTATION,\n  RESET_ANNOTATION,\n  RequestAnnotationSuccessAction,\n  CreateAnnotationAction,\n  UpdateAnnotationAction,\n  UpdateCreatingAnnotationAction,\n  RemoveAnnotationAction,\n  ResetAnnotationAction,\n} from './labelingPageTypes';\n\nexport const requestAnnotationsSuccess = (data: Annotation[]): RequestAnnotationSuccessAction => ({\n  type: REQUEST_ANNOTATION_SUCCESS,\n  payload: { annotations: data },\n});\n\nexport const getAnnotations = (imageId: number) => (dispatch, getState): void => {\n  const { images } = getState();\n  const { labels } = images.find((image) => image.id === imageId);\n\n  if (labels === null) {\n    dispatch(requestAnnotationsSuccess([]));\n  } else {\n    const annotations = JSON.parse(labels).map((parsedLabels) => ({\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n\n    dispatch(requestAnnotationsSuccess(annotations));\n  }\n};\n\nexport const createAnnotation = (pos: Position2D): CreateAnnotationAction => {\n  const annotation = BoxObj.createWithPoint(pos, '');\n  return {\n    type: CREATE_ANNOTATION,\n    payload: { annotation },\n  };\n};\n\nexport const updateCreatingAnnotation = (pos: Position2D): UpdateCreatingAnnotationAction => {\n  const updater = (annotation: Annotation): Annotation => BoxObj.add(pos, annotation);\n  return {\n    type: UPDATE_CREATING_ANNOTATION,\n    payload: { updater },\n  };\n};\n\nexport const updateAnnotation = (index: number = null, annotation: Annotation): UpdateAnnotationAction => ({\n  type: UPDATE_ANNOTATION,\n  payload: { index, annotation: BoxObj.setVerticesToValidValue(annotation) },\n});\n\nexport const removeAnnotation = (index: number = null): RemoveAnnotationAction => ({\n  type: REMOVE_ANNOTATION,\n  payload: { index },\n});\n\nexport const resetAnnotation = (): ResetAnnotationAction => ({\n  type: RESET_ANNOTATION,\n});\n\n// * Annotation Functions\nexport const BoxObj: BoxObject = {\n  init(): Annotation {\n    return {\n      label: { x1: 0, y1: 0, x2: 0, y2: 0 },\n      attribute: '',\n      annotationState: AnnotationState.Empty,\n    };\n  },\n  createWithPoint(p: Position2D, attribute) {\n    const obj = {\n      ...this.init(),\n      attribute,\n    };\n    return this.add(p, obj);\n  },\n  add({ x, y }, obj) {\n    // make the original object immutable, for future history usage\n    const newObj = { ...obj };\n\n    if (obj.annotationState === AnnotationState.Empty) {\n      newObj.label.x1 = x;\n      newObj.label.y1 = y;\n      newObj.label.x2 = x; // initialize x2 y2\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.P1Added;\n    } else if (obj.annotationState === AnnotationState.P1Added) {\n      newObj.label.x2 = x;\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.Finish;\n    }\n\n    return this.setVerticesToValidValue(newObj);\n  },\n  setVerticesToInt(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    newObj.label = {\n      x1: Math.round(x1),\n      y1: Math.round(y1),\n      x2: Math.round(x2),\n      y2: Math.round(y2),\n    };\n    return newObj;\n  },\n  setVerticesPointsOrder(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    if (x1 > x2) {\n      newObj.label.x1 = x2;\n      newObj.label.x2 = x1;\n    }\n    if (y1 > y2) {\n      newObj.label.y1 = y2;\n      newObj.label.y2 = y1;\n    }\n\n    return newObj;\n  },\n  setVerticesToValidValue(object: Annotation): Annotation {\n    return this.setVerticesPointsOrder(this.setVerticesToInt(object));\n  },\n  // setFinished(obj: Annotation): Annotation {\n  //   if (obj.state === AnnotationState.Created) return;\n\n  //   const newObj = R.clone(obj);\n  //   newObj.state = AnnotationState.Created;\n  //   newObj.creatingState = undefined;\n\n  //   return newObj;\n  // },\n  // setStateCreated(idx: number, annotations: Annotation[]): Annotation[] {\n  //   const { creatingState } = annotations[idx];\n\n  //   if (creatingState === 'addedX2Y2') return R.update(idx, this.setFinished, annotations);\n  //   if (creatingState === 'addedX1Y1') return R.remove(idx, 1, annotations);\n  //   return R.clone(annotations);\n  // },\n};\n","import React, { useState, useRef, useEffect, FC, useCallback } from 'react';\nimport { Line, Group, Circle } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport {\n  BoxLabel,\n  Box2dComponentProps,\n  WorkState,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport { updateAnnotation } from '../../store/labelingPage/labelingPageActions';\n\nexport const Box2d: FC<Box2dComponentProps> = ({\n  scale,\n  workState,\n  onSelect,\n  selected,\n  annotationIndex,\n  visible = true,\n  annotation,\n  dispatch,\n  changeCursorState = null,\n}) => {\n  const [vertices, setVertices] = useState<BoxLabel>(annotation.label);\n  const anchorRadius: number = 5 / scale;\n  const strokeWidth: number = 2 / scale;\n  const boxRef = useRef(null);\n\n  const dispatchLabel = (): void => {\n    changeCursorState();\n\n    if (!dispatch) return;\n    const newAnnotation = { ...annotation };\n    newAnnotation.label = vertices;\n    dispatch(updateAnnotation(annotationIndex, newAnnotation));\n  };\n\n  const mouseMoveListener = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (workState === WorkState.Creating && selected) {\n        setVertices((prev) => ({ ...prev, x2: e.evt.offsetX / scale, y2: e.evt.offsetY / scale }));\n      }\n    },\n    [workState, setVertices, selected, scale],\n  );\n\n  const onDragAnchor = useCallback(\n    ({ xi = 'x1', yi = 'y1' }) => (e: KonvaEventObject<DragEvent>): void => {\n      const stage = e.target.getStage();\n      const { width, height } = stage.getSize();\n      let x = Math.round(e.target.position().x);\n      let y = Math.round(e.target.position().y);\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > width / scale) x = width / scale;\n      if (y > height / scale) y = height / scale;\n      // * Round the anchor (circle) position so user can only drag anchor on integer.\n      e.target.setAttr('x', x);\n      e.target.setAttr('y', y);\n\n      const anotherPosXArr = ['x1', 'x2'];\n      const anotherPosYArr = ['y1', 'y2'];\n      anotherPosXArr.splice(\n        anotherPosXArr.findIndex((xx) => xx === xi),\n        1,\n      );\n      anotherPosYArr.splice(\n        anotherPosYArr.findIndex((yy) => yy === yi),\n        1,\n      );\n      if (vertices[anotherPosXArr[0]] > vertices[xi]) {\n        if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n          changeCursorState(LabelingCursorStates.nwseResize);\n        } else {\n          changeCursorState(LabelingCursorStates.neswResize);\n        }\n      } else if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n        changeCursorState(LabelingCursorStates.neswResize);\n      } else {\n        changeCursorState(LabelingCursorStates.nwseResize);\n      }\n\n      setVertices((prevVertices) => ({ ...prevVertices, [xi]: x, [yi]: y }));\n    },\n    [changeCursorState, scale, vertices],\n  );\n\n  useEffect(() => {\n    const layer = boxRef.current.getLayer();\n    layer.on('mousemove', mouseMoveListener);\n    return (): void => {\n      layer.off('mousemove', mouseMoveListener);\n    };\n  }, [mouseMoveListener]);\n  useEffect(() => {\n    setVertices(annotation.label);\n  }, [annotation.label]);\n\n  return (\n    <Group\n      ref={(e): void => {\n        if (e) {\n          boxRef.current = e;\n        }\n      }}\n      visible={visible}\n      onMouseDown={(e): void => {\n        if (workState === WorkState.None) {\n          onSelect(annotationIndex);\n          e.cancelBubble = true;\n        }\n      }}\n    >\n      <Line\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke=\"red\"\n        strokeWidth={strokeWidth}\n        closed={true}\n      />\n      <Group visible={selected}>\n        <Circle\n          key={'anchor-0'}\n          name={'anchor-0'}\n          x={vertices.x1}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-1'}\n          name={'anchor-1'}\n          x={vertices.x2}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-2'}\n          name={'anchor-2'}\n          x={vertices.x2}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-3'}\n          name={'anchor-3'}\n          x={vertices.x1}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n      </Group>\n    </Group>\n  );\n};\n\nexport const DisplayBox: FC<{ vertices: BoxLabel; color: string; scale: number }> = ({\n  scale,\n  vertices,\n  color,\n}) => {\n  return (\n    <>\n      <Line\n        ref={(ref): void => {\n          if (ref) ref.cache();\n        }}\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke={color}\n        strokeWidth={1 / scale}\n        closed={true}\n      />\n      <Circle x={vertices.x1} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y2} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x1} y={vertices.y2} radius={3 / scale} fill={color} />\n    </>\n  );\n};\n","import React, { FC, memo, Dispatch, useState, useEffect } from 'react';\nimport { Group, Line, Rect } from 'react-konva';\n\nimport { Size2D, LabelingCursorStates, BoxLabel } from '../../store/labelingPage/labelingPageTypes';\n\ninterface RemoveBoxButtonProps {\n  visible: boolean;\n  imageSize: Size2D;\n  label: BoxLabel;\n  changeCursorState: (cursorType?: LabelingCursorStates) => void;\n  scale: number;\n  setShowOuterRemoveButton: Dispatch<boolean>;\n  removeBox: () => void;\n}\nconst RemoveBoxButton: FC<RemoveBoxButtonProps> = ({\n  visible,\n  imageSize,\n  label,\n  changeCursorState,\n  scale,\n  setShowOuterRemoveButton,\n  removeBox,\n}) => {\n  const [color, setColor] = useState<string>('#F9526B');\n  const [strokeWidth, setStrokeWidth] = useState<number>(1.5 / scale);\n  let x: number;\n  let y: number;\n\n  if (\n    label.x1 < 0 ||\n    label.x2 > imageSize.width / scale ||\n    label.y1 < 0 ||\n    label.y2 > imageSize.height / scale\n  ) {\n    x = 0;\n    y = -60;\n  } else if (label.x1 > 30 / scale || label.x2 < (imageSize.width - 25) / scale) {\n    if (label.x1 > 30 / scale) x = label.x1 - 20 / scale;\n    else x = label.x2 + 25 / scale;\n\n    if (label.y1 > 12 / scale) {\n      y = label.y1 - 10 / scale;\n    } else {\n      y = label.y1 + 12 / scale;\n    }\n  } else {\n    x = 12 / scale;\n    if (label.y1 > 20 / scale) {\n      y = label.y1 - 20 / scale;\n    } else {\n      // * Make remove button disappear\n      y = -60;\n    }\n  }\n  if (y === -60) setShowOuterRemoveButton(true);\n  else setShowOuterRemoveButton(false);\n\n  useEffect(() => {\n    setStrokeWidth(1.5 / scale);\n  }, [scale]);\n\n  return (\n    <Group\n      visible={visible}\n      x={x}\n      y={y}\n      onMouseEnter={(): void => {\n        changeCursorState(LabelingCursorStates.pointer);\n        setColor('#E73550');\n        setStrokeWidth(3 / scale);\n      }}\n      onMouseLeave={(): void => {\n        changeCursorState();\n        setColor('#F9526B');\n        setStrokeWidth(1.5 / scale);\n      }}\n      onClick={(e): void => {\n        removeBox();\n        e.cancelBubble = true;\n      }}\n    >\n      <Rect x={-5 / scale} y={-5 / scale} width={10 / scale} height={10 / scale} />\n      <Line\n        points={[-5 / scale, -5 / scale, 5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n      <Line\n        points={[5 / scale, -5 / scale, -5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n    </Group>\n  );\n};\n\nexport default memo(RemoveBoxButton);\n","import React, { FC, useState, useEffect, useCallback, useRef, Dispatch, useMemo } from 'react';\nimport { Text, Button, CloseIcon } from '@fluentui/react-northstar';\nimport { Stage, Layer, Image, Group } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useDispatch } from 'react-redux';\n\nimport useImage from './util/useImage';\nimport getResizeImageFunction from './util/resizeImage';\nimport { Box2d } from './Box';\nimport {\n  Size2D,\n  Annotation,\n  WorkState,\n  LabelingType,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport {\n  createAnnotation,\n  updateCreatingAnnotation,\n  removeAnnotation,\n} from '../../store/labelingPage/labelingPageActions';\nimport RemoveBoxButton from './RemoveBoxButton';\n\nconst defaultSize: Size2D = {\n  width: 800,\n  height: 600,\n};\n\ninterface SceneProps {\n  url?: string;\n  labelingType: LabelingType;\n  annotations: Annotation[];\n  workState: WorkState;\n  setWorkState: Dispatch<WorkState>;\n}\nconst Scene: FC<SceneProps> = ({ url = '', labelingType, annotations, workState, setWorkState }) => {\n  const dispatch = useDispatch();\n  const resizeImage = useCallback(getResizeImageFunction(defaultSize), [defaultSize]);\n  const [imageSize, setImageSize] = useState<Size2D>(defaultSize);\n  const noMoreCreate = useMemo(\n    () => labelingType === LabelingType.SingleAnnotation && annotations.length === 1,\n    [labelingType, annotations],\n  );\n  const [cursorState, setCursorState] = useState<LabelingCursorStates>(LabelingCursorStates.default);\n  const [image, status, size] = useImage(url, 'anonymous');\n  const [selectedAnnotationIndex, setSelectedAnnotationIndex] = useState<number>(null);\n  const [showOuterRemoveButton, setShowOuterRemoveButton] = useState<boolean>(false);\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const scale = useRef<number>(1);\n  const changeCursorState = useCallback(\n    (cursorType?: LabelingCursorStates): void => {\n      if (!cursorType) {\n        if (noMoreCreate) {\n          setCursorState(LabelingCursorStates.default);\n        } else {\n          setCursorState(LabelingCursorStates.crosshair);\n        }\n      } else {\n        setCursorState(cursorType);\n      }\n    },\n    [noMoreCreate],\n  );\n  const removeBox = useCallback((): void => {\n    dispatch(removeAnnotation(selectedAnnotationIndex));\n    setWorkState(WorkState.None);\n    setShowOuterRemoveButton(false);\n  }, [dispatch, selectedAnnotationIndex, setWorkState, setShowOuterRemoveButton]);\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate || workState === WorkState.Creating) return;\n\n    dispatch(createAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }));\n    setSelectedAnnotationIndex(annotations.length - 1);\n    setWorkState(WorkState.Creating);\n  };\n\n  const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\n    if (workState === WorkState.Creating) {\n      dispatch(\n        updateCreatingAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }),\n      );\n      if (annotations.length - 1 === selectedAnnotationIndex) {\n        setWorkState(WorkState.Selecting);\n      } else {\n        setWorkState(WorkState.None);\n      }\n    }\n  };\n\n  const onSelect = (index: number): void => {\n    setSelectedAnnotationIndex(index);\n    setWorkState(WorkState.Selecting);\n  };\n\n  useEffect(() => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) {\n      changeCursorState();\n      setSelectedAnnotationIndex(0);\n    } else {\n      changeCursorState();\n    }\n  }, [noMoreCreate, changeCursorState]);\n  useEffect(() => {\n    if (workState === WorkState.None && !noMoreCreate) setSelectedAnnotationIndex(null);\n  }, [workState, noMoreCreate]);\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  if (status === 'loading' || (imageSize.height === 0 && imageSize.width === 0))\n    return (\n      <Text align=\"center\" color=\"red\">\n        Loading...\n      </Text>\n    );\n\n  return (\n    <div style={{ margin: '0.2em' }}>\n      {annotations.length !== 0 &&\n      showOuterRemoveButton &&\n      !isDragging &&\n      workState !== WorkState.Creating ? (\n        <Button\n          iconOnly\n          text\n          styles={{ color: '#F9526B', ':hover': { color: '#E73550' } }}\n          content={<CloseIcon size=\"large\" />}\n          onClick={removeBox}\n        />\n      ) : (\n        <div style={{ height: '2em' }} />\n      )}\n      <Stage\n        width={imageSize.width}\n        height={imageSize.height}\n        scale={{ x: scale.current, y: scale.current }}\n        style={{ cursor: cursorState }}\n      >\n        <Layer\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onDragStart={(): void => {\n            setIsDragging(true);\n          }}\n          onDragEnd={(): void => {\n            setIsDragging(false);\n          }}\n        >\n          <Image image={image} />\n          {annotations.map((annotation, i) => (\n            <Group key={i}>\n              <RemoveBoxButton\n                imageSize={imageSize}\n                visible={!isDragging && workState !== WorkState.Creating && i === selectedAnnotationIndex}\n                label={annotation.label}\n                scale={scale.current}\n                changeCursorState={changeCursorState}\n                setShowOuterRemoveButton={setShowOuterRemoveButton}\n                removeBox={removeBox}\n              />\n              <Box2d\n                workState={workState}\n                onSelect={onSelect}\n                annotation={annotation}\n                scale={scale.current}\n                annotationIndex={i}\n                selected={i === selectedAnnotationIndex}\n                dispatch={dispatch}\n                changeCursorState={changeCursorState}\n              />\n            </Group>\n          ))}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Scene;\n","import axios from 'axios';\nimport {\n  LabelImage,\n  GetLabelImagesSuccess,\n  GET_LABEL_IMAGE_SUCCESS,\n  DeleteLabelImageSuccess,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  PostLabelImageSuccess,\n  POST_LABEL_IMAGE_SUCCESS,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n  UpdateLabelImageAnnotation,\n} from './imageTypes';\nimport { Annotation } from '../labelingPage/labelingPageTypes';\n\nconst getLabelImagesSuccess = (data: LabelImage[]): GetLabelImagesSuccess => ({\n  type: GET_LABEL_IMAGE_SUCCESS,\n  payload: data,\n});\n\nconst deleteLabelImageSuccess = (id: number): DeleteLabelImageSuccess => ({\n  type: DELETE_LABEL_IMAGE_SUCCESS,\n  payload: { id },\n});\n\nconst requestLabelImagesFailure = (error: any): any => {\n  console.error(error);\n  return { type: REQUEST_LABEL_IMAGE_FAILURE };\n};\n\nconst postLabelImageSuccess = (image: LabelImage): PostLabelImageSuccess => ({\n  type: POST_LABEL_IMAGE_SUCCESS,\n  payload: image,\n});\n\nexport const getLabelImages = () => (dispatch): Promise<void> => {\n  return axios('/api/images/')\n    .then(({ data }) => {\n      dispatch(getLabelImagesSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\n\nexport const postLabelImage = (newImage: LabelImage | FormData) => (dispatch): Promise<void> => {\n  return axios('/api/images/', {\n    method: 'POST',\n    data: newImage,\n  })\n    .then(({ data }) => {\n      dispatch(postLabelImageSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const deleteLabelImage = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/images/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteLabelImageSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const saveLabelImageAnnotation = (imageId: number, annotations: Annotation[]) => (\n  dispatch,\n): Promise<void> => {\n  const url = `/api/images/${imageId}/`;\n  return axios({\n    url,\n    method: 'PATCH',\n    data: {\n      labels: JSON.stringify(annotations.map((e) => e.label)),\n    },\n  })\n    .then(({ data }) => {\n      console.info('Save successfully');\n      dispatch(updateLabelImageAnnotation(data.id, data.labels));\n      // dispatch(requestAnnotationsSuccess(annotations));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const updateLabelImageAnnotation = (imageId: number, labels: any): UpdateLabelImageAnnotation => ({\n  type: UPDATE_LABEL_IMAGE_ANNOTATION,\n  payload: { id: imageId, labels },\n});","import React, { FC } from 'react';\nimport { Flex, Button, ChevronStartIcon, ChevronEndIcon } from '@fluentui/react-northstar';\n\ninterface PrevNextButtonProps {\n  isRelabel: boolean;\n  prevDisabled: boolean;\n  nextDisabled: boolean;\n  onPrevClick: () => void;\n  onNextClick: () => void;\n}\nconst PrevNextButton: FC<PrevNextButtonProps> = ({\n  isRelabel,\n  children,\n  prevDisabled,\n  nextDisabled,\n  onPrevClick,\n  onNextClick,\n}) => {\n  return (\n    <Flex vAlign=\"center\">\n      {!isRelabel && (\n        <Button\n          text\n          disabled={prevDisabled}\n          icon={<ChevronStartIcon size=\"larger\" />}\n          onClick={onPrevClick}\n        />\n      )}\n      {children}\n      {!isRelabel && (\n        <Button text disabled={nextDisabled} icon={<ChevronEndIcon size=\"larger\" />} onClick={onNextClick} />\n      )}\n    </Flex>\n  );\n};\n\nexport default PrevNextButton;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Button, Text } from '@fluentui/react-northstar';\n\nimport Scene from '../components/LabelingPage/Scene';\nimport { LabelingType, Annotation, WorkState } from '../store/labelingPage/labelingPageTypes';\nimport { State } from '../store/State';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getAnnotations, resetAnnotation } from '../store/labelingPage/labelingPageActions';\nimport { saveLabelImageAnnotation } from '../store/image/imageActions';\nimport { RelabelImage } from '../components/ManualIdentification/types';\nimport PrevNextButton from '../components/LabelingPage/PrevNextButton';\n\ninterface LabelingPageProps {\n  labelingType: LabelingType;\n  images: LabelImage[] | RelabelImage[];\n  imageIndex: number;\n  closeDialog: () => void;\n  isRelabel: boolean;\n}\nconst LabelingPage: FC<LabelingPageProps> = ({\n  labelingType,\n  images,\n  imageIndex,\n  closeDialog,\n  isRelabel,\n}) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState<number>(imageIndex);\n  const [workState, setWorkState] = useState<WorkState>(WorkState.None);\n\n  const annotations = useSelector<State, Annotation[]>((state) => state.labelingPageState.annotations);\n\n  const isOnePointBox = checkOnePointBox(annotations);\n  const imageUrl = images[index]?.image;\n  const imageId = images[index]?.id;\n\n  useEffect(() => {\n    if (typeof imageId === 'number') dispatch(getAnnotations(imageId));\n    return (): void => {\n      dispatch(resetAnnotation());\n    };\n  }, [dispatch, imageId]);\n\n  return (\n    <Flex column hAlign=\"center\">\n      <Text size=\"larger\" weight=\"semibold\">\n        DRAW A RECTANGLE AROUND THE PART\n      </Text>\n      <PrevNextButton\n        isRelabel={isRelabel}\n        prevDisabled={index === 0 || workState === WorkState.Creating || isOnePointBox}\n        nextDisabled={index === images.length - 1 || workState === WorkState.Creating || isOnePointBox}\n        onPrevClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev - 1 + images.length) % images.length);\n        }}\n        onNextClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev + 1) % images.length);\n        }}\n      >\n        <Scene\n          url={imageUrl ?? '/icons/Play.png'}\n          annotations={annotations}\n          workState={workState}\n          setWorkState={setWorkState}\n          labelingType={labelingType}\n        />\n      </PrevNextButton>\n      <Flex gap=\"gap.medium\">\n        <Button\n          primary\n          content=\"Save\"\n          disabled={isOnePointBox || workState === WorkState.Creating}\n          onClick={(): void => {\n            dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n            closeDialog();\n          }}\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            closeDialog();\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst checkOnePointBox = (annotations: Annotation[]): boolean => {\n  if (annotations.length === 0) return false;\n  const { label } = annotations[annotations.length - 1];\n  return label.x1 === label.x2 && label.y1 === label.y2;\n};\n\nexport default LabelingPage;\n","import React, { memo, FC, useState } from 'react';\nimport { Dialog } from '@fluentui/react-northstar';\n\nimport LabelingPage from '../pages/LabelingPage';\nimport { LabelingType } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { RelabelImage } from './ManualIdentification/types';\n\ninterface LabelingPageDialogProps {\n  trigger: JSX.Element;\n  imageIndex: number;\n  images: LabelImage[] | RelabelImage[];\n  isRelabel: boolean;\n}\nconst LabelingPageDialog: FC<LabelingPageDialogProps> = ({\n  trigger,\n  images,\n  imageIndex,\n  isRelabel,\n}): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '80%' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      content={\n        <LabelingPage\n          closeDialog={(): void => setOpen(false)}\n          labelingType={LabelingType.SingleAnnotation}\n          images={images}\n          imageIndex={imageIndex}\n          isRelabel={isRelabel}\n        />\n      }\n    />\n  );\n};\n\nexport default memo(LabelingPageDialog);\n","import React, { useState, useRef, useEffect, useMemo, useCallback, memo, MouseEvent, FC } from 'react';\nimport { Stage, FastLayer, Image as KonvaImage } from 'react-konva';\nimport { Text } from '@fluentui/react-northstar';\n\nimport useImage from './LabelingPage/util/useImage';\nimport { Size2D, AnnotationState, Annotation } from '../store/labelingPage/labelingPageTypes';\nimport { DisplayBox } from './LabelingPage/Box';\nimport { LabelImage } from '../store/image/imageTypes';\nimport getResizeImageFunction from './LabelingPage/util/resizeImage';\n\ninterface LabelDisplayImageProps {\n  labelImage: LabelImage;\n  labelText?: string;\n  width: number;\n  height?: number;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst LabelDisplayImage: FC<LabelDisplayImageProps> = ({\n  labelImage,\n  labelText = '',\n  width = 300,\n  height = 150,\n  pointerCursor = false,\n  onClick,\n}) => {\n  const [image, _, size] = useImage(labelImage.image, 'anonymous');\n  const [imageSize, setImageSize] = useState<Size2D>({ width, height });\n  const resizeImage = useCallback(getResizeImageFunction({ width, height }), [width, height]);\n  const scale = useRef<number>(1);\n\n  const annotations = useMemo<Annotation[]>(() => {\n    if (!labelImage?.labels) return [];\n\n    return JSON.parse(labelImage.labels).map((parsedLabels) => ({\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n  }, [labelImage]);\n\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  return (\n    <div\n      onClick={onClick}\n      style={{ cursor: pointerCursor ? 'pointer' : 'default', display: 'flex', flexFlow: 'column' }}\n    >\n      <Stage width={imageSize.width} height={imageSize.height} scale={{ x: scale.current, y: scale.current }}>\n        <FastLayer>\n          <KonvaImage image={image} />\n          {annotations.map((annotation, i) => (\n            <DisplayBox key={i} scale={scale.current} vertices={annotation.label} color=\"red\" />\n          ))}\n        </FastLayer>\n      </Stage>\n      <Text align=\"center\">{labelText}</Text>\n    </div>\n  );\n};\n\nexport default memo(LabelDisplayImage);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Button,\n  PlayIcon,\n  CallControlPresentNewIcon,\n  PauseThickIcon,\n  Image,\n} from '@fluentui/react-northstar';\n\nimport { thunkAddCapturedImages } from '../../store/part/partActions';\nimport { RTSPVideoProps } from './RTSPVideo.type';\n\nexport const RTSPVideoComponent: React.FC<RTSPVideoProps> = ({\n  rtsp = null,\n  partId,\n  canCapture,\n  onVideoStart,\n  onVideoPause,\n}) => {\n  const [streamId, setStreamId] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const onCreateStream = (): void => {\n    let url = `/api/streams/connect/?part_id=${partId}&rtsp=${rtsp}`;\n    if (!canCapture) url += '&inference=1';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.status === 'ok') {\n          setStreamId(data.stream_id);\n        }\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoStart) onVideoStart();\n  };\n\n  const onCapturePhoto = (): void => {\n    dispatch(thunkAddCapturedImages(streamId));\n  };\n\n  const onDisconnect = (): void => {\n    setStreamId('');\n    fetch(`/api/streams/${streamId}/disconnect`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoPause) onVideoPause();\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onDisconnect);\n    return (): void => {\n      window.removeEventListener('beforeunload', onDisconnect);\n    };\n  });\n\n  const src = streamId ? `/api/streams/${streamId}/video_feed` : '';\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {src ? <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'contain' }} /> : null}\n      </div>\n      <Button.Group\n        styles={{ alignSelf: 'center' }}\n        buttons={[\n          {\n            key: 'start',\n            icon: <PlayIcon />,\n            iconOnly: true,\n            onClick: onCreateStream,\n            disabled: rtsp === null,\n          },\n          canCapture && {\n            key: 'capture',\n            icon: <CallControlPresentNewIcon />,\n            iconOnly: true,\n            onClick: onCapturePhoto,\n            disabled: !streamId,\n          },\n          {\n            key: 'stop',\n            icon: <PauseThickIcon />,\n            iconOnly: true,\n            onClick: onDisconnect,\n            disabled: !streamId,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport const RTSPVideo = React.memo(RTSPVideoComponent);\n","import {\n  AddCapturedImageAction,\n  ADD_CAPTURED_IMAGE,\n  PartThunk,\n  UpdateCapturedImageAction,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\nimport { LabelImage } from '../image/imageTypes';\nimport { getLabelImages } from '../image/imageActions';\n\nexport const addCapturedImages = (newCapturedImage: LabelImage): AddCapturedImageAction => ({\n  type: ADD_CAPTURED_IMAGE,\n  payload: { newCapturedImage },\n});\n\nexport const updateCapturedImages = (capturedImages: LabelImage[]): UpdateCapturedImageAction => ({\n  type: UPDATE_CAPTURED_IMAGES,\n  payload: { capturedImages },\n});\n\nexport const thunkAddCapturedImages = (streamId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/streams/${streamId}/capture`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 'ok') {\n        dispatch(addCapturedImages(data.image));\n        dispatch(getLabelImages());\n      }\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const thunkGetCapturedImages = (partId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/images`)\n    .then((response) => response.json())\n    .then((data) => {\n      const imagesWithRelatedPart = data.reduce((acc, cur) => {\n        if (cur.part.split('/')[5] === partId) acc.push(cur);\n        return acc;\n      }, []);\n      dispatch(updateCapturedImages(imagesWithRelatedPart));\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","export const getIdFromUrl = (url: string): number => parseInt(url.split(\"/\")[5], 10) ;","import { LabelImage } from '../store/image/imageTypes';\nimport { getIdFromUrl } from './GetIDFromUrl';\n\ninterface Options {\n  partId?: number;\n  isRelabel?: boolean;\n}\nexport const getFilteredImages = (\n  images: LabelImage[],\n  { partId, isRelabel = false }: Options,\n): LabelImage[] => {\n  if (partId === undefined) return images;\n  return images.filter((image) => getIdFromUrl(image.part) === partId && image.is_relabel === isRelabel);\n};\n","import { DropdownItemProps } from '@fluentui/react-northstar';\n\nexport type Value = { id: number; name: string } | { id: number; name: string }[];\n\nexport const formatDropdownValue = (value: Value): DropdownItemProps | DropdownItemProps[] => {\n  if (Array.isArray(value)) {\n    return value.map((e) => ({\n      header: e.name,\n      content: {\n        key: e.id,\n      },\n    }));\n  }\n  if (value) {\n    return {\n      header: value.name,\n      content: {\n        key: value.id,\n      },\n    };\n  }\n  return null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Dropdown, Text, DropdownItemProps } from '@fluentui/react-northstar';\nimport { Link, Prompt } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useCameras } from '../../hooks/useCameras';\nimport { State } from '../../store/State';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { RTSPVideo } from '../RTSPVideo';\nimport { getLabelImages } from '../../store/image/imageActions';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { formatDropdownValue } from '../../util/formatDropdownValue';\n\nexport const CapturePhotos: React.FC<{ partId: number }> = ({ partId }) => {\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n\n  return (\n    <>\n      <CameraSelector selectedCamera={selectedCamera} setSelectedCamera={setSelectedCamera} />\n      <RTSPVideo rtsp={selectedCamera?.rtsp} partId={partId} canCapture={true} />\n      <CapturedImagesContainer partId={partId} />\n    </>\n  );\n};\n\nconst CameraSelector = ({ selectedCamera, setSelectedCamera }): JSX.Element => {\n  const availableCameras = useCameras();\n\n  const items: DropdownItemProps[] = availableCameras.map((ele) => ({\n    header: ele.name,\n    content: {\n      key: ele.id,\n    },\n  }));\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setSelectedCamera((prev) => prev);\n    else {\n      const { key } = data.value.content;\n      const newSelectedCamera = availableCameras.find((ele) => ele.id === key);\n      if (newSelectedCamera) setSelectedCamera(newSelectedCamera);\n    }\n  };\n\n  return (\n    <Flex gap=\"gap.small\" vAlign=\"center\">\n      <Text>Select Camera</Text>\n      <Dropdown items={items} onChange={onDropdownChange} value={formatDropdownValue(selectedCamera)} />\n      <Link to=\"/addCamera\">Add Camera</Link>\n    </Flex>\n  );\n};\n\nconst CapturedImagesContainer = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images).filter(\n    (image) => !image.is_relabel,\n  );\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  const imageCount = filteredImages.length;\n\n  return (\n    <>\n      <Text>Total: {imageCount}</Text>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Flex\n        styles={{\n          overflow: 'scroll',\n          border: '1px solid grey',\n          height: '150px',\n          borderColor: isValid ? '' : 'red',\n        }}\n        gap=\"gap.small\"\n        vAlign=\"center\"\n      >\n        {filteredImages.map((image, i, arr) => (\n          <div key={image.id}>\n            <span>{i + 1}</span>\n            <LabelingPageDialog\n              key={i}\n              imageIndex={i}\n              images={arr}\n              trigger={<LabelDisplayImage labelImage={image} pointerCursor width={200} height={150} />}\n              isRelabel={false}\n            />\n          </div>\n        ))}\n      </Flex>\n      <Prompt\n        when={imageCount < 15}\n        message=\"The count of images is less than 15, which may cause error when configure part identification. Sure you want to leave?\"\n      />\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { getCameras } from '../store/camera/cameraActions';\n\n/**\n * Fetch the cameras data from server and set to Redux Store\n */\nexport const useCameras = (): Camera[] => {\n  const dispatch = useDispatch();\n  const cameras: Camera[] = useSelector<State, Camera[]>((state) => state.cameras);\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return cameras;\n};\n","import React, { useEffect } from 'react';\nimport { Text, Grid } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/State';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getLabelImages, postLabelImage } from '../../store/image/imageActions';\n\nexport const UploadPhotos = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  function handleUpload(e: React.ChangeEvent<HTMLInputElement>): void {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const formData = new FormData();\n      formData.append('image', e.target.files[i]);\n      formData.append('part', `/api/parts/${partId}/`);\n      dispatch(postLabelImage(formData));\n    }\n  }\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleUpload} accept=\"image/*\" multiple />\n      <CapturedImagesContainer capturedImages={filteredImages} isValid={isValid} partId={partId} />\n    </>\n  );\n};\n\nconst CapturedImagesContainer = ({ capturedImages, isValid, partId }): JSX.Element => {\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"2\"\n        styles={{\n          border: '1px solid grey',\n          height: '100%',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n          justifyItems: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {capturedImages.map((image, i, arr) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            images={arr}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor width={300} height={225} />}\n            isRelabel={false}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Input, TextArea, Button, Menu, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useLocation, Switch, Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { CapturePhotos } from '../components/CapturePhoto';\nimport { UploadPhotos } from '../components/UploadPhotos';\nimport { useQuery } from '../hooks/useQuery';\n\nexport const PartDetails = (): JSX.Element => {\n  const partId = useQuery().get('partId');\n\n  return (\n    <Grid columns={'repeat(12, 1fr)'} styles={{ gridColumnGap: '20px', height: '100%' }}>\n      <LeftPanel partId={partId} />\n      <RightPanel partId={partId} />\n    </Grid>\n  );\n};\n\nconst LeftPanel = ({ partId }): JSX.Element => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    if (partId) {\n      axios\n        .get(`/api/parts/${partId}/`)\n        .then(({ data }) => {\n          setName(data.name);\n          setDescription(data.description);\n          return void 0;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [partId]);\n\n  const onSave = (): void => {\n    const hasPartId = ![undefined, null].includes(partId);\n    const url = hasPartId ? `/api/parts/${partId}/` : `/api/parts/`;\n\n    axios({\n      method: hasPartId ? 'PUT' : 'POST',\n      url,\n      data: {\n        name,\n        description,\n      },\n    })\n      .then(({ data }) => {\n        history.push(`/parts/detail/capturePhotos?partId=${data.id}`);\n        return void 0;\n      })\n      .catch((err) => {\n        setError(JSON.stringify(err.response.data));\n      });\n  };\n\n  return (\n    <Flex column space=\"around\" styles={{ gridColumn: '1 / span 4' }}>\n      <Input\n        placeholder=\"Enter Part Name...\"\n        fluid\n        styles={{ fontSize: '2em' }}\n        value={name}\n        onChange={(_, newProps): void => {\n          setName(newProps.value);\n        }}\n      />\n      <TextArea\n        placeholder=\"Enter Description...\"\n        design={{ height: '80%' }}\n        value={description}\n        onChange={(_, newProps): void => {\n          setDescription(newProps.value);\n        }}\n      />\n      <Flex space=\"around\">\n        <Button content=\"Save\" primary onClick={onSave} disabled={!name || !description} />\n        <Button content=\"Cancel\" />\n      </Flex>\n      {!!error && <Alert danger content={error} dismissible />}\n    </Flex>\n  );\n};\n\nconst RightPanel = ({ partId }): JSX.Element => {\n  return (\n    <Flex column gap=\"gap.small\" styles={{ gridColumn: '5 / span 8' }}>\n      {partId ? <Tab partId={partId} /> : null}\n      <Switch>\n        <Route path={`/parts/detail/capturePhotos`}>\n          <CapturePhotos partId={parseInt(partId, 10)} />\n        </Route>\n        <Route path={`/parts/detail/uploadPhotos`}>\n          <UploadPhotos partId={parseInt(partId, 10)} />\n        </Route>\n      </Switch>\n    </Flex>\n  );\n};\n\nconst Tab = ({ partId }): JSX.Element => {\n  const items = [\n    {\n      key: 'uploadPhotos',\n      as: Link,\n      to: `/parts/detail/uploadPhotos?partId=${partId}`,\n      content: 'Upload Photos',\n    },\n    {\n      key: 'capturePhotos',\n      as: Link,\n      to: `/parts/detail/capturePhotos?partId=${partId}`,\n      content: 'Capture Photo',\n    },\n  ];\n\n  const { pathname } = useLocation();\n  const activeIndex = items.findIndex((ele) => ele.to.split('?')[0] === pathname);\n\n  return <Menu items={items} activeIndex={activeIndex} pointing primary />;\n};\n","import axios from 'axios';\nimport {\n  GET_LOCATION_SUCCESS,\n  POST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  GetLocationsSuccess,\n  RequestLocationsFailure,\n  PostLocationSuccess,\n  Location,\n} from './locationTypes';\n\nconst getLocationsSuccess = (data: Location[]): GetLocationsSuccess => ({\n  type: GET_LOCATION_SUCCESS,\n  payload: data,\n});\n\nconst requestLocationsFailure = (error: any): RequestLocationsFailure => {\n  console.error(error);\n  return { type: REQUEST_LOCATION_FAILURE };\n};\n\nconst postLocationSuccess = (data: Location): PostLocationSuccess => ({\n  type: POST_LOCATION_SUCCESS,\n  payload: data,\n});\n\nexport const getLocations = () => (dispatch): Promise<void> => {\n  return axios('/api/locations/')\n    .then(({ data }) => {\n      dispatch(getLocationsSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n\nexport const postLocation = (newLocation: Location) => (dispatch): Promise<void> => {\n  return axios('/api/locations/', {\n    method: 'POST',\n    data: newLocation,\n  })\n    .then(({ data }) => {\n      dispatch(postLocationSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n","import React, { useEffect, FC } from 'react';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { State } from '../store/State';\nimport { Location } from '../store/location/locationTypes';\nimport ImageLink from '../components/ImageLink';\nimport { getLocations } from '../store/location/locationActions';\nimport AddButton from '../components/AddButton';\n\nconst Locations: FC = () => {\n  const dispatch = useDispatch();\n  const locations = useSelector<State, Location[]>((state) => state.locations);\n\n  useEffect(() => {\n    dispatch(getLocations());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {locations.map((location, i) => (\n          <ImageLink\n            key={i}\n            to={`/locations/detail?name=${location.name}`}\n            defaultSrc=\"/icons/defaultLocation.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            label={location.name}\n          />\n        ))}\n      </Grid>\n      <div style={{ alignSelf: 'flex-end' }}>\n        <Link to=\"/locations/register\">\n          <AddButton />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Locations;\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Flex, Text, Input, TextArea, Button, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { postLocation } from '../store/location/locationActions';\n\nconst LocationRegister: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState<string>('');\n  const [coordinates, setCoordinates] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Register Location\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"100px\" height=\"100px\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Input\n            styles={{ paddingTop: '10px', minHeight: '100px' }}\n            placeholder=\"Location Name\"\n            value={name}\n            onChange={(_, newProps): void => setName(newProps.value)}\n          />\n          <Input value={coordinates} onChange={(_, newProps): void => setCoordinates(newProps.value)} />\n          <TextArea\n            styles={{ height: '60%' }}\n            value={description}\n            onChange={(_, newProps): void => setDescription(newProps.value)}\n          />\n        </Flex>\n      </Grid>\n      <Flex gap=\"gap.medium\" padding=\"padding.medium\">\n        <Button\n          primary\n          disabled={[name, coordinates, description].includes('')}\n          onClick={(): void => {\n            dispatch(postLocation({ name, coordinates, description }));\n            history.push('/locations');\n          }}\n          content=\"Save\"\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            history.push('/locations');\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default LocationRegister;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Flex, Text, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { Location } from '../store/location/locationTypes';\nimport { State } from '../store/State';\nimport { useQuery } from '../hooks/useQuery';\n\nconst LocationDetails: FC = () => {\n  const name = useQuery().get('name');\n  const location = useSelector<State, Location>((state) => state.locations.find((e) => e.name === name));\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Details\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"6.25em\" height=\"6.25em\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Text styles={{ paddingTop: '0.625em', minHeight: '6.25em' }}>{location.name}</Text>\n          <Text>{location.coordinates}</Text>\n          <Text styles={{ height: '60%' }}>{location.description}</Text>\n        </Flex>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationDetails;\n","import React, { useState, useEffect, SetStateAction, Dispatch, FC, memo, useMemo, useCallback } from 'react';\nimport { Dropdown, DropdownItemProps, Text, Button, RadioGroup } from '@fluentui/react-northstar';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImageIdentificationItemProps {\n  confidenceLevel: number;\n  relabelImages: RelabelImage[];\n  imageIndex: number;\n  setJudgedImageList: Dispatch<SetStateAction<JudgedImageList>>;\n  partId: number;\n  partItems: DropdownItemProps[];\n  isPartCorrect: number;\n}\nconst ImageIdentificationItem: FC<ImageIdentificationItemProps> = ({\n  confidenceLevel,\n  relabelImages,\n  imageIndex,\n  setJudgedImageList,\n  partId,\n  partItems,\n  isPartCorrect,\n}) => {\n  const filteredPartItems = useMemo(\n    () => [\n      {\n        header: 'No Object',\n        content: {\n          key: null,\n        },\n      },\n      ...partItems.filter((e) => (e.content as any).key !== partId),\n    ],\n    [partId, partItems],\n  );\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(filteredPartItems[0]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n\n      setJudgedImageList((prev) => {\n        const next = [...prev];\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId: value.content.key };\n        else {\n          next.push({\n            imageId: relabelImages[imageIndex].id,\n            partId: value.content.key,\n          });\n        }\n\n        return next;\n      });\n    }\n  };\n\n  const onRadioGroupChange = (_, newProps): void => {\n    setJudgedImageList((prev) => {\n      const next = [...prev];\n\n      if (newProps.value === 1) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId };\n        else next.push({ imageId: relabelImages[imageIndex].id, partId });\n      }\n      if (newProps.value === 0) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId: null };\n        else {\n          next.push({\n            imageId: relabelImages[imageIndex].id,\n            partId: null,\n          });\n        }\n      }\n      return next;\n    });\n  };\n\n  useEffect(() => {\n    setJudgedImageList([]);\n    setSelectedPartItem(filteredPartItems[0]);\n  }, [filteredPartItems, setSelectedPartItem, setJudgedImageList]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        minHeight: '9em',\n        maxHeight: '30%',\n        justifyContent: 'center',\n        padding: '1em',\n      }}\n    >\n      <div style={{ margin: '0.1em' }}>\n        <LabelDisplayImage labelImage={relabelImages[imageIndex]} width={100} height={100} />\n      </div>\n      <div\n        style={{\n          height: '100%',\n          width: '40%',\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Text truncated>\n          Confidence Level: <b>{confidenceLevel}%</b>\n        </Text>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '50%',\n          }}\n        >\n          <RadioGroup\n            checkedValue={isPartCorrect}\n            onCheckedValueChange={onRadioGroupChange}\n            items={[\n              {\n                key: '1',\n                label: 'Yes',\n                value: 1,\n              },\n              {\n                key: '0',\n                label: 'No',\n                value: 0,\n              },\n            ]}\n          />\n          {isPartCorrect === 0 && filteredPartItems.length > 0 && (\n            <div style={{ width: '50%' }}>\n              <Dropdown\n                fluid\n                items={filteredPartItems}\n                onChange={onDropdownChange}\n                value={selectedPartItem}\n              />\n            </div>\n          )}\n        </div>\n        <LabelingPageDialog\n          imageIndex={imageIndex}\n          images={relabelImages}\n          isRelabel={true}\n          trigger={<Button primary content=\"Identify\" disabled={!isPartCorrect} />}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImageIdentificationItem);\n","import React, { FC, Dispatch, memo } from 'react';\nimport { Grid, DropdownItemProps } from '@fluentui/react-northstar';\nimport ImageIdentificationItem from './ImageItem';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImagesContainerProps {\n  images: RelabelImage[];\n  judgedImageList: JudgedImageList;\n  setJudgedImageList: Dispatch<JudgedImageList>;\n  selectedPartId: number;\n  partItems: DropdownItemProps[];\n}\nconst ImagesContainer: FC<ImagesContainerProps> = ({\n  images,\n  judgedImageList,\n  setJudgedImageList,\n  selectedPartId,\n  partItems,\n}) => {\n  return (\n    <Grid\n      columns=\"2\"\n      styles={{\n        width: '100%',\n        height: '80%',\n        overflow: 'scroll',\n        borderWidth: '0.0625em',\n        borderStyle: 'solid'\n      }}\n    >\n      {images.map((img, i, arr) => {\n        if (img.display) {\n          let isPartCorrect: number = null;\n          const idx = judgedImageList.findIndex((e) => e.imageId === img.id);\n\n          if (idx >= 0) {\n            if (judgedImageList[idx].partId === selectedPartId) {\n              isPartCorrect = 1;\n            } else isPartCorrect = 0;\n          }\n\n          return (\n            <ImageIdentificationItem\n              key={img.id}\n              confidenceLevel={img.confidenceLevel}\n              imageIndex={i}\n              relabelImages={arr}\n              isPartCorrect={isPartCorrect}\n              setJudgedImageList={setJudgedImageList}\n              partId={selectedPartId}\n              partItems={partItems}\n            />\n          );\n        }\n        return void 0;\n      })}\n    </Grid>\n  );\n};\n\nexport default memo(ImagesContainer);\n","import React, { useState, useEffect, useRef, useMemo, FC } from 'react';\nimport {\n  Dropdown,\n  DropdownItemProps,\n  Grid,\n  Flex,\n  Text,\n  Divider,\n  Button,\n  ArrowDownIcon,\n  ArrowUpIcon,\n} from '@fluentui/react-northstar';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport { Range, Handle } from 'rc-slider';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../rc-slider.css';\n\nimport { State } from '../store/State';\nimport { useParts } from '../hooks/useParts';\nimport { ProjectData } from '../store/project/projectTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getFilteredImages } from '../util/getFilteredImages';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { getLabelImages } from '../store/image/imageActions';\nimport { JudgedImageList, RelabelImage } from '../components/ManualIdentification/types';\nimport ImagesContainer from '../components/ManualIdentification/ImagesContainer';\n\nconst ManualIdentification: FC = () => {\n  const dispatch = useDispatch();\n  const { projectData, images } = useSelector<State, { projectData: ProjectData; images: LabelImage[] }>(\n    (state) => ({\n      projectData: state.project.data,\n      images: state.images,\n    }),\n  );\n  const parts = useParts();\n  const partItems = useMemo<DropdownItemProps[]>(() => {\n    if (parts.length === 0 || projectData.parts.length === 0) return [];\n\n    return projectData.parts.map((partId) => {\n      const part = parts.find((e) => e.id === partId);\n\n      return {\n        header: part.name,\n        content: {\n          key: part.id,\n        },\n      };\n    });\n  }, [parts, projectData]);\n\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(null);\n  const selectedPartId: number = (selectedPartItem?.content as any)?.key ?? null;\n\n  const [confidenceLevelRange, setConfidenceLevelRange] = useState<[number, number]>([\n    projectData.accuracyRangeMin,\n    projectData.accuracyRangeMax,\n  ]);\n  const [ascend, setAscend] = useState<boolean>(false);\n  const sortRef = useRef({ sorted: false, prevIsAscend: false });\n  const [judgedImageList, setJudgedImageList] = useState<JudgedImageList>([]);\n\n  const [relabelImages, setRelabelImages] = useState<RelabelImage[]>([]);\n\n  useEffect(() => {\n    dispatch(thunkGetProject());\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setRelabelImages(\n      getFilteredImages(images, {\n        partId: selectedPartId,\n        isRelabel: true,\n      }).map((e) => {\n        const confidenceLevel = ((e.confidence * 1000) | 0) / 10;\n        return {\n          ...e,\n          confidenceLevel,\n          display: confidenceLevel >= confidenceLevelRange[0] && confidenceLevel <= confidenceLevelRange[1],\n        };\n      }),\n    );\n    return (): void => {\n      setAscend(false);\n      sortRef.current = { sorted: false, prevIsAscend: false };\n    };\n  }, [confidenceLevelRange, images, selectedPartId]);\n\n  useEffect(() => {\n    if (sortRef.current.sorted) {\n      if (sortRef.current.prevIsAscend !== ascend) {\n        setRelabelImages((prev) => {\n          const next = [...prev];\n          next.reverse();\n          return next;\n        });\n        sortRef.current.prevIsAscend = ascend;\n      }\n    } else {\n      setRelabelImages((prev) => {\n        if (ascend) prev.sort((a, b) => a.confidenceLevel - b.confidenceLevel);\n        else prev.sort((a, b) => b.confidenceLevel - a.confidenceLevel);\n        return [...prev];\n      });\n      sortRef.current = { sorted: true, prevIsAscend: true };\n    }\n\n  }, [ascend]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n    }\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Manual Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.medium\" space=\"between\" styles={{ height: '75vh', padding: '1em' }}>\n        <Grid columns=\"3\" styles={{ columnGap: '1em', justifyItems: 'center' }}>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text truncated>Select Part:</Text>\n            <Dropdown items={partItems} onChange={onDropdownChange} value={selectedPartItem} />\n          </Flex>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\" styles={{ width: '80%' }}>\n            <Text>Confidence Level:</Text>\n            <div style={{ width: '70%' }}>\n              <Range\n                value={confidenceLevelRange}\n                allowCross={false}\n                onChange={setConfidenceLevelRange}\n                handle={({ value, dragging, index, ...restProps }): JSX.Element => {\n                  return (\n                    <Tooltip\n                      prefixCls=\"rc-slider-tooltip\"\n                      overlay={`${value}%`}\n                      visible={dragging}\n                      placement=\"top\"\n                      key={index}\n                    >\n                      <Handle value={value} {...restProps} />\n                    </Tooltip>\n                  );\n                }}\n              />\n            </div>\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text truncated>Sort:</Text>\n            <Button\n              icon={ascend ? <ArrowDownIcon /> : <ArrowUpIcon />}\n              styles={{ color: sortRef.current.sorted ? '#0094d8' : 'grey' }}\n              text\n              iconOnly\n              onClick={(): void => {\n                setAscend((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Grid>\n        <ImagesContainer\n          images={relabelImages}\n          judgedImageList={judgedImageList}\n          setJudgedImageList={setJudgedImageList}\n          selectedPartId={selectedPartId}\n          partItems={partItems}\n        />\n        <Button\n          content=\"Update\"\n          styles={{ width: '15%' }}\n          primary\n          disabled={judgedImageList.length === 0}\n          onClick={(): void => {\n            axios({ method: 'POST', url: '/api/relabel/update', data: judgedImageList })\n              .then(() => {\n                dispatch(getLabelImages());\n                setJudgedImageList([]);\n                return void 0;\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ManualIdentification;\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text, Button, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\n\nexport const Parts: React.FC = () => {\n  const [parts, setParts] = useState([]);\n\n  const partsAPI = Axios.get('/api/parts/');\n  const imagesAPI = Axios.get('/api/images/');\n\n  useEffect(() => {\n    Axios.all([partsAPI, imagesAPI])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: parts } = responses[0];\n          const { data: images } = responses[1];\n          setParts(\n            parts.map((e) => ({\n              ...e,\n              images: images.find((img) => getIdFromUrl(img.part) === e.id)?.image,\n            })),\n          );\n        }),\n      )\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <Flex gap=\"gap.large\" wrap>\n        {parts.map((ele) => (\n          <Item key={ele.id} src={ele.images} id={ele.id} name={ele.name} />\n        ))}\n      </Flex>\n      <Button\n        primary\n        fluid\n        circular\n        content={<AddIcon size=\"largest\" circular />}\n        style={{\n          width: 100,\n          height: 100,\n          position: 'fixed',\n          right: '100px',\n          bottom: '100px',\n        }}\n        as={Link}\n        to=\"/parts/detail\"\n      />\n    </div>\n  );\n};\n\nconst Item = ({ src, id, name }): JSX.Element => {\n  return (\n    <Flex column hAlign=\"center\" gap=\"gap.large\" as={Link} to={`/parts/detail/capturePhotos?partId=${id}`}>\n      <div style={{ width: '250px', height: '250px' }}>\n        <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n      </div>\n      <Text size=\"larger\">{name}</Text>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Divider,\n  Text,\n  Flex,\n  Dropdown,\n  Button,\n  DropdownItemProps,\n  Checkbox,\n  Input,\n  Alert,\n  Dialog,\n  ExclamationCircleIcon,\n  ShorthandCollection,\n} from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { thunkGetProject, thunkPostProject, updateProjectData } from '../store/project/projectActions';\nimport { Project, ProjectData } from '../store/project/projectTypes';\nimport { State } from '../store/State';\nimport { formatDropdownValue, Value } from '../util/formatDropdownValue';\n\nconst testModelValue = {\n  camera: {\n    id: null,\n    name: 'Test Video',\n  },\n  parts: [\n    {\n      id: null,\n      name: 'Part 1',\n    },\n    {\n      id: null,\n      name: 'Part 2',\n    },\n    {\n      id: null,\n      name: 'Part 3',\n    },\n  ],\n  location: {\n    id: null,\n    name: 'Test Location',\n  },\n};\n\nexport const PartIdentification: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error, data } = useSelector<State, Project>((state) => state.project);\n  const {\n    id: projectId,\n    camera,\n    location,\n    parts,\n    needRetraining,\n    accuracyRangeMin,\n    accuracyRangeMax,\n    maxImages: maxImage,\n  } = data;\n  const [cameraLoading, dropDownCameras, selectedCamera, setSelectedCameraById] = useDropdownItems<any>(\n    'cameras',\n  );\n  const [partLoading, dropDownParts, selectedParts, setSelectedPartsById] = useDropdownItems<any>(\n    'parts',\n    true,\n  );\n  const [locationLoading, dropDownLocations, selectedLocations, setSelectedLocationById] = useDropdownItems<\n    any\n  >('locations');\n  const history = useHistory();\n  const [maxImgCountError, setMaxImgCountError] = useState(false);\n  const [isTestModel, setIsTestModel] = useState(false);\n\n  useEffect(() => {\n    if (!cameraLoading && !partLoading && !locationLoading) {\n      dispatch(thunkGetProject());\n    }\n  }, [dispatch, cameraLoading, locationLoading, partLoading]);\n\n  useEffect(() => {\n    if (location) setSelectedLocationById(location);\n    if (parts.length) setSelectedPartsById(parts);\n    if (camera) setSelectedCameraById(camera);\n  }, [camera, location, parts, setSelectedCameraById, setSelectedLocationById, setSelectedPartsById]);\n\n  const handleSubmitConfigure = (): void => {\n    ((dispatch(\n      thunkPostProject(projectId, selectedLocations, selectedParts, selectedCamera),\n    ) as unknown) as Promise<number>)\n      .then((id) => {\n        if (typeof id !== 'undefined') history.push(`/cameras/detail?name=${selectedCamera.name}`);\n        return void 0;\n      })\n      .catch((e) => e);\n  };\n\n  const setData = (keyName: keyof ProjectData, value: ProjectData[keyof ProjectData]): void => {\n    dispatch(updateProjectData({ ...data, [keyName]: value }));\n  };\n\n  const accracyRangeDisabled = !needRetraining || isTestModel;\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Part Identification\n      </Text>\n      <Divider color=\"black\" />\n      {error && (\n        <Alert danger header=\"Load Part Identification Error\" content={`${error.name}: ${error.message}`} />\n      )}\n      <TestModelButton isTestModel={isTestModel} setIsTestModel={setIsTestModel} />\n      <Flex column gap=\"gap.large\" design={{ paddingTop: '30px' }}>\n        <ModuleSelector\n          moduleName=\"cameras\"\n          to=\"/cameras\"\n          value={isTestModel ? testModelValue.camera : selectedCamera}\n          setSelectedModuleItem={setSelectedCameraById}\n          items={dropDownCameras}\n          isMultiple={false}\n          isTestModel={isTestModel}\n        />\n        <ModuleSelector\n          moduleName=\"parts\"\n          to=\"/parts\"\n          value={isTestModel ? testModelValue.parts : selectedParts}\n          setSelectedModuleItem={setSelectedPartsById}\n          items={dropDownParts}\n          isMultiple={true}\n          isTestModel={isTestModel}\n        />\n        <ModuleSelector\n          moduleName=\"locations\"\n          to=\"/locations\"\n          value={isTestModel ? testModelValue.location : selectedLocations}\n          setSelectedModuleItem={setSelectedLocationById}\n          items={dropDownLocations}\n          isMultiple={false}\n          isTestModel={isTestModel}\n        />\n        <Checkbox\n          label=\"Set up retraining\"\n          checked={needRetraining}\n          onChange={(_, { checked }): void => setData('needRetraining', checked)}\n          disabled={isTestModel}\n        />\n        <Text disabled={accracyRangeDisabled}>Accuracy Range</Text>\n        <Text disabled={accracyRangeDisabled}>\n          Minimum:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={accuracyRangeMin}\n            onChange={(_, { value }): void => setData('accuracyRangeMin', value)}\n          />\n          %\n        </Text>\n        <Text disabled={accracyRangeDisabled}>\n          Maximum:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={accuracyRangeMax}\n            onChange={(_, { value }): void => setData('accuracyRangeMax', value)}\n          />\n          %\n        </Text>\n        <Text disabled={accracyRangeDisabled}>\n          Maximum Images:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={maxImage}\n            onChange={(_, { value }): void => {\n              if ((value as any) < 15) setMaxImgCountError(true);\n              else setMaxImgCountError(false);\n              setData('maxImages', value);\n            }}\n          />\n          {maxImgCountError && <Text error>Cannot be less than 15</Text>}\n        </Text>\n        <Link to=\"\">Advanced Configuration</Link>\n        <Button\n          content=\"Configure\"\n          primary\n          onClick={handleSubmitConfigure}\n          disabled={(!selectedCamera || !selectedLocations || !selectedParts || isLoading) && !isTestModel}\n          loading={isLoading}\n        />\n      </Flex>\n    </>\n  );\n};\n\nconst TestModelButton = ({ isTestModel, setIsTestModel }): JSX.Element => {\n  if (isTestModel) {\n    return (\n      <Button\n        styles={{\n          backgroundColor: '#ff9727',\n          ':hover': {\n            backgroundColor: '#cf7a1f',\n          },\n          ':active': {\n            backgroundColor: '#cf7a1f',\n          },\n        }}\n        content=\"Back\"\n        onClick={(): void => setIsTestModel(false)}\n        primary\n      />\n    );\n  }\n\n  return (\n    <Dialog\n      styles={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n      cancelButton=\"Cancel\"\n      confirmButton=\"Confirm to use test model\"\n      onConfirm={(): void => setIsTestModel(true)}\n      content={\n        <>\n          <Flex hAlign=\"center\" column>\n            <ExclamationCircleIcon\n              size=\"largest\"\n              styles={({ theme: { siteVariables } }): any => ({\n                color: siteVariables.colorScheme.brand.foreground,\n              })}\n            />\n            <div>\n              <p>Test model is for seeing inference result, no retraining experience here.</p>\n              <p>For retraining experience, please create a new model</p>\n            </div>\n          </Flex>\n        </>\n      }\n      trigger={\n        <Button\n          styles={{\n            backgroundColor: '#ff9727',\n            ':hover': {\n              backgroundColor: '#cf7a1f',\n            },\n            ':active': {\n              backgroundColor: '#cf7a1f',\n            },\n          }}\n          content=\"Test Model\"\n          primary\n        />\n      }\n    />\n  );\n};\n\n// TODO Make this integrate with Redux\nfunction useDropdownItems<T>(\n  moduleName: string,\n  isMultiple?: boolean,\n): [boolean, DropdownItemProps[], T | T[], (id: string | string[]) => void] {\n  const originItems = useRef<(T & { id: number })[]>([]);\n  const [dropDownItems, setDropDownItems] = useState<DropdownItemProps[]>([]);\n  const [selectedItem, setSelectedItem] = useState<T | T[]>(isMultiple ? [] : null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`/api/${moduleName}/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setDropDownItems(\n          data.map((e) => ({\n            header: e.name,\n            content: {\n              key: e.id,\n            },\n          })),\n        );\n        originItems.current = data;\n        setLoading(false);\n        return void 0;\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.error(err);\n      });\n  }, [moduleName]);\n\n  const setSelectedItemById = useCallback((id: string | string[]): void => {\n    if (Array.isArray(id)) {\n      const correspondedItems = id.reduce((acc, cur) => {\n        const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === cur.toString());\n        if (correspondedItem) acc.push(correspondedItem);\n        return acc;\n      }, []);\n      setSelectedItem(correspondedItems as any);\n    } else {\n      const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === id.toString());\n      if (correspondedItem) setSelectedItem(correspondedItem);\n    }\n  }, []);\n\n  return [loading, dropDownItems, selectedItem, setSelectedItemById];\n}\n\n/* Module Selector */\n\ntype ModuleSelectorProps = {\n  moduleName: string;\n  to: string;\n  value: Value;\n  setSelectedModuleItem: (id: string | string[]) => void;\n  items: ShorthandCollection<DropdownItemProps>;\n  isMultiple: boolean;\n  isTestModel: boolean;\n};\n\nconst ModuleSelector: React.FC<ModuleSelectorProps> = ({\n  moduleName,\n  to,\n  value,\n  setSelectedModuleItem,\n  items,\n  isMultiple,\n  isTestModel,\n}): JSX.Element => {\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) return;\n    if (Array.isArray(data.value)) {\n      const ids = data.value.map((ele) => ele.content.key);\n      setSelectedModuleItem(ids);\n    } else {\n      const { key } = data.value.content;\n      setSelectedModuleItem(key);\n    }\n  };\n\n  return (\n    <Flex vAlign=\"center\" gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }}>{`Select ${moduleName}`}</Text>\n      {isTestModel ? (\n        <Dropdown items={items} value={formatDropdownValue(value)} multiple={isMultiple} open={false} />\n      ) : (\n        <Dropdown\n          items={items}\n          onChange={onDropdownChange}\n          value={formatDropdownValue(value)}\n          multiple={isMultiple}\n        />\n      )}\n      <Link to={to}>{`Add ${moduleName}`}</Link>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Divider, Flex, Text, Input, Button, Alert } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nexport const Setting = (): JSX.Element => {\n  const [settingData, setSettingData] = useState({\n    id: null,\n    key: '',\n    namespace: '',\n    iotHubConnectionString: '',\n    deviceId: '',\n    moduleId: '',\n  });\n  const [saveStatus, setSaveStatus] = useState({\n    success: false,\n    content: '',\n  });\n\n  useEffect(() => {\n    Axios.get('/api/settings/')\n      .then(({ data }) => {\n        if (data.length > 0) {\n          setSettingData({\n            id: data[0].id,\n            key: data[0].training_key,\n            namespace: data[0].endpoint,\n            iotHubConnectionString: data[0].iot_hub_connection_string,\n            deviceId: data[0].device_id,\n            moduleId: data[0].module_id,\n          });\n        }\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const onSave = (): void => {\n    const isSettingEmpty = settingData.id === null;\n    const url = isSettingEmpty ? `/api/settings/` : `/api/settings/${settingData.id}/`;\n\n    Axios(url, {\n      data: {\n        training_key: settingData.key,\n        endpoint: settingData.namespace,\n        iot_hub_connection_string: settingData.iotHubConnectionString,\n        device_id: settingData.deviceId,\n        module_id: settingData.moduleId,\n      },\n      method: isSettingEmpty ? 'POST' : 'PUT',\n    })\n      .then(() => {\n        setSaveStatus({ success: true, content: 'Save Setting Successfully' });\n        return void 0;\n      })\n      .catch((err) => {\n        setSaveStatus({ success: false, content: `Fail to save settings: /n ${err.toString()}` });\n      });\n  };\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Setting</h1>\n      <Divider color=\"grey\" />\n      <Text size=\"large\" weight=\"bold\">\n        Azure Cognitive Services Settings:{' '}\n      </Text>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Namespace:\n        </Text>\n        <Input\n          value={settingData.namespace}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, namespace: value }))}\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Key:\n        </Text>\n        <Input\n          value={settingData.key}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, key: value }))}\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Iot Hub Connection String:\n        </Text>\n        <Input\n          value={settingData.iotHubConnectionString}\n          onChange={(_, { value }): void =>\n            setSettingData((prev) => ({ ...prev, iotHubConnectionString: value }))\n          }\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Device ID:\n        </Text>\n        <Input\n          value={settingData.deviceId}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, deviceId: value }))}\n        />\n      </Flex>\n      <Flex vAlign=\"center\">\n        <Text size=\"large\" design={{ width: '300px' }}>\n          Module ID:\n        </Text>\n        <Input\n          value={settingData.moduleId}\n          onChange={(_, { value }): void => setSettingData((prev) => ({ ...prev, moduleId: value }))}\n        />\n      </Flex>\n      <Flex gap=\"gap.large\">\n        <Button primary onClick={onSave} disabled={Object.values(settingData).some((e) => !e)}>\n          Save\n        </Button>\n        <Button primary as={Link} to=\"/\">\n          Cancel\n        </Button>\n      </Flex>\n      {saveStatus.content ? (\n        <Alert\n          success={saveStatus.success}\n          danger={!saveStatus.success}\n          content={saveStatus.content}\n          dismissible\n        />\n      ) : null}\n    </Flex>\n  );\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Cameras from '../pages/Cameras';\nimport CameraDetails from '../pages/CameraDetails';\nimport { PartDetails } from '../pages/PartDetails';\nimport Locations from '../pages/Locations';\nimport LocationRegister from '../pages/LocationRegister';\nimport LocationDetails from '../pages/LocationDetails';\nimport ManualIdentification from '../pages/ManualIdentification';\nimport { Parts } from '../pages/Parts';\nimport { PartIdentification } from '../pages/PartIdentification';\nimport { Setting } from '../pages/Setting';\n\nexport const RootRouter: FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/manual\" component={ManualIdentification} />\n      <Route path=\"/locations/register\" component={LocationRegister} />\n      <Route path=\"/locations/detail\" component={LocationDetails} />\n      <Route path=\"/locations\" component={Locations} />\n      <Route path=\"/cameras/detail\" component={CameraDetails} />\n      <Route path=\"/cameras\" component={Cameras} />\n      <Route path=\"/parts/detail\" component={PartDetails} />\n      <Route path=\"/parts\" component={Parts} />\n      <Route path=\"/partIdentification\" component={PartIdentification} />\n      <Route path=\"/setting\" component={Setting} />\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nconst getTitle = (pathname: string): string => {\n  switch (pathname) {\n    case 'cameras':\n      return 'Camera';\n    case 'parts':\n      return 'Part';\n    case 'locations':\n      return 'Location';\n    case 'register':\n      return 'Register';\n    case 'label':\n      return 'Label';\n    case 'manual':\n      return 'Identify Manually';\n    case 'detail':\n      return 'Details';\n    case 'partIdentification':\n      return 'Job Configuration';\n    case 'capturePhotos':\n      return null;\n    case 'uploadPhotos':\n      return null;\n    default:\n      if (typeof pathname === 'string') return 'Details';\n      return null;\n  }\n};\n\nconst Breadcrumb: FC = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/') return <Text color=\"black\">Home</Text>;\n\n  const { pathTitles } = pathname\n    .split('/')\n    .slice(1)\n    .reduce(\n      (acc, cur) => {\n        const title = getTitle(cur);\n        if (!title) return acc;\n\n        const path = `${acc.path}/${cur}`;\n\n        return {\n          pathTitles: [...acc.pathTitles, { title, to: path }],\n          path,\n        };\n      },\n      { pathTitles: [], path: '' },\n    );\n\n  return (\n    <Flex gap=\"gap.smaller\">\n      <Link to={'/'} style={{ color: '#0094d8', textDecoration: 'none' }}>\n        <Text>Home</Text>\n      </Link>\n      {pathTitles.map((e, i, arr) => {\n        // const title = getTitle(e);\n\n        return (\n          <Fragment key={i}>\n            <Text color=\"black\">{'>'}</Text>\n            {i === arr.length - 1 ? (\n              <Text color=\"black\">{e.title}</Text>\n            ) : (\n              <Link to={`${e.to}`} style={{ color: '#0094d8', textDecoration: 'none' }}>\n                <Text>{e.title}</Text>\n              </Link>\n            )}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { memo, FC } from 'react';\nimport { Segment, Image, Flex } from '@fluentui/react-northstar';\nimport { NavLink } from 'react-router-dom';\n\nconst LeftNav: FC<any> = ({ styles }): JSX.Element => {\n  return (\n    <Segment color=\"grey\" inverted styles={{ ...styles, padding: 0, paddingTop: '1em' }}>\n      <Flex column gap=\"gap.large\" hAlign=\"center\">\n        <NavItem src=\"/icons/location.png\" to=\"/locations\"></NavItem>\n        <NavItem src=\"/icons/camera.png\" to=\"/cameras\"></NavItem>\n        <NavItem src=\"/icons/part.png\" to=\"/parts\"></NavItem>\n        <NavItem src=\"/icons/manual.png\" to=\"/manual\"></NavItem>\n        <NavItem src=\"/icons/partIdentification.png\" to=\"/partIdentification\"></NavItem>\n      </Flex>\n    </Segment>\n  );\n};\n\nconst NavItem = ({ src, to }): JSX.Element => {\n  return (\n    <NavLink\n      to={to}\n      style={{ display: 'flex', justifyContent: 'center', padding: '0.8em' }}\n      activeStyle={{ backgroundColor: 'rgba(250, 83, 5, 0.5)' }}\n    >\n      <Image src={src} design={{ width: '100%' }}></Image>\n    </NavLink>\n  );\n};\n\nexport default memo(LeftNav);\n","import React, { FC } from 'react';\nimport { Grid, Segment, Image, Flex, Text, MenuIcon } from '@fluentui/react-northstar';\nimport { NavLink, Link } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport LeftNav from './LeftNav';\n\nexport const MainLayout: React.FC = ({ children }) => {\n  return (\n    <Grid\n      columns=\"60px auto\"\n      rows=\"50px auto\"\n      design={{ height: '100vh' }}\n      styles={{ justifyContent: 'stretch' }}\n    >\n      <TopNav />\n      <LeftNav\n        styles={{\n          gridColumn: '1 / span 1',\n          gridRow: '2 / span 1',\n          boxShadow: '1px 0px 10px 0px rgba(0,0,0,0.75)',\n          zIndex: 1,\n        }}\n      />\n\n      <Segment styles={{ gridColumn: 'span 1', padding: '30px' }}>\n        <Breadcrumb />\n        {children}\n      </Segment>\n    </Grid>\n  );\n};\n\nconst TopNav: FC = () => {\n  return (\n    <Flex\n      space=\"between\"\n      vAlign=\"center\"\n      padding=\"padding.medium\"\n      styles={{\n        backgroundColor: '#0094d8',\n        gridColumn: '1 / span 2',\n        boxShadow: '0px 1px 10px 0px rgba(0,0,0,0.75)',\n        zIndex: 2,\n        fontSize: '20px',\n        padding: '0.5em 1em',\n      }}\n    >\n      <Flex gap=\"gap.large\" vAlign=\"center\">\n        <MenuIcon size=\"large\" styles={{ color: 'white' }} />\n        <NavLink to={'/'} style={{ textDecoration: 'none' }}>\n          <Text color=\"white\">Vision on Edge</Text>\n        </NavLink>\n      </Flex>\n      <Flex vAlign=\"center\" hAlign=\"end\" gap=\"gap.medium\" styles={{ height: '100%' }}>\n        <Link to=\"/setting\" style={{ height: '100%' }}>\n          <Image styles={{ height: '100%' }} src=\"/icons/setting.png\" />\n        </Link>\n        <Text color=\"white\">User</Text>\n      </Flex>\n    </Flex>\n  );\n};\n","import { ThemeInput, mergeThemes, themes } from '@fluentui/react-northstar';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colors: {\n      brand: {\n        '50': '#f3fafd',\n        '100': '#d1ecf9',\n        '200': '#aadcf4',\n        '300': '#5dbce8',\n        '400': '#1ba0dd',\n        '500': '#0094d8',\n        '600': '#0085c3',\n        '700': '#0071a5',\n        '800': '#005379',\n        '900': 'black',\n      },\n    },\n    colorScheme: {\n      brand: {\n        foreground: '#0094d8',\n        background: '#0094d8',\n        border: '#E1DFDD',\n        shadow: '#000',\n        foregroundHover: '#0094d8',\n        backgroundHover: '#0085c3',\n        borderHover: '#5dbce8',\n        shadowHover: '#000',\n        foregroundActive: '#0094d8',\n        backgroundActive: '#0094d8',\n        borderActive: '#E1DFDD',\n        shadowActive: undefined,\n        foregroundFocus: '#0094d8',\n        backgroundFocus: '#0094d8',\n        borderFocus: '#000',\n        shadowFocus: undefined,\n        foregroundPressed: '#0071a5',\n        backgroundPressed: '#0071a5',\n        borderPressed: '#5dbce8',\n        shadowPressed: undefined,\n        foregroundDisabled: '#C8C6C4',\n        backgroundDisabled: '#EDEBE9',\n        borderDisabled: '#EDEBE9',\n        shadowDisabled: undefined,\n        foreground1: '#0094d8',\n        foreground2: '#0085c3',\n        foreground3: '#aadcf4',\n        foreground4: '#fff',\n        background1: '#d1ecf9',\n        background2: '#005379',\n        background3: '#373644',\n        background4: '#0071a5',\n        border1: '#aadcf4',\n        border2: '#5dbce8',\n        foregroundHover1: '#fff',\n        foregroundHover2: '#aadcf4',\n        backgroundHover1: '#f3fafd',\n        foregroundPressed1: '#fff',\n        foregroundActive1: '#0094d8',\n        foregroundActive2: '#aadcf4',\n        backgroundActive1: '#0094d8',\n        borderActive1: '#aadcf4',\n        borderActive2: '#5dbce8',\n        foregroundFocus1: '#0094d8',\n        foregroundFocus2: '#0085c3',\n        foregroundFocus3: '#aadcf4',\n        foregroundFocus4: '#fff',\n        backgroundFocus1: '#d1ecf9',\n        backgroundFocus2: '#005379',\n        backgroundFocus3: '#373644',\n        borderFocusWithin: '#fff',\n        borderFocus1: '#0094d8',\n        foregroundDisabled1: '#C8C6C4',\n        backgroundDisabled1: '#EDEBE9',\n      },\n    },\n  },\n};\n\n/**\n * Primary color is based on #0094d8 and generated by https://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/theming-designer/index.html\n */\nexport const myTheme = mergeThemes(themes.teams, theme);\n","import { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport { ReactPlugin } from '@microsoft/applicationinsights-react-js';\n\nlet reactPlugin = null;\nlet appInsights = null;\n\n/**\n * Create the App Insights Telemetry Service\n * @return {{reactPlugin: ReactPlugin, appInsights: Object, initialize: Function}} - Object\n */\nconst createTelemetryService = (): { reactPlugin; appInsights; initialize } => {\n  /**\n   * Initialize the Application Insights class\n   * @param {string} instrumentationKey - Application Insights Instrumentation Key\n   * @param {Object} browserHistory - client's browser history, supplied by the withRouter HOC\n   * @return {void}\n   */\n  const initialize = (instrumentationKey: string, browserHistory): any => {\n    if (!browserHistory) {\n      throw new Error('Could not initialize Telemetry Service');\n    }\n    if (!instrumentationKey) {\n      throw new Error('Instrumentation key not provided in /src/components/TelemetryProvider.tsx');\n    }\n\n    reactPlugin = new ReactPlugin();\n\n    appInsights = new ApplicationInsights({\n      config: {\n        instrumentationKey,\n        maxBatchInterval: 0,\n        disableFetchTracking: false,\n        extensions: [reactPlugin],\n        extensionConfig: {\n          [reactPlugin.identifier]: {\n            history: browserHistory,\n          },\n        },\n      },\n    });\n\n    appInsights.loadAppInsights();\n  };\n\n  return { reactPlugin, appInsights, initialize };\n};\n\nexport const ai = createTelemetryService();\nexport const getAppInsights = (): any => appInsights;\n","import React, { Component, ReactNode } from 'react';\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\nimport { withRouter } from 'react-router-dom';\n\nimport { ai } from '../TelemetryService';\n\n/**\n * This Component provides telemetry with Azure App Insights\n *\n * NOTE: the package '@microsoft/applicationinsights-react-js' has a HOC withAITracking that requires this to be a Class Component rather than a Functional Component\n */\nclass TelemetryProvider extends Component<any, { initialized: boolean }> {\n  state = {\n    initialized: false,\n  };\n\n  componentDidMount(): void {\n    const { history } = this.props;\n    const { initialized } = this.state;\n    const AppInsightsInstrumentationKey = this.props.instrumentationKey; // PUT YOUR KEY HERE\n    if (!initialized && Boolean(AppInsightsInstrumentationKey) && Boolean(history)) {\n      ai.initialize(AppInsightsInstrumentationKey, history);\n      this.setState({ initialized: true });\n    }\n\n    this.props.after();\n  }\n\n  render(): ReactNode {\n    const { children } = this.props;\n    return <>{children}</>;\n  }\n}\n\nexport default withRouter(withAITracking(ai.reactPlugin, TelemetryProvider));\n","import React, { FC } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from '@fluentui/react-northstar';\nimport { RootRouter } from './routes/RootRouter';\nimport { MainLayout } from './components/MainLayout';\nimport { myTheme } from './theme';\nimport TelemetryProvider from './components/TelemetryProvider';\nimport { getAppInsights } from './TelemetryService';\n\nconst App: FC = (): JSX.Element => {\n  let appInsights = null;\n\n  return (\n    <Provider theme={myTheme}>\n      <BrowserRouter>\n        <TelemetryProvider\n          after={(): void => {\n            appInsights = getAppInsights();\n          }}\n          instrumentationKey=\"97824aa6-ebbc-4d2a-b9a1-2fdde7d77fcc\"\n        >\n          <div className=\"App\">\n            <MainLayout>\n              <RootRouter />\n            </MainLayout>\n          </div>\n        </TelemetryProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/State';\n\nconst { store, persistor } = configureStore(initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading..</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}