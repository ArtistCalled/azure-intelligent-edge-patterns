{"version":3,"sources":["store/project/projectTypes.ts","store/part/partReducer.ts","store/labelingPage/labelingPageTypes.ts","store/State.ts","store/camera/cameraReducer.ts","store/camera/cameraTypes.ts","store/part/partTypes.ts","store/labelingPage/labelingPageReducer.ts","components/LiveViewContainer/LiveViewContainer.type.ts","store/location/locationReducer.ts","store/location/locationTypes.ts","store/dialog/dialogIsOpenReducer.ts","store/dialog/dialogIsOpenTypes.ts","store/project/projectReducer.ts","store/image/imageReducer.ts","store/image/imageTypes.ts","store/setting/settingReducer.ts","store/rootReducer.ts","store/index.ts","components/ImageLink.tsx","pages/Home.tsx","store/dialog/dialogIsOpenActions.ts","store/camera/cameraActions.ts","components/AddButton.tsx","pages/Cameras.tsx","components/ConfirmDialog.tsx","components/CameraDetails/CameraDetailInfo.tsx","hooks/useInterval.ts","store/project/projectActions.ts","hooks/useParts.ts","hooks/useQuery.ts","components/LiveViewContainer/LiveViewScene.tsx","components/LabelingPage/util/useImage.ts","components/LiveViewContainer/LiveViewContainer.tsx","components/CameraConfigure/CameraConfigureInfo.tsx","components/CameraConfigure/CreateCameraConfig.tsx","pages/CameraDetails.tsx","components/LabelingPage/util/resizeImage.ts","store/labelingPage/labelingPageActions.ts","components/LabelingPage/Box.tsx","components/LabelingPage/RemoveBoxButton.tsx","components/LabelingPage/Scene.tsx","store/image/imageActions.ts","components/LabelingPage/PrevNextButton.tsx","pages/LabelingPage.tsx","components/LabelingPageDialog.tsx","components/LabelDisplayImage.tsx","components/RTSPVideo/RTSPVideo.tsx","store/part/partActions.ts","util/GetIDFromUrl.ts","util/getFilteredImages.ts","util/formatDropdownValue.ts","components/CapturePhoto/CapturePhotos.tsx","hooks/useCameras.ts","components/UploadPhotos/UploadPhotos.tsx","pages/PartDetails.tsx","store/location/locationActions.ts","pages/Locations.tsx","pages/LocationRegister.tsx","pages/LocationDetails.tsx","components/ManualIdentification/ImageItem.tsx","components/ManualIdentification/ImagesContainer.tsx","pages/ManualIdentification.tsx","pages/Parts.tsx","TelemetryService.ts","components/WarningDialog/WarningDialog.tsx","pages/PartIdentification.tsx","store/setting/settingAction.ts","pages/Setting.tsx","hooks/useProject.ts","routes/PrivateRoute.tsx","routes/RootRouter.tsx","components/Breadcrumb.tsx","components/MainLayout/LeftNav.tsx","components/MainLayout/MainLayout.tsx","theme.ts","components/TelemetryProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Status","reducer","AnnotationState","LabelingCursorStates","WorkState","LabelingType","initialState","dialogIsOpen","cameras","locations","images","labelingPageState","annotations","part","capturedImages","isValid","project","isLoading","data","id","camera","location","parts","needRetraining","accuracyRangeMin","accuracyRangeMax","maxImages","modelUrl","trainingMetrics","prevConsequence","curConsequence","inferenceMetrics","successRate","successfulInferences","unIdetifiedItems","isGpu","averageTime","status","None","error","trainingLog","setting","loading","current","key","namespace","origin","isTrainerValid","camerasReducer","state","action","type","payload","concat","idx","findIndex","e","slice","checkIfImagesCountIsValidToTrain","newCapturedImage","newState","filter","image","labels","length","CreatingState","labelingPageStateReducer","push","annotation","creatingAnnotation","updater","annotationState","Finish","label","x1","x2","y1","y2","pop","index","locationsReducer","dialogIsOpenReducer","projectReducer","newStatus","TrainingFailed","StartInference","labelImagesReducer","updatedImageIdx","settingReducer","rootReducer","combineReducers","partReducer","persistConfig","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","memo","to","imgSrc","defaultSrc","bgImgSrc","imgPadding","width","height","bgImgStyle","pointerCursor","onClick","Flex","column","styles","style","Image","src","padding","objectFit","backgroundImage","cursor","Text","align","Home","dispatch","useDispatch","gap","size","weight","color","backgroundColor","requestCamerasFailure","console","getCameras","axios","then","getCamerasSuccess","catch","err","AddButton","Button","primary","fluid","circular","content","Cameras","useSelector","is_demo","useState","name","setName","rtsp","setRtsp","model_name","setModel_name","useEffect","display","flexFlow","justifyContent","Grid","columns","map","i","backgroundSize","backgroundPosition","backgroundRepeat","Dialog","open","trigger","alignSelf","alignItems","Input","placeholder","value","onChange","_","newProps","disabled","newCamera","method","postCameraSuccess","ConfirmDialog","onConfirm","primaryStyles","setOpen","onOpen","footer","space","modelName","deleteCameraSuccess","deleteCamera","useInterval","callback","delay","savedCallback","useRef","setInterval","clearInterval","getTrainingLogSuccess","thunkGetProject","isTestModel","url","undefined","Number","Axios","get","parseInt","split","ele","download_uri","getProjectSuccess","thunkPostProject","projectId","selectedLocations","selectedParts","selectedCamera","getState","isProjectEmpty","projectData","headers","getTrain","thunkGetTrainingLog","Error","log","FinishTraining","WaitTraining","useParts","isDemo","setParts","fetch","res","json","useQuery","URLSearchParams","useLocation","search","getRelativePosition","layer","transform","getAbsoluteTransform","copy","invert","pos","getStage","getPointerPosition","point","LiveViewScene","AOIs","setAOIs","visible","imageInfo","creatingState","setCreatingState","divRef","stageRef","imgRef","layerRef","imgEle","imgWidth","imgHeight","anim","Konva","Animation","start","stop","getBoundingClientRect","divWidth","divHeight","stageWidth","stageHeight","scale","Math","min","x","y","offsetX","offsetY","position","ref","Disabled","onMouseDown","target","getLayer","prev","uniqid","Creating","onMouseMove","R","rear","onMouseUp","Waiting","AOILayer","holes","box","boundary","radius","strokeWidth","onBoxChange","updateBox","newBox","tmp","newAOIs","removeBox","Mask","fill","sceneFunc","ctx","shape","beginPath","moveTo","lineTo","forEach","fillStrokeShape","listening","AOIBox","cancelBtnVisible","setCanceBtnVisible","handleDrag","onMouseEnter","onMouseLeave","cache","drawBorder","points","closed","stroke","draggable","onDragMove","container","defaultState","useImage","crossOrigin","imageState","setImageState","prevUrl","usePrevious","img","document","createElement","onload","onerror","addEventListener","removeEventListener","LiveViewContainer","showVideo","initialAOIData","cameraId","useAOI","showAOI","setShowAOI","lasteUpdatedAOIs","showUpdateSuccessTxt","setShowUpdateSuccessTxt","setLoading","setError","window","hostname","creatingAOI","setCreatingAOI","onCheckboxClick","a","patch","area","JSON","stringify","onUpdate","timer","setTimeout","clearTimeout","hasEdit","updateBtnDisabled","Alert","danger","header","message","hAlign","vAlign","Checkbox","labelPosition","toggle","checked","visibility","CameraConfigureInfo","allTrainingLog","useAllTrainingLog","cameraName","history","useHistory","onDeleteConfigure","useCallback","confirm","delete","alert","thunkDeleteProject","CameraConfigStatus","dispacth","new","precision","recall","mAP","previous","getTrainingMetricsSuccess","thunkGetTrainingMetrics","success_rate","inference_num","unidentified_num","gpu","average_time","thunkGetInferenceMetrics","isCameraOnline","includes","Loader","title","online","join","rowGap","fontWeight","round","margin","marginLeft","as","Link","allLogs","setAllLogs","ConsequenceDashboard","ListItem","children","CameraStatus","text","CreateCameraConfig","design","border","CameraDetails","cameraIdInproject","find","hasProject","aoiData","getAOIData","cameraArea","parse","getResizeImageFunction","defaultSize","scaleX","scaleY","requestAnnotationsSuccess","BoxObj","init","attribute","Empty","createWithPoint","p","obj","this","add","newObj","P1Added","setVerticesToValidValue","setVerticesToInt","setVerticesPointsOrder","object","Box2d","workState","onSelect","selected","annotationIndex","changeCursorState","vertices","setVertices","anchorRadius","boxRef","dispatchLabel","newAnnotation","updateAnnotation","mouseMoveListener","evt","onDragAnchor","xi","yi","getSize","setAttr","anotherPosXArr","anotherPosYArr","splice","xx","yy","nwseResize","neswResize","prevVertices","on","off","cancelBubble","onDragEnd","imageSize","setShowOuterRemoveButton","setColor","setStrokeWidth","pointer","Scene","labelingType","setWorkState","resizeImage","setImageSize","noMoreCreate","useMemo","SingleAnnotation","default","cursorState","setCursorState","selectedAnnotationIndex","setSelectedAnnotationIndex","showOuterRemoveButton","isDragging","setIsDragging","cursorType","crosshair","removeAnnotation","Selecting","outcomeSize","outcomeScale","iconOnly","onDragStart","fontSize","requestLabelImagesFailure","getLabelImages","getLabelImagesSuccess","postLabelImage","newImage","saveLabelImageAnnotation","imageId","info","updateLabelImageAnnotation","PrevNextButton","isRelabel","prevDisabled","nextDisabled","onPrevClick","onNextClick","icon","checkOnePointBox","LabelingPage","imageIndex","closeDialog","setIndex","isOnePointBox","imageUrl","parsedLabels","getAnnotations","annotationToShape","imgScale","edge","Line","Circle","labelImage","labelText","stage","shapes","Stage","FastLayer","newShapes","destroy","j","draw","RTSPVideo","React","partId","canCapture","onVideoStart","onVideoPause","streamId","setStreamId","onDisconnect","response","Group","buttons","stream_id","thunkAddCapturedImages","getIdFromUrl","getFilteredImages","is_relabel","formatDropdownValue","Array","isArray","CapturePhotos","setSelectedCamera","CameraSelector","availableCameras","useCameras","items","Dropdown","newSelectedCamera","CapturedImagesContainer","filteredImages","imageCount","overflow","borderColor","arr","when","UploadPhotos","files","formData","FormData","append","accept","multiple","gridGap","justifyItems","PartDetails","gridColumnGap","LeftPanel","description","setDescription","gridColumn","TextArea","hasPartId","dismissible","RightPanel","path","Tab","pathname","activeIndex","Menu","pointing","requestLocationsFailure","Locations","getLocationsSuccess","LocationRegister","coordinates","setCoordinates","Divider","paddingTop","minHeight","newLocation","postLocationSuccess","LocationDetails","confidenceLevel","relabelImages","setJudgedImageList","partItems","isPartCorrect","filteredPartItems","selectedPartItem","setSelectedPartItem","maxHeight","minWidth","truncated","RadioGroup","checkedValue","onCheckedValueChange","next","judgedImageList","selectedPartId","borderWidth","borderStyle","ManualIdentification","reduce","acc","confidenceLevelRange","setConfidenceLevelRange","ascend","setAscend","sortRef","sorted","prevIsAscend","setRelabelImages","confidence","reverse","sort","b","columnGap","allowCross","handle","dragging","restProps","prefixCls","overlay","placement","maxWidth","Parts","partsAPI","imagesAPI","all","spread","partsRes","wrap","right","bottom","Item","reactPlugin","appInsights","ai","initialize","instrumentationKey","isAppInsightOn","browserHistory","ReactPlugin","ApplicationInsights","config","maxBatchInterval","disableFetchTracking","disableTelemetry","extensions","extensionConfig","identifier","loadAppInsights","getAppInsights","WarningDialog","onCancel","contentText","cancelButton","confirmButton","flexDirection","theme","siteVariables","colorScheme","brand","foreground","sendTrainInfoToAppInsight","selectedPartIds","interestedImagesLength","appInsight","trackEvent","properties","source","PartIdentification","maxImage","setIsTestModel","useDropdownItems","cameraLoading","dropDownCameras","setSelectedCameraById","partLoading","dropDownParts","setSelectedPartsById","locationLoading","dropDownLocations","setSelectedLocationById","maxImgCountError","setMaxImgCountError","handleSubmitConfigure","setData","keyName","accracyRangeDisabled","moduleName","setSelectedModuleItem","isMultiple","inline","TestModelButton","originItems","dropDownItems","setDropDownItems","selectedItem","setSelectedItem","finally","correspondedItems","cur","correspondedItem","toString","ModuleSelector","ids","settingSuccess","settingFailed","thunkGetSetting","training_key","endpoint","is_trainer_valid","is_collect_data","Setting","settingData","originSettingData","checkboxChecked","setCheckboxChecked","isUserGuideOpen","setIsUserGuideOpen","notEmpty","cannotUpdateOrSave","isCollectData","paddingBottom","gridTemplateColumns","gridTemplateRows","Tooltip","href","rel","getStore","isSettingEmpty","requestConfig","iot_hub_connection_string","device_id","module_id","reload","settingDataId","newCheckboxChecked","initialDropdownItem","PreviousProjectPanel","dropdownItems","setDropdownItems","customVisionProjectId","setCustomVisionProjectId","useProject","isProjectLoading","projectError","loadFullImages","setLoadFullImages","otherLoading","setOtherLoading","otherError","setOtherError","createProjectModel","setCreateProjectModel","Object","entries","vertical","PrivateRoute","component","rest","render","RootRouter","Breadcrumb","pathTitles","getTitle","textDecoration","NavItem","activeStyle","Segment","inverted","MainLayout","rows","gridRow","boxShadow","zIndex","TopNav","colors","background","shadow","foregroundHover","backgroundHover","borderHover","shadowHover","foregroundActive","backgroundActive","borderActive","shadowActive","foregroundFocus","backgroundFocus","borderFocus","shadowFocus","foregroundPressed","backgroundPressed","borderPressed","shadowPressed","foregroundDisabled","backgroundDisabled","borderDisabled","shadowDisabled","foreground1","foreground2","foreground3","foreground4","background1","background2","background3","background4","border1","border2","foregroundHover1","foregroundHover2","backgroundHover1","foregroundPressed1","foregroundActive1","foregroundActive2","backgroundActive1","borderActive1","borderActive2","foregroundFocus1","foregroundFocus2","foregroundFocus3","foregroundFocus4","backgroundFocus1","backgroundFocus2","backgroundFocus3","borderFocusWithin","borderFocus1","foregroundDisabled1","backgroundDisabled1","myTheme","mergeThemes","themes","teams","withRouter","withAITracking","initialized","AppInsightsInstrumentationKey","Boolean","App","appInsightInfo","setAppInsightInfo","appInsightKey","settings","appInsightKeyData","settingsData","Provider","className","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e31faff.chunk.js","sourcesContent":["import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport type { State } from '../State';\n\nexport type Project = {\n  isLoading: boolean;\n  trainingLog: string;\n  data: ProjectData;\n  inferenceMetrics: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n    isGpu: boolean;\n    averageTime: number;\n  };\n  trainingMetrics: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n  status: Status;\n  error: Error;\n};\n\nexport enum Status {\n  None = 'none',\n  WaitTraining = 'waitTraining',\n  FinishTraining = 'finishTraining',\n  TrainingFailed = 'trainingFailed',\n  StartInference = 'startInference',\n}\n\nexport type Consequence = {\n  precision: number;\n  recall: number;\n  mAP: number;\n};\n\nexport type ProjectData = {\n  id: number;\n  camera: any;\n  location: any;\n  parts: any[];\n  needRetraining: boolean;\n  accuracyRangeMin: number;\n  accuracyRangeMax: number;\n  maxImages: number;\n  modelUrl: string;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_PROJECT_REQUEST = 'GET_PROJECT_REQUEST';\nexport type GetProjectRequestAction = {\n  type: typeof GET_PROJECT_REQUEST;\n};\n\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\nexport type GetProjectSuccessAction = {\n  type: typeof GET_PROJECT_SUCCESS;\n  payload: {\n    project: ProjectData;\n  };\n};\n\nexport const GET_PROJECT_FAILED = 'GET_PROJECT_FAILED';\nexport type GetProjectFailedAction = {\n  type: typeof GET_PROJECT_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_LOG_REQUEST = 'GET_TRAINING_LOG_REQUEST';\nexport type GetTrainingLogRequesAction = {\n  type: typeof GET_TRAINING_LOG_REQUEST;\n};\n\nexport const GET_TRAINING_LOG_SUCCESS = 'GET_TRAINING_LOG_SUCCESS';\nexport type GetTrainingLogSuccessAction = {\n  type: typeof GET_TRAINING_LOG_SUCCESS;\n  payload: {\n    trainingLog: string;\n    newStatus: Status;\n  };\n};\n\nexport const GET_TRAINING_LOG_FAILED = 'GET_TRAINING_LOG_FAILED';\nexport type GetTrainingLogFailedAction = {\n  type: typeof GET_TRAINING_LOG_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_METRICS_REQUEST = 'GET_TRAINING_METRICS_REQUEST';\nexport type GetTrainingMetricsRequestAction = {\n  type: typeof GET_TRAINING_METRICS_REQUEST;\n};\n\nexport const GET_TRAINING_METRICS_SUCCESS = 'GET_TRAINING_METRICS_SUCCESS';\nexport type GetTrainingMetricsSuccessAction = {\n  type: typeof GET_TRAINING_METRICS_SUCCESS;\n  payload: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n};\n\nexport const GET_TRAINING_METRICS_FAILED = 'GET_TRAINING_METRICS_FAILED';\nexport type GetTrainingMetricsFailedAction = {\n  type: typeof GET_TRAINING_METRICS_FAILED;\n  error: Error;\n};\n\nexport const GET_INFERENCE_METRICS_REQUEST = 'GET_TRAINING_INFERENCE_REQUEST';\nexport type GetInferenceMetricsRequestAction = {\n  type: typeof GET_INFERENCE_METRICS_REQUEST;\n};\n\nexport const GET_INFERENCE_METRICS_SUCCESS = 'GET_INFERENCE_METRICS_SUCCESS';\nexport type GetInferenceMetricsSuccessAction = {\n  type: typeof GET_INFERENCE_METRICS_SUCCESS;\n  payload: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n    isGpu: boolean;\n    averageTime: number;\n  };\n};\n\nexport const GET_INFERENCE_METRICS_FAILED = 'GET_INFERENCE_METRICS_FAILED';\nexport type GetInferenceMetricsFailedAction = {\n  type: typeof GET_INFERENCE_METRICS_FAILED;\n  error: Error;\n};\n\nexport const POST_PROJECT_REQUEST = 'POST_PROJECT_REQUEST';\nexport type PostProjectRequestAction = {\n  type: typeof POST_PROJECT_REQUEST;\n};\n\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\nexport type PostProjectSuccessAction = {\n  type: typeof POST_PROJECT_SUCCESS;\n};\n\nexport const POST_PROJECT_FALIED = 'POST_PROJECT_FALIED';\nexport type PostProjectFaliedAction = {\n  type: typeof POST_PROJECT_FALIED;\n  error: Error;\n};\n\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport type DeleteProjectSuccessAction = {\n  type: typeof DELETE_PROJECT_SUCCESS;\n};\n\nexport const DELETE_PROJECT_FALIED = 'DELETE_PROJECT_FALIED';\nexport type DeleteProjectFaliedAction = {\n  type: typeof DELETE_PROJECT_FALIED;\n};\n\nexport const UPDATE_PROJECT_DATA = 'UPDATE_PROJECT_DATA';\nexport type UpdateProjectDataAction = {\n  type: typeof UPDATE_PROJECT_DATA;\n  payload: ProjectData;\n};\n\nexport const START_INFERENCE = 'START_INFERENCE';\nexport type StartInferenceAction = {\n  type: typeof START_INFERENCE;\n};\n\nexport const STOP_INFERENCE = 'STOP_INFERENCE';\nexport type StopInferenceAction = {\n  type: typeof STOP_INFERENCE;\n};\n\nexport type ProjectActionTypes =\n  | GetProjectRequestAction\n  | GetProjectSuccessAction\n  | GetProjectFailedAction\n  | GetTrainingLogRequesAction\n  | GetTrainingLogSuccessAction\n  | GetTrainingLogFailedAction\n  | PostProjectRequestAction\n  | PostProjectSuccessAction\n  | PostProjectFaliedAction\n  | DeleteProjectSuccessAction\n  | DeleteProjectFaliedAction\n  | UpdateProjectDataAction\n  | GetTrainingMetricsRequestAction\n  | GetTrainingMetricsSuccessAction\n  | GetTrainingMetricsFailedAction\n  | GetInferenceMetricsRequestAction\n  | GetInferenceMetricsSuccessAction\n  | GetInferenceMetricsFailedAction\n  | StartInferenceAction\n  | StopInferenceAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type ProjectThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, Action<string>>;\n","import { initialState } from '../State';\nimport {\n  PartActionTypes,\n  ADD_CAPTURED_IMAGE,\n  Part,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\n\nconst partReducer = (state = initialState.part, action: PartActionTypes): Part => {\n  switch (action.type) {\n    case ADD_CAPTURED_IMAGE:\n      return { ...state, capturedImages: [...state.capturedImages, action.payload.newCapturedImage] };\n    case UPDATE_CAPTURED_IMAGES:\n      return { ...state, capturedImages: action.payload.capturedImages };\n    default:\n      return state;\n  }\n};\n\ntype PartReducerType = typeof partReducer;\nconst checkIfImagesCountIsValidToTrain = (reducer: PartReducerType) => (\n  state = initialState.part,\n  action: PartActionTypes,\n): Part => {\n  const newState = reducer(state, action);\n  const isValid = newState.capturedImages.filter((image) => image.labels).length >= 15;\n  return { ...newState, isValid };\n};\n\nexport default checkIfImagesCountIsValidToTrain(partReducer);\n","// * Request Operation\nexport const REQUEST_ANNOTATION_FAILURE = 'REQUEST_ANNOTATION_FAILURE';\nexport type RequestAnnotationSuccessAction = { type: typeof REQUEST_ANNOTATION_SUCCESS; payload: any };\nexport const REQUEST_ANNOTATION_SUCCESS = 'REQUEST_ANNOTATION_SUCCESS';\nexport type RequestAnnotationFailureAction = { type: typeof REQUEST_ANNOTATION_FAILURE };\n\n// * Store Operation\nexport const CREATE_ANNOTATION = 'CREATE_ANNOTATION';\nexport type CreateAnnotationAction = { type: typeof CREATE_ANNOTATION; payload: { annotation: Annotation } };\nexport const UPDATE_CREATING_ANNOTATION = 'UPDATE_CREATING_ANNOTATION';\nexport type UpdateCreatingAnnotationAction = {\n  type: typeof UPDATE_CREATING_ANNOTATION;\n  payload: { updater: (annotation: Annotation) => Annotation };\n};\nexport const UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nexport type UpdateAnnotationAction = {\n  type: typeof UPDATE_ANNOTATION;\n  payload: { annotation: Annotation; index: number };\n};\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport type RemoveAnnotationAction = {\n  type: typeof REMOVE_ANNOTATION;\n  payload: { index: number };\n};\nexport const RESET_ANNOTATION = 'RESET_ANNOTATION';\nexport type ResetAnnotationAction = {\n  type: typeof RESET_ANNOTATION;\n};\n\nexport type AnnotationAction =\n  | RequestAnnotationSuccessAction\n  | RequestAnnotationFailureAction\n  | CreateAnnotationAction\n  | UpdateCreatingAnnotationAction\n  | UpdateAnnotationAction\n  | RemoveAnnotationAction\n  | ResetAnnotationAction;\n\nexport type Position2D = {\n  x: number;\n  y: number;\n};\nexport type BoxLabel = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\nexport type Size2D = { width: number; height: number };\nexport type Annotation = {\n  id: number;\n  label: BoxLabel;\n  attribute: string;\n  annotationState: AnnotationState;\n};\n\nexport enum AnnotationState {\n  Empty = 'Empty',\n  P1Added = 'P1Added',\n  Finish = 'Finish',\n}\n\nexport enum LabelingCursorStates {\n  default = 'default',\n  pointer = 'pointer',\n  crosshair = 'crosshair',\n  neswResize = 'nesw-resize',\n  nwseResize = 'nwse-resize',\n}\nexport interface Box2dComponentProps {\n  workState: WorkState;\n  scale: number;\n  onSelect: Function;\n  annotation: Annotation;\n  annotationIndex: number;\n  selected: boolean;\n  visible?: boolean;\n  dispatch: any;\n  changeCursorState?: (cursorType?: LabelingCursorStates) => void;\n  // instanceID: number;\n}\nexport type BoxObject = {\n  init: () => Annotation;\n  createWithPoint: (point: Position2D, attribute: string) => Annotation;\n  add: (point: Position2D, arg1: Annotation) => Annotation;\n  setVerticesToValidValue: (arg0: Annotation) => Annotation;\n  setVerticesToInt: (arg0: Annotation) => Annotation;\n  setVerticesPointsOrder: (arg0: Annotation) => Annotation;\n};\n\nexport enum WorkState {\n  Creating = 'Creating',\n  Selecting = 'Selecting',\n  None = 'None',\n}\n\nexport enum LabelingType {\n  SingleAnnotation = 0,\n  MultiAnnotation = 1,\n}\n","import { Annotation } from './labelingPage/labelingPageTypes';\nimport { Camera } from './camera/cameraTypes';\nimport { Part } from './part/partTypes';\nimport { Location } from './location/locationTypes';\nimport { Project, Status } from './project/projectTypes';\nimport { LabelImage } from './image/imageTypes';\nimport { Setting } from './setting/settingType';\n\nexport interface State {\n  dialogIsOpen: boolean;\n  cameras: Camera[];\n  locations: Location[];\n  labelingPageState: LabelingPageState;\n  part: Part;\n  project: Project;\n  images: LabelImage[];\n  setting: Setting;\n}\n\nexport type LabelingPageState = { annotations: Annotation[] };\n\nexport const initialState: State = {\n  dialogIsOpen: false,\n  cameras: [],\n  locations: [],\n  images: [],\n  labelingPageState: { annotations: [] },\n  part: {\n    capturedImages: [],\n    isValid: true,\n  },\n  project: {\n    isLoading: false,\n    data: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 50,\n      modelUrl: '',\n    },\n    trainingMetrics: {\n      prevConsequence: null,\n      curConsequence: null,\n    },\n    inferenceMetrics: {\n      successRate: null,\n      successfulInferences: null,\n      unIdetifiedItems: null,\n      isGpu: false,\n      averageTime: null,\n    },\n    status: Status.None,\n    error: null,\n    trainingLog: '',\n  },\n  setting: {\n    loading: false,\n    error: null,\n    current: {\n      id: -1,\n      key: '',\n      namespace: '',\n    },\n    origin: {\n      id: -1,\n      key: '',\n      namespace: '',\n    },\n    isTrainerValid: false,\n  },\n};\n","import {\n  GET_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  POST_CAMERA_SUCCESS,\n  Camera,\n  CameraAction,\n  DELETE_CAMERA_SUCCESS,\n} from './cameraTypes';\nimport { initialState } from '../State';\n\nconst camerasReducer = (state = initialState.cameras, action: CameraAction): Camera[] => {\n  switch (action.type) {\n    case GET_CAMERA_SUCCESS:\n      return action.payload;\n    case REQUEST_CAMERA_FAILURE:\n      return state;\n    case POST_CAMERA_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_CAMERA_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default camerasReducer;\n","// Describing the shape of the camera's slice of state\nexport type Camera = {\n  id?: number;\n  name: string;\n  rtsp: string;\n  model_name: string;\n  area?: string;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_CAMERA_SUCCESS = 'GET_CAMERA_SUCCESS';\nexport const POST_CAMERA_SUCCESS = 'POST_CAMERA_SUCCESS';\nexport const DELETE_CAMERA_SUCCESS = 'DELETE_CAMERA_SUCCESS';\nexport const REQUEST_CAMERA_FAILURE = 'REQUEST_CAMERA_FAILURE';\n\nexport type GetCamerasSuccess = { type: typeof GET_CAMERA_SUCCESS; payload: Camera[] };\nexport type PostCameraSuccess = { type: typeof POST_CAMERA_SUCCESS; payload: Camera };\nexport type DeleteCameraSuccess = { type: typeof DELETE_CAMERA_SUCCESS; payload: { id: number } };\nexport type RequestCamerasFailure = { type: typeof REQUEST_CAMERA_FAILURE };\n\nexport type CameraAction =\n  | GetCamerasSuccess\n  | PostCameraSuccess\n  | DeleteCameraSuccess\n  | RequestCamerasFailure;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { LabelImage } from '../image/imageTypes';\n\n// Describing the shape of the chat's slice of state\nexport type Part = { capturedImages: LabelImage[]; isValid: boolean };\n\n// Describing the different ACTION NAMES available\nexport const ADD_CAPTURED_IMAGE = 'ADD_CAPTURED_IMAGE';\n\nexport type AddCapturedImageAction = {\n  type: typeof ADD_CAPTURED_IMAGE;\n  payload: {\n    newCapturedImage: LabelImage;\n  };\n};\n\nexport const UPDATE_CAPTURED_IMAGES = 'UPDATE_CAPTURED_IMAGES';\n\nexport type UpdateCapturedImageAction = {\n  type: typeof UPDATE_CAPTURED_IMAGES;\n  payload: {\n    capturedImages: LabelImage[];\n  };\n};\n\nexport type PartActionTypes = AddCapturedImageAction | UpdateCapturedImageAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type PartThunk<ReturnType = void> = ThunkAction<ReturnType, Part, unknown, Action<string>>;\n","import {\n  AnnotationState,\n  UPDATE_ANNOTATION,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  REMOVE_ANNOTATION,\n  AnnotationAction,\n  RESET_ANNOTATION,\n} from './labelingPageTypes';\nimport { initialState, LabelingPageState } from '../State';\n\nconst labelingPageStateReducer = (\n  state = initialState.labelingPageState,\n  action: AnnotationAction,\n): LabelingPageState => {\n  const newState = state;\n  switch (action.type) {\n    case REQUEST_ANNOTATION_SUCCESS:\n      newState.annotations = action.payload.annotations;\n      break;\n    case REQUEST_ANNOTATION_FAILURE:\n      break;\n    case CREATE_ANNOTATION:\n      newState.annotations.push(action.payload.annotation);\n      break;\n    case UPDATE_CREATING_ANNOTATION:\n      {\n        const creatingAnnotation = action.payload.updater(\n          newState.annotations[newState.annotations.length - 1],\n        );\n\n        if (creatingAnnotation.annotationState === AnnotationState.Finish) {\n          if (\n            (creatingAnnotation.label.x1 | 0) === (creatingAnnotation.label.x2 | 0) &&\n            (creatingAnnotation.label.y1 | 0) === (creatingAnnotation.label.y2 | 0)\n          ) {\n            newState.annotations.pop();\n          } else {\n            newState.annotations[newState.annotations.length - 1] = creatingAnnotation;\n            newState.annotations = [...newState.annotations];\n          }\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION:\n      newState.annotations[action.payload.index] = action.payload.annotation;\n      break;\n    case REMOVE_ANNOTATION:\n      newState.annotations = newState.annotations\n        .slice(0, action.payload.index)\n        .concat(newState.annotations.slice(action.payload.index + 1));\n      break;\n    case RESET_ANNOTATION:\n      newState.annotations = initialState.labelingPageState.annotations;\n      break;\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport default labelingPageStateReducer;\n","import { Dispatch, SetStateAction } from 'react';\nimport { Box } from '../../type';\n\nexport enum CreatingState {\n  Disabled,\n  Waiting,\n  Creating,\n}\n\nexport type LiveViewProps = {\n  AOIs: Box[];\n  setAOIs: Dispatch<SetStateAction<Box[]>>;\n  visible: boolean;\n  imageInfo: [HTMLImageElement, string, { width: number; height: number }];\n  creatingState: CreatingState;\n  setCreatingState: Dispatch<SetStateAction<CreatingState>>;\n};\n\nexport type AOILayerProps = {\n  imgWidth: number;\n  imgHeight: number;\n  AOIs: Box[];\n  setAOIs: Dispatch<SetStateAction<Box[]>>;\n  visible: boolean;\n  creatingState: CreatingState;\n};\n\nexport type MaskProps = {\n  width: number;\n  height: number;\n  holes: Box[];\n  visible: boolean;\n};\n\nexport type AOIBoxProps = {\n  box: Box;\n  onBoxChange: (updateBox: (prevBox: Box) => Box) => void;\n  boundary: { x1: number; y1: number; x2: number; y2: number };\n  visible: boolean;\n  radius: number;\n  strokeWidth: number;\n  removeBox: (id: string) => void;\n  creatingState: CreatingState;\n};\n","import {\n  GET_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  POST_LOCATION_SUCCESS,\n  Location,\n  LocationAction,\n} from './locationTypes';\nimport { initialState } from '../State';\n\nconst locationsReducer = (state = initialState.locations, action: LocationAction): Location[] => {\n  switch (action.type) {\n    case GET_LOCATION_SUCCESS:\n      return action.payload;\n    case REQUEST_LOCATION_FAILURE:\n      return state;\n    case POST_LOCATION_SUCCESS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default locationsReducer;\n","// Describing the shape of the loaction's slice of state\nexport type Location = {\n  id?: number;\n  name: string;\n  coordinates: string;\n  description: string;\n  projectId?: number;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const REQUEST_LOCATION_FAILURE = 'REQUEST_LOCATION_FAILURE';\nexport const POST_LOCATION_SUCCESS = 'POST_LOCATION_SUCCESS';\n\nexport type GetLocationsSuccess = { type: typeof GET_LOCATION_SUCCESS; payload: Location[] };\nexport type RequestLocationsFailure = { type: typeof REQUEST_LOCATION_FAILURE };\nexport type PostLocationSuccess = { type: typeof POST_LOCATION_SUCCESS; payload: Location };\n\nexport type LocationAction = GetLocationsSuccess | RequestLocationsFailure | PostLocationSuccess;\n","import {\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n  DialogIsOpenAction,\n} from './dialogIsOpenTypes';\nimport { initialState } from '../State';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import { initialState } from '../State';\nimport {\n  Project,\n  ProjectActionTypes,\n  GET_PROJECT_SUCCESS,\n  GET_PROJECT_FAILED,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FALIED,\n  GET_PROJECT_REQUEST,\n  UPDATE_PROJECT_DATA,\n  POST_PROJECT_REQUEST,\n  GET_TRAINING_LOG_REQUEST,\n  GET_TRAINING_LOG_SUCCESS,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GET_TRAINING_METRICS_REQUEST,\n  GET_TRAINING_METRICS_SUCCESS,\n  GET_TRAINING_METRICS_FAILED,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GET_INFERENCE_METRICS_FAILED,\n} from './projectTypes';\n\nconst projectReducer = (state = initialState.project, action: ProjectActionTypes): Project => {\n  switch (action.type) {\n    case GET_PROJECT_REQUEST:\n      return { ...state, isLoading: true, error: null };\n    case GET_PROJECT_SUCCESS:\n      return { ...state, isLoading: false, data: { ...action.payload.project }, error: null };\n    case GET_PROJECT_FAILED:\n      return { ...state, isLoading: false, error: action.error };\n    case POST_PROJECT_REQUEST:\n      return { ...state, isLoading: true };\n    case POST_PROJECT_SUCCESS:\n      return { ...state, isLoading: false };\n    case POST_PROJECT_FALIED:\n      return { ...state, isLoading: false, error: action.error };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n        },\n        inferenceMetrics: {\n          successRate: 0,\n          successfulInferences: 0,\n          unIdetifiedItems: 0,\n          isGpu: false,\n          averageTime: 0,\n        },\n        trainingMetrics: {\n          curConsequence: null,\n          prevConsequence: null,\n        },\n        trainingLog: '',\n        status: Status.None,\n        error: null,\n      };\n    case DELETE_PROJECT_FALIED:\n      return { ...state };\n    case UPDATE_PROJECT_DATA:\n      return { ...state, data: action.payload };\n    case GET_TRAINING_LOG_REQUEST:\n      return {\n        ...state,\n      };\n    case GET_TRAINING_LOG_SUCCESS:\n      return {\n        ...state,\n        trainingLog: action.payload.trainingLog,\n        status: action.payload.newStatus,\n      };\n    case GET_TRAINING_LOG_FAILED:\n      return {\n        ...state,\n        trainingLog: '',\n        data: { ...state.data },\n        status: Status.TrainingFailed,\n        error: action.error,\n      };\n    case GET_TRAINING_METRICS_REQUEST:\n      return state;\n    case GET_TRAINING_METRICS_SUCCESS:\n      return {\n        ...state,\n        trainingMetrics: action.payload,\n        status: Status.StartInference,\n      };\n    case GET_TRAINING_METRICS_FAILED:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case GET_INFERENCE_METRICS_REQUEST:\n      return state;\n    case GET_INFERENCE_METRICS_SUCCESS:\n      return { ...state, inferenceMetrics: action.payload };\n    case GET_INFERENCE_METRICS_FAILED:\n      return { ...state, error: action.error };\n    default:\n      return { ...state };\n  }\n};\n\nexport default projectReducer;\n","import {\n  GET_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  POST_LABEL_IMAGE_SUCCESS,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  LabelImageAction,\n  LabelImage,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n} from './imageTypes';\nimport { initialState } from '../State';\n\nconst labelImagesReducer = (state = initialState.images, action: LabelImageAction): LabelImage[] => {\n  switch (action.type) {\n    case GET_LABEL_IMAGE_SUCCESS:\n      return action.payload;\n    case REQUEST_LABEL_IMAGE_FAILURE:\n      return state;\n    case POST_LABEL_IMAGE_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_LABEL_IMAGE_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    case UPDATE_LABEL_IMAGE_ANNOTATION: {\n      const newState = [...state];\n      const updatedImageIdx = newState.findIndex((e) => e.id === action.payload.id);\n      newState[updatedImageIdx] = {\n        ...newState[updatedImageIdx],\n        labels: action.payload.labels,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default labelImagesReducer;\n","// Describe the shape of the labelImage's slice of state\nexport type LabelImage = {\n  id: number;\n  image: string;\n  labels: string;\n  part: string;\n  is_relabel: boolean;\n  confidence: number;\n};\n\n// Describe the different ACTION NAMES available\nexport const GET_LABEL_IMAGE_SUCCESS = 'GET_LABEL_IMAGE_SUCCESS';\nexport const POST_LABEL_IMAGE_SUCCESS = 'POST_LABEL_IMAGE_SUCCESS';\nexport const DELETE_LABEL_IMAGE_SUCCESS = 'DELETE_LABEL_IMAGE_SUCCESS';\nexport const REQUEST_LABEL_IMAGE_FAILURE = 'REQUEST_LABEL_IMAGE_FAILURE';\nexport const UPDATE_LABEL_IMAGE_ANNOTATION = 'UPDATE_LABEL_IMAGE_ANNOTATION';\n\nexport type GetLabelImagesSuccess = { type: typeof GET_LABEL_IMAGE_SUCCESS; payload: LabelImage[] };\nexport type PostLabelImageSuccess = { type: typeof POST_LABEL_IMAGE_SUCCESS; payload: LabelImage };\nexport type DeleteLabelImageSuccess = { type: typeof DELETE_LABEL_IMAGE_SUCCESS; payload: { id: number } };\nexport type RequestLabelImagesFailure = { type: typeof REQUEST_LABEL_IMAGE_FAILURE };\nexport type UpdateLabelImageAnnotation = {\n  type: typeof UPDATE_LABEL_IMAGE_ANNOTATION;\n  payload: { id: number; labels: any };\n};\n\nexport type LabelImageAction =\n  | GetLabelImagesSuccess\n  | PostLabelImageSuccess\n  | DeleteLabelImageSuccess\n  | RequestLabelImagesFailure\n  | UpdateLabelImageAnnotation;\n","import { initialState } from '../State';\nimport { SettingActionType, Setting } from './settingType';\n\nconst settingReducer = (state = initialState.setting, action: SettingActionType): Setting => {\n  switch (action.type) {\n    case 'UPDATE_KEY':\n      return { ...state, current: { ...state.current, key: action.payload } };\n    case 'UPDATE_NAMESPACE':\n      return { ...state, current: { ...state.current, namespace: action.payload } };\n    case 'REQUEST_START':\n      return { ...state, loading: true };\n    case 'REQUEST_SUCCESS':\n      return action.payload;\n    case 'REQUEST_FAIL':\n      return { ...state, error: action.error };\n    default:\n      return state;\n  }\n};\n\nexport default settingReducer;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport camerasReducer from './camera/cameraReducer';\nimport partReducer from './part/partReducer';\nimport labelingPageStateReducer from './labelingPage/labelingPageReducer';\nimport locationsReducer from './location/locationReducer';\nimport dialogIsOpenReducer from './dialog/dialogIsOpenReducer';\nimport projectReducer from './project/projectReducer';\nimport labelImagesReducer from './image/imageReducer';\nimport settingReducer from './setting/settingReducer';\n\nconst rootReducer = combineReducers({\n  cameras: camerasReducer,\n  locations: locationsReducer,\n  part: partReducer,\n  labelingPageState: labelingPageStateReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  project: projectReducer,\n  images: labelImagesReducer,\n  setting: settingReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State } from './State';\nimport { persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React, { FC, memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex, Text, Image } from '@fluentui/react-northstar';\n\ntype BgImgStyle = {\n  backgroundSize?: '60%';\n  backgroundPosition?: 'center';\n  backgroundRepeat?: 'no-repeat';\n};\ninterface ImageLinkProps {\n  to?: string;\n  imgSrc?: string;\n  defaultSrc?: string;\n  bgImgSrc?: string;\n  label?: string;\n  imgPadding?: string;\n  width: string;\n  height?: string;\n  bgImgStyle?: BgImgStyle;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst ImageLink: FC<ImageLinkProps> = ({\n  to = '',\n  imgSrc,\n  defaultSrc,\n  bgImgSrc,\n  label = '',\n  imgPadding = '0.625em',\n  width = '6.25em',\n  height = '6.25em',\n  bgImgStyle,\n  pointerCursor = false,\n  onClick,\n}) => {\n  return (\n    <Flex column styles={{ width }}>\n      {to === '' ? (\n        <div style={{ height }} onClick={onClick}>\n          <Image\n            src={imgSrc ?? defaultSrc}\n            styles={{\n              padding: imgPadding,\n              height: '100%',\n              objectFit: 'contain',\n              backgroundImage: `url(${bgImgSrc})`,\n              cursor: pointerCursor ? 'pointer' : 'default',\n              ...bgImgStyle,\n            }}\n          />\n        </div>\n      ) : (\n        <Link to={to}>\n          <div style={{ height }} onClick={onClick}>\n            <Image\n              src={imgSrc ?? defaultSrc}\n              styles={{\n                padding: imgPadding,\n                height: '100%',\n                objectFit: 'contain',\n                backgroundImage: `url(${bgImgSrc})`,\n                ...bgImgStyle,\n              }}\n            />\n          </div>\n        </Link>\n      )}\n      <Text align=\"center\">{label}</Text>\n    </Flex>\n  );\n};\n\nexport default memo(ImageLink);\n","import React, { FC } from 'react';\nimport { Text, Flex } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ImageLink from '../components/ImageLink';\nimport { openDialog } from '../store/dialog/dialogIsOpenActions';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text size=\"larger\" weight=\"semibold\">\n        Hello User!\n      </Text>\n      <Text>\n      </Text>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        GET STARTED:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/location-filled.png\"\n          to=\"/locations/register\"\n          label=\"Register a new Location\"\n          width=\"6.25em\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/camera-filled.png\"\n          to=\"/cameras\"\n          label=\"Register a new Camera\"\n          width=\"6.25em\"\n          imgPadding=\"0.625em 0.1875em 0.625em 0.1875em\"\n          onClick={(): void => {\n            dispatch(openDialog());\n          }}\n        />\n        <ImageLink\n          imgSrc=\"/icons/part-filled.png\"\n          to=\"/parts/detail\"\n          label=\"Register a new Part\"\n          width=\"6.25em\"\n        />\n      </Flex>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        SELECT FROM THE FOLLOWING TASKS:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/doubleCube.png\"\n          to=\"/partIdentification\"\n          label=\"Identify Parts\"\n          width=\"6.25em\"\n        />\n        <ImageLink imgSrc=\"/icons/defects.png\" to=\"/\" label=\"Identify Defects\" width=\"6.25em\" />\n        <ImageLink\n          imgSrc=\"/icons/manual-filled.png\"\n          to=\"/manual\"\n          label=\"Identify items manually\"\n          width=\"6.25em\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { OpenDialog, CloseDialog, OPEN_DIALOG, CLOSE_DIALOG } from './dialogIsOpenTypes';\n\nexport const openDialog = (): OpenDialog => ({ type: OPEN_DIALOG });\nexport const closeDialog = (): CloseDialog => ({ type: CLOSE_DIALOG });\n","import axios from 'axios';\nimport {\n  GET_CAMERA_SUCCESS,\n  POST_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  GetCamerasSuccess,\n  RequestCamerasFailure,\n  PostCameraSuccess,\n  Camera,\n  DELETE_CAMERA_SUCCESS,\n  DeleteCameraSuccess,\n} from './cameraTypes';\n\nconst getCamerasSuccess = (data: Camera[]): GetCamerasSuccess => ({\n  type: GET_CAMERA_SUCCESS,\n  payload: data,\n});\n\nconst deleteCameraSuccess = (id: number): DeleteCameraSuccess => ({\n  type: DELETE_CAMERA_SUCCESS,\n  payload: { id },\n});\n\nconst requestCamerasFailure = (error: any): RequestCamerasFailure => {\n  console.error(error);\n  return { type: REQUEST_CAMERA_FAILURE };\n};\n\nconst postCameraSuccess = (data: Camera): PostCameraSuccess => ({\n  type: POST_CAMERA_SUCCESS,\n  payload: data,\n});\n\nexport const getCameras = () => (dispatch): Promise<void> => {\n  return axios('/api/cameras/')\n    .then(({ data }) => {\n      dispatch(getCamerasSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const postCamera = (newCamera: Camera) => (dispatch): Promise<void> => {\n  return axios('/api/cameras/', {\n    method: 'POST',\n    data: newCamera,\n  })\n    .then(({ data }) => {\n      dispatch(postCameraSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const deleteCamera = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/cameras/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteCameraSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n","import React, { FC } from 'react';\nimport { Button, AddIcon } from '@fluentui/react-northstar';\n\ninterface AddButtonProps {\n  onClick?: () => void;\n}\nconst AddButton: FC<AddButtonProps> = ({ onClick }) => (\n  <Button\n    primary\n    fluid\n    circular\n    content={<AddIcon size=\"largest\" circular />}\n    styles={{ width: '6em', height: '6em' }}\n    onClick={onClick}\n  />\n);\n\nexport default AddButton;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text, Dialog, Input, Grid, Button } from '@fluentui/react-northstar';\n\nimport { postCamera, getCameras } from '../store/camera/cameraActions';\nimport ImageLink from '../components/ImageLink';\nimport { State } from '../store/State';\nimport { closeDialog, openDialog } from '../store/dialog/dialogIsOpenActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport AddButton from '../components/AddButton';\n\nconst Cameras: FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { dialogIsOpen, cameras } = useSelector<State, { dialogIsOpen: boolean; cameras: Camera[] }>(\n    (state) => ({ dialogIsOpen: state.dialogIsOpen, cameras: state.cameras.filter((e) => !e.is_demo) }),\n  );\n\n  const [name, setName] = useState<string>('');\n  const [rtsp, setRtsp] = useState<string>('');\n  const [model_name, setModel_name] = useState<string>('');\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {cameras.map((camera, i) => (\n          <ImageLink\n            key={i}\n            to={`/cameras/detail?name=${camera.name}`}\n            defaultSrc=\"/icons/Play.png\"\n            bgImgSrc=\"/icons/defaultCamera.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            bgImgStyle={{\n              backgroundSize: '60%',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n            }}\n            label={camera.name}\n          />\n        ))}\n      </Grid>\n      <Dialog\n        styles={{ width: '20%', height: '40%', padding: 0, display: 'flex' }}\n        open={dialogIsOpen}\n        trigger={\n          <div style={{ alignSelf: 'flex-end' }}>\n            <AddButton\n              onClick={(): void => {\n                dispatch(openDialog());\n              }}\n            />\n          </div>\n        }\n        content={\n          <div\n            style={{\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'column',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Text size=\"larger\" weight=\"semibold\">\n              Add Camera\n            </Text>\n            <div\n              style={{\n                display: 'flex',\n                flexFlow: 'column',\n                height: '50%',\n                justifyContent: 'space-around',\n              }}\n            >\n              <Input\n                placeholder=\"Name\"\n                value={name}\n                onChange={(_, newProps): void => setName(newProps.value)}\n              />\n\n              <Input\n                placeholder=\"RTSP URL\"\n                value={rtsp}\n                onChange={(_, newProps): void => setRtsp(newProps.value)}\n              />\n              <Input\n                placeholder=\"Model Name\"\n                value={model_name}\n                onChange={(_, newProps): void => setModel_name(newProps.value)}\n              />\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', width: '100%' }}>\n              <Button\n                primary\n                content=\"Submit\"\n                disabled={name === '' || rtsp === '' || model_name === ''}\n                onClick={(): void => {\n                  dispatch(postCamera({ name, rtsp, model_name, is_demo: false }));\n                  setName('');\n                  setRtsp('');\n                  setModel_name('');\n                  dispatch(closeDialog());\n                }}\n              />\n              <Button\n                content=\"Cancel\"\n                onClick={(): void => {\n                  dispatch(closeDialog());\n                }}\n              />\n            </div>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Cameras;\n","import React, { FC, useState, CSSProperties } from 'react';\nimport { Flex, Text, Button, Dialog } from '@fluentui/react-northstar';\n\n/**\n * @param trigger Trigger Button\n * @param primaryStyles CSS style of Confirm Button\n */\ninterface FluentUIStylesProperties extends CSSProperties {\n  [':hover']: any;\n  [':active']: any;\n}\n\ninterface ConfirmDialogProps {\n  trigger: JSX.Element;\n  onConfirm: () => void;\n  primaryStyles: FluentUIStylesProperties;\n  content: string;\n}\nconst ConfirmDialog: FC<ConfirmDialogProps> = ({ trigger, onConfirm, primaryStyles, content }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '20em', padding: '0.5em' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      footer={\n        <Flex column gap=\"gap.large\">\n          <Text size=\"large\" align=\"center\">\n            {content}\n          </Text>\n          <Flex space=\"around\">\n            <Button primary content=\"Confirm\" styles={primaryStyles} onClick={onConfirm} />\n            <Button content=\"Cancel\" onClick={(): void => setOpen(false)} />\n          </Flex>\n        </Flex>\n      }\n    />\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { FC, memo } from 'react';\nimport { Flex, Text, Grid, Button } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ConfirmDialog from '../ConfirmDialog';\nimport ImageLink from '../ImageLink';\nimport { deleteCamera } from '../../store/camera/cameraActions';\n\ninterface CameraDetailInfoProps {\n  name: string;\n  rtsp: string;\n  modelName: string;\n  id: number;\n}\nconst CameraDetailInfo: FC<CameraDetailInfoProps> = ({ id, name, rtsp, modelName }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex styles={{ padding: '1em 2em' }} column space=\"between\">\n      <Grid columns=\"2\" styles={{ gap: '3em' }}>\n        <Text size=\"larger\" weight=\"semibold\">\n          Details\n        </Text>\n        <ImageLink defaultSrc=\"/icons/defaultCamera.png\" width=\"100px\" height=\"100px\" />\n        <Flex column gap=\"gap.small\">\n          <Text size=\"large\" content={'Name:'} />\n          <Text size=\"large\" content={'RTSP Url:'} />\n          <Text size=\"large\" content={'Model:'} />\n        </Flex>\n        <Flex column gap=\"gap.medium\">\n          <Text size=\"large\" content={name} />\n          <Text size=\"large\" content={rtsp} />\n          <Text size=\"large\" content={modelName} />\n        </Flex>\n      </Grid>\n      <ConfirmDialog\n        trigger={\n          <Button\n            primary\n            content=\"Delete Camera\"\n            styles={{\n              backgroundColor: '#C4314B',\n              ':hover': { backgroundColor: '#A72037' },\n              ':active': { backgroundColor: '#8E192E' },\n            }}\n          />\n        }\n        content=\"Delete Camera\"\n        primaryStyles={{\n          backgroundColor: '#C4314B',\n          ':hover': { backgroundColor: '#A72037' },\n          ':active': { backgroundColor: '#8E192E' },\n        }}\n        onConfirm={(): void => {\n          dispatch(deleteCamera(id));\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default memo(CameraDetailInfo);\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay): void => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick(): void {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return (): void => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import Axios from 'axios';\nimport {\n  ProjectThunk,\n  GetProjectSuccessAction,\n  GET_PROJECT_SUCCESS,\n  GetProjectFailedAction,\n  GET_PROJECT_FAILED,\n  PostProjectSuccessAction,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  PostProjectFaliedAction,\n  DeleteProjectSuccessAction,\n  DELETE_PROJECT_SUCCESS,\n  DeleteProjectFaliedAction,\n  DELETE_PROJECT_FALIED,\n  ProjectData,\n  PostProjectRequestAction,\n  POST_PROJECT_REQUEST,\n  GetProjectRequestAction,\n  GET_PROJECT_REQUEST,\n  UpdateProjectDataAction,\n  UPDATE_PROJECT_DATA,\n  GetTrainingLogRequesAction,\n  GET_TRAINING_LOG_REQUEST,\n  GetTrainingLogSuccessAction,\n  GET_TRAINING_LOG_SUCCESS,\n  GetTrainingLogFailedAction,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GetTrainingMetricsRequestAction,\n  GET_TRAINING_METRICS_REQUEST,\n  GetTrainingMetricsSuccessAction,\n  GET_TRAINING_METRICS_SUCCESS,\n  GetTrainingMetricsFailedAction,\n  GET_TRAINING_METRICS_FAILED,\n  Consequence,\n  GetInferenceMetricsRequestAction,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GetInferenceMetricsSuccessAction,\n  GetInferenceMetricsFailedAction,\n  GET_INFERENCE_METRICS_FAILED,\n  StartInferenceAction,\n  START_INFERENCE,\n  STOP_INFERENCE,\n  StopInferenceAction,\n} from './projectTypes';\n\nconst getProjectRequest = (): GetProjectRequestAction => ({ type: GET_PROJECT_REQUEST });\nconst getProjectSuccess = (project: ProjectData): GetProjectSuccessAction => ({\n  type: GET_PROJECT_SUCCESS,\n  payload: { project },\n});\nconst getProjectFailed = (error: Error): GetProjectFailedAction => ({ type: GET_PROJECT_FAILED, error });\n\nconst getTrainingLogRequest = (): GetTrainingLogRequesAction => ({ type: GET_TRAINING_LOG_REQUEST });\nconst getTrainingLogSuccess = (trainingLog: string, newStatus: Status): GetTrainingLogSuccessAction => ({\n  type: GET_TRAINING_LOG_SUCCESS,\n  payload: {\n    trainingLog,\n    newStatus,\n  },\n});\nconst getTrainingStatusFailed = (error: Error): GetTrainingLogFailedAction => ({\n  type: GET_TRAINING_LOG_FAILED,\n  error,\n});\n\nconst postProjectRequest = (): PostProjectRequestAction => ({ type: POST_PROJECT_REQUEST });\nconst postProjectSuccess = (): PostProjectSuccessAction => ({ type: POST_PROJECT_SUCCESS });\nconst postProjectFail = (error: Error): PostProjectFaliedAction => ({ type: POST_PROJECT_FALIED, error });\n\nconst deleteProjectSuccess = (): DeleteProjectSuccessAction => ({ type: DELETE_PROJECT_SUCCESS });\nconst deleteProjectFailed = (): DeleteProjectFaliedAction => ({ type: DELETE_PROJECT_FALIED });\n\nconst getTrainingMetricsRequest = (): GetTrainingMetricsRequestAction => ({\n  type: GET_TRAINING_METRICS_REQUEST,\n});\nconst getTrainingMetricsSuccess = (\n  curConsequence: Consequence,\n  prevConsequence: Consequence,\n): GetTrainingMetricsSuccessAction => ({\n  type: GET_TRAINING_METRICS_SUCCESS,\n  payload: { prevConsequence, curConsequence },\n});\nconst getTrainingMetricsFailed = (error: Error): GetTrainingMetricsFailedAction => ({\n  type: GET_TRAINING_METRICS_FAILED,\n  error,\n});\n\nconst getInferenceMetricsRequest = (): GetInferenceMetricsRequestAction => ({\n  type: GET_INFERENCE_METRICS_REQUEST,\n});\nconst getInferenceMetricsSuccess = (\n  successRate: number,\n  successfulInferences: number,\n  unIdetifiedItems: number,\n  isGpu: boolean,\n  averageTime: number,\n): GetInferenceMetricsSuccessAction => ({\n  type: GET_INFERENCE_METRICS_SUCCESS,\n  payload: { successRate, successfulInferences, unIdetifiedItems, isGpu, averageTime },\n});\nconst getInferenceMetricsFailed = (error: Error): GetInferenceMetricsFailedAction => ({\n  type: GET_INFERENCE_METRICS_FAILED,\n  error,\n});\n\nexport const startInference = (): StartInferenceAction => ({\n  type: START_INFERENCE,\n});\n\nexport const stopInference = (): StopInferenceAction => ({\n  type: STOP_INFERENCE,\n});\n\nexport const updateProjectData = (projectData: ProjectData): UpdateProjectDataAction => ({\n  type: UPDATE_PROJECT_DATA,\n  payload: projectData,\n});\n\nexport const thunkGetProject = (isTestModel?: boolean): ProjectThunk => (dispatch): Promise<void> => {\n  dispatch(getProjectRequest());\n\n  const url = isTestModel === undefined ? '/api/projects/' : `/api/projects/?is_demo=${Number(isTestModel)}`;\n\n  return Axios.get(url)\n    .then(({ data }) => {\n      const project: ProjectData = {\n        id: data[0]?.id ?? null,\n        camera: parseInt(data[0]?.camera.split('/')[5], 10) ?? null,\n        location: parseInt(data[0]?.location.split('/')[5], 10) ?? null,\n        parts: data[0]?.parts.map((ele) => parseInt(ele.split('/')[5], 10)) ?? [],\n        modelUrl: data[0]?.download_uri ?? '',\n        needRetraining: data[0]?.needRetraining ?? true,\n        accuracyRangeMin: data[0]?.accuracyRangeMin ?? 60,\n        accuracyRangeMax: data[0]?.accuracyRangeMax ?? 80,\n        maxImages: data[0]?.maxImages ?? 50,\n      };\n      dispatch(getProjectSuccess(project));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(getProjectFailed(err));\n    });\n};\n\nexport const thunkPostProject = (\n  projectId,\n  selectedLocations,\n  selectedParts,\n  selectedCamera,\n  isTestModel,\n): ProjectThunk => (dispatch, getState): Promise<number> => {\n  const isProjectEmpty = projectId === null;\n  const url = isProjectEmpty ? `/api/projects/` : `/api/projects/${projectId}/`;\n\n  dispatch(postProjectRequest());\n\n  const projectData = getState().project.data;\n\n  return Axios(url, {\n    data: {\n      location: `http://localhost:8000/api/locations/${selectedLocations.id}/`,\n      parts: selectedParts.map((e) => `http://localhost:8000/api/parts/${e.id}/`),\n      camera: `http://localhost:8000/api/cameras/${selectedCamera.id}/`,\n      download_uri: projectData.modelUrl,\n      needRetraining: projectData.needRetraining,\n      accuracyRangeMin: projectData.accuracyRangeMin,\n      accuracyRangeMax: projectData.accuracyRangeMax,\n      maxImages: projectData.maxImages,\n    },\n    method: isProjectEmpty ? 'POST' : 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(({ data }) => {\n      dispatch(postProjectSuccess());\n      getTrain(data.id, isTestModel);\n      return data.id;\n    })\n    .catch((err) => {\n      dispatch(postProjectFail(err));\n    }) as Promise<number>;\n};\nconst getTrain = (projectId, isTestModel: boolean): void => {\n  const url = isTestModel ? `/api/projects/${projectId}/train?demo=True` : `/api/projects/${projectId}/train`;\n  Axios.get(url).catch((err) => console.error(err));\n};\n\nexport const thunkDeleteProject = (projectId): ProjectThunk => (dispatch): Promise<any> => {\n  return Axios.delete(`/api/projects/${projectId}/`)\n    .then(() => {\n      return dispatch(deleteProjectSuccess());\n    })\n    .catch((err) => {\n      alert(err);\n      dispatch(deleteProjectFailed());\n    });\n};\n\nexport const thunkGetTrainingLog = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getTrainingLogRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      if (data.status === 'failed') throw new Error(data.log);\n      else if (data.status === 'ok') dispatch(getTrainingLogSuccess('', Status.FinishTraining));\n      else dispatch(getTrainingLogSuccess(data.log, Status.WaitTraining));\n      return void 0;\n    })\n    .catch((err) => dispatch(getTrainingStatusFailed(err)));\n};\n\nexport const thunkGetTrainingMetrics = (projectId: number) => (dispacth): Promise<any> => {\n  dispacth(getTrainingMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/train_performance`)\n    .then(({ data }) => {\n      const curConsequence: Consequence = data.new\n        ? {\n            precision: data.new.precision,\n            recall: data.new.recall,\n            mAP: data.new.map,\n          }\n        : null;\n\n      const prevConsequence: Consequence = data.previous\n        ? {\n            precision: data.previous.precision,\n            recall: data.previous.recall,\n            mAP: data.previous.map,\n          }\n        : null;\n\n      return dispacth(getTrainingMetricsSuccess(curConsequence, prevConsequence));\n    })\n    .catch((err) => dispacth(getTrainingMetricsFailed(err)));\n};\n\nexport const thunkGetInferenceMetrics = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getInferenceMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      return dispatch(\n        getInferenceMetricsSuccess(\n          data.success_rate,\n          data.inference_num,\n          data.unidentified_num,\n          data.gpu,\n          data.average_time,\n        ),\n      );\n    })\n    .catch((err) => dispatch(getInferenceMetricsFailed(err)));\n};\n","import { useEffect, useState } from 'react';\n\n/**\n * Fetch the parts data from server\n */\nexport const useParts = (isDemo?: boolean): any[] => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const url = isDemo === undefined ? '/api/parts/' : `/api/parts/?is_demo=${Number(isDemo)}`;\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data);\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [isDemo]);\n\n  return parts;\n};\n","import { useLocation } from 'react-router-dom';\n\n/**\n * Get query parameter in the route\n */\nexport const useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Stage, Image as KonvaImage, Shape, Group, Line, Layer, Circle, Path, Rect } from 'react-konva';\nimport Konva from 'konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport * as R from 'ramda';\nimport uniqid from 'uniqid';\n\nimport {\n  LiveViewProps,\n  MaskProps,\n  AOIBoxProps,\n  AOILayerProps,\n  CreatingState,\n} from './LiveViewContainer.type';\n\nconst getRelativePosition = (layer: Konva.Layer): { x: number; y: number } => {\n  const transform = layer.getAbsoluteTransform().copy();\n  transform.invert();\n  const pos = layer.getStage().getPointerPosition();\n  return transform.point(pos);\n};\n\nexport const LiveViewScene: React.FC<LiveViewProps> = ({\n  AOIs,\n  setAOIs,\n  visible,\n  imageInfo,\n  creatingState,\n  setCreatingState,\n}) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const stageRef = useRef(null);\n  const imgRef = useRef(null);\n  const layerRef = useRef<Konva.Layer>(null);\n\n  const [imgEle, status, { width: imgWidth, height: imgHeight }] = imageInfo;\n\n  /* The component need to support image with Content-type \"multipart/x-mixed-replace\",\n     which will keep updating the image data.\n     Keep updating the canvas by using Konva.Animation so we can see the latest image.\n  */\n  useEffect(() => {\n    const anim = new Konva.Animation(() => {}, layerRef.current);\n    anim.start();\n\n    return (): void => {\n      anim.stop();\n    };\n  }, []);\n\n  useEffect(() => {\n    const { width: divWidth, height: divHeight } = divRef.current.getBoundingClientRect();\n    stageRef.current.width(divWidth);\n    stageRef.current.height(divHeight);\n  }, []);\n\n  /* Fit Image to Stage */\n  useEffect(() => {\n    if (imgWidth !== 0 && imgHeight !== 0) {\n      const { width: stageWidth, height: stageHeight } = stageRef.current.size();\n      const scale = Math.min(stageWidth / imgWidth, stageHeight / imgHeight);\n      layerRef.current.scale({ x: scale, y: scale });\n\n      const offsetX = (stageWidth - imgWidth * scale) / 2;\n      const offsetY = (stageHeight - imgHeight * scale) / 2;\n      layerRef.current.position({ x: offsetX, y: offsetY });\n    }\n  }, [imgHeight, imgWidth]);\n\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    if (creatingState === CreatingState.Disabled) return;\n\n    const { x, y } = getRelativePosition(e.target.getLayer());\n    setAOIs((prev) => [...prev, { id: uniqid(), x1: x, y1: y, x2: x, y2: y }]);\n    setCreatingState(CreatingState.Creating);\n  };\n\n  const onMouseMove = (e: KonvaEventObject<MouseEvent>): void => {\n    if (creatingState !== CreatingState.Creating) return;\n\n    const { x, y } = getRelativePosition(e.target.getLayer());\n    setAOIs(R.adjust(-1, (rear) => ({ ...rear, x2: x, y2: y })));\n  };\n\n  return (\n    <div ref={divRef} style={{ width: '100%', height: '100%' }}>\n      <Stage ref={stageRef} style={{ cursor: creatingState !== CreatingState.Disabled ? 'crosshair' : '' }}>\n        <Layer\n          ref={layerRef}\n          onMouseDown={onMouseDown}\n          onMouseMove={onMouseMove}\n          onMouseUp={(): void => {\n            if (creatingState === CreatingState.Creating) setCreatingState(CreatingState.Waiting);\n          }}\n        >\n          <KonvaImage image={imgEle} ref={imgRef} />\n          {\n            /* Render when image is loaded to prevent AOI boxes show in unscale size */\n            status === 'loaded' && (\n              <AOILayer\n                imgWidth={imgWidth}\n                imgHeight={imgHeight}\n                AOIs={AOIs}\n                setAOIs={setAOIs}\n                visible={visible}\n                creatingState={creatingState}\n              />\n            )\n          }\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nconst AOILayer: React.FC<AOILayerProps> = ({\n  imgWidth,\n  imgHeight,\n  AOIs,\n  setAOIs,\n  visible,\n  creatingState,\n}): JSX.Element => {\n  return (\n    <>\n      <Mask width={imgWidth} height={imgHeight} holes={AOIs} visible={visible} />\n      {AOIs.map((e, i) => (\n        <AOIBox\n          key={e.id}\n          box={e}\n          visible={visible}\n          boundary={{ x1: 0, y1: 0, x2: imgWidth, y2: imgHeight }}\n          radius={10}\n          strokeWidth={5}\n          onBoxChange={(updateBox): void =>\n            setAOIs((prev) => {\n              const newBox = updateBox(prev[i]);\n              if (newBox.x1 > newBox.x2) {\n                const tmp = newBox.x1;\n                newBox.x1 = newBox.x2;\n                newBox.x2 = tmp;\n              }\n\n              if (newBox.y1 > newBox.y2) {\n                const tmp = newBox.y1;\n                newBox.y1 = newBox.y2;\n                newBox.y2 = tmp;\n              }\n\n              const newAOIs = [...prev];\n              newAOIs[i] = newBox;\n              return newAOIs;\n            })\n          }\n          removeBox={(id): void => {\n            setAOIs((prev) => prev.filter((ele) => ele.id !== id));\n          }}\n          creatingState={creatingState}\n        />\n      ))}\n    </>\n  );\n};\n\nconst Mask: React.FC<MaskProps> = ({ width, height, holes, visible }) => {\n  return (\n    <Shape\n      width={width}\n      height={height}\n      fill={'rgba(0,0,0,0.5)'}\n      visible={visible}\n      sceneFunc={(ctx, shape): void => {\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(shape.width(), 0);\n        ctx.lineTo(shape.width(), shape.height());\n        ctx.lineTo(0, shape.height());\n        ctx.lineTo(0, 0);\n\n        // Nonozero-rule\n        holes.forEach(({ x1, y1, x2, y2 }) => {\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x1, y2);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, y1);\n          ctx.lineTo(x1, y1);\n        });\n\n        ctx.fillStrokeShape(shape);\n      }}\n      listening={false}\n    />\n  );\n};\n\nconst AOIBox: React.FC<AOIBoxProps> = ({\n  box,\n  onBoxChange,\n  visible,\n  boundary,\n  radius,\n  strokeWidth,\n  removeBox,\n  creatingState,\n}) => {\n  const { x1, y1, x2, y2 } = box;\n  const COLOR = 'white';\n  const [cancelBtnVisible, setCanceBtnVisible] = useState(false);\n\n  const handleDrag = (e: KonvaEventObject<DragEvent>): void => {\n    let { x, y } = e.target.position();\n\n    if (x < boundary.x1) {\n      x = boundary.x1;\n      e.target.x(x);\n    }\n\n    if (x > boundary.x2) {\n      x = boundary.x2;\n      e.target.x(x);\n    }\n\n    if (y < boundary.y1) {\n      y = boundary.y1;\n      e.target.y(y);\n    }\n\n    if (y > boundary.y2) {\n      y = boundary.y2;\n      e.target.y(y);\n    }\n\n    switch (e.target.name()) {\n      case 'leftTop':\n        onBoxChange((prev) => ({ ...prev, x1: x, y1: y }));\n        break;\n      case 'rightTop':\n        onBoxChange((prev) => ({ ...prev, x2: x, y1: y }));\n        break;\n      case 'rightBottom':\n        onBoxChange((prev) => ({ ...prev, x2: x, y2: y }));\n        break;\n      case 'leftBottom':\n        onBoxChange((prev) => ({ ...prev, x1: x, y2: y }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Group\n      visible={visible}\n      onMouseEnter={(): void => setCanceBtnVisible(true)}\n      onMouseLeave={(): void => setCanceBtnVisible(false)}\n      cache={[{ drawBorder: true }]}\n    >\n      {/** A bigger region for mouseEnter event */}\n      <Line x={x1} y={y1 - 40} points={[0, -40, 0, y2 - y1, x2 - x1, y2 - y1, x2 - x1, -40]} closed />\n      <Line\n        x={x1}\n        y={y1}\n        points={[0, 0, 0, y2 - y1, x2 - x1, y2 - y1, x2 - x1, 0]}\n        closed\n        stroke={COLOR}\n        strokeWidth={strokeWidth}\n      />\n      <Circle draggable name=\"leftTop\" x={x1} y={y1} radius={radius} fill={COLOR} onDragMove={handleDrag} />\n      <Circle draggable name=\"rightTop\" x={x2} y={y1} radius={radius} fill={COLOR} onDragMove={handleDrag} />\n      <Circle\n        draggable\n        name=\"rightBottom\"\n        x={x2}\n        y={y2}\n        radius={radius}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Circle\n        draggable\n        name=\"leftBottom\"\n        x={x1}\n        y={y2}\n        radius={radius}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Path\n        x={x1}\n        y={y1 - 40}\n        data=\"M 0 0 L 25 25 M 25 0 L 0 25\"\n        stroke=\"red\"\n        strokeWidth={5}\n        visible={cancelBtnVisible && creatingState === CreatingState.Disabled}\n        onMouseEnter={(e): void => {\n          e.target.getStage().container().style.cursor = 'pointer';\n        }}\n        onMouseLeave={(e): void => {\n          e.target.getStage().container().style.cursor = 'default';\n        }}\n        onClick={(): void => removeBox(box.id)}\n      />\n    </Group>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\n\ntype ImageState = {\n  image: HTMLImageElement;\n  status: string;\n  size: { width: number; height: number };\n};\nconst defaultState: ImageState = {\n  image: undefined,\n  status: 'loading',\n  size: { width: 0, height: 0 },\n};\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nconst useImage = (url: string, crossOrigin: string): [HTMLImageElement, string, { width: number; height: number }] => {\n  const [imageState, setImageState] = useState<ImageState>(defaultState);\n  const { image, status, size } = imageState;\n\n  const prevUrl = usePrevious<string>(url);\n\n  useEffect(() => {\n    if (!url) return;\n\n    const img = document.createElement('img');\n\n    if (url !== prevUrl) {\n      setImageState((prev) => ({ ...prev, image: prev.image, status: 'loading' }));\n    }\n\n    const onload = (): void => {\n      setImageState({\n        image: img,\n        status: 'loaded',\n        size: { width: img.width, height: img.height },\n      });\n    };\n\n    const onerror = (): void => {\n      setImageState((prev) => ({ ...prev, image: undefined, status: 'failed' }));\n    };\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n\n    img.src = url;\n\n    return (): void => {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, prevUrl]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status, size];\n};\n\nexport default useImage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as R from 'ramda';\nimport Axios from 'axios';\nimport uniqid from 'uniqid';\n\nimport { Text, Checkbox, Flex, Button, Alert } from '@fluentui/react-northstar';\nimport { LiveViewScene } from './LiveViewScene';\nimport { AOIData, Box } from '../../type';\nimport useImage from '../LabelingPage/util/useImage';\nimport { CreatingState } from './LiveViewContainer.type';\n\nexport const LiveViewContainer: React.FC<{\n  showVideo: boolean;\n  initialAOIData: AOIData;\n  cameraId: number;\n}> = ({ showVideo, initialAOIData, cameraId }) => {\n  const [showAOI, setShowAOI] = useState(initialAOIData.useAOI);\n  const lasteUpdatedAOIs = useRef(initialAOIData.AOIs);\n  const [AOIs, setAOIs] = useState<Box[]>(lasteUpdatedAOIs.current);\n  const [showUpdateSuccessTxt, setShowUpdateSuccessTxt] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>(null);\n  const imageInfo = useImage(`http://${window.location.hostname}:5000/video_feed?inference=1`, '');\n  const [creatingAOI, setCreatingAOI] = useState(CreatingState.Disabled);\n\n  const onCheckboxClick = async (): Promise<void> => {\n    setShowAOI(!showAOI);\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: !showAOI,\n          AOIs: lasteUpdatedAOIs.current,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      if (!showAOI) setAOIs(lasteUpdatedAOIs.current);\n    } catch (e) {\n      // Set back to the state before updating for switch case\n      setShowAOI(showAOI);\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  const onUpdate = async (): Promise<void> => {\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: showAOI,\n          AOIs,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      lasteUpdatedAOIs.current = R.clone(AOIs);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (showUpdateSuccessTxt) {\n      const timer = setTimeout(() => {\n        setShowUpdateSuccessTxt(false);\n      }, 3000);\n      return (): void => clearTimeout(timer);\n    }\n  }, [showUpdateSuccessTxt]);\n\n  useEffect(() => {\n    if (!AOIs.length)\n      setAOIs([{ id: uniqid(), x1: 0, y1: 0, x2: imageInfo[2].width, y2: imageInfo[2].height }]);\n  }, [AOIs.length, imageInfo[2].width, imageInfo[2].height]);\n\n  const hasEdit = !R.equals(lasteUpdatedAOIs.current, AOIs);\n  const updateBtnDisabled = !showAOI || !hasEdit;\n\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }} size=\"large\">\n        Live View:\n      </Text>\n      {error && <Alert danger header=\"Failed to Update!\" content={`${error.name}: ${error.message}`} />}\n      <Flex hAlign=\"end\" gap=\"gap.small\" vAlign=\"center\">\n        <Checkbox\n          labelPosition=\"start\"\n          label=\"Show area of interest\"\n          toggle\n          checked={showAOI}\n          onClick={onCheckboxClick}\n        />\n        <Button content=\"Update\" primary disabled={updateBtnDisabled} onClick={onUpdate} loading={loading} />\n        <Button\n          content=\"Create Area of Interest\"\n          primary={creatingAOI !== CreatingState.Disabled}\n          disabled={!showAOI}\n          onClick={(): void => {\n            if (creatingAOI === CreatingState.Disabled) setCreatingAOI(CreatingState.Waiting);\n            else setCreatingAOI(CreatingState.Disabled);\n          }}\n          circular\n          styles={{ padding: '0 5px' }}\n        />\n        <Text styles={{ visibility: showUpdateSuccessTxt ? 'visible' : 'hidden' }}>Updated!</Text>\n      </Flex>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {showVideo ? (\n          <LiveViewScene\n            AOIs={AOIs}\n            setAOIs={setAOIs}\n            visible={showAOI}\n            imageInfo={imageInfo}\n            creatingState={creatingAOI}\n            setCreatingState={setCreatingAOI}\n          />\n        ) : null}\n      </div>\n    </Flex>\n  );\n};\n","import React, { useEffect, FC, useState, useCallback } from 'react';\nimport { Flex, Text, Status, Button, Loader, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useInterval } from '../../hooks/useInterval';\nimport {\n  thunkDeleteProject,\n  thunkGetTrainingLog,\n  thunkGetTrainingMetrics,\n  thunkGetInferenceMetrics,\n} from '../../store/project/projectActions';\nimport { Project, Status as CameraConfigStatus } from '../../store/project/projectTypes';\nimport { State } from '../../store/State';\nimport { useParts } from '../../hooks/useParts';\nimport { useQuery } from '../../hooks/useQuery';\nimport { LiveViewContainer } from '../LiveViewContainer';\nimport { AOIData } from '../../type';\n\nexport const CameraConfigureInfo: React.FC<{ projectId: number; AOIs: AOIData }> = ({ projectId, AOIs }) => {\n  const { error, data: project, trainingLog, status, trainingMetrics, inferenceMetrics } = useSelector<\n    State,\n    Project\n  >((state) => state.project);\n  const allTrainingLog = useAllTrainingLog(trainingLog);\n  const parts = useParts();\n  const dispatch = useDispatch();\n  const cameraName = useQuery().get('name');\n  const history = useHistory();\n\n  const onDeleteConfigure = useCallback((): void => {\n    // eslint-disable-next-line no-restricted-globals\n    const sureDelete = confirm('Delete this configuration?');\n    if (!sureDelete) return;\n    const result = (dispatch(thunkDeleteProject(projectId)) as unknown) as Promise<any>;\n    result\n      .then((data) => {\n        if (data) return history.push(`/cameras/detail?name=${cameraName}`);\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  }, [dispatch, history, cameraName, projectId]);\n\n  useEffect(() => {\n    dispatch(thunkGetTrainingLog(projectId));\n  }, [dispatch, projectId]);\n  useInterval(\n    () => {\n      dispatch(thunkGetTrainingLog(projectId));\n    },\n    status === CameraConfigStatus.WaitTraining ? 5000 : null,\n  );\n\n  useEffect(() => {\n    if (status === CameraConfigStatus.FinishTraining) {\n      dispatch(thunkGetTrainingMetrics(projectId));\n    }\n  }, [dispatch, status, projectId]);\n\n  useInterval(\n    () => {\n      dispatch(thunkGetInferenceMetrics(projectId));\n    },\n    status === CameraConfigStatus.StartInference ? 5000 : null,\n  );\n\n  const isCameraOnline = [CameraConfigStatus.FinishTraining, CameraConfigStatus.StartInference].includes(\n    status,\n  );\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Configuration</h1>\n      {error && <Alert danger header={error.name} content={`${error.message}`} />}\n      {status === CameraConfigStatus.WaitTraining ? (\n        <>\n          <Loader size=\"smallest\" />\n          <pre>{allTrainingLog}</pre>\n        </>\n      ) : (\n        <>\n          <ListItem title=\"Status\">\n            <CameraStatus online={isCameraOnline} />\n          </ListItem>\n          <ListItem title=\"Configured for\">\n            {parts\n              .filter((e) => project.parts.includes(e.id))\n              .map((e) => e.name)\n              .join(', ')}\n          </ListItem>\n          <Flex column gap=\"gap.small\">\n            <LiveViewContainer showVideo={true} initialAOIData={AOIs} cameraId={project.camera} />\n          </Flex>\n          <Grid columns={2} styles={{ rowGap: '20px' }}>\n            <ListItem title=\"Success Rate\">\n              <Text styles={{ color: 'rgb(244, 152, 40)', fontWeight: 'bold' }} size=\"large\">\n                {`${inferenceMetrics.successRate}%`}\n              </Text>\n            </ListItem>\n            <ListItem title={`Running on ${inferenceMetrics.isGpu ? 'GPU' : 'CPU'} (accelerated)`}>{`${\n              Math.round(inferenceMetrics.averageTime * 100) / 100\n            }/ms`}</ListItem>\n            <ListItem title=\"Successful Inferences\">{inferenceMetrics.successfulInferences}</ListItem>\n          </Grid>\n          <ListItem title=\"Unidentified Items\">\n            <Text styles={{ margin: '5px' }} size=\"large\">\n              {inferenceMetrics.unIdetifiedItems}\n            </Text>\n            <Button\n              content=\"Identify Manually\"\n              primary\n              styles={{\n                backgroundColor: 'red',\n                marginLeft: '100px',\n                ':hover': {\n                  backgroundColor: '#A72037',\n                },\n                ':active': {\n                  backgroundColor: '#8E192E',\n                },\n              }}\n              as={Link}\n              to=\"/manual\"\n            />\n          </ListItem>\n          {trainingMetrics.prevConsequence && (\n            <>\n              <Text>Previous Model Metrics</Text>\n              <ConsequenceDashboard\n                precision={trainingMetrics.prevConsequence?.precision}\n                recall={trainingMetrics.prevConsequence?.recall}\n                mAP={trainingMetrics.prevConsequence?.mAP}\n              />\n            </>\n          )}\n          <Text>Updated Model Metrics</Text>\n          <ConsequenceDashboard\n            precision={trainingMetrics.curConsequence?.precision}\n            recall={trainingMetrics.curConsequence?.recall}\n            mAP={trainingMetrics.curConsequence?.mAP}\n          />\n          <Button primary onClick={onDeleteConfigure}>\n            Delete Configuration\n          </Button>\n          <Button primary as={Link} to=\"/partIdentification\">\n            Edit Configuration\n          </Button>\n        </>\n      )}\n    </Flex>\n  );\n};\n\n/**\n * Retrun a string which contains all logs get from server during training\n * @param trainingLog The log get from the api export\n */\nconst useAllTrainingLog = (trainingLog: string): string => {\n  const [allLogs, setAllLogs] = useState(trainingLog);\n  useEffect(() => {\n    setAllLogs((prev) => `${prev}\\n${trainingLog}`);\n  }, [trainingLog]);\n  return allLogs;\n};\n\ninterface ConsequenceDashboardProps {\n  precision: number;\n  recall: number;\n  mAP: number;\n}\nconst ConsequenceDashboard: FC<ConsequenceDashboardProps> = ({ precision, recall, mAP }) => {\n  return (\n    <Grid columns={3}>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Precison\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#9a0089' }}>\n          {precision === null ? '' : `${((precision * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Recall\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#0063b1' }}>\n          {recall === null ? '' : `${((recall * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          mAP\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#69c138' }}>\n          {mAP === null ? '' : `${((mAP * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n    </Grid>\n  );\n};\n\nconst ListItem = ({ title, children }): JSX.Element => {\n  return (\n    <Flex vAlign=\"center\">\n      <Text style={{ width: '200px' }} size=\"large\">{`${title}: `}</Text>\n      {typeof children === 'string' || typeof children === 'number' ? (\n        <Text size=\"large\">{children}</Text>\n      ) : (\n        children\n      )}\n    </Flex>\n  );\n};\n\nconst CameraStatus = ({ online }): JSX.Element => {\n  const text = online ? 'Online' : 'Offline';\n  const state = online ? 'success' : 'unknown';\n\n  return (\n    <Flex gap=\"gap.smaller\" vAlign=\"center\">\n      <Status state={state} />\n      <Text styles={{ margin: '5px' }} size=\"large\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const CreateCameraConfig: React.FC = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <h1>Configuration</h1>\n      <Flex hAlign=\"center\" vAlign=\"center\" design={{ height: '100%' }} column gap=\"gap.large\">\n        <Button\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular color=\"brand\" />}\n          style={{ width: 100, height: 100, border: '5px solid #0094d8' }}\n          color=\"brand\"\n          as={Link}\n          to=\"/partIdentification\"\n        />\n        <h2>Configure Task for the Device</h2>\n      </Flex>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CameraDetailInfo from '../components/CameraDetails/CameraDetailInfo';\nimport { CameraConfigureInfo, CreateCameraConfig } from '../components/CameraConfigure';\nimport { getCameras } from '../store/camera/cameraActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { State } from '../store/State';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { useQuery } from '../hooks/useQuery';\nimport { AOIData } from '../type';\n\nconst CameraDetails: FC = (): JSX.Element => {\n  const cameraIdInproject = useSelector<State, number>((state) => state.project.data.camera);\n  const projectId = useSelector<State, number>((state) => state.project.data.id);\n  const dispatch = useDispatch();\n  const name = useQuery().get('name');\n  const isDemo = useQuery().get('isDemo');\n  const camera = useSelector<State, Camera>((state) => state.cameras.find((ele) => ele.name === name));\n\n  useEffect(() => {\n    dispatch(thunkGetProject(isDemo === 'true'));\n    dispatch(getCameras());\n  }, [dispatch, isDemo]);\n\n  if (!camera) return <Redirect to=\"/cameras\" />;\n\n  const hasProject = cameraIdInproject === camera.id;\n  const aoiData = getAOIData(camera.area);\n\n  return (\n    <Grid columns=\"2\" design={{ height: '100%' }}>\n      <CameraDetailInfo id={camera.id} name={name} rtsp={camera.rtsp} modelName={camera.model_name} />\n      {hasProject ? <CameraConfigureInfo projectId={projectId} AOIs={aoiData} /> : <CreateCameraConfig />}\n    </Grid>\n  );\n};\n\nexport default CameraDetails;\n\nconst getAOIData = (cameraArea: string): AOIData => {\n  try {\n    return JSON.parse(cameraArea);\n  } catch (e) {\n    return {\n      useAOI: false,\n      AOIs: [],\n    };\n  }\n};\n","import { Size2D } from '../../../store/labelingPage/labelingPageTypes';\n\nconst getResizeImageFunction = (defaultSize: Size2D) => (size: Size2D): [Size2D, number] => {\n  if (size.width !== 0) {\n    if (size.width > size.height) {\n      const scaleX = defaultSize.width / size.width;\n\n      return [{ width: defaultSize.width, height: size.height * scaleX }, scaleX];\n    }\n    const scaleY = defaultSize.height / size.height;\n\n    return [{ height: defaultSize.height, width: size.width * scaleY }, scaleY];\n  }\n  return [defaultSize, 1];\n};\n\nexport default getResizeImageFunction;\n","import {\n  Annotation,\n  AnnotationState,\n  BoxObject,\n  Position2D,\n  REQUEST_ANNOTATION_SUCCESS,\n  REMOVE_ANNOTATION,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  UPDATE_ANNOTATION,\n  RESET_ANNOTATION,\n  RequestAnnotationSuccessAction,\n  CreateAnnotationAction,\n  UpdateAnnotationAction,\n  UpdateCreatingAnnotationAction,\n  RemoveAnnotationAction,\n  ResetAnnotationAction,\n} from './labelingPageTypes';\n\nexport const requestAnnotationsSuccess = (data: Annotation[]): RequestAnnotationSuccessAction => ({\n  type: REQUEST_ANNOTATION_SUCCESS,\n  payload: { annotations: data },\n});\n\nexport const getAnnotations = (imageId: number) => (dispatch, getState): void => {\n  const { images } = getState();\n  const { labels } = images.find((image) => image.id === imageId);\n\n  if (labels === null) {\n    dispatch(requestAnnotationsSuccess([]));\n  } else {\n    const annotations: Annotation[] = JSON.parse(labels).map((parsedLabels, i) => ({\n      id: i,\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n\n    dispatch(requestAnnotationsSuccess(annotations));\n  }\n};\n\nexport const createAnnotation = (pos: Position2D): CreateAnnotationAction => {\n  const annotation = BoxObj.createWithPoint(pos, '');\n  return {\n    type: CREATE_ANNOTATION,\n    payload: { annotation },\n  };\n};\n\nexport const updateCreatingAnnotation = (pos: Position2D): UpdateCreatingAnnotationAction => {\n  const updater = (annotation: Annotation): Annotation => BoxObj.add(pos, annotation);\n  return {\n    type: UPDATE_CREATING_ANNOTATION,\n    payload: { updater },\n  };\n};\n\nexport const updateAnnotation = (index: number = null, annotation: Annotation): UpdateAnnotationAction => ({\n  type: UPDATE_ANNOTATION,\n  payload: { index, annotation: BoxObj.setVerticesToValidValue(annotation) },\n});\n\nexport const removeAnnotation = (index: number = null): RemoveAnnotationAction => ({\n  type: REMOVE_ANNOTATION,\n  payload: { index },\n});\n\nexport const resetAnnotation = (): ResetAnnotationAction => ({\n  type: RESET_ANNOTATION,\n});\n\n// * Annotation Functions\nexport const BoxObj: BoxObject = {\n  init(): Annotation {\n    return {\n      id: null,\n      label: { x1: 0, y1: 0, x2: 0, y2: 0 },\n      attribute: '',\n      annotationState: AnnotationState.Empty,\n    };\n  },\n  createWithPoint(p: Position2D, attribute) {\n    const obj = {\n      ...this.init(),\n      attribute,\n    };\n    return this.add(p, obj);\n  },\n  add({ x, y }, obj) {\n    // make the original object immutable, for future history usage\n    const newObj = { ...obj };\n\n    if (obj.annotationState === AnnotationState.Empty) {\n      newObj.label.x1 = x;\n      newObj.label.y1 = y;\n      newObj.label.x2 = x; // initialize x2 y2\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.P1Added;\n    } else if (obj.annotationState === AnnotationState.P1Added) {\n      newObj.label.x2 = x;\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.Finish;\n    }\n\n    return this.setVerticesToValidValue(newObj);\n  },\n  setVerticesToInt(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    newObj.label = {\n      x1: Math.round(x1),\n      y1: Math.round(y1),\n      x2: Math.round(x2),\n      y2: Math.round(y2),\n    };\n    return newObj;\n  },\n  setVerticesPointsOrder(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    if (x1 > x2) {\n      newObj.label.x1 = x2;\n      newObj.label.x2 = x1;\n    }\n    if (y1 > y2) {\n      newObj.label.y1 = y2;\n      newObj.label.y2 = y1;\n    }\n\n    return newObj;\n  },\n  setVerticesToValidValue(object: Annotation): Annotation {\n    return this.setVerticesPointsOrder(this.setVerticesToInt(object));\n  },\n  // setFinished(obj: Annotation): Annotation {\n  //   if (obj.state === AnnotationState.Created) return;\n\n  //   const newObj = R.clone(obj);\n  //   newObj.state = AnnotationState.Created;\n  //   newObj.creatingState = undefined;\n\n  //   return newObj;\n  // },\n  // setStateCreated(idx: number, annotations: Annotation[]): Annotation[] {\n  //   const { creatingState } = annotations[idx];\n\n  //   if (creatingState === 'addedX2Y2') return R.update(idx, this.setFinished, annotations);\n  //   if (creatingState === 'addedX1Y1') return R.remove(idx, 1, annotations);\n  //   return R.clone(annotations);\n  // },\n};\n","import React, { useState, useRef, useEffect, FC, useCallback } from 'react';\nimport { Line, Group, Circle } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport {\n  BoxLabel,\n  Box2dComponentProps,\n  WorkState,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport { updateAnnotation } from '../../store/labelingPage/labelingPageActions';\n\nexport const Box2d: FC<Box2dComponentProps> = ({\n  scale,\n  workState,\n  onSelect,\n  selected,\n  annotationIndex,\n  visible = true,\n  annotation,\n  dispatch,\n  changeCursorState = null,\n}) => {\n  const [vertices, setVertices] = useState<BoxLabel>(annotation.label);\n  const anchorRadius: number = 5 / scale;\n  const strokeWidth: number = 2 / scale;\n  const boxRef = useRef(null);\n\n  const dispatchLabel = (): void => {\n    changeCursorState();\n\n    if (!dispatch) return;\n    const newAnnotation = { ...annotation };\n    newAnnotation.label = vertices;\n    dispatch(updateAnnotation(annotationIndex, newAnnotation));\n  };\n\n  const mouseMoveListener = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (workState === WorkState.Creating && selected) {\n        setVertices((prev) => ({ ...prev, x2: e.evt.offsetX / scale, y2: e.evt.offsetY / scale }));\n      }\n    },\n    [workState, setVertices, selected, scale],\n  );\n\n  const onDragAnchor = useCallback(\n    ({ xi = 'x1', yi = 'y1' }) => (e: KonvaEventObject<DragEvent>): void => {\n      const stage = e.target.getStage();\n      const { width, height } = stage.getSize();\n      let x = Math.round(e.target.position().x);\n      let y = Math.round(e.target.position().y);\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > width / scale) x = width / scale;\n      if (y > height / scale) y = height / scale;\n      // * Round the anchor (circle) position so user can only drag anchor on integer.\n      e.target.setAttr('x', x);\n      e.target.setAttr('y', y);\n\n      const anotherPosXArr = ['x1', 'x2'];\n      const anotherPosYArr = ['y1', 'y2'];\n      anotherPosXArr.splice(\n        anotherPosXArr.findIndex((xx) => xx === xi),\n        1,\n      );\n      anotherPosYArr.splice(\n        anotherPosYArr.findIndex((yy) => yy === yi),\n        1,\n      );\n      if (vertices[anotherPosXArr[0]] > vertices[xi]) {\n        if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n          changeCursorState(LabelingCursorStates.nwseResize);\n        } else {\n          changeCursorState(LabelingCursorStates.neswResize);\n        }\n      } else if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n        changeCursorState(LabelingCursorStates.neswResize);\n      } else {\n        changeCursorState(LabelingCursorStates.nwseResize);\n      }\n\n      setVertices((prevVertices) => ({ ...prevVertices, [xi]: x, [yi]: y }));\n    },\n    [changeCursorState, scale, vertices],\n  );\n\n  useEffect(() => {\n    const layer = boxRef.current.getLayer();\n    layer.on('mousemove', mouseMoveListener);\n    return (): void => {\n      layer.off('mousemove', mouseMoveListener);\n    };\n  }, [mouseMoveListener]);\n  useEffect(() => {\n    setVertices(annotation.label);\n  }, [annotation.label]);\n\n  return (\n    <Group\n      ref={(e): void => {\n        if (e) {\n          boxRef.current = e;\n        }\n      }}\n      visible={visible}\n      onMouseDown={(e): void => {\n        if (workState === WorkState.None) {\n          onSelect(annotationIndex);\n          e.cancelBubble = true;\n        }\n      }}\n    >\n      <Line\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke=\"red\"\n        strokeWidth={strokeWidth}\n        closed={true}\n      />\n      <Group visible={selected}>\n        <Circle\n          key={'anchor-0'}\n          name={'anchor-0'}\n          x={vertices.x1}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-1'}\n          name={'anchor-1'}\n          x={vertices.x2}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-2'}\n          name={'anchor-2'}\n          x={vertices.x2}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-3'}\n          name={'anchor-3'}\n          x={vertices.x1}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n      </Group>\n    </Group>\n  );\n};\n\nexport const DisplayBox: FC<{ vertices: BoxLabel; color: string; scale: number }> = ({\n  scale,\n  vertices,\n  color,\n}) => {\n  return (\n    <>\n      <Line\n        ref={(ref): void => {\n          if (ref) ref.cache();\n        }}\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke={color}\n        strokeWidth={1 / scale}\n        closed={true}\n      />\n      <Circle x={vertices.x1} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y2} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x1} y={vertices.y2} radius={3 / scale} fill={color} />\n    </>\n  );\n};\n","import React, { FC, memo, Dispatch, useState, useEffect } from 'react';\nimport { Group, Line, Rect } from 'react-konva';\n\nimport { Size2D, LabelingCursorStates, BoxLabel } from '../../store/labelingPage/labelingPageTypes';\n\ninterface RemoveBoxButtonProps {\n  visible: boolean;\n  imageSize: Size2D;\n  label: BoxLabel;\n  changeCursorState: (cursorType?: LabelingCursorStates) => void;\n  scale: number;\n  setShowOuterRemoveButton: Dispatch<boolean>;\n  removeBox: () => void;\n}\nconst RemoveBoxButton: FC<RemoveBoxButtonProps> = ({\n  visible,\n  imageSize,\n  label,\n  changeCursorState,\n  scale,\n  setShowOuterRemoveButton,\n  removeBox,\n}) => {\n  const [color, setColor] = useState<string>('#F9526B');\n  const [strokeWidth, setStrokeWidth] = useState<number>(1.5 / scale);\n  let x: number;\n  let y: number;\n\n  if (\n    label.x1 < 0 ||\n    label.x2 > imageSize.width / scale ||\n    label.y1 < 0 ||\n    label.y2 > imageSize.height / scale\n  ) {\n    x = 0;\n    y = -60;\n  } else if (label.x1 > 30 / scale || label.x2 < (imageSize.width - 25) / scale) {\n    if (label.x1 > 30 / scale) x = label.x1 - 20 / scale;\n    else x = label.x2 + 25 / scale;\n\n    if (label.y1 > 12 / scale) {\n      y = label.y1 - 10 / scale;\n    } else {\n      y = label.y1 + 12 / scale;\n    }\n  } else {\n    x = 12 / scale;\n    if (label.y1 > 20 / scale) {\n      y = label.y1 - 20 / scale;\n    } else {\n      // * Make remove button disappear\n      y = -60;\n    }\n  }\n  if (y === -60) setShowOuterRemoveButton(true);\n  else setShowOuterRemoveButton(false);\n\n  useEffect(() => {\n    setStrokeWidth(1.5 / scale);\n  }, [scale]);\n\n  return (\n    <Group\n      visible={visible}\n      x={x}\n      y={y}\n      onMouseEnter={(): void => {\n        changeCursorState(LabelingCursorStates.pointer);\n        setColor('#E73550');\n        setStrokeWidth(3 / scale);\n      }}\n      onMouseLeave={(): void => {\n        changeCursorState();\n        setColor('#F9526B');\n        setStrokeWidth(1.5 / scale);\n      }}\n      onClick={(e): void => {\n        removeBox();\n        e.cancelBubble = true;\n      }}\n    >\n      <Rect x={-5 / scale} y={-5 / scale} width={10 / scale} height={10 / scale} />\n      <Line\n        points={[-5 / scale, -5 / scale, 5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n      <Line\n        points={[5 / scale, -5 / scale, -5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n    </Group>\n  );\n};\n\nexport default memo(RemoveBoxButton);\n","import React, { FC, useState, useEffect, useCallback, useRef, Dispatch, useMemo } from 'react';\nimport { Button, CloseIcon } from '@fluentui/react-northstar';\nimport { Stage, Layer, Image, Group, Text as KonvaText } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useDispatch } from 'react-redux';\n\nimport useImage from './util/useImage';\nimport getResizeImageFunction from './util/resizeImage';\nimport { Box2d } from './Box';\nimport {\n  Size2D,\n  Annotation,\n  WorkState,\n  LabelingType,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport {\n  createAnnotation,\n  updateCreatingAnnotation,\n  removeAnnotation,\n} from '../../store/labelingPage/labelingPageActions';\nimport RemoveBoxButton from './RemoveBoxButton';\n\nconst defaultSize: Size2D = {\n  width: 800,\n  height: 600,\n};\n\ninterface SceneProps {\n  url?: string;\n  labelingType: LabelingType;\n  annotations: Annotation[];\n  workState: WorkState;\n  setWorkState: Dispatch<WorkState>;\n}\nconst Scene: FC<SceneProps> = ({ url = '', labelingType, annotations, workState, setWorkState }) => {\n  const dispatch = useDispatch();\n  const resizeImage = useCallback(getResizeImageFunction(defaultSize), [defaultSize]);\n  const [imageSize, setImageSize] = useState<Size2D>(defaultSize);\n  const noMoreCreate = useMemo(\n    () => labelingType === LabelingType.SingleAnnotation && annotations.length === 1,\n    [labelingType, annotations],\n  );\n  const [cursorState, setCursorState] = useState<LabelingCursorStates>(LabelingCursorStates.default);\n  const [image, status, size] = useImage(url, 'anonymous');\n  const [selectedAnnotationIndex, setSelectedAnnotationIndex] = useState<number>(null);\n  const [showOuterRemoveButton, setShowOuterRemoveButton] = useState<boolean>(false);\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const scale = useRef<number>(1);\n  const changeCursorState = useCallback(\n    (cursorType?: LabelingCursorStates): void => {\n      if (!cursorType) {\n        if (noMoreCreate) {\n          setCursorState(LabelingCursorStates.default);\n        } else {\n          setCursorState(LabelingCursorStates.crosshair);\n        }\n      } else {\n        setCursorState(cursorType);\n      }\n    },\n    [noMoreCreate],\n  );\n  const removeBox = useCallback((): void => {\n    dispatch(removeAnnotation(selectedAnnotationIndex));\n    setWorkState(WorkState.None);\n    setShowOuterRemoveButton(false);\n  }, [dispatch, selectedAnnotationIndex, setWorkState, setShowOuterRemoveButton]);\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate || workState === WorkState.Creating) return;\n\n    dispatch(createAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }));\n    setSelectedAnnotationIndex(annotations.length - 1);\n    setWorkState(WorkState.Creating);\n  };\n\n  const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\n    if (workState === WorkState.Creating) {\n      dispatch(\n        updateCreatingAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }),\n      );\n      if (annotations.length - 1 === selectedAnnotationIndex) {\n        setWorkState(WorkState.Selecting);\n      } else {\n        setWorkState(WorkState.None);\n      }\n    }\n  };\n\n  const onSelect = (index: number): void => {\n    setSelectedAnnotationIndex(index);\n    setWorkState(WorkState.Selecting);\n  };\n\n  useEffect(() => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) {\n      changeCursorState();\n      setSelectedAnnotationIndex(0);\n    } else {\n      changeCursorState();\n    }\n  }, [noMoreCreate, changeCursorState]);\n  useEffect(() => {\n    if (workState === WorkState.None && !noMoreCreate) setSelectedAnnotationIndex(null);\n  }, [workState, noMoreCreate]);\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  const isLoading = status === 'loading' || (imageSize.height === 0 && imageSize.width === 0);\n\n  return (\n    <div style={{ margin: '0.2em' }}>\n      {annotations.length !== 0 &&\n      showOuterRemoveButton &&\n      !isDragging &&\n      workState !== WorkState.Creating ? (\n        <Button\n          iconOnly\n          text\n          styles={{ color: '#F9526B', ':hover': { color: '#E73550' } }}\n          content={<CloseIcon size=\"large\" />}\n          onClick={removeBox}\n        />\n      ) : (\n        <div style={{ height: '2em' }} />\n      )}\n      <Stage\n        width={imageSize.width}\n        height={imageSize.height}\n        scale={{ x: scale.current, y: scale.current }}\n        style={{ cursor: cursorState }}\n      >\n        <Layer\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onDragStart={(): void => {\n            setIsDragging(true);\n          }}\n          onDragEnd={(): void => {\n            setIsDragging(false);\n          }}\n        >\n          <Image image={image} />\n          {!isLoading &&\n            annotations.map((annotation, i) => (\n              <Group key={i}>\n                <RemoveBoxButton\n                  imageSize={imageSize}\n                  visible={!isDragging && workState !== WorkState.Creating && i === selectedAnnotationIndex}\n                  label={annotation.label}\n                  scale={scale.current}\n                  changeCursorState={changeCursorState}\n                  setShowOuterRemoveButton={setShowOuterRemoveButton}\n                  removeBox={removeBox}\n                />\n                <Box2d\n                  workState={workState}\n                  onSelect={onSelect}\n                  annotation={annotation}\n                  scale={scale.current}\n                  annotationIndex={i}\n                  selected={i === selectedAnnotationIndex}\n                  dispatch={dispatch}\n                  changeCursorState={changeCursorState}\n                />\n              </Group>\n            ))}\n          {isLoading && (\n            <KonvaText\n              x={imageSize.width / 2 - 50}\n              y={imageSize.height / 2 - 25}\n              fontSize={50}\n              text=\"Loading...\"\n              fill=\"rgb(255, 0, 0)\"\n            />\n          )}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Scene;\n","import axios from 'axios';\nimport {\n  LabelImage,\n  GetLabelImagesSuccess,\n  GET_LABEL_IMAGE_SUCCESS,\n  DeleteLabelImageSuccess,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  PostLabelImageSuccess,\n  POST_LABEL_IMAGE_SUCCESS,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n  UpdateLabelImageAnnotation,\n} from './imageTypes';\nimport { Annotation } from '../labelingPage/labelingPageTypes';\n\nconst getLabelImagesSuccess = (data: LabelImage[]): GetLabelImagesSuccess => ({\n  type: GET_LABEL_IMAGE_SUCCESS,\n  payload: data,\n});\n\nconst deleteLabelImageSuccess = (id: number): DeleteLabelImageSuccess => ({\n  type: DELETE_LABEL_IMAGE_SUCCESS,\n  payload: { id },\n});\n\nconst requestLabelImagesFailure = (error: any): any => {\n  console.error(error);\n  return { type: REQUEST_LABEL_IMAGE_FAILURE };\n};\n\nconst postLabelImageSuccess = (image: LabelImage): PostLabelImageSuccess => ({\n  type: POST_LABEL_IMAGE_SUCCESS,\n  payload: image,\n});\n\nexport const getLabelImages = () => (dispatch): Promise<void> => {\n  return axios('/api/images/')\n    .then(({ data }) => {\n      dispatch(getLabelImagesSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\n\nexport const postLabelImage = (newImage: LabelImage | FormData) => (dispatch): Promise<void> => {\n  return axios('/api/images/', {\n    method: 'POST',\n    data: newImage,\n  })\n    .then(({ data }) => {\n      dispatch(postLabelImageSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const deleteLabelImage = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/images/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteLabelImageSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const saveLabelImageAnnotation = (imageId: number, annotations: Annotation[]) => (\n  dispatch,\n): Promise<void> => {\n  const url = `/api/images/${imageId}/`;\n  return axios({\n    url,\n    method: 'PATCH',\n    data: {\n      labels: JSON.stringify(annotations.map((e) => e.label)),\n    },\n  })\n    .then(({ data }) => {\n      console.info('Save successfully');\n      dispatch(updateLabelImageAnnotation(data.id, data.labels));\n      // dispatch(requestAnnotationsSuccess(annotations));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const updateLabelImageAnnotation = (imageId: number, labels: any): UpdateLabelImageAnnotation => ({\n  type: UPDATE_LABEL_IMAGE_ANNOTATION,\n  payload: { id: imageId, labels },\n});","import React, { FC } from 'react';\nimport { Flex, Button, ChevronStartIcon, ChevronEndIcon } from '@fluentui/react-northstar';\n\ninterface PrevNextButtonProps {\n  isRelabel: boolean;\n  prevDisabled: boolean;\n  nextDisabled: boolean;\n  onPrevClick: () => void;\n  onNextClick: () => void;\n}\nconst PrevNextButton: FC<PrevNextButtonProps> = ({\n  isRelabel,\n  children,\n  prevDisabled,\n  nextDisabled,\n  onPrevClick,\n  onNextClick,\n}) => {\n  return (\n    <Flex vAlign=\"center\">\n      {!isRelabel && (\n        <Button\n          text\n          disabled={prevDisabled}\n          icon={<ChevronStartIcon size=\"larger\" />}\n          onClick={onPrevClick}\n        />\n      )}\n      {children}\n      {!isRelabel && (\n        <Button text disabled={nextDisabled} icon={<ChevronEndIcon size=\"larger\" />} onClick={onNextClick} />\n      )}\n    </Flex>\n  );\n};\n\nexport default PrevNextButton;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Button, Text } from '@fluentui/react-northstar';\n\nimport Scene from '../components/LabelingPage/Scene';\nimport { LabelingType, Annotation, WorkState } from '../store/labelingPage/labelingPageTypes';\nimport { State } from '../store/State';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getAnnotations, resetAnnotation } from '../store/labelingPage/labelingPageActions';\nimport { saveLabelImageAnnotation } from '../store/image/imageActions';\nimport { RelabelImage } from '../components/ManualIdentification/types';\nimport PrevNextButton from '../components/LabelingPage/PrevNextButton';\n\ninterface LabelingPageProps {\n  labelingType: LabelingType;\n  images: LabelImage[] | RelabelImage[];\n  imageIndex: number;\n  closeDialog: () => void;\n  isRelabel: boolean;\n}\nconst LabelingPage: FC<LabelingPageProps> = ({\n  labelingType,\n  images,\n  imageIndex,\n  closeDialog,\n  isRelabel,\n}) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState<number>(imageIndex);\n  const [workState, setWorkState] = useState<WorkState>(WorkState.None);\n\n  const annotations = useSelector<State, Annotation[]>((state) => state.labelingPageState.annotations);\n\n  const isOnePointBox = checkOnePointBox(annotations);\n  const imageUrl = images[index]?.image;\n  const imageId = images[index]?.id;\n\n  useEffect(() => {\n    if (typeof imageId === 'number') dispatch(getAnnotations(imageId));\n    return (): void => {\n      dispatch(resetAnnotation());\n    };\n  }, [dispatch, imageId]);\n\n  return (\n    <Flex column hAlign=\"center\">\n      <Text size=\"larger\" weight=\"semibold\">\n        DRAW A RECTANGLE AROUND THE PART\n      </Text>\n      <PrevNextButton\n        isRelabel={isRelabel}\n        prevDisabled={index === 0 || workState === WorkState.Creating || isOnePointBox}\n        nextDisabled={index === images.length - 1 || workState === WorkState.Creating || isOnePointBox}\n        onPrevClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev - 1 + images.length) % images.length);\n        }}\n        onNextClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev + 1) % images.length);\n        }}\n      >\n        <Scene\n          url={imageUrl ?? '/icons/Play.png'}\n          annotations={annotations}\n          workState={workState}\n          setWorkState={setWorkState}\n          labelingType={labelingType}\n        />\n      </PrevNextButton>\n      <Flex gap=\"gap.medium\">\n        <Button\n          primary\n          content=\"Save\"\n          disabled={isOnePointBox || workState === WorkState.Creating}\n          onClick={(): void => {\n            dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n            closeDialog();\n          }}\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            closeDialog();\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst checkOnePointBox = (annotations: Annotation[]): boolean => {\n  if (annotations.length === 0) return false;\n  const { label } = annotations[annotations.length - 1];\n  return label.x1 === label.x2 && label.y1 === label.y2;\n};\n\nexport default LabelingPage;\n","import React, { memo, FC, useState } from 'react';\nimport { Dialog } from '@fluentui/react-northstar';\n\nimport LabelingPage from '../pages/LabelingPage';\nimport { LabelingType } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { RelabelImage } from './ManualIdentification/types';\n\ninterface LabelingPageDialogProps {\n  trigger: JSX.Element;\n  imageIndex: number;\n  images: LabelImage[] | RelabelImage[];\n  isRelabel: boolean;\n}\nconst LabelingPageDialog: FC<LabelingPageDialogProps> = ({\n  trigger,\n  images,\n  imageIndex,\n  isRelabel,\n}): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '80%' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      content={\n        <LabelingPage\n          closeDialog={(): void => setOpen(false)}\n          labelingType={LabelingType.SingleAnnotation}\n          images={images}\n          imageIndex={imageIndex}\n          isRelabel={isRelabel}\n        />\n      }\n    />\n  );\n};\n\nexport default memo(LabelingPageDialog);\n","import React, { useState, useEffect, useMemo, useCallback, memo, MouseEvent, FC, useRef } from 'react';\nimport Konva from 'konva';\nimport { Text } from '@fluentui/react-northstar';\n\nimport useImage from './LabelingPage/util/useImage';\nimport { AnnotationState, Annotation } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport getResizeImageFunction from './LabelingPage/util/resizeImage';\n\ninterface LabelDisplayImageProps {\n  labelImage: LabelImage;\n  labelText?: string;\n  width: number;\n  height?: number;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst LabelDisplayImage: FC<LabelDisplayImageProps> = ({\n  labelImage,\n  labelText = '',\n  width = 300,\n  height = 150,\n  pointerCursor = false,\n  onClick,\n}) => {\n  const stage = useRef<Konva.Stage>(null);\n  const layer = useRef<Konva.FastLayer>(null);\n  const img = useRef<Konva.Image>(null);\n  const imgScale = useRef<number>(1);\n  const shapes = useRef<BoxShape[]>([]);\n  const [image, , size] = useImage(labelImage.image, 'anonymous');\n  const resizeImage = useCallback(getResizeImageFunction({ width, height }), [width, height]);\n\n  const annotations = useMemo<Annotation[]>(() => {\n    if (!labelImage?.labels) return [];\n\n    return JSON.parse(labelImage.labels).map((parsedLabels, i) => ({\n      id: i,\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n  }, [labelImage]);\n\n  useEffect(() => {\n    if (size.width > 0) {\n      if (layer.current === null) {\n        const [outcomeSize, outcomeScale] = resizeImage(size);\n        imgScale.current = outcomeScale;\n\n        stage.current = new Konva.Stage({\n          height: outcomeSize.height,\n          width: outcomeSize.width,\n          scale: { x: outcomeScale, y: outcomeScale },\n          container: `display-${labelImage.id}`,\n        });\n\n        layer.current = new Konva.FastLayer();\n\n        img.current = new Konva.Image({ image });\n\n        layer.current.add(img.current);\n        stage.current.add(layer.current);\n      }\n      const newShapes = annotations.map((e) => annotationToShape(e, imgScale.current));\n\n      for (let i = 0; i < shapes.current.length; i++) {\n        shapes.current[i].edge.destroy();\n        shapes.current[i].points.forEach((e) => e.destroy());\n      }\n      \n      shapes.current = newShapes;\n      for (let i = 0; i < newShapes.length; i++) {\n        const { points, edge } = newShapes[i];\n        layer.current.add(edge);\n\n        for (let j = 0; j < points.length; j++) {\n          layer.current.add(points[j]);\n        }\n      }\n\n      layer.current.draw();\n    }\n  }, [size, image, resizeImage, labelImage.id, annotations]);\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        cursor: pointerCursor ? 'pointer' : 'default',\n        display: 'flex',\n        flexFlow: 'column',\n      }}\n    >\n      <div id={`display-${labelImage.id}`} />\n      <Text align=\"center\">{labelText}</Text>\n    </div>\n  );\n};\n\ntype BoxShape = {\n  id: number;\n  edge: Konva.Line;\n  points: Konva.Circle[];\n};\nconst annotationToShape = (annotation: Annotation, imgScale: number): BoxShape => {\n  const { id, label } = annotation;\n  const edge = new Konva.Line({\n    points: [\n      label.x1,\n      label.y1,\n      label.x2,\n      label.y1,\n      label.x2,\n      label.y2,\n      label.x1,\n      label.y2,\n      label.x1,\n      label.y1,\n    ],\n    stroke: 'red',\n    strokeWidth: 1 / imgScale,\n    closed: true,\n  });\n\n  const points = [];\n\n  points.push(new Konva.Circle({ x: label.x1, y: label.y1, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x1, y: label.y2, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x2, y: label.y2, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x2, y: label.y1, radius: 3 / imgScale, fill: 'red' }));\n\n  return {\n    id,\n    edge,\n    points,\n  };\n};\n\nexport default memo(LabelDisplayImage);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Button,\n  PlayIcon,\n  CallControlPresentNewIcon,\n  PauseThickIcon,\n  Image,\n} from '@fluentui/react-northstar';\n\nimport { thunkAddCapturedImages } from '../../store/part/partActions';\nimport { RTSPVideoProps } from './RTSPVideo.type';\n\nexport const RTSPVideoComponent: React.FC<RTSPVideoProps> = ({\n  rtsp = null,\n  partId,\n  canCapture,\n  onVideoStart,\n  onVideoPause,\n}) => {\n  const [streamId, setStreamId] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const onCreateStream = (): void => {\n    let url = `/api/streams/connect/?part_id=${partId}&rtsp=${rtsp}`;\n    if (!canCapture) url += '&inference=1';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.status === 'ok') {\n          setStreamId(data.stream_id);\n        }\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoStart) onVideoStart();\n  };\n\n  const onCapturePhoto = (): void => {\n    dispatch(thunkAddCapturedImages(streamId));\n  };\n\n  const onDisconnect = (): void => {\n    setStreamId('');\n    fetch(`/api/streams/${streamId}/disconnect`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoPause) onVideoPause();\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onDisconnect);\n    return (): void => {\n      window.removeEventListener('beforeunload', onDisconnect);\n    };\n  });\n\n  const src = streamId ? `/api/streams/${streamId}/video_feed` : '';\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {src ? <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'contain' }} /> : null}\n      </div>\n      <Button.Group\n        styles={{ alignSelf: 'center' }}\n        buttons={[\n          {\n            key: 'start',\n            icon: <PlayIcon />,\n            iconOnly: true,\n            onClick: onCreateStream,\n            disabled: rtsp === null,\n          },\n          canCapture && {\n            key: 'capture',\n            icon: <CallControlPresentNewIcon />,\n            iconOnly: true,\n            onClick: onCapturePhoto,\n            disabled: !streamId,\n          },\n          {\n            key: 'stop',\n            icon: <PauseThickIcon />,\n            iconOnly: true,\n            onClick: onDisconnect,\n            disabled: !streamId,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport const RTSPVideo = React.memo(RTSPVideoComponent);\n","import {\n  AddCapturedImageAction,\n  ADD_CAPTURED_IMAGE,\n  PartThunk,\n  UpdateCapturedImageAction,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\nimport { LabelImage } from '../image/imageTypes';\nimport { getLabelImages } from '../image/imageActions';\n\nexport const addCapturedImages = (newCapturedImage: LabelImage): AddCapturedImageAction => ({\n  type: ADD_CAPTURED_IMAGE,\n  payload: { newCapturedImage },\n});\n\nexport const updateCapturedImages = (capturedImages: LabelImage[]): UpdateCapturedImageAction => ({\n  type: UPDATE_CAPTURED_IMAGES,\n  payload: { capturedImages },\n});\n\nexport const thunkAddCapturedImages = (streamId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/streams/${streamId}/capture`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 'ok') {\n        dispatch(addCapturedImages(data.image));\n        dispatch(getLabelImages());\n      }\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const thunkGetCapturedImages = (partId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/images`)\n    .then((response) => response.json())\n    .then((data) => {\n      const imagesWithRelatedPart = data.reduce((acc, cur) => {\n        if (cur.part.split('/')[5] === partId) acc.push(cur);\n        return acc;\n      }, []);\n      dispatch(updateCapturedImages(imagesWithRelatedPart));\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","export const getIdFromUrl = (url: string): number => parseInt(url.split(\"/\")[5], 10) ;","import { LabelImage } from '../store/image/imageTypes';\nimport { getIdFromUrl } from './GetIDFromUrl';\n\ninterface Options {\n  partId?: number;\n  isRelabel?: boolean;\n}\nexport const getFilteredImages = (\n  images: LabelImage[],\n  { partId, isRelabel = false }: Options,\n): LabelImage[] => {\n  if (partId === undefined) return images;\n  return images.filter((image) => getIdFromUrl(image.part) === partId && image.is_relabel === isRelabel);\n};\n","import { DropdownItemProps } from '@fluentui/react-northstar';\n\nexport type Value = { id: number; name: string } | { id: number; name: string }[];\n\nexport const formatDropdownValue = (value: Value): DropdownItemProps | DropdownItemProps[] => {\n  if (Array.isArray(value)) {\n    return value.map((e) => ({\n      header: e.name,\n      content: {\n        key: e.id,\n      },\n    }));\n  }\n  if (value) {\n    return {\n      header: value.name,\n      content: {\n        key: value.id,\n      },\n    };\n  }\n  return null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Dropdown, Text, DropdownItemProps } from '@fluentui/react-northstar';\nimport { Link, Prompt } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useCameras } from '../../hooks/useCameras';\nimport { State } from '../../store/State';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { RTSPVideo } from '../RTSPVideo';\nimport { getLabelImages } from '../../store/image/imageActions';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { formatDropdownValue } from '../../util/formatDropdownValue';\n\nexport const CapturePhotos: React.FC<{ partId: number }> = ({ partId }) => {\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n\n  return (\n    <>\n      <CameraSelector selectedCamera={selectedCamera} setSelectedCamera={setSelectedCamera} />\n      <RTSPVideo rtsp={selectedCamera?.rtsp} partId={partId} canCapture={true} />\n      <CapturedImagesContainer partId={partId} />\n    </>\n  );\n};\n\nconst CameraSelector = ({ selectedCamera, setSelectedCamera }): JSX.Element => {\n  const availableCameras = useCameras();\n\n  const items: DropdownItemProps[] = availableCameras.map((ele) => ({\n    header: ele.name,\n    content: {\n      key: ele.id,\n    },\n  }));\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setSelectedCamera((prev) => prev);\n    else {\n      const { key } = data.value.content;\n      const newSelectedCamera = availableCameras.find((ele) => ele.id === key);\n      if (newSelectedCamera) setSelectedCamera(newSelectedCamera);\n    }\n  };\n\n  return (\n    <Flex gap=\"gap.small\" vAlign=\"center\">\n      <Text>Select Camera</Text>\n      <Dropdown items={items} onChange={onDropdownChange} value={formatDropdownValue(selectedCamera)} />\n      <Link to=\"/addCamera\">Add Camera</Link>\n    </Flex>\n  );\n};\n\nconst CapturedImagesContainer = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images).filter(\n    (image) => !image.is_relabel,\n  );\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  const imageCount = filteredImages.length;\n\n  return (\n    <>\n      <Text>Total: {imageCount}</Text>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Flex\n        styles={{\n          overflow: 'scroll',\n          border: '1px solid grey',\n          height: '150px',\n          borderColor: isValid ? '' : 'red',\n        }}\n        gap=\"gap.small\"\n        vAlign=\"center\"\n      >\n        {filteredImages.map((image, i, arr) => (\n          <div key={image.id}>\n            <span>{i + 1}</span>\n            <LabelingPageDialog\n              key={i}\n              imageIndex={i}\n              images={arr}\n              trigger={<LabelDisplayImage labelImage={image} pointerCursor width={200} height={150} />}\n              isRelabel={false}\n            />\n          </div>\n        ))}\n      </Flex>\n      <Prompt\n        when={imageCount < 15}\n        message=\"The count of images is less than 15, which may cause error when configure part identification. Sure you want to leave?\"\n      />\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { getCameras } from '../store/camera/cameraActions';\n\n/**\n * Fetch the cameras data from server and set to Redux Store\n */\nexport const useCameras = (): Camera[] => {\n  const dispatch = useDispatch();\n  const cameras: Camera[] = useSelector<State, Camera[]>((state) => state.cameras.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return cameras;\n};\n","import React, { useEffect } from 'react';\nimport { Text, Grid } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/State';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getLabelImages, postLabelImage } from '../../store/image/imageActions';\n\nexport const UploadPhotos = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  function handleUpload(e: React.ChangeEvent<HTMLInputElement>): void {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const formData = new FormData();\n      formData.append('image', e.target.files[i]);\n      formData.append('part', `/api/parts/${partId}/`);\n      dispatch(postLabelImage(formData));\n    }\n  }\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleUpload} accept=\"image/*\" multiple />\n      <CapturedImagesContainer capturedImages={filteredImages} isValid={isValid} partId={partId} />\n    </>\n  );\n};\n\nconst CapturedImagesContainer = ({ capturedImages, isValid, partId }): JSX.Element => {\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"2\"\n        styles={{\n          border: '1px solid grey',\n          height: '100%',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n          justifyItems: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {capturedImages.map((image, i, arr) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            images={arr}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor width={300} height={225} />}\n            isRelabel={false}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Input, TextArea, Button, Menu, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useLocation, Switch, Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { CapturePhotos } from '../components/CapturePhoto';\nimport { UploadPhotos } from '../components/UploadPhotos';\nimport { useQuery } from '../hooks/useQuery';\n\nexport const PartDetails = (): JSX.Element => {\n  const partId = useQuery().get('partId');\n\n  return (\n    <Grid columns={'repeat(12, 1fr)'} styles={{ gridColumnGap: '20px', height: '100%' }}>\n      <LeftPanel partId={partId} />\n      <RightPanel partId={partId} />\n    </Grid>\n  );\n};\n\nconst LeftPanel = ({ partId }): JSX.Element => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    if (partId) {\n      axios\n        .get(`/api/parts/${partId}/`)\n        .then(({ data }) => {\n          setName(data.name);\n          setDescription(data.description);\n          return void 0;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [partId]);\n\n  const onSave = (): void => {\n    const hasPartId = ![undefined, null].includes(partId);\n    const url = hasPartId ? `/api/parts/${partId}/` : `/api/parts/`;\n\n    axios({\n      method: hasPartId ? 'PUT' : 'POST',\n      url,\n      data: {\n        name,\n        description,\n      },\n    })\n      .then(({ data }) => {\n        history.push(`/parts/detail/capturePhotos?partId=${data.id}`);\n        return void 0;\n      })\n      .catch((err) => {\n        setError(JSON.stringify(err.response.data));\n      });\n  };\n\n  return (\n    <Flex column space=\"around\" styles={{ gridColumn: '1 / span 4' }}>\n      <Input\n        placeholder=\"Enter Part Name...\"\n        fluid\n        styles={{ fontSize: '2em' }}\n        value={name}\n        onChange={(_, newProps): void => {\n          setName(newProps.value);\n        }}\n      />\n      <TextArea\n        placeholder=\"Enter Description...\"\n        design={{ height: '80%' }}\n        value={description}\n        onChange={(_, newProps): void => {\n          setDescription(newProps.value);\n        }}\n      />\n      <Flex space=\"around\">\n        <Button content=\"Save\" primary onClick={onSave} disabled={!name || !description} />\n        <Button content=\"Cancel\" />\n      </Flex>\n      {!!error && <Alert danger content={error} dismissible />}\n    </Flex>\n  );\n};\n\nconst RightPanel = ({ partId }): JSX.Element => {\n  return (\n    <Flex column gap=\"gap.small\" styles={{ gridColumn: '5 / span 8' }}>\n      {partId ? <Tab partId={partId} /> : null}\n      <Switch>\n        <Route path={`/parts/detail/capturePhotos`}>\n          <CapturePhotos partId={parseInt(partId, 10)} />\n        </Route>\n        <Route path={`/parts/detail/uploadPhotos`}>\n          <UploadPhotos partId={parseInt(partId, 10)} />\n        </Route>\n      </Switch>\n    </Flex>\n  );\n};\n\nconst Tab = ({ partId }): JSX.Element => {\n  const items = [\n    {\n      key: 'uploadPhotos',\n      as: Link,\n      to: `/parts/detail/uploadPhotos?partId=${partId}`,\n      content: 'Upload Photos',\n    },\n    {\n      key: 'capturePhotos',\n      as: Link,\n      to: `/parts/detail/capturePhotos?partId=${partId}`,\n      content: 'Capture Photo',\n    },\n  ];\n\n  const { pathname } = useLocation();\n  const activeIndex = items.findIndex((ele) => ele.to.split('?')[0] === pathname);\n\n  return <Menu items={items} activeIndex={activeIndex} pointing primary />;\n};\n","import axios from 'axios';\nimport {\n  GET_LOCATION_SUCCESS,\n  POST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  GetLocationsSuccess,\n  RequestLocationsFailure,\n  PostLocationSuccess,\n  Location,\n} from './locationTypes';\n\nconst getLocationsSuccess = (data: Location[]): GetLocationsSuccess => ({\n  type: GET_LOCATION_SUCCESS,\n  payload: data,\n});\n\nconst requestLocationsFailure = (error: any): RequestLocationsFailure => {\n  console.error(error);\n  return { type: REQUEST_LOCATION_FAILURE };\n};\n\nconst postLocationSuccess = (data: Location): PostLocationSuccess => ({\n  type: POST_LOCATION_SUCCESS,\n  payload: data,\n});\n\nexport const getLocations = () => (dispatch): Promise<void> => {\n  return axios('/api/locations/')\n    .then(({ data }) => {\n      dispatch(getLocationsSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n\nexport const postLocation = (newLocation: Location) => (dispatch): Promise<void> => {\n  return axios('/api/locations/', {\n    method: 'POST',\n    data: newLocation,\n  })\n    .then(({ data }) => {\n      dispatch(postLocationSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n","import React, { useEffect, FC } from 'react';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { State } from '../store/State';\nimport { Location } from '../store/location/locationTypes';\nimport ImageLink from '../components/ImageLink';\nimport { getLocations } from '../store/location/locationActions';\nimport AddButton from '../components/AddButton';\n\nconst Locations: FC = () => {\n  const dispatch = useDispatch();\n  const locations = useSelector<State, Location[]>((state) => state.locations.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getLocations());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {locations.map((location, i) => (\n          <ImageLink\n            key={i}\n            to={`/locations/detail?name=${location.name}`}\n            defaultSrc=\"/icons/defaultLocation.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            label={location.name}\n          />\n        ))}\n      </Grid>\n      <div style={{ alignSelf: 'flex-end' }}>\n        <Link to=\"/locations/register\">\n          <AddButton />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Locations;\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Flex, Text, Input, TextArea, Button, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { postLocation } from '../store/location/locationActions';\n\nconst LocationRegister: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState<string>('');\n  const [coordinates, setCoordinates] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Register Location\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"100px\" height=\"100px\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Input\n            styles={{ paddingTop: '10px', minHeight: '100px' }}\n            placeholder=\"Location Name\"\n            value={name}\n            onChange={(_, newProps): void => setName(newProps.value)}\n          />\n          <Input value={coordinates} onChange={(_, newProps): void => setCoordinates(newProps.value)} />\n          <TextArea\n            styles={{ height: '60%' }}\n            value={description}\n            onChange={(_, newProps): void => setDescription(newProps.value)}\n          />\n        </Flex>\n      </Grid>\n      <Flex gap=\"gap.medium\" padding=\"padding.medium\">\n        <Button\n          primary\n          disabled={[name, coordinates, description].includes('')}\n          onClick={(): void => {\n            dispatch(postLocation({ name, coordinates, description, is_demo: false }));\n            history.push('/locations');\n          }}\n          content=\"Save\"\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            history.push('/locations');\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default LocationRegister;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Flex, Text, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { Location } from '../store/location/locationTypes';\nimport { State } from '../store/State';\nimport { useQuery } from '../hooks/useQuery';\n\nconst LocationDetails: FC = () => {\n  const name = useQuery().get('name');\n  const location = useSelector<State, Location>((state) => state.locations.find((e) => e.name === name));\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Details\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"6.25em\" height=\"6.25em\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Text styles={{ paddingTop: '0.625em', minHeight: '6.25em' }}>{location.name}</Text>\n          <Text>{location.coordinates}</Text>\n          <Text styles={{ height: '60%' }}>{location.description}</Text>\n        </Flex>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationDetails;\n","import React, { useState, useEffect, SetStateAction, Dispatch, FC, memo, useMemo } from 'react';\nimport { Dropdown, DropdownItemProps, Text, Button, RadioGroup } from '@fluentui/react-northstar';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImageIdentificationItemProps {\n  confidenceLevel: number;\n  relabelImages: RelabelImage[];\n  imageIndex: number;\n  setJudgedImageList: Dispatch<SetStateAction<JudgedImageList>>;\n  partId: number;\n  partItems: DropdownItemProps[];\n  isPartCorrect: number;\n}\nconst ImageIdentificationItem: FC<ImageIdentificationItemProps> = ({\n  confidenceLevel,\n  relabelImages,\n  imageIndex,\n  setJudgedImageList,\n  partId,\n  partItems,\n  isPartCorrect,\n}) => {\n  const filteredPartItems = useMemo(\n    () => [\n      {\n        header: 'No Object',\n        content: {\n          key: null,\n        },\n      },\n      ...partItems.filter((e) => (e.content as { key: number }).key !== partId),\n    ],\n    [partId, partItems],\n  );\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(filteredPartItems[0]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n\n      setJudgedImageList((prev) => {\n        const next = [...prev];\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx === -1) throw new Error(\"Image id doesn't match\");\n        next[idx] = { ...next[idx], partId: value.content.key };\n\n        return next;\n      });\n    }\n  };\n\n  const onRadioGroupChange = (_, newProps): void => {\n    setJudgedImageList((prev) => {\n      const next = [...prev];\n\n      if (newProps.value === 1) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId };\n        else next.push({ imageId: relabelImages[imageIndex].id, partId });\n      } else if (newProps.value === 0) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId: null };\n        else {\n          next.push({\n            imageId: relabelImages[imageIndex].id,\n            partId: null,\n          });\n        }\n      }\n      return next;\n    });\n  };\n\n  useEffect(() => {\n    setJudgedImageList([]);\n    setSelectedPartItem(filteredPartItems[0]);\n  }, [filteredPartItems, setSelectedPartItem, setJudgedImageList]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        minHeight: '13em',\n        maxHeight: '40%',\n        justifyContent: 'center',\n        padding: '1em',\n      }}\n    >\n      <div\n        style={{\n          margin: '0.2em',\n          display: 'flex',\n          flexFlow: 'column',\n          minWidth: '14em',\n          justifyContent: 'space-around',\n        }}\n      >\n        <LabelDisplayImage labelImage={relabelImages[imageIndex]} width={200} height={150} />\n      </div>\n      <div\n        style={{\n          height: '100%',\n          width: '40%',\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <Text truncated>\n          Confidence Level: <b>{confidenceLevel}%</b>\n        </Text>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '50%',\n          }}\n        >\n          <RadioGroup\n            checkedValue={isPartCorrect}\n            onCheckedValueChange={onRadioGroupChange}\n            items={[\n              {\n                key: '1',\n                label: 'Yes',\n                value: 1,\n              },\n              {\n                key: '0',\n                label: 'No',\n                value: 0,\n              },\n            ]}\n          />\n          {isPartCorrect === 0 && filteredPartItems.length > 0 && (\n            <div style={{ width: '50%' }}>\n              <Dropdown\n                fluid\n                items={filteredPartItems}\n                onChange={onDropdownChange}\n                value={selectedPartItem}\n              />\n            </div>\n          )}\n        </div>\n        <LabelingPageDialog\n          imageIndex={imageIndex}\n          images={relabelImages}\n          isRelabel={true}\n          trigger={<Button primary content=\"Identify\" />}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImageIdentificationItem);\n","import React, { FC, Dispatch, memo } from 'react';\nimport { Grid, DropdownItemProps } from '@fluentui/react-northstar';\nimport ImageIdentificationItem from './ImageItem';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImagesContainerProps {\n  images: RelabelImage[];\n  judgedImageList: JudgedImageList;\n  setJudgedImageList: Dispatch<JudgedImageList>;\n  selectedPartId: number;\n  partItems: DropdownItemProps[];\n}\nconst ImagesContainer: FC<ImagesContainerProps> = ({\n  images,\n  judgedImageList,\n  setJudgedImageList,\n  selectedPartId,\n  partItems,\n}) => (\n  <Grid\n    columns=\"2\"\n    styles={{\n      width: '100%',\n      height: '80%',\n      overflow: 'scroll',\n      borderWidth: '0.0625em',\n      borderStyle: 'solid',\n    }}\n  >\n    {images.map((img, i, arr) => {\n      if (img.display) {\n        let isPartCorrect: number = null;\n        const idx = judgedImageList.findIndex((e) => e.imageId === img.id);\n\n        if (idx >= 0) {\n          if (judgedImageList[idx].partId === selectedPartId) {\n            isPartCorrect = 1;\n          } else isPartCorrect = 0;\n        }\n\n        return (\n          <ImageIdentificationItem\n            key={img.id}\n            confidenceLevel={img.confidenceLevel}\n            imageIndex={i}\n            relabelImages={arr}\n            isPartCorrect={isPartCorrect}\n            setJudgedImageList={setJudgedImageList}\n            partId={selectedPartId}\n            partItems={partItems}\n          />\n        );\n      }\n      return void 0;\n    })}\n  </Grid>\n);\n\nexport default memo(ImagesContainer);\n","import React, { useState, useEffect, useRef, useMemo, FC } from 'react';\nimport {\n  Dropdown,\n  DropdownItemProps,\n  Grid,\n  Flex,\n  Text,\n  Divider,\n  Button,\n  ArrowDownIcon,\n  ArrowUpIcon,\n} from '@fluentui/react-northstar';\nimport Axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport { Range, Handle } from 'rc-slider';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../rc-slider.css';\n\nimport { State } from '../store/State';\nimport { useParts } from '../hooks/useParts';\nimport { ProjectData } from '../store/project/projectTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getFilteredImages } from '../util/getFilteredImages';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { getLabelImages } from '../store/image/imageActions';\nimport { JudgedImageList, RelabelImage } from '../components/ManualIdentification/types';\nimport ImagesContainer from '../components/ManualIdentification/ImagesContainer';\n\nconst ManualIdentification: FC = () => {\n  const dispatch = useDispatch();\n  const { projectData, images } = useSelector<State, { projectData: ProjectData; images: LabelImage[] }>(\n    (state) => ({\n      projectData: state.project.data,\n      images: state.images,\n    }),\n  );\n  const parts = useParts(false);\n  const partItems = useMemo<DropdownItemProps[]>(() => {\n    if (parts.length === 0 || projectData.parts.length === 0) return [];\n\n    return projectData.parts.reduce((acc, partId) => {\n      const part = parts.find((e) => e.id === partId);\n\n      if (!part) return acc;\n\n      acc.push({\n        header: part.name,\n        content: {\n          key: part.id,\n        },\n      });\n      return acc;\n    }, []);\n  }, [parts, projectData]);\n\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(null);\n  const selectedPartId: number = (selectedPartItem?.content as { key: number })?.key ?? null;\n\n  const [confidenceLevelRange, setConfidenceLevelRange] = useState<[number, number]>([\n    projectData.accuracyRangeMin,\n    projectData.accuracyRangeMax,\n  ]);\n  const [ascend, setAscend] = useState<boolean>(false);\n  const sortRef = useRef({ sorted: false, prevIsAscend: false });\n  const [judgedImageList, setJudgedImageList] = useState<JudgedImageList>([]);\n\n  const [relabelImages, setRelabelImages] = useState<RelabelImage[]>([]);\n\n  useEffect(() => {\n    dispatch(thunkGetProject(false));\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setRelabelImages(\n      getFilteredImages(images, {\n        partId: selectedPartId,\n        isRelabel: true,\n      }).map((e) => {\n        const confidenceLevel = ((e.confidence * 1000) | 0) / 10;\n        return {\n          ...e,\n          confidenceLevel,\n          display: confidenceLevel >= confidenceLevelRange[0] && confidenceLevel <= confidenceLevelRange[1],\n        };\n      }),\n    );\n    return (): void => {\n      setAscend(false);\n      sortRef.current = { sorted: false, prevIsAscend: false };\n    };\n  }, [confidenceLevelRange, images, selectedPartId]);\n\n  useEffect(() => {\n    if (sortRef.current.sorted) {\n      if (sortRef.current.prevIsAscend !== ascend) {\n        setRelabelImages((prev) => {\n          const next = [...prev];\n          next.reverse();\n          return next;\n        });\n        sortRef.current.prevIsAscend = ascend;\n      }\n    } else {\n      setRelabelImages((prev) => {\n        if (ascend) prev.sort((a, b) => a.confidenceLevel - b.confidenceLevel);\n        else prev.sort((a, b) => b.confidenceLevel - a.confidenceLevel);\n        return [...prev];\n      });\n      sortRef.current = { sorted: true, prevIsAscend: true };\n    }\n  }, [ascend]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n    }\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Manual Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.medium\" space=\"between\" styles={{ height: '75vh', padding: '1em' }}>\n        <Grid columns=\"3\" styles={{ columnGap: '1em', justifyItems: 'center' }}>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text truncated>Select Part:</Text>\n            <Dropdown items={partItems} onChange={onDropdownChange} value={selectedPartItem} />\n          </Flex>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\" styles={{ width: '80%' }}>\n            <Text>Confidence Level:</Text>\n            <div style={{ width: '70%' }}>\n              <Range\n                value={confidenceLevelRange}\n                allowCross={false}\n                onChange={setConfidenceLevelRange}\n                handle={({ value, dragging, index, ...restProps }): JSX.Element => {\n                  return (\n                    <Tooltip\n                      prefixCls=\"rc-slider-tooltip\"\n                      overlay={`${value}%`}\n                      visible={dragging}\n                      placement=\"top\"\n                      key={index}\n                    >\n                      <Handle value={value} {...restProps} />\n                    </Tooltip>\n                  );\n                }}\n              />\n            </div>\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text truncated>Sort:</Text>\n            <Button\n              icon={ascend ? <ArrowDownIcon /> : <ArrowUpIcon />}\n              styles={{ color: sortRef.current.sorted ? '#0094d8' : 'grey' }}\n              text\n              iconOnly\n              onClick={(): void => {\n                setAscend((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Grid>\n        <div style={{ display: 'flex', minWidth: '15em', maxWidth: '15%', justifyContent: 'space-around' }}>\n          <Button\n            primary\n            content=\"Yes to all\"\n            onClick={(): void => {\n              setJudgedImageList(relabelImages.map((e) => ({ imageId: e.id, partId: selectedPartId })));\n            }}\n          />\n          <Button\n            styles={{\n              backgroundColor: '#E97548',\n              color: 'white',\n              ':hover': { backgroundColor: '#CC4A31', color: 'white' },\n            }}\n            content=\"No to all\"\n            onClick={(): void => {\n              setJudgedImageList(relabelImages.map((e) => ({ imageId: e.id, partId: null })));\n            }}\n          />\n        </div>\n        <ImagesContainer\n          images={relabelImages}\n          judgedImageList={judgedImageList}\n          setJudgedImageList={setJudgedImageList}\n          selectedPartId={selectedPartId}\n          partItems={partItems}\n        />\n        <Button\n          content=\"Update\"\n          styles={{ width: '15%' }}\n          primary\n          disabled={judgedImageList.length === 0}\n          onClick={(): void => {\n            Axios({ method: 'POST', url: '/api/relabel/update', data: judgedImageList })\n              .then(() => {\n                dispatch(getLabelImages());\n                setJudgedImageList([]);\n                return void 0;\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ManualIdentification;\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text, Button, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\n\nexport const Parts: React.FC = () => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const partsAPI = Axios.get('/api/parts/');\n    const imagesAPI = Axios.get('/api/images/');\n\n    Axios.all([partsAPI, imagesAPI])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: partsRes } = responses[0];\n          const { data: images } = responses[1];\n          setParts(\n            partsRes.map((e) => ({\n              ...e,\n              images: images.find((img) => getIdFromUrl(img.part) === e.id)?.image,\n            })),\n          );\n        }),\n      )\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <Flex gap=\"gap.large\" wrap>\n        {parts\n          .filter((e) => !e.is_demo)\n          .map((ele) => (\n            <Item key={ele.id} src={ele.images} id={ele.id} name={ele.name} />\n          ))}\n      </Flex>\n      <Button\n        primary\n        fluid\n        circular\n        content={<AddIcon size=\"largest\" circular />}\n        style={{\n          width: 100,\n          height: 100,\n          position: 'fixed',\n          right: '100px',\n          bottom: '100px',\n        }}\n        as={Link}\n        to=\"/parts/detail\"\n      />\n    </div>\n  );\n};\n\nconst Item = ({ src, id, name }): JSX.Element => {\n  return (\n    <Flex column hAlign=\"center\" gap=\"gap.large\" as={Link} to={`/parts/detail/capturePhotos?partId=${id}`}>\n      <div style={{ width: '250px', height: '250px' }}>\n        <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n      </div>\n      <Text size=\"larger\">{name}</Text>\n    </Flex>\n  );\n};\n","import { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport { ReactPlugin } from '@microsoft/applicationinsights-react-js';\n\nlet reactPlugin = null;\nlet appInsights = null;\n\n/**\n * Create the App Insights Telemetry Service\n * @return {{reactPlugin: ReactPlugin, appInsights: Object, initialize: Function}} - Object\n */\nconst createTelemetryService = (): { reactPlugin; appInsights; initialize } => {\n  /**\n   * Initialize the Application Insights class\n   * @param {string} instrumentationKey - Application Insights Instrumentation Key\n   * @param {Object} browserHistory - client's browser history, supplied by the withRouter HOC\n   * @return {void}\n   */\n  const initialize = (instrumentationKey: string, isAppInsightOn: boolean, browserHistory): any => {\n    if (!browserHistory) {\n      throw new Error('Could not initialize Telemetry Service');\n    }\n    if (!instrumentationKey) {\n      throw new Error('Instrumentation key not provided in /src/components/TelemetryProvider.tsx');\n    }\n\n    reactPlugin = new ReactPlugin();\n\n    appInsights = new ApplicationInsights({\n      config: {\n        instrumentationKey,\n        maxBatchInterval: 0,\n        disableFetchTracking: false,\n        disableTelemetry: !isAppInsightOn,\n        extensions: [reactPlugin],\n        extensionConfig: {\n          [reactPlugin.identifier]: {\n            history: browserHistory,\n          },\n        },\n      },\n    });\n\n    appInsights.loadAppInsights();\n  };\n\n  return { reactPlugin, appInsights, initialize };\n};\n\nexport const ai = createTelemetryService();\nexport const getAppInsights = (): ApplicationInsights => appInsights;\n","import React from 'react';\nimport { Dialog, Flex, ExclamationCircleIcon } from '@fluentui/react-northstar';\nimport { WarningDialogProps } from './WarningDialog.type';\n\nexport const WarningDialog: React.FC<WarningDialogProps> = ({\n  onConfirm = null,\n  onCancel = null,\n  trigger,\n  contentText,\n  cancelButton = 'Cancel',\n  confirmButton = 'Confirm',\n  open = undefined,\n}): JSX.Element => {\n  return (\n    <Dialog\n      styles={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n      cancelButton={cancelButton}\n      confirmButton={confirmButton}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      open={open}\n      content={\n        <>\n          <Flex hAlign=\"center\" column>\n            <ExclamationCircleIcon\n              size=\"largest\"\n              styles={({ theme: { siteVariables } }): any => ({\n                color: siteVariables.colorScheme.brand.foreground,\n              })}\n            />\n            <div>{contentText}</div>\n          </Flex>\n        </>\n      }\n      trigger={trigger}\n    />\n  );\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Divider,\n  Text,\n  Flex,\n  Dropdown,\n  Button,\n  DropdownItemProps,\n  Checkbox,\n  Input,\n  Alert,\n  ShorthandCollection,\n} from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\n\nimport { thunkGetProject, thunkPostProject, updateProjectData } from '../store/project/projectActions';\nimport { Project, ProjectData } from '../store/project/projectTypes';\nimport { State } from '../store/State';\nimport { formatDropdownValue, Value } from '../util/formatDropdownValue';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\nimport { getAppInsights } from '../TelemetryService';\nimport { WarningDialog } from '../components/WarningDialog';\n\nconst sendTrainInfoToAppInsight = async (selectedParts): Promise<void> => {\n  const { data: images } = await Axios.get('/api/images/');\n\n  const selectedPartIds = selectedParts.map((e) => e.id);\n  const interestedImagesLength = images.filter((e) => selectedPartIds.includes(getIdFromUrl(e.part))).length;\n  const appInsight = getAppInsights();\n  if (appInsight)\n    appInsight.trackEvent({\n      name: 'train',\n      properties: {\n        images: interestedImagesLength,\n        parts: selectedParts.length,\n        source: window.location.hostname,\n      },\n    });\n};\n\nexport const PartIdentification: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error, data } = useSelector<State, Project>((state) => state.project);\n  const {\n    id: projectId,\n    camera,\n    location,\n    parts,\n    needRetraining,\n    accuracyRangeMin,\n    accuracyRangeMax,\n    maxImages: maxImage,\n  } = data;\n  const [isTestModel, setIsTestModel] = useState(false);\n  const [cameraLoading, dropDownCameras, selectedCamera, setSelectedCameraById] = useDropdownItems<any>(\n    'cameras',\n    isTestModel,\n  );\n  const [partLoading, dropDownParts, selectedParts, setSelectedPartsById] = useDropdownItems<any>(\n    'parts',\n    isTestModel,\n    true,\n  );\n  const [locationLoading, dropDownLocations, selectedLocations, setSelectedLocationById] = useDropdownItems<\n    any\n  >('locations', isTestModel);\n  const history = useHistory();\n  const [maxImgCountError, setMaxImgCountError] = useState(false);\n\n  useEffect(() => {\n    if (!cameraLoading && !partLoading && !locationLoading) {\n      dispatch(thunkGetProject(isTestModel));\n    }\n  }, [dispatch, cameraLoading, locationLoading, partLoading, isTestModel]);\n\n  useEffect(() => {\n    if (!isTestModel) {\n      if (location) setSelectedLocationById(location);\n      if (parts.length) setSelectedPartsById(parts);\n      if (camera) setSelectedCameraById(camera);\n    }\n  }, [\n    camera,\n    isTestModel,\n    location,\n    parts,\n    setSelectedCameraById,\n    setSelectedLocationById,\n    setSelectedPartsById,\n  ]);\n\n  const handleSubmitConfigure = async (): Promise<void> => {\n    try {\n      if (!isTestModel) sendTrainInfoToAppInsight(selectedParts);\n\n      const id = await dispatch(\n        thunkPostProject(projectId, selectedLocations, selectedParts, selectedCamera, isTestModel),\n      );\n\n      if (typeof id !== 'undefined')\n        history.push(`/cameras/detail?name=${selectedCamera.name}&isDemo=${isTestModel}`);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  const setData = (keyName: keyof ProjectData, value: ProjectData[keyof ProjectData]): void => {\n    dispatch(updateProjectData({ ...data, [keyName]: value }));\n  };\n\n  const accracyRangeDisabled = !needRetraining || isTestModel;\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Part Identification\n      </Text>\n      <Divider color=\"black\" />\n      {error && (\n        <Alert danger header=\"Load Part Identification Error\" content={`${error.name}: ${error.message}`} />\n      )}\n      <TestModelButton isTestModel={isTestModel} setIsTestModel={setIsTestModel} />\n      <Flex column gap=\"gap.large\" design={{ paddingTop: '30px' }}>\n        <ModuleSelector\n          moduleName=\"cameras\"\n          to=\"/cameras\"\n          value={selectedCamera}\n          setSelectedModuleItem={setSelectedCameraById}\n          items={dropDownCameras}\n          isMultiple={false}\n        />\n        <ModuleSelector\n          moduleName=\"parts\"\n          to=\"/parts\"\n          value={selectedParts}\n          setSelectedModuleItem={setSelectedPartsById}\n          items={dropDownParts}\n          isMultiple={true}\n        />\n        <ModuleSelector\n          moduleName=\"locations\"\n          to=\"/locations\"\n          value={selectedLocations}\n          setSelectedModuleItem={setSelectedLocationById}\n          items={dropDownLocations}\n          isMultiple={false}\n          isTestModel={isTestModel}\n        />\n        <Checkbox\n          label=\"Set up retraining\"\n          checked={needRetraining}\n          onChange={(_, { checked }): void => setData('needRetraining', checked)}\n          disabled={isTestModel}\n        />\n        <Text disabled={accracyRangeDisabled}>Accuracy Range</Text>\n        <Text disabled={accracyRangeDisabled}>\n          Minimum:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={accuracyRangeMin}\n            onChange={(_, { value }): void => setData('accuracyRangeMin', value)}\n          />\n          %\n        </Text>\n        <Text disabled={accracyRangeDisabled}>\n          Maximum:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={accuracyRangeMax}\n            onChange={(_, { value }): void => setData('accuracyRangeMax', value)}\n          />\n          %\n        </Text>\n        <Text disabled={accracyRangeDisabled}>\n          Maximum Images:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={maxImage}\n            onChange={(_, { value }): void => {\n              if ((value as any) < 15) setMaxImgCountError(true);\n              else setMaxImgCountError(false);\n              setData('maxImages', value);\n            }}\n          />\n          {maxImgCountError && <Text error>Cannot be less than 15</Text>}\n        </Text>\n        <Link to=\"\">Advanced Configuration</Link>\n        <Button\n          content=\"Configure\"\n          primary\n          onClick={handleSubmitConfigure}\n          disabled={(!selectedCamera || !selectedLocations || !selectedParts || isLoading) && !isTestModel}\n          loading={isLoading}\n        />\n      </Flex>\n    </>\n  );\n};\n\nconst TestModelButton = ({ isTestModel, setIsTestModel }): JSX.Element => {\n  if (isTestModel) {\n    return (\n      <Button\n        styles={{\n          backgroundColor: '#ff9727',\n          ':hover': {\n            backgroundColor: '#cf7a1f',\n          },\n          ':active': {\n            backgroundColor: '#cf7a1f',\n          },\n        }}\n        content=\"Back\"\n        onClick={(): void => setIsTestModel(false)}\n        primary\n      />\n    );\n  }\n\n  return (\n    <WarningDialog\n      confirmButton=\"Confirm to use test model\"\n      onConfirm={(): void => setIsTestModel(true)}\n      contentText={\n        <>\n          <p>Test model is for seeing inference result, no retraining experience here.</p>\n          <p>For retraining experience, please create a new model</p>\n        </>\n      }\n      trigger={\n        <Button\n          styles={{\n            backgroundColor: '#ff9727',\n            ':hover': {\n              backgroundColor: '#cf7a1f',\n            },\n            ':active': {\n              backgroundColor: '#cf7a1f',\n            },\n          }}\n          content=\"Test Model\"\n          primary\n        />\n      }\n    />\n  );\n};\n\n// TODO Make this integrate with Redux\nfunction useDropdownItems<T>(\n  moduleName: string,\n  isTestModel: boolean,\n  isMultiple?: boolean,\n): [boolean, DropdownItemProps[], T | T[], (id: string | string[]) => void] {\n  const originItems = useRef<(T & { id: number })[]>([]);\n  const [dropDownItems, setDropDownItems] = useState<DropdownItemProps[]>([]);\n  const [selectedItem, setSelectedItem] = useState<T | T[]>(isMultiple ? [] : null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const url =\n      moduleName === 'cameras' && isTestModel\n        ? `/api/${moduleName}/`\n        : `/api/${moduleName}/?is_demo=${Number(isTestModel)}`;\n    setLoading(true);\n    Axios(url)\n      .then(({ data }) => {\n        setDropDownItems(\n          data.map((e) => ({\n            header: e.name,\n            content: {\n              key: e.id,\n            },\n          })),\n        );\n        originItems.current = data;\n        if (isMultiple) {\n          setSelectedItem(data);\n        } else {\n          setSelectedItem(data[0]);\n        }\n        setLoading(false);\n        return void 0;\n      })\n      .catch((err) => console.error(err))\n      .finally(() => setLoading(false));\n  }, [isMultiple, moduleName, isTestModel]);\n\n  const setSelectedItemById = useCallback((id: string | string[]): void => {\n    if (Array.isArray(id)) {\n      const correspondedItems = id.reduce((acc, cur) => {\n        const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === cur.toString());\n        if (correspondedItem) acc.push(correspondedItem);\n        return acc;\n      }, []);\n      setSelectedItem(correspondedItems as any);\n    } else {\n      const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === id.toString());\n      if (correspondedItem) setSelectedItem(correspondedItem);\n    }\n  }, []);\n\n  return [loading, dropDownItems, selectedItem, setSelectedItemById];\n}\n\n/* Module Selector */\n\ntype ModuleSelectorProps = {\n  moduleName: string;\n  to: string;\n  value: Value;\n  setSelectedModuleItem: (id: string | string[]) => void;\n  items: ShorthandCollection<DropdownItemProps>;\n  isMultiple: boolean;\n  isTestModel?: boolean;\n};\n\nconst ModuleSelector: React.FC<ModuleSelectorProps> = ({\n  moduleName,\n  to,\n  value,\n  setSelectedModuleItem,\n  items,\n  isMultiple,\n  isTestModel,\n}): JSX.Element => {\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) return;\n    if (Array.isArray(data.value)) {\n      const ids = data.value.map((ele) => ele.content.key);\n      setSelectedModuleItem(ids);\n    } else {\n      const { key } = data.value.content;\n      setSelectedModuleItem(key);\n    }\n  };\n\n  return (\n    <Flex vAlign=\"center\" gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }}>{`Select ${moduleName}`}</Text>\n      {isTestModel ? (\n        <Dropdown items={items} value={formatDropdownValue(value)} multiple={isMultiple} open={false} />\n      ) : (\n        <Dropdown\n          items={items}\n          onChange={onDropdownChange}\n          value={formatDropdownValue(value)}\n          multiple={isMultiple}\n        />\n      )}\n      <Link to={to}>{`Add ${moduleName}`}</Link>\n    </Flex>\n  );\n};\n","import Axios, { AxiosRequestConfig } from 'axios';\n\nimport {\n  UpdateKeyAction,\n  UpdateNamespaceAction,\n  GetSettingRequestAction,\n  GetSettingSuccessAction,\n  Setting,\n  GetSettingFailedAction,\n  SettingThunk,\n} from './settingType';\n\nexport const updateKey = (key: string): UpdateKeyAction => ({ type: 'UPDATE_KEY', payload: key });\n\nexport const updateNamespace = (namespace: string): UpdateNamespaceAction => ({\n  type: 'UPDATE_NAMESPACE',\n  payload: namespace,\n});\n\nexport const settingRequest = (): GetSettingRequestAction => ({\n  type: 'REQUEST_START',\n});\n\nexport const settingSuccess = (data: Setting): GetSettingSuccessAction => ({\n  type: 'REQUEST_SUCCESS',\n  payload: data,\n});\n\nexport const settingFailed = (error: Error): GetSettingFailedAction => ({\n  type: 'REQUEST_FAIL',\n  error,\n});\n\nexport const thunkGetSetting = () => (dispatch): Promise<any> => {\n  dispatch(settingRequest());\n\n  return Axios.get('/api/settings/')\n    .then(({ data }) => {\n      if (data.length > 0) {\n        dispatch(\n          settingSuccess({\n            loading: false,\n            error: null,\n            current: {\n              id: data[0].id,\n              key: data[0].training_key,\n              namespace: data[0].endpoint,\n            },\n            origin: {\n              id: data[0].id,\n              key: data[0].training_key,\n              namespace: data[0].endpoint,\n            },\n            isTrainerValid: data[0].is_trainer_valid,\n          }),\n        );\n      }\n      return data[0].is_collect_data;\n    })\n    .catch((err) => {\n      dispatch(settingFailed(err));\n    });\n};\n\nexport const thunkPostSetting = (): SettingThunk => (dispatch, getStore): Promise<any> => {\n  const settingData = getStore().setting.current;\n  const isSettingEmpty = settingData.id === -1;\n  const url = isSettingEmpty ? `/api/settings/` : `/api/settings/${settingData.id}/`;\n  const requestConfig: AxiosRequestConfig = isSettingEmpty\n    ? {\n        data: {\n          training_key: settingData.key,\n          endpoint: settingData.namespace,\n          name: '',\n          iot_hub_connection_string: '',\n          device_id: '',\n          module_id: '',\n        },\n        method: 'POST',\n      }\n    : {\n        data: {\n          training_key: settingData.key,\n          endpoint: settingData.namespace,\n        },\n        method: 'PUT',\n      };\n\n  dispatch(settingRequest());\n\n  return Axios(url, requestConfig)\n    .then(({ data }) => {\n      dispatch(\n        settingSuccess({\n          loading: false,\n          error: null,\n          current: {\n            id: data.id,\n            key: data.training_key,\n            namespace: data.endpoint,\n          },\n          origin: {\n            id: data.id,\n            key: data.training_key,\n            namespace: data.endpoint,\n          },\n          isTrainerValid: data.is_trainer_valid,\n        }),\n      );\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(settingFailed(err));\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport * as R from 'ramda';\nimport {\n  Divider,\n  Flex,\n  Text,\n  Input,\n  Button,\n  Alert,\n  Dropdown,\n  DropdownItemProps,\n  Checkbox,\n  Dialog,\n  QuestionCircleIcon,\n  Tooltip,\n} from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useProject } from '../hooks/useProject';\nimport { getAppInsights } from '../TelemetryService';\nimport { WarningDialog } from '../components/WarningDialog';\nimport { State } from '../store/State';\nimport { Setting as SettingType } from '../store/setting/settingType';\nimport {\n  updateNamespace,\n  updateKey,\n  thunkGetSetting,\n  thunkPostSetting,\n} from '../store/setting/settingAction';\n\nexport const Setting = (): JSX.Element => {\n  const { loading, error, current: settingData, origin: originSettingData } = useSelector<State, SettingType>(\n    (state) => state.setting,\n  );\n  const dispatch = useDispatch();\n  const [checkboxChecked, setCheckboxChecked] = useState(false);\n  const [isUserGuideOpen, setIsUserGuideOpen] = useState(false);\n\n  const notEmpty = originSettingData.namespace && originSettingData.key;\n\n  const cannotUpdateOrSave = R.equals(settingData, originSettingData);\n\n  useEffect(() => {\n    (dispatch(thunkGetSetting()) as any)\n      .then((isCollectData: boolean) => setCheckboxChecked(isCollectData))\n      .catch((e) => console.error(e));\n  }, [dispatch]);\n\n  const onSave = (): void => {\n    (dispatch(thunkPostSetting()) as any)\n      .then(() => {\n        // Reload page so PreviousProjectPanel can query again\n        window.location.reload();\n        return void 0;\n      })\n      .catch((e) => console.error(e));\n  };\n\n  const onCheckBoxClick = (): void => {\n    const newCheckboxChecked = !checkboxChecked;\n    setCheckboxChecked(newCheckboxChecked);\n    Axios.patch(`/api/settings/${settingData.id}`, { is_collect_data: newCheckboxChecked })\n      .then(() => {\n        const appInsight = getAppInsights();\n        if (!appInsight) throw Error('App Insight hasnot been initialize');\n        appInsight.config.disableTelemetry = !newCheckboxChecked;\n        return void 0;\n      })\n      .catch((err) => {\n        setCheckboxChecked(checkboxChecked);\n        alert(err);\n      });\n  };\n\n  return (\n    <>\n      <h1>Setting</h1>\n      <Divider color=\"grey\" design={{ paddingBottom: '10px' }} />\n      <Flex gap=\"gap.large\" design={{ height: '80%' }}>\n        <Flex column gap=\"gap.large\" design={{ width: '50%' }}>\n          <Text size=\"large\" weight=\"bold\">\n            Azure Cognitive Services Settings:{' '}\n          </Text>\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: '100px auto 50px',\n              gridTemplateRows: 'auto auto',\n              rowGap: '30px',\n            }}\n          >\n            <Text size=\"large\">Endpoint:</Text>\n            <Input\n              value={settingData.namespace}\n              onChange={(_, { value }): void => {\n                dispatch(updateNamespace(value));\n              }}\n              fluid\n            />\n            <Tooltip\n              trigger={\n                <Button\n                  text\n                  icon={<QuestionCircleIcon />}\n                  iconOnly\n                  onClick={(): void => setIsUserGuideOpen(true)}\n                />\n              }\n              content=\"Where to get Endpoint and Key?\"\n            />\n            <Dialog\n              open={isUserGuideOpen}\n              header=\"Get Endpoint and Key\"\n              content={\n                <Flex column styles={{ maxHeight: '800px', overflow: 'scroll' }}>\n                  <p>\n                    Step 1: Login Custom vision,{' '}\n                    <a href=\"https://www.customvision.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      https://www.customvision.ai/\n                    </a>\n                  </p>\n                  <p>Step 2: Click on the setting icon on the top</p>\n                  <img src=\"guide_step_2.png\" style={{ width: '100%' }} />\n                  <p>\n                    Step 3: Choose the resources under the account, you will see information of\n                    &quot;Key&quot; and &quot;Endpoint&quot;\n                  </p>\n                  <img src=\"guide_step_3.png\" style={{ width: '100%' }} />\n                </Flex>\n              }\n              confirmButton=\"Close\"\n              onConfirm={(): void => setIsUserGuideOpen(false)}\n            />\n            <Text size=\"large\">Key:</Text>\n            <Input\n              value={settingData.key}\n              onChange={(_, { value }): void => {\n                dispatch(updateKey(value));\n              }}\n              fluid\n            />\n          </div>\n          <Flex gap=\"gap.large\">\n            <WarningDialog\n              onConfirm={onSave}\n              trigger={\n                <Button primary disabled={cannotUpdateOrSave || loading} loading={loading}>\n                  {notEmpty ? 'Update' : 'Save'}\n                </Button>\n              }\n              contentText={<p>Update Key / Namespace will remove all the parts, sure you want to update?</p>}\n            />\n            <Button primary as={Link} to=\"/\">\n              Cancel\n            </Button>\n          </Flex>\n          {error ? <Alert danger content={`Failed to save ${error}`} dismissible /> : null}\n        </Flex>\n        {notEmpty && <PreviousProjectPanel settingDataId={settingData.id} />}\n      </Flex>\n      <Divider color=\"grey\" />\n      <Checkbox\n        label=\"Allow to Send Usage Data\"\n        toggle\n        checked={checkboxChecked}\n        onChange={onCheckBoxClick}\n      />\n    </>\n  );\n};\n\nconst initialDropdownItem = [\n  {\n    header: '+ Create New Project',\n    content: {\n      key: 'NEW',\n    },\n  },\n];\n\nconst PreviousProjectPanel: React.FC<{ settingDataId: number }> = ({ settingDataId }) => {\n  const [dropdownItems, setDropdownItems] = useState<DropdownItemProps[]>(initialDropdownItem);\n  const [customVisionProjectId, setCustomVisionProjectId] = useState('');\n  const { isLoading: isProjectLoading, error: projectError, data: projectData } = useProject(false);\n  const [loadFullImages, setLoadFullImages] = useState(false);\n  const [otherLoading, setOtherLoading] = useState(false);\n  const [otherError, setOtherError] = useState<Error>(null);\n  const [createProjectModel, setCreateProjectModel] = useState(false);\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setCustomVisionProjectId(customVisionProjectId);\n    else if (data.value.content.key === initialDropdownItem[0].content.key) setCreateProjectModel(true);\n    else setCustomVisionProjectId(data.value.content.key);\n  };\n\n  const onLoad = (): void => {\n    setOtherLoading(true);\n    Axios.get(\n      `/api/projects/${\n        projectData.id\n      }/pull_cv_project?customvision_project_id=${customVisionProjectId}&partial=${Number(!loadFullImages)}`,\n    )\n      .catch((err) => setOtherError(err))\n      .finally(() => setOtherLoading(false));\n  };\n\n  const onCreateNewProject = (): void => {\n    setOtherLoading(true);\n    Axios.get(`/api/projects/${projectData.id}/reset_project`)\n      .catch((err) => setOtherError(err))\n      .finally(() => setOtherLoading(false));\n  };\n\n  useEffect(() => {\n    if (settingDataId !== -1) {\n      setOtherLoading(true);\n      Axios.get(`/api/settings/${settingDataId}/list_projects`)\n        .then(({ data }) => {\n          const items: DropdownItemProps[] = Object.entries(data).map(([key, value]) => ({\n            header: value,\n            content: {\n              key,\n            },\n          }));\n          setDropdownItems([...initialDropdownItem, ...items]);\n          return void 0;\n        })\n        .catch((e) => setOtherError(e))\n        .finally(() => setOtherLoading(false));\n    }\n  }, [settingDataId]);\n\n  const loading = otherLoading || isProjectLoading;\n  const error = [otherError, projectError].filter((e) => !!e);\n\n  return (\n    <>\n      <Divider color=\"grey\" vertical styles={{ height: '100%' }} />\n      <Flex column gap=\"gap.large\">\n        <Text size=\"large\" weight=\"bold\">\n          Previous Projects:{' '}\n        </Text>\n        <Dropdown items={dropdownItems} onChange={onDropdownChange} />\n        {loadFullImages ? (\n          <Checkbox\n            checked={loadFullImages}\n            label=\"Load Full Images\"\n            onClick={(): void => setLoadFullImages((prev) => !prev)}\n          />\n        ) : (\n          <WarningDialog\n            contentText={<p>Depends on the number of images, loading full images takes time</p>}\n            onConfirm={(): void => setLoadFullImages((prev) => !prev)}\n            trigger={<Checkbox checked={loadFullImages} label=\"Load Full Images\" />}\n          />\n        )}\n        <WarningDialog\n          contentText={<p>Load Project will remove all the parts, sure you want to do that?</p>}\n          onConfirm={onLoad}\n          trigger={\n            <Button primary content=\"Load\" disabled={!customVisionProjectId || loading} loading={loading} />\n          }\n        />\n        <WarningDialog\n          contentText={<p>Create New Project will remove all the parts, sure you want to do that?</p>}\n          open={createProjectModel}\n          onConfirm={() => {\n            onCreateNewProject();\n            setCreateProjectModel(false);\n          }}\n          onCancel={() => {\n            setCreateProjectModel(false);\n            setCustomVisionProjectId(null);\n          }}\n        />\n        {error.length ? <Alert danger content={`Failed to load ${error.join(', ')}`} dismissible /> : null}\n      </Flex>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Project } from '../store/project/projectTypes';\nimport { thunkGetProject } from '../store/project/projectActions';\n\n/**\n * Fetch the project data from server and set to Redux Store\n */\nexport const useProject = (isDemo?: boolean): Project => {\n  const dispatch = useDispatch();\n  const project = useSelector<State, Project>((state) => state.project);\n\n  useEffect(() => {\n    dispatch(thunkGetProject(isDemo));\n  }, [dispatch, isDemo]);\n\n  return project;\n};\n","import React, { useEffect } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../store/State';\nimport { thunkGetSetting } from '../store/setting/settingAction';\n\nexport const PrivateRoute: React.FC<RouteProps> = ({ component, ...rest }) => {\n  const isTrainerValid = useSelector<State, boolean>((state) => state.setting.isTrainerValid);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(thunkGetSetting());\n  }, [dispatch]);\n\n  if (isTrainerValid) return <Route {...rest} component={component} />;\n\n  return <Route {...rest} render={() => <Redirect to=\"/setting\" />} />;\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Cameras from '../pages/Cameras';\nimport CameraDetails from '../pages/CameraDetails';\nimport { PartDetails } from '../pages/PartDetails';\nimport Locations from '../pages/Locations';\nimport LocationRegister from '../pages/LocationRegister';\nimport LocationDetails from '../pages/LocationDetails';\nimport ManualIdentification from '../pages/ManualIdentification';\nimport { Parts } from '../pages/Parts';\nimport { PartIdentification } from '../pages/PartIdentification';\nimport { Setting } from '../pages/Setting';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const RootRouter: FC = () => {\n  return (\n    <Switch>\n      <PrivateRoute path=\"/manual\" component={ManualIdentification} />\n      <PrivateRoute path=\"/locations/register\" component={LocationRegister} />\n      <PrivateRoute path=\"/locations/detail\" component={LocationDetails} />\n      <PrivateRoute path=\"/locations\" component={Locations} />\n      <PrivateRoute path=\"/cameras/detail\" component={CameraDetails} />\n      <PrivateRoute path=\"/cameras\" component={Cameras} />\n      <PrivateRoute path=\"/parts/detail\" component={PartDetails} />\n      <PrivateRoute path=\"/parts\" component={Parts} />\n      <PrivateRoute path=\"/partIdentification\" component={PartIdentification} />\n      <Route path=\"/setting\" component={Setting} />\n      <PrivateRoute path=\"/\" component={Home} />\n    </Switch>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nconst getTitle = (pathname: string): string => {\n  switch (pathname) {\n    case 'cameras':\n      return 'Camera';\n    case 'parts':\n      return 'Part';\n    case 'locations':\n      return 'Location';\n    case 'register':\n      return 'Register';\n    case 'label':\n      return 'Label';\n    case 'manual':\n      return 'Identify Manually';\n    case 'detail':\n      return 'Details';\n    case 'partIdentification':\n      return 'Job Configuration';\n    case 'capturePhotos':\n      return null;\n    case 'uploadPhotos':\n      return null;\n    default:\n      if (typeof pathname === 'string') return 'Details';\n      return null;\n  }\n};\n\nconst Breadcrumb: FC = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/') return <Text color=\"black\">Home</Text>;\n\n  const { pathTitles } = pathname\n    .split('/')\n    .slice(1)\n    .reduce(\n      (acc, cur) => {\n        const title = getTitle(cur);\n        if (!title) return acc;\n\n        const path = `${acc.path}/${cur}`;\n\n        return {\n          pathTitles: [...acc.pathTitles, { title, to: path }],\n          path,\n        };\n      },\n      { pathTitles: [], path: '' },\n    );\n\n  return (\n    <Flex gap=\"gap.smaller\">\n      <Link to={'/'} style={{ color: '#0094d8', textDecoration: 'none' }}>\n        <Text>Home</Text>\n      </Link>\n      {pathTitles.map((e, i, arr) => {\n        // const title = getTitle(e);\n\n        return (\n          <Fragment key={i}>\n            <Text color=\"black\">{'>'}</Text>\n            {i === arr.length - 1 ? (\n              <Text color=\"black\">{e.title}</Text>\n            ) : (\n              <Link to={`${e.to}`} style={{ color: '#0094d8', textDecoration: 'none' }}>\n                <Text>{e.title}</Text>\n              </Link>\n            )}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { memo, FC } from 'react';\nimport { Segment, Image, Flex } from '@fluentui/react-northstar';\nimport { NavLink } from 'react-router-dom';\n\nconst LeftNav: FC<any> = ({ styles }): JSX.Element => {\n  return (\n    <Segment color=\"grey\" inverted styles={{ ...styles, padding: 0, paddingTop: '1em' }}>\n      <Flex column gap=\"gap.large\" hAlign=\"center\">\n        <NavItem src=\"/icons/location.png\" to=\"/locations\"></NavItem>\n        <NavItem src=\"/icons/camera.png\" to=\"/cameras\"></NavItem>\n        <NavItem src=\"/icons/part.png\" to=\"/parts\"></NavItem>\n        <NavItem src=\"/icons/manual.png\" to=\"/manual\"></NavItem>\n        <NavItem src=\"/icons/partIdentification.png\" to=\"/partIdentification\"></NavItem>\n      </Flex>\n    </Segment>\n  );\n};\n\nconst NavItem = ({ src, to }): JSX.Element => {\n  return (\n    <NavLink\n      to={to}\n      style={{ display: 'flex', justifyContent: 'center', padding: '0.8em' }}\n      activeStyle={{ backgroundColor: 'rgba(250, 83, 5, 0.5)' }}\n    >\n      <Image src={src} design={{ width: '100%' }}></Image>\n    </NavLink>\n  );\n};\n\nexport default memo(LeftNav);\n","import React, { FC } from 'react';\nimport { Grid, Segment, Image, Flex, Text, MenuIcon } from '@fluentui/react-northstar';\nimport { NavLink, Link } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport LeftNav from './LeftNav';\n\nexport const MainLayout: React.FC = ({ children }) => {\n  return (\n    <Grid\n      columns=\"60px auto\"\n      rows=\"50px auto\"\n      design={{ height: '100vh' }}\n      styles={{ justifyContent: 'stretch' }}\n    >\n      <TopNav />\n      <LeftNav\n        styles={{\n          gridColumn: '1 / span 1',\n          gridRow: '2 / span 1',\n          boxShadow: '1px 0px 10px 0px rgba(0,0,0,0.75)',\n          zIndex: 1,\n        }}\n      />\n\n      <Segment styles={{ gridColumn: 'span 1', padding: '30px' }}>\n        <Breadcrumb />\n        {children}\n      </Segment>\n    </Grid>\n  );\n};\n\nconst TopNav: FC = () => {\n  return (\n    <Flex\n      space=\"between\"\n      vAlign=\"center\"\n      padding=\"padding.medium\"\n      styles={{\n        backgroundColor: '#0094d8',\n        gridColumn: '1 / span 2',\n        boxShadow: '0px 1px 10px 0px rgba(0,0,0,0.75)',\n        zIndex: 2,\n        fontSize: '20px',\n        padding: '0.5em 1em',\n      }}\n    >\n      <Flex gap=\"gap.large\" vAlign=\"center\">\n        <MenuIcon size=\"large\" styles={{ color: 'white' }} />\n        <NavLink to={'/'} style={{ textDecoration: 'none' }}>\n          <Text color=\"white\">Vision on Edge</Text>\n        </NavLink>\n      </Flex>\n      <Flex vAlign=\"center\" hAlign=\"end\" gap=\"gap.medium\" styles={{ height: '100%' }}>\n        <Link to=\"/setting\" style={{ height: '100%' }}>\n          <Image styles={{ height: '100%' }} src=\"/icons/setting.png\" />\n        </Link>\n        <Text color=\"white\">User</Text>\n      </Flex>\n    </Flex>\n  );\n};\n","import { ThemeInput, mergeThemes, themes } from '@fluentui/react-northstar';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colors: {\n      brand: {\n        '50': '#f3fafd',\n        '100': '#d1ecf9',\n        '200': '#aadcf4',\n        '300': '#5dbce8',\n        '400': '#1ba0dd',\n        '500': '#0094d8',\n        '600': '#0085c3',\n        '700': '#0071a5',\n        '800': '#005379',\n        '900': 'black',\n      },\n    },\n    colorScheme: {\n      brand: {\n        foreground: '#0094d8',\n        background: '#0094d8',\n        border: '#E1DFDD',\n        shadow: '#000',\n        foregroundHover: '#0094d8',\n        backgroundHover: '#0085c3',\n        borderHover: '#5dbce8',\n        shadowHover: '#000',\n        foregroundActive: '#0094d8',\n        backgroundActive: '#0094d8',\n        borderActive: '#E1DFDD',\n        shadowActive: undefined,\n        foregroundFocus: '#0094d8',\n        backgroundFocus: '#0094d8',\n        borderFocus: '#000',\n        shadowFocus: undefined,\n        foregroundPressed: '#0071a5',\n        backgroundPressed: '#0071a5',\n        borderPressed: '#5dbce8',\n        shadowPressed: undefined,\n        foregroundDisabled: '#C8C6C4',\n        backgroundDisabled: '#EDEBE9',\n        borderDisabled: '#EDEBE9',\n        shadowDisabled: undefined,\n        foreground1: '#0094d8',\n        foreground2: '#0085c3',\n        foreground3: '#aadcf4',\n        foreground4: '#fff',\n        background1: '#d1ecf9',\n        background2: '#005379',\n        background3: '#373644',\n        background4: '#0071a5',\n        border1: '#aadcf4',\n        border2: '#5dbce8',\n        foregroundHover1: '#fff',\n        foregroundHover2: '#aadcf4',\n        backgroundHover1: '#f3fafd',\n        foregroundPressed1: '#fff',\n        foregroundActive1: '#0094d8',\n        foregroundActive2: '#aadcf4',\n        backgroundActive1: '#0094d8',\n        borderActive1: '#aadcf4',\n        borderActive2: '#5dbce8',\n        foregroundFocus1: '#0094d8',\n        foregroundFocus2: '#0085c3',\n        foregroundFocus3: '#aadcf4',\n        foregroundFocus4: '#fff',\n        backgroundFocus1: '#d1ecf9',\n        backgroundFocus2: '#005379',\n        backgroundFocus3: '#373644',\n        borderFocusWithin: '#fff',\n        borderFocus1: '#0094d8',\n        foregroundDisabled1: '#C8C6C4',\n        backgroundDisabled1: '#EDEBE9',\n      },\n    },\n  },\n};\n\n/**\n * Primary color is based on #0094d8 and generated by https://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/theming-designer/index.html\n */\nexport const myTheme = mergeThemes(themes.teams, theme);\n","import React, { useEffect, useRef } from 'react';\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\nimport { withRouter } from 'react-router-dom';\n\nimport { ai } from '../TelemetryService';\n\n/**\n * This Component provides telemetry with Azure App Insights\n */\nconst TelemetryProvider: React.FC<any> = ({ instrumentationKey, isAppInsightOn, history, children }) => {\n  const initialized = useRef(false);\n\n  useEffect(() => {\n    const AppInsightsInstrumentationKey = instrumentationKey;\n    if (!initialized.current && Boolean(AppInsightsInstrumentationKey) && Boolean(history)) {\n      ai.initialize(AppInsightsInstrumentationKey, isAppInsightOn, history);\n      initialized.current = true;\n    }\n  }, [history, instrumentationKey, isAppInsightOn]);\n\n  return <>{children}</>;\n};\n\nexport default withRouter(withAITracking(ai.reactPlugin, TelemetryProvider, 'TelemetryProvider'));\n","import React, { FC, useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from '@fluentui/react-northstar';\nimport Axios from 'axios';\nimport { RootRouter } from './routes/RootRouter';\nimport { MainLayout } from './components/MainLayout';\nimport { myTheme } from './theme';\nimport TelemetryProvider from './components/TelemetryProvider';\n\nconst App: FC = (): JSX.Element => {\n  const [appInsightInfo, setAppInsightInfo] = useState({\n    key: '',\n    isAppInsightOn: false,\n  });\n\n  useEffect(() => {\n    const appInsightKey = Axios.get('/api/appinsight/key');\n    const settings = Axios.get('/api/settings/');\n\n    Axios.all([appInsightKey, settings])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: appInsightKeyData } = responses[0];\n          const { data: settingsData } = responses[1];\n\n          if (appInsightKeyData.key)\n            return setAppInsightInfo({\n              key: appInsightKeyData.key,\n              isAppInsightOn: settingsData[0].is_collect_data,\n            });\n          throw new Error('No API Key');\n        }),\n      )\n      .catch((e) => console.error(e));\n  }, []);\n\n  return (\n    <Provider theme={myTheme}>\n      <BrowserRouter>\n        <TelemetryProvider\n          instrumentationKey={appInsightInfo.key}\n          isAppInsightOn={appInsightInfo.isAppInsightOn}\n        >\n          <div className=\"App\">\n            <MainLayout>\n              <RootRouter />\n            </MainLayout>\n          </div>\n        </TelemetryProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/State';\n\nconst { store, persistor } = configureStore(initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading..</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}