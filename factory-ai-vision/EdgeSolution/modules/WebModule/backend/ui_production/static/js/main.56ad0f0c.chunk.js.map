{"version":3,"sources":["store/project/projectTypes.ts","store/part/partReducer.ts","store/labelingPage/labelingPageTypes.ts","store/State.ts","store/camera/cameraReducer.ts","store/camera/cameraTypes.ts","store/part/partTypes.ts","store/labelingPage/labelingPageReducer.ts","components/LiveViewContainer/LiveViewContainer.type.ts","store/location/locationReducer.ts","store/location/locationTypes.ts","store/dialog/dialogIsOpenReducer.ts","store/dialog/dialogIsOpenTypes.ts","store/project/projectReducer.ts","store/image/imageReducer.ts","store/image/imageTypes.ts","store/setting/settingReducer.ts","store/rootReducer.ts","store/index.ts","components/ImageLink.tsx","pages/Home.tsx","store/dialog/dialogIsOpenActions.ts","store/camera/cameraActions.ts","components/AddButton.tsx","components/AddModuleDialog/AddModuleDialog.tsx","pages/Cameras.tsx","components/ConfirmDialog.tsx","components/CameraDetails/CameraDetailInfo.tsx","hooks/useInterval.ts","store/project/projectActions.ts","hooks/useParts.ts","hooks/useQuery.ts","components/LiveViewContainer/LiveViewScene.tsx","components/LabelingPage/util/useImage.ts","components/LiveViewContainer/LiveViewContainer.tsx","components/CameraConfigure/CameraConfigureInfo.tsx","components/CameraConfigure/CreateCameraConfig.tsx","pages/CameraDetails.tsx","components/LabelingPage/util/resizeImage.ts","store/labelingPage/labelingPageActions.ts","components/LabelingPage/Box.tsx","components/LabelingPage/RemoveBoxButton.tsx","components/LabelingPage/Scene.tsx","store/image/imageActions.ts","components/LabelingPage/PrevNextButton.tsx","pages/LabelingPage.tsx","components/LabelingPageDialog.tsx","components/LabelDisplayImage.tsx","components/RTSPVideo/RTSPVideo.tsx","store/part/partActions.ts","util/GetIDFromUrl.ts","util/getFilteredImages.ts","util/formatDropdownValue.ts","components/CapturePhoto/CapturePhotos.tsx","hooks/useCameras.ts","components/UploadPhotos/UploadPhotos.tsx","pages/PartDetails.tsx","store/location/locationActions.ts","pages/Locations.tsx","pages/LocationDetails.tsx","components/ManualIdentification/ImageItem.tsx","components/ManualIdentification/ImagesContainer.tsx","pages/ManualIdentification.tsx","pages/Parts.tsx","TelemetryService.ts","components/WarningDialog/WarningDialog.tsx","pages/PartIdentification.tsx","store/setting/settingAction.ts","pages/Setting.tsx","hooks/useProject.ts","routes/PrivateRoute.tsx","routes/RootRouter.tsx","components/Breadcrumb.tsx","components/MainLayout/LeftNav.tsx","components/MainLayout/MainLayout.tsx","theme.ts","components/TelemetryProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Status","reducer","AnnotationState","LabelingCursorStates","WorkState","LabelingType","initialState","dialogIsOpen","cameras","locations","images","labelingPageState","annotations","part","capturedImages","isValid","project","isLoading","data","id","camera","location","parts","needRetraining","accuracyRangeMin","accuracyRangeMax","maxImages","modelUrl","sendMessageToCloud","framesPerMin","accuracyThreshold","originData","trainingMetrics","prevConsequence","curConsequence","inferenceMetrics","successRate","successfulInferences","unIdetifiedItems","isGpu","averageTime","status","None","error","trainingLog","setting","loading","current","key","namespace","origin","isTrainerValid","camerasReducer","state","action","type","payload","concat","idx","findIndex","e","slice","checkIfImagesCountIsValidToTrain","newCapturedImage","newState","filter","image","labels","length","CreatingState","labelingPageStateReducer","push","annotation","creatingAnnotation","updater","annotationState","Finish","label","x1","x2","y1","y2","pop","index","locationsReducer","dialogIsOpenReducer","projectReducer","newStatus","TrainingFailed","StartInference","labelImagesReducer","updatedImageIdx","settingReducer","cvProjects","pyload","rootReducer","combineReducers","partReducer","persistConfig","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","memo","to","imgSrc","defaultSrc","bgImgSrc","imgPadding","width","height","bgImgStyle","pointerCursor","onClick","Flex","column","styles","style","Image","src","padding","objectFit","backgroundImage","cursor","Text","align","Home","dispatch","useDispatch","gap","size","weight","color","backgroundColor","requestCamerasFailure","console","getCameras","axios","then","getCamerasSuccess","catch","err","AddButton","Button","primary","fluid","circular","content","AddModuleDialog","header","fields","onConfirm","useState","reduce","acc","cur","formData","setFormData","isSubmitDisabled","some","required","Dialog","display","flexDirection","alignItems","confirmButton","disabled","cancelButton","trigger","alignSelf","hAlign","map","Input","placeholder","value","onChange","_","R","TextArea","Cameras","useSelector","is_demo","useEffect","flexFlow","justifyContent","Grid","columns","i","name","backgroundSize","backgroundPosition","backgroundRepeat","newCamera","rtsp","method","postCameraSuccess","ConfirmDialog","primaryStyles","open","setOpen","onOpen","footer","space","deleteCameraSuccess","deleteCamera","useInterval","callback","delay","savedCallback","useRef","setInterval","clearInterval","getTrainingLogSuccess","updateProjectData","projectData","thunkGetProject","isTestModel","url","undefined","Number","Axios","get","parseInt","split","ele","download_uri","metrics_is_send_iothub","metrics_frame_per_minutes","metrics_accuracy_threshold","cvProjectId","customvision_project_id","getProjectSuccess","thunkPostProject","projectId","selectedLocations","selectedParts","selectedCamera","getState","isProjectEmpty","headers","getTrain","thunkGetTrainingLog","Error","log","FinishTraining","WaitTraining","useParts","isDemo","setParts","fetch","res","json","useQuery","URLSearchParams","useLocation","search","getRelativePosition","layer","transform","getAbsoluteTransform","copy","invert","pos","getStage","getPointerPosition","point","LiveViewScene","AOIs","setAOIs","visible","imageInfo","creatingState","setCreatingState","divRef","stageRef","imgRef","layerRef","imgEle","imgWidth","imgHeight","anim","Konva","Animation","start","stop","getBoundingClientRect","divWidth","divHeight","stageWidth","stageHeight","scale","Math","min","x","y","offsetX","offsetY","position","ref","Disabled","onMouseDown","target","getLayer","prev","uniqid","Creating","onMouseMove","rear","onMouseUp","Waiting","AOILayer","holes","box","boundary","onBoxChange","updateBox","newBox","tmp","newAOIs","removeBox","Mask","fill","sceneFunc","ctx","shape","beginPath","moveTo","lineTo","forEach","fillStrokeShape","listening","AOIBox","cancelBtnVisible","setCanceBtnVisible","groupRef","handleDrag","radius","onMouseEnter","onMouseLeave","cache","drawBorder","points","closed","stroke","strokeWidth","draggable","onDragMove","container","defaultState","useImage","crossOrigin","imageState","setImageState","prevUrl","usePrevious","img","document","createElement","onload","onerror","addEventListener","removeEventListener","LiveViewContainer","showVideo","initialAOIData","cameraId","useAOI","showAOI","setShowAOI","lasteUpdatedAOIs","showUpdateSuccessTxt","setShowUpdateSuccessTxt","setLoading","setError","window","hostname","creatingAOI","setCreatingAOI","onCheckboxClick","a","patch","area","JSON","stringify","onUpdate","timer","setTimeout","clearTimeout","hasEdit","updateBtnDisabled","Alert","danger","message","vAlign","Checkbox","labelPosition","toggle","checked","visibility","CameraConfigureInfo","allTrainingLog","useAllTrainingLog","cameraName","history","useHistory","onDeleteConfigure","useCallback","confirm","alert","thunkDeleteProject","CameraConfigStatus","dispacth","new","precision","recall","mAP","previous","getTrainingMetricsSuccess","thunkGetTrainingMetrics","success_rate","inference_num","unidentified_num","gpu","average_time","thunkGetInferenceMetrics","isCameraOnline","includes","Loader","title","online","join","rowGap","fontWeight","round","margin","marginLeft","as","Link","allLogs","setAllLogs","ConsequenceDashboard","ListItem","children","CameraStatus","text","CreateCameraConfig","design","border","CameraDetails","cameraIdInproject","find","hasProject","aoiData","getAOIData","cameraArea","parse","getResizeImageFunction","defaultSize","scaleX","scaleY","requestAnnotationsSuccess","BoxObj","init","attribute","Empty","createWithPoint","p","obj","this","add","newObj","P1Added","setVerticesToValidValue","setVerticesToInt","setVerticesPointsOrder","object","Box2d","workState","onSelect","selected","annotationIndex","changeCursorState","vertices","setVertices","anchorRadius","boxRef","dispatchLabel","newAnnotation","updateAnnotation","mouseMoveListener","evt","onDragAnchor","xi","yi","getSize","setAttr","anotherPosXArr","anotherPosYArr","splice","xx","yy","nwseResize","neswResize","prevVertices","on","off","cancelBubble","onDragEnd","imageSize","setShowOuterRemoveButton","setColor","setStrokeWidth","pointer","Scene","labelingType","setWorkState","resizeImage","setImageSize","noMoreCreate","useMemo","SingleAnnotation","default","cursorState","setCursorState","selectedAnnotationIndex","setSelectedAnnotationIndex","showOuterRemoveButton","isDragging","setIsDragging","cursorType","crosshair","removeAnnotation","Selecting","outcomeSize","outcomeScale","iconOnly","onDragStart","fontSize","requestLabelImagesFailure","getLabelImages","getLabelImagesSuccess","postLabelImage","newImage","saveLabelImageAnnotation","imageId","info","updateLabelImageAnnotation","PrevNextButton","isRelabel","prevDisabled","nextDisabled","onPrevClick","onNextClick","icon","checkOnePointBox","LabelingPage","imageIndex","closeDialog","setIndex","isOnePointBox","imageUrl","parsedLabels","getAnnotations","annotationToShape","imgScale","edge","Line","Circle","labelImage","labelText","stage","imgSize","shapes","useLayoutEffect","querySelector","offsetWidth","offsetHeight","Stage","FastLayer","newShapes","destroy","j","draw","RTSPVideo","React","partId","canCapture","onVideoStart","onVideoPause","streamId","setStreamId","onDisconnect","response","stream_id","thunkAddCapturedImages","ImageBtn","Tooltip","getIdFromUrl","getFilteredImages","is_relabel","formatDropdownValue","Array","isArray","CapturePhotos","setSelectedCamera","CameraSelector","availableCameras","useCameras","items","Dropdown","newSelectedCamera","CapturedImagesContainer","filteredImages","imageCount","overflow","borderColor","arr","when","UploadPhotos","files","FormData","append","accept","multiple","gridGap","justifyItems","PartDetails","gridColumnGap","LeftPanel","setName","description","setDescription","gridColumn","newProps","dismissible","RightPanel","path","Tab","pathname","activeIndex","Menu","pointing","requestLocationsFailure","Locations","getLocationsSuccess","newLocation","postLocationSuccess","LocationDetails","Divider","paddingTop","minHeight","confidenceLevel","relabelImages","setJudgedImageList","partItems","isPartCorrect","filteredPartItems","selectedPartItem","setSelectedPartItem","flex","truncated","RadioGroup","checkedValue","onCheckedValueChange","next","judgedImageList","selectedPartId","borderWidth","borderStyle","ManualIdentification","confidenceLevelRange","setConfidenceLevelRange","ascend","setAscend","sortRef","sorted","prevIsAscend","setRelabelImages","confidence","reverse","sort","b","columnGap","allowCross","handle","dragging","restProps","prefixCls","overlay","placement","minWidth","maxWidth","relabelImage","judgedImage","imgInList","Parts","partsAPI","imagesAPI","all","spread","partsRes","wrap","right","bottom","Item","reactPlugin","appInsights","ai","initialize","instrumentationKey","isAppInsightOn","browserHistory","ReactPlugin","ApplicationInsights","config","maxBatchInterval","disableFetchTracking","disableTelemetry","extensions","extensionConfig","identifier","loadAppInsights","getAppInsights","WarningDialog","onCancel","contentText","theme","siteVariables","colorScheme","brand","foreground","sendTrainInfoToAppInsight","selectedPartIds","interestedImagesLength","appInsight","trackEvent","properties","source","PartIdentification","maxImage","setIsTestModel","useDropdownItems","cameraLoading","dropDownCameras","setSelectedCameraById","partLoading","dropDownParts","setSelectedPartsById","locationLoading","dropDownLocations","setSelectedLocationById","maxImgCountError","setMaxImgCountError","handleSubmitConfigure","setData","keyName","accracyRangeDisabled","messageToCloudDisabled","moduleName","setSelectedModuleItem","isMultiple","inline","TestModelButton","originItems","dropDownItems","setDropDownItems","selectedItem","setSelectedItem","finally","correspondedItems","correspondedItem","toString","ModuleSelector","ids","settingSuccess","settingFailed","thunkGetSetting","training_key","endpoint","is_trainer_valid","is_collect_data","thunkGetAllCvProjects","settingId","request","Setting","settingData","originSettingData","checkboxChecked","setCheckboxChecked","isUserGuideOpen","setIsUserGuideOpen","otherError","setOtherError","notEmpty","cannotUpdateOrSave","isCollectData","paddingBottom","gridTemplateColumns","gridTemplateRows","maxHeight","href","rel","getStore","isSettingEmpty","requestConfig","iot_hub_connection_string","device_id","module_id","reload","newCheckboxChecked","initialDropdownItem","PreviousProjectPanel","useProject","isProjectLoading","projectError","loadFullImages","setLoadFullImages","otherLoading","setOtherLoading","createProjectModel","setCreateProjectModel","projectName","setProjectName","successDialog","setSuccessDialog","onCreateNewProject","didCancel","dropdownItems","Object","entries","selectedDropdownItems","vertical","success","PrivateRoute","component","rest","render","RootRouter","Breadcrumb","pathTitles","getTitle","textDecoration","NavItem","activeStyle","Segment","inverted","MainLayout","rows","gridRow","boxShadow","zIndex","TopNav","colors","background","shadow","foregroundHover","backgroundHover","borderHover","shadowHover","foregroundActive","backgroundActive","borderActive","shadowActive","foregroundFocus","backgroundFocus","borderFocus","shadowFocus","foregroundPressed","backgroundPressed","borderPressed","shadowPressed","foregroundDisabled","backgroundDisabled","borderDisabled","shadowDisabled","foreground1","foreground2","foreground3","foreground4","background1","background2","background3","background4","border1","border2","foregroundHover1","foregroundHover2","backgroundHover1","foregroundPressed1","foregroundActive1","foregroundActive2","backgroundActive1","borderActive1","borderActive2","foregroundFocus1","foregroundFocus2","foregroundFocus3","foregroundFocus4","backgroundFocus1","backgroundFocus2","backgroundFocus3","borderFocusWithin","borderFocus1","foregroundDisabled1","backgroundDisabled1","myTheme","mergeThemes","themes","teams","withRouter","withAITracking","initialized","AppInsightsInstrumentationKey","Boolean","App","appInsightInfo","setAppInsightInfo","appInsightKey","settings","appInsightKeyData","settingsData","Provider","className","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56ad0f0c.chunk.js","sourcesContent":["import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport type { State } from '../State';\n\nexport type Project = {\n  isLoading: boolean;\n  trainingLog: string;\n  data: ProjectData;\n  originData: ProjectData;\n  inferenceMetrics: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n    isGpu: boolean;\n    averageTime: number;\n  };\n  trainingMetrics: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n  status: Status;\n  error: Error;\n};\n\nexport enum Status {\n  None = 'none',\n  WaitTraining = 'waitTraining',\n  FinishTraining = 'finishTraining',\n  TrainingFailed = 'trainingFailed',\n  StartInference = 'startInference',\n}\n\nexport type Consequence = {\n  precision: number;\n  recall: number;\n  mAP: number;\n};\n\nexport type ProjectData = {\n  id: number;\n  camera: any;\n  location: any;\n  parts: any[];\n  needRetraining: boolean;\n  accuracyRangeMin: number;\n  accuracyRangeMax: number;\n  maxImages: number;\n  sendMessageToCloud: boolean;\n  framesPerMin: number;\n  accuracyThreshold: number;\n  modelUrl: string;\n  cvProjectId?: string;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_PROJECT_REQUEST = 'GET_PROJECT_REQUEST';\nexport type GetProjectRequestAction = {\n  type: typeof GET_PROJECT_REQUEST;\n};\n\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\nexport type GetProjectSuccessAction = {\n  type: typeof GET_PROJECT_SUCCESS;\n  payload: {\n    project: ProjectData;\n  };\n};\n\nexport const GET_PROJECT_FAILED = 'GET_PROJECT_FAILED';\nexport type GetProjectFailedAction = {\n  type: typeof GET_PROJECT_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_LOG_REQUEST = 'GET_TRAINING_LOG_REQUEST';\nexport type GetTrainingLogRequesAction = {\n  type: typeof GET_TRAINING_LOG_REQUEST;\n};\n\nexport const GET_TRAINING_LOG_SUCCESS = 'GET_TRAINING_LOG_SUCCESS';\nexport type GetTrainingLogSuccessAction = {\n  type: typeof GET_TRAINING_LOG_SUCCESS;\n  payload: {\n    trainingLog: string;\n    newStatus: Status;\n  };\n};\n\nexport const GET_TRAINING_LOG_FAILED = 'GET_TRAINING_LOG_FAILED';\nexport type GetTrainingLogFailedAction = {\n  type: typeof GET_TRAINING_LOG_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_METRICS_REQUEST = 'GET_TRAINING_METRICS_REQUEST';\nexport type GetTrainingMetricsRequestAction = {\n  type: typeof GET_TRAINING_METRICS_REQUEST;\n};\n\nexport const GET_TRAINING_METRICS_SUCCESS = 'GET_TRAINING_METRICS_SUCCESS';\nexport type GetTrainingMetricsSuccessAction = {\n  type: typeof GET_TRAINING_METRICS_SUCCESS;\n  payload: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n};\n\nexport const GET_TRAINING_METRICS_FAILED = 'GET_TRAINING_METRICS_FAILED';\nexport type GetTrainingMetricsFailedAction = {\n  type: typeof GET_TRAINING_METRICS_FAILED;\n  error: Error;\n};\n\nexport const GET_INFERENCE_METRICS_REQUEST = 'GET_TRAINING_INFERENCE_REQUEST';\nexport type GetInferenceMetricsRequestAction = {\n  type: typeof GET_INFERENCE_METRICS_REQUEST;\n};\n\nexport const GET_INFERENCE_METRICS_SUCCESS = 'GET_INFERENCE_METRICS_SUCCESS';\nexport type GetInferenceMetricsSuccessAction = {\n  type: typeof GET_INFERENCE_METRICS_SUCCESS;\n  payload: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n    isGpu: boolean;\n    averageTime: number;\n  };\n};\n\nexport const GET_INFERENCE_METRICS_FAILED = 'GET_INFERENCE_METRICS_FAILED';\nexport type GetInferenceMetricsFailedAction = {\n  type: typeof GET_INFERENCE_METRICS_FAILED;\n  error: Error;\n};\n\nexport const POST_PROJECT_REQUEST = 'POST_PROJECT_REQUEST';\nexport type PostProjectRequestAction = {\n  type: typeof POST_PROJECT_REQUEST;\n};\n\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\nexport type PostProjectSuccessAction = {\n  type: typeof POST_PROJECT_SUCCESS;\n};\n\nexport const POST_PROJECT_FALIED = 'POST_PROJECT_FALIED';\nexport type PostProjectFaliedAction = {\n  type: typeof POST_PROJECT_FALIED;\n  error: Error;\n};\n\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport type DeleteProjectSuccessAction = {\n  type: typeof DELETE_PROJECT_SUCCESS;\n};\n\nexport const DELETE_PROJECT_FALIED = 'DELETE_PROJECT_FALIED';\nexport type DeleteProjectFaliedAction = {\n  type: typeof DELETE_PROJECT_FALIED;\n};\n\nexport const UPDATE_PROJECT_DATA = 'UPDATE_PROJECT_DATA';\nexport type UpdateProjectDataAction = {\n  type: typeof UPDATE_PROJECT_DATA;\n  payload: ProjectData;\n};\n\nexport const UPDATE_ORIGIN_PROJECT_DATA = 'UPDATE_ORIGIN_PROJECT_DATA';\nexport type UpdateOriginProjectDataAction = {\n  type: typeof UPDATE_ORIGIN_PROJECT_DATA;\n};\n\nexport const START_INFERENCE = 'START_INFERENCE';\nexport type StartInferenceAction = {\n  type: typeof START_INFERENCE;\n};\n\nexport const STOP_INFERENCE = 'STOP_INFERENCE';\nexport type StopInferenceAction = {\n  type: typeof STOP_INFERENCE;\n};\n\nexport type ProjectActionTypes =\n  | GetProjectRequestAction\n  | GetProjectSuccessAction\n  | GetProjectFailedAction\n  | GetTrainingLogRequesAction\n  | GetTrainingLogSuccessAction\n  | GetTrainingLogFailedAction\n  | PostProjectRequestAction\n  | PostProjectSuccessAction\n  | PostProjectFaliedAction\n  | DeleteProjectSuccessAction\n  | DeleteProjectFaliedAction\n  | UpdateProjectDataAction\n  | UpdateOriginProjectDataAction\n  | GetTrainingMetricsRequestAction\n  | GetTrainingMetricsSuccessAction\n  | GetTrainingMetricsFailedAction\n  | GetInferenceMetricsRequestAction\n  | GetInferenceMetricsSuccessAction\n  | GetInferenceMetricsFailedAction\n  | StartInferenceAction\n  | StopInferenceAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type ProjectThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, Action<string>>;\n","import { initialState } from '../State';\nimport {\n  PartActionTypes,\n  ADD_CAPTURED_IMAGE,\n  Part,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\n\nconst partReducer = (state = initialState.part, action: PartActionTypes): Part => {\n  switch (action.type) {\n    case ADD_CAPTURED_IMAGE:\n      return { ...state, capturedImages: [...state.capturedImages, action.payload.newCapturedImage] };\n    case UPDATE_CAPTURED_IMAGES:\n      return { ...state, capturedImages: action.payload.capturedImages };\n    default:\n      return state;\n  }\n};\n\ntype PartReducerType = typeof partReducer;\nconst checkIfImagesCountIsValidToTrain = (reducer: PartReducerType) => (\n  state = initialState.part,\n  action: PartActionTypes,\n): Part => {\n  const newState = reducer(state, action);\n  const isValid = newState.capturedImages.filter((image) => image.labels).length >= 15;\n  return { ...newState, isValid };\n};\n\nexport default checkIfImagesCountIsValidToTrain(partReducer);\n","// * Request Operation\nexport const REQUEST_ANNOTATION_FAILURE = 'REQUEST_ANNOTATION_FAILURE';\nexport type RequestAnnotationSuccessAction = { type: typeof REQUEST_ANNOTATION_SUCCESS; payload: any };\nexport const REQUEST_ANNOTATION_SUCCESS = 'REQUEST_ANNOTATION_SUCCESS';\nexport type RequestAnnotationFailureAction = { type: typeof REQUEST_ANNOTATION_FAILURE };\n\n// * Store Operation\nexport const CREATE_ANNOTATION = 'CREATE_ANNOTATION';\nexport type CreateAnnotationAction = { type: typeof CREATE_ANNOTATION; payload: { annotation: Annotation } };\nexport const UPDATE_CREATING_ANNOTATION = 'UPDATE_CREATING_ANNOTATION';\nexport type UpdateCreatingAnnotationAction = {\n  type: typeof UPDATE_CREATING_ANNOTATION;\n  payload: { updater: (annotation: Annotation) => Annotation };\n};\nexport const UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nexport type UpdateAnnotationAction = {\n  type: typeof UPDATE_ANNOTATION;\n  payload: { annotation: Annotation; index: number };\n};\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport type RemoveAnnotationAction = {\n  type: typeof REMOVE_ANNOTATION;\n  payload: { index: number };\n};\nexport const RESET_ANNOTATION = 'RESET_ANNOTATION';\nexport type ResetAnnotationAction = {\n  type: typeof RESET_ANNOTATION;\n};\n\nexport type AnnotationAction =\n  | RequestAnnotationSuccessAction\n  | RequestAnnotationFailureAction\n  | CreateAnnotationAction\n  | UpdateCreatingAnnotationAction\n  | UpdateAnnotationAction\n  | RemoveAnnotationAction\n  | ResetAnnotationAction;\n\nexport type Position2D = {\n  x: number;\n  y: number;\n};\nexport type BoxLabel = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\nexport type Size2D = { width: number; height: number };\nexport type Annotation = {\n  id: number;\n  label: BoxLabel;\n  attribute: string;\n  annotationState: AnnotationState;\n};\n\nexport enum AnnotationState {\n  Empty = 'Empty',\n  P1Added = 'P1Added',\n  Finish = 'Finish',\n}\n\nexport enum LabelingCursorStates {\n  default = 'default',\n  pointer = 'pointer',\n  crosshair = 'crosshair',\n  neswResize = 'nesw-resize',\n  nwseResize = 'nwse-resize',\n}\nexport interface Box2dComponentProps {\n  workState: WorkState;\n  scale: number;\n  onSelect: Function;\n  annotation: Annotation;\n  annotationIndex: number;\n  selected: boolean;\n  visible?: boolean;\n  dispatch: any;\n  changeCursorState?: (cursorType?: LabelingCursorStates) => void;\n  // instanceID: number;\n}\nexport type BoxObject = {\n  init: () => Annotation;\n  createWithPoint: (point: Position2D, attribute: string) => Annotation;\n  add: (point: Position2D, arg1: Annotation) => Annotation;\n  setVerticesToValidValue: (arg0: Annotation) => Annotation;\n  setVerticesToInt: (arg0: Annotation) => Annotation;\n  setVerticesPointsOrder: (arg0: Annotation) => Annotation;\n};\n\nexport enum WorkState {\n  Creating = 'Creating',\n  Selecting = 'Selecting',\n  None = 'None',\n}\n\nexport enum LabelingType {\n  SingleAnnotation = 0,\n  MultiAnnotation = 1,\n}\n","import { Annotation } from './labelingPage/labelingPageTypes';\nimport { Camera } from './camera/cameraTypes';\nimport { Part } from './part/partTypes';\nimport { Location } from './location/locationTypes';\nimport { Project, Status } from './project/projectTypes';\nimport { LabelImage } from './image/imageTypes';\nimport { Setting } from './setting/settingType';\n\nexport interface State {\n  dialogIsOpen: boolean;\n  cameras: Camera[];\n  locations: Location[];\n  labelingPageState: LabelingPageState;\n  part: Part;\n  project: Project;\n  images: LabelImage[];\n  setting: Setting;\n}\n\nexport type LabelingPageState = { annotations: Annotation[] };\n\nexport const initialState: State = {\n  dialogIsOpen: false,\n  cameras: [],\n  locations: [],\n  images: [],\n  labelingPageState: { annotations: [] },\n  part: {\n    capturedImages: [],\n    isValid: true,\n  },\n  project: {\n    isLoading: false,\n    data: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 20,\n      modelUrl: '',\n      sendMessageToCloud: false,\n      framesPerMin: 6,\n      accuracyThreshold: 50,\n    },\n    originData: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 50,\n      modelUrl: '',\n      sendMessageToCloud: false,\n      framesPerMin: 6,\n      accuracyThreshold: 50,\n    },\n    trainingMetrics: {\n      prevConsequence: null,\n      curConsequence: null,\n    },\n    inferenceMetrics: {\n      successRate: null,\n      successfulInferences: null,\n      unIdetifiedItems: null,\n      isGpu: false,\n      averageTime: null,\n    },\n    status: Status.None,\n    error: null,\n    trainingLog: '',\n  },\n  setting: {\n    loading: false,\n    error: null,\n    current: {\n      id: -1,\n      key: '',\n      namespace: '',\n    },\n    origin: {\n      id: -1,\n      key: '',\n      namespace: '',\n    },\n    isTrainerValid: false,\n  },\n};\n","import {\n  GET_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  POST_CAMERA_SUCCESS,\n  Camera,\n  CameraAction,\n  DELETE_CAMERA_SUCCESS,\n} from './cameraTypes';\nimport { initialState } from '../State';\n\nconst camerasReducer = (state = initialState.cameras, action: CameraAction): Camera[] => {\n  switch (action.type) {\n    case GET_CAMERA_SUCCESS:\n      return action.payload;\n    case REQUEST_CAMERA_FAILURE:\n      return state;\n    case POST_CAMERA_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_CAMERA_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default camerasReducer;\n","// Describing the shape of the camera's slice of state\nexport type Camera = {\n  id?: number;\n  name: string;\n  rtsp: string;\n  area?: string;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_CAMERA_SUCCESS = 'GET_CAMERA_SUCCESS';\nexport const POST_CAMERA_SUCCESS = 'POST_CAMERA_SUCCESS';\nexport const DELETE_CAMERA_SUCCESS = 'DELETE_CAMERA_SUCCESS';\nexport const REQUEST_CAMERA_FAILURE = 'REQUEST_CAMERA_FAILURE';\n\nexport type GetCamerasSuccess = { type: typeof GET_CAMERA_SUCCESS; payload: Camera[] };\nexport type PostCameraSuccess = { type: typeof POST_CAMERA_SUCCESS; payload: Camera };\nexport type DeleteCameraSuccess = { type: typeof DELETE_CAMERA_SUCCESS; payload: { id: number } };\nexport type RequestCamerasFailure = { type: typeof REQUEST_CAMERA_FAILURE };\n\nexport type CameraAction =\n  | GetCamerasSuccess\n  | PostCameraSuccess\n  | DeleteCameraSuccess\n  | RequestCamerasFailure;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { LabelImage } from '../image/imageTypes';\n\n// Describing the shape of the chat's slice of state\nexport type Part = { capturedImages: LabelImage[]; isValid: boolean };\n\n// Describing the different ACTION NAMES available\nexport const ADD_CAPTURED_IMAGE = 'ADD_CAPTURED_IMAGE';\n\nexport type AddCapturedImageAction = {\n  type: typeof ADD_CAPTURED_IMAGE;\n  payload: {\n    newCapturedImage: LabelImage;\n  };\n};\n\nexport const UPDATE_CAPTURED_IMAGES = 'UPDATE_CAPTURED_IMAGES';\n\nexport type UpdateCapturedImageAction = {\n  type: typeof UPDATE_CAPTURED_IMAGES;\n  payload: {\n    capturedImages: LabelImage[];\n  };\n};\n\nexport type PartActionTypes = AddCapturedImageAction | UpdateCapturedImageAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type PartThunk<ReturnType = void> = ThunkAction<ReturnType, Part, unknown, Action<string>>;\n","import {\n  AnnotationState,\n  UPDATE_ANNOTATION,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  REMOVE_ANNOTATION,\n  AnnotationAction,\n  RESET_ANNOTATION,\n} from './labelingPageTypes';\nimport { initialState, LabelingPageState } from '../State';\n\nconst labelingPageStateReducer = (\n  state = initialState.labelingPageState,\n  action: AnnotationAction,\n): LabelingPageState => {\n  const newState = state;\n  switch (action.type) {\n    case REQUEST_ANNOTATION_SUCCESS:\n      newState.annotations = action.payload.annotations;\n      break;\n    case REQUEST_ANNOTATION_FAILURE:\n      break;\n    case CREATE_ANNOTATION:\n      newState.annotations.push(action.payload.annotation);\n      break;\n    case UPDATE_CREATING_ANNOTATION:\n      {\n        const creatingAnnotation = action.payload.updater(\n          newState.annotations[newState.annotations.length - 1],\n        );\n\n        if (creatingAnnotation.annotationState === AnnotationState.Finish) {\n          if (\n            (creatingAnnotation.label.x1 | 0) === (creatingAnnotation.label.x2 | 0) &&\n            (creatingAnnotation.label.y1 | 0) === (creatingAnnotation.label.y2 | 0)\n          ) {\n            newState.annotations.pop();\n          } else {\n            newState.annotations[newState.annotations.length - 1] = creatingAnnotation;\n            newState.annotations = [...newState.annotations];\n          }\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION:\n      newState.annotations[action.payload.index] = action.payload.annotation;\n      break;\n    case REMOVE_ANNOTATION:\n      newState.annotations = newState.annotations\n        .slice(0, action.payload.index)\n        .concat(newState.annotations.slice(action.payload.index + 1));\n      break;\n    case RESET_ANNOTATION:\n      newState.annotations = initialState.labelingPageState.annotations;\n      break;\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport default labelingPageStateReducer;\n","import { Dispatch, SetStateAction } from 'react';\nimport { Box } from '../../type';\n\nexport enum CreatingState {\n  Disabled,\n  Waiting,\n  Creating,\n}\n\nexport type LiveViewProps = {\n  AOIs: Box[];\n  setAOIs: Dispatch<SetStateAction<Box[]>>;\n  visible: boolean;\n  imageInfo: [HTMLImageElement, string, { width: number; height: number }];\n  creatingState: CreatingState;\n  setCreatingState: Dispatch<SetStateAction<CreatingState>>;\n};\n\nexport type AOILayerProps = {\n  imgWidth: number;\n  imgHeight: number;\n  AOIs: Box[];\n  setAOIs: Dispatch<SetStateAction<Box[]>>;\n  visible: boolean;\n  creatingState: CreatingState;\n};\n\nexport type MaskProps = {\n  width: number;\n  height: number;\n  holes: Box[];\n  visible: boolean;\n};\n\nexport type AOIBoxProps = {\n  box: Box;\n  onBoxChange: (updateBox: (prevBox: Box) => Box) => void;\n  boundary: { x1: number; y1: number; x2: number; y2: number };\n  visible: boolean;\n  removeBox: (id: string) => void;\n  creatingState: CreatingState;\n};\n","import {\n  GET_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  POST_LOCATION_SUCCESS,\n  Location,\n  LocationAction,\n} from './locationTypes';\nimport { initialState } from '../State';\n\nconst locationsReducer = (state = initialState.locations, action: LocationAction): Location[] => {\n  switch (action.type) {\n    case GET_LOCATION_SUCCESS:\n      return action.payload;\n    case REQUEST_LOCATION_FAILURE:\n      return state;\n    case POST_LOCATION_SUCCESS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default locationsReducer;\n","// Describing the shape of the loaction's slice of state\nexport type Location = {\n  id?: number;\n  name: string;\n  description: string;\n  projectId?: number;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const REQUEST_LOCATION_FAILURE = 'REQUEST_LOCATION_FAILURE';\nexport const POST_LOCATION_SUCCESS = 'POST_LOCATION_SUCCESS';\n\nexport type GetLocationsSuccess = { type: typeof GET_LOCATION_SUCCESS; payload: Location[] };\nexport type RequestLocationsFailure = { type: typeof REQUEST_LOCATION_FAILURE };\nexport type PostLocationSuccess = { type: typeof POST_LOCATION_SUCCESS; payload: Location };\n\nexport type LocationAction = GetLocationsSuccess | RequestLocationsFailure | PostLocationSuccess;\n","import {\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n  DialogIsOpenAction,\n} from './dialogIsOpenTypes';\nimport { initialState } from '../State';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import { initialState } from '../State';\nimport {\n  Project,\n  ProjectActionTypes,\n  GET_PROJECT_SUCCESS,\n  GET_PROJECT_FAILED,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FALIED,\n  GET_PROJECT_REQUEST,\n  UPDATE_PROJECT_DATA,\n  POST_PROJECT_REQUEST,\n  GET_TRAINING_LOG_REQUEST,\n  GET_TRAINING_LOG_SUCCESS,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GET_TRAINING_METRICS_REQUEST,\n  GET_TRAINING_METRICS_SUCCESS,\n  GET_TRAINING_METRICS_FAILED,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GET_INFERENCE_METRICS_FAILED,\n  UPDATE_ORIGIN_PROJECT_DATA,\n} from './projectTypes';\n\nconst projectReducer = (state = initialState.project, action: ProjectActionTypes): Project => {\n  switch (action.type) {\n    case GET_PROJECT_REQUEST:\n      return { ...state, isLoading: true, error: null };\n    case GET_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: { ...action.payload.project },\n        originData: { ...action.payload.project },\n        error: null,\n      };\n    case GET_PROJECT_FAILED:\n      return { ...state, isLoading: false, error: action.error };\n    case POST_PROJECT_REQUEST:\n      return { ...state, isLoading: true };\n    case POST_PROJECT_SUCCESS:\n      return { ...state, isLoading: false };\n    case POST_PROJECT_FALIED:\n      return { ...state, isLoading: false, error: action.error };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n          sendMessageToCloud: false,\n          framesPerMin: 6,\n          accuracyThreshold: 50,\n        },\n        originData: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n          sendMessageToCloud: false,\n          framesPerMin: 6,\n          accuracyThreshold: 50,\n        },\n        inferenceMetrics: {\n          successRate: 0,\n          successfulInferences: 0,\n          unIdetifiedItems: 0,\n          isGpu: false,\n          averageTime: 0,\n        },\n        trainingMetrics: {\n          curConsequence: null,\n          prevConsequence: null,\n        },\n        trainingLog: '',\n        status: Status.None,\n        error: null,\n      };\n    case DELETE_PROJECT_FALIED:\n      return { ...state };\n    case UPDATE_PROJECT_DATA:\n      return { ...state, data: action.payload };\n    case UPDATE_ORIGIN_PROJECT_DATA:\n      return { ...state, originData: state.data };\n    case GET_TRAINING_LOG_REQUEST:\n      return {\n        ...state,\n      };\n    case GET_TRAINING_LOG_SUCCESS:\n      return {\n        ...state,\n        trainingLog: action.payload.trainingLog,\n        status: action.payload.newStatus,\n      };\n    case GET_TRAINING_LOG_FAILED:\n      return {\n        ...state,\n        trainingLog: '',\n        data: { ...state.data },\n        status: Status.TrainingFailed,\n        error: action.error,\n      };\n    case GET_TRAINING_METRICS_REQUEST:\n      return state;\n    case GET_TRAINING_METRICS_SUCCESS:\n      return {\n        ...state,\n        trainingMetrics: action.payload,\n        status: Status.StartInference,\n      };\n    case GET_TRAINING_METRICS_FAILED:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case GET_INFERENCE_METRICS_REQUEST:\n      return state;\n    case GET_INFERENCE_METRICS_SUCCESS:\n      return { ...state, inferenceMetrics: action.payload };\n    case GET_INFERENCE_METRICS_FAILED:\n      return { ...state, error: action.error };\n    default:\n      return { ...state };\n  }\n};\n\nexport default projectReducer;\n","import {\n  GET_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  POST_LABEL_IMAGE_SUCCESS,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  LabelImageAction,\n  LabelImage,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n} from './imageTypes';\nimport { initialState } from '../State';\n\nconst labelImagesReducer = (state = initialState.images, action: LabelImageAction): LabelImage[] => {\n  switch (action.type) {\n    case GET_LABEL_IMAGE_SUCCESS:\n      return action.payload;\n    case REQUEST_LABEL_IMAGE_FAILURE:\n      return state;\n    case POST_LABEL_IMAGE_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_LABEL_IMAGE_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    case UPDATE_LABEL_IMAGE_ANNOTATION: {\n      const newState = [...state];\n      const updatedImageIdx = newState.findIndex((e) => e.id === action.payload.id);\n      newState[updatedImageIdx] = {\n        ...newState[updatedImageIdx],\n        labels: action.payload.labels,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default labelImagesReducer;\n","// Describe the shape of the labelImage's slice of state\nexport type LabelImage = {\n  id: number;\n  image: string;\n  labels: string;\n  part: string;\n  is_relabel: boolean;\n  confidence: number;\n};\n\n// Describe the different ACTION NAMES available\nexport const GET_LABEL_IMAGE_SUCCESS = 'GET_LABEL_IMAGE_SUCCESS';\nexport const POST_LABEL_IMAGE_SUCCESS = 'POST_LABEL_IMAGE_SUCCESS';\nexport const DELETE_LABEL_IMAGE_SUCCESS = 'DELETE_LABEL_IMAGE_SUCCESS';\nexport const REQUEST_LABEL_IMAGE_FAILURE = 'REQUEST_LABEL_IMAGE_FAILURE';\nexport const UPDATE_LABEL_IMAGE_ANNOTATION = 'UPDATE_LABEL_IMAGE_ANNOTATION';\n\nexport type GetLabelImagesSuccess = { type: typeof GET_LABEL_IMAGE_SUCCESS; payload: LabelImage[] };\nexport type PostLabelImageSuccess = { type: typeof POST_LABEL_IMAGE_SUCCESS; payload: LabelImage };\nexport type DeleteLabelImageSuccess = { type: typeof DELETE_LABEL_IMAGE_SUCCESS; payload: { id: number } };\nexport type RequestLabelImagesFailure = { type: typeof REQUEST_LABEL_IMAGE_FAILURE };\nexport type UpdateLabelImageAnnotation = {\n  type: typeof UPDATE_LABEL_IMAGE_ANNOTATION;\n  payload: { id: number; labels: any };\n};\n\nexport type LabelImageAction =\n  | GetLabelImagesSuccess\n  | PostLabelImageSuccess\n  | DeleteLabelImageSuccess\n  | RequestLabelImagesFailure\n  | UpdateLabelImageAnnotation;\n","import { initialState } from '../State';\nimport { SettingActionType, Setting } from './settingType';\n\nconst settingReducer = (state = initialState.setting, action: SettingActionType): Setting => {\n  switch (action.type) {\n    case 'UPDATE_KEY':\n      return { ...state, current: { ...state.current, key: action.payload } };\n    case 'UPDATE_NAMESPACE':\n      return { ...state, current: { ...state.current, namespace: action.payload } };\n    case 'REQUEST_START':\n      return { ...state, loading: true };\n    case 'REQUEST_SUCCESS':\n      return action.payload;\n    case 'REQUEST_FAIL':\n      return { ...state, error: action.error };\n    case 'GET_ALL_CV_PROJECTS_REQUEST':\n      return { ...state, loading: true };\n    case 'GET_ALL_CV_PROJECTS_SUCCESS':\n      return { ...state, loading: false, cvProjects: action.pyload };\n    case 'GET_ALL_CV_PROJECTS_ERROR':\n      return { ...state, loading: false, error: action.error };\n    default:\n      return state;\n  }\n};\n\nexport default settingReducer;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport camerasReducer from './camera/cameraReducer';\nimport partReducer from './part/partReducer';\nimport labelingPageStateReducer from './labelingPage/labelingPageReducer';\nimport locationsReducer from './location/locationReducer';\nimport dialogIsOpenReducer from './dialog/dialogIsOpenReducer';\nimport projectReducer from './project/projectReducer';\nimport labelImagesReducer from './image/imageReducer';\nimport settingReducer from './setting/settingReducer';\n\nconst rootReducer = combineReducers({\n  cameras: camerasReducer,\n  locations: locationsReducer,\n  part: partReducer,\n  labelingPageState: labelingPageStateReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  project: projectReducer,\n  images: labelImagesReducer,\n  setting: settingReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State } from './State';\nimport { persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React, { FC, memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex, Text, Image } from '@fluentui/react-northstar';\n\ntype BgImgStyle = {\n  backgroundSize?: '60%';\n  backgroundPosition?: 'center';\n  backgroundRepeat?: 'no-repeat';\n};\ninterface ImageLinkProps {\n  to?: string;\n  imgSrc?: string;\n  defaultSrc?: string;\n  bgImgSrc?: string;\n  label?: string;\n  imgPadding?: string;\n  width: string;\n  height?: string;\n  bgImgStyle?: BgImgStyle;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst ImageLink: FC<ImageLinkProps> = ({\n  to = '',\n  imgSrc,\n  defaultSrc,\n  bgImgSrc,\n  label = '',\n  imgPadding = '0.625em',\n  width = '6.25em',\n  height = '6.25em',\n  bgImgStyle,\n  pointerCursor = false,\n  onClick,\n}) => {\n  return (\n    <Flex column styles={{ width }}>\n      {to === '' ? (\n        <div style={{ height }} onClick={onClick}>\n          <Image\n            src={imgSrc ?? defaultSrc}\n            styles={{\n              padding: imgPadding,\n              height: '100%',\n              objectFit: 'contain',\n              backgroundImage: `url(${bgImgSrc})`,\n              cursor: pointerCursor ? 'pointer' : 'default',\n              ...bgImgStyle,\n            }}\n          />\n        </div>\n      ) : (\n        <Link to={to}>\n          <div style={{ height }} onClick={onClick}>\n            <Image\n              src={imgSrc ?? defaultSrc}\n              styles={{\n                padding: imgPadding,\n                height: '100%',\n                objectFit: 'contain',\n                backgroundImage: `url(${bgImgSrc})`,\n                ...bgImgStyle,\n              }}\n            />\n          </div>\n        </Link>\n      )}\n      <Text align=\"center\">{label}</Text>\n    </Flex>\n  );\n};\n\nexport default memo(ImageLink);\n","import React, { FC } from 'react';\nimport { Text, Flex } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ImageLink from '../components/ImageLink';\nimport { openDialog } from '../store/dialog/dialogIsOpenActions';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text size=\"larger\" weight=\"semibold\">\n        Hello User!\n      </Text>\n      <Text>\n      </Text>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        GET STARTED:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/location-filled.png\"\n          to=\"/locations/register\"\n          label=\"Register a new Location\"\n          width=\"6.25em\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/camera-filled.png\"\n          to=\"/cameras\"\n          label=\"Register a new Camera\"\n          width=\"6.25em\"\n          imgPadding=\"0.625em 0.1875em 0.625em 0.1875em\"\n          onClick={(): void => {\n            dispatch(openDialog());\n          }}\n        />\n        <ImageLink\n          imgSrc=\"/icons/part-filled.png\"\n          to=\"/parts/detail\"\n          label=\"Register a new Part\"\n          width=\"6.25em\"\n        />\n      </Flex>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        SELECT FROM THE FOLLOWING TASKS:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/doubleCube.png\"\n          to=\"/partIdentification\"\n          label=\"Identify Parts\"\n          width=\"6.25em\"\n        />\n        <ImageLink imgSrc=\"/icons/defects.png\" to=\"/\" label=\"Identify Defects\" width=\"6.25em\" />\n        <ImageLink\n          imgSrc=\"/icons/manual-filled.png\"\n          to=\"/manual\"\n          label=\"Identify items manually\"\n          width=\"6.25em\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { OpenDialog, CloseDialog, OPEN_DIALOG, CLOSE_DIALOG } from './dialogIsOpenTypes';\n\nexport const openDialog = (): OpenDialog => ({ type: OPEN_DIALOG });\nexport const closeDialog = (): CloseDialog => ({ type: CLOSE_DIALOG });\n","import axios from 'axios';\nimport {\n  GET_CAMERA_SUCCESS,\n  POST_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  GetCamerasSuccess,\n  RequestCamerasFailure,\n  PostCameraSuccess,\n  Camera,\n  DELETE_CAMERA_SUCCESS,\n  DeleteCameraSuccess,\n} from './cameraTypes';\n\nconst getCamerasSuccess = (data: Camera[]): GetCamerasSuccess => ({\n  type: GET_CAMERA_SUCCESS,\n  payload: data,\n});\n\nconst deleteCameraSuccess = (id: number): DeleteCameraSuccess => ({\n  type: DELETE_CAMERA_SUCCESS,\n  payload: { id },\n});\n\nconst requestCamerasFailure = (error: any): RequestCamerasFailure => {\n  console.error(error);\n  return { type: REQUEST_CAMERA_FAILURE };\n};\n\nconst postCameraSuccess = (data: Camera): PostCameraSuccess => ({\n  type: POST_CAMERA_SUCCESS,\n  payload: data,\n});\n\nexport const getCameras = () => (dispatch): Promise<void> => {\n  return axios('/api/cameras/')\n    .then(({ data }) => {\n      dispatch(getCamerasSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const postCamera = (newCamera: Camera) => (dispatch): Promise<void> => {\n  return axios('/api/cameras/', {\n    method: 'POST',\n    data: newCamera,\n  })\n    .then(({ data }) => {\n      dispatch(postCameraSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const deleteCamera = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/cameras/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteCameraSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n","import React, { FC } from 'react';\nimport { Button, AddIcon } from '@fluentui/react-northstar';\n\ninterface AddButtonProps {\n  onClick?: () => void;\n}\nconst AddButton: FC<AddButtonProps> = ({ onClick }) => (\n  <Button\n    primary\n    fluid\n    circular\n    content={<AddIcon size=\"largest\" circular />}\n    styles={{ width: '6em', height: '6em' }}\n    onClick={onClick}\n  />\n);\n\nexport default AddButton;\n","import React, { useState } from 'react';\nimport { Dialog, Input, Flex, TextArea } from '@fluentui/react-northstar';\nimport * as R from 'ramda';\n\nimport AddButton from '../AddButton';\n\ntype AddModuleDialogProps = {\n  header: string;\n  fields: { placeholder: string; key: string; type: 'input' | 'textArea'; required: boolean }[];\n  onConfirm: (formData: Record<string, string>) => void;\n};\n\nexport const AddModuleDialog: React.FC<AddModuleDialogProps> = ({ header, fields, onConfirm }) => {\n  const [formData, setFormData] = useState(\n    fields.reduce((acc, cur) => {\n      return { ...acc, [cur.key]: '' };\n    }, {}),\n  );\n\n  const isSubmitDisabled = fields.some((e) => e.required && !formData[e.key]);\n\n  return (\n    <Dialog\n      styles={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '500px',\n      }}\n      confirmButton={{ content: 'Submit', disabled: isSubmitDisabled }}\n      cancelButton=\"Cancel\"\n      onConfirm={(): void => onConfirm(formData)}\n      header={header}\n      trigger={\n        <div style={{ alignSelf: 'flex-end' }}>\n          <AddButton />\n        </div>\n      }\n      content={\n        <Flex column gap=\"gap.large\" hAlign=\"center\">\n          {fields.map((e) =>\n            e.type === 'input' ? (\n              <Input\n                key={e.key}\n                placeholder={e.placeholder}\n                value={formData[e.key]}\n                onChange={(_, { value }): void => setFormData(R.assoc(e.key, value, formData))}\n                fluid\n                required={e.required}\n              />\n            ) : (\n              <TextArea\n                key={e.key}\n                placeholder={e.placeholder}\n                value={formData[e.key]}\n                onChange={(_, { value }): void => setFormData(R.assoc(e.key, value, formData))}\n                styles={{ height: '100px' }}\n                fluid\n                required={e.required}\n              />\n            ),\n          )}\n        </Flex>\n      }\n    />\n  );\n};\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid } from '@fluentui/react-northstar';\n\nimport { postCamera, getCameras } from '../store/camera/cameraActions';\nimport ImageLink from '../components/ImageLink';\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { AddModuleDialog } from '../components/AddModuleDialog/AddModuleDialog';\n\nconst Cameras: FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { cameras } = useSelector<State, { dialogIsOpen: boolean; cameras: Camera[] }>((state) => ({\n    dialogIsOpen: state.dialogIsOpen,\n    cameras: state.cameras.filter((e) => !e.is_demo),\n  }));\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {cameras.map((camera, i) => (\n          <ImageLink\n            key={i}\n            to={`/cameras/detail?name=${camera.name}`}\n            defaultSrc=\"/icons/Play.png\"\n            bgImgSrc=\"/icons/defaultCamera.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            bgImgStyle={{\n              backgroundSize: '60%',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n            }}\n            label={camera.name}\n          />\n        ))}\n      </Grid>\n      <AddModuleDialog\n        header=\"Add Camera\"\n        fields={[\n          {\n            placeholder: 'Name',\n            key: 'name',\n            type: 'input',\n            required: true,\n          },\n          {\n            placeholder: 'RTSP URL',\n            key: 'rtsp',\n            type: 'input',\n            required: true,\n          },\n        ]}\n        onConfirm={({ name, rtsp }): void => {\n          dispatch(postCamera({ name, rtsp, is_demo: false }));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Cameras;\n","import React, { FC, useState, CSSProperties } from 'react';\nimport { Flex, Text, Button, Dialog } from '@fluentui/react-northstar';\n\n/**\n * @param trigger Trigger Button\n * @param primaryStyles CSS style of Confirm Button\n */\ninterface FluentUIStylesProperties extends CSSProperties {\n  [':hover']: any;\n  [':active']: any;\n}\n\ninterface ConfirmDialogProps {\n  trigger: JSX.Element;\n  onConfirm: () => void;\n  primaryStyles: FluentUIStylesProperties;\n  content: string;\n}\nconst ConfirmDialog: FC<ConfirmDialogProps> = ({ trigger, onConfirm, primaryStyles, content }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '20em', padding: '0.5em' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      footer={\n        <Flex column gap=\"gap.large\">\n          <Text size=\"large\" align=\"center\">\n            {content}\n          </Text>\n          <Flex space=\"around\">\n            <Button primary content=\"Confirm\" styles={primaryStyles} onClick={onConfirm} />\n            <Button content=\"Cancel\" onClick={(): void => setOpen(false)} />\n          </Flex>\n        </Flex>\n      }\n    />\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { FC, memo } from 'react';\nimport { Flex, Text, Grid, Button } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ConfirmDialog from '../ConfirmDialog';\nimport ImageLink from '../ImageLink';\nimport { deleteCamera } from '../../store/camera/cameraActions';\n\ninterface CameraDetailInfoProps {\n  name: string;\n  rtsp: string;\n  id: number;\n}\nconst CameraDetailInfo: FC<CameraDetailInfoProps> = ({ id, name, rtsp }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex styles={{ padding: '1em 2em' }} column space=\"between\">\n      <Grid columns=\"2\" styles={{ gap: '3em' }}>\n        <Text size=\"larger\" weight=\"semibold\">\n          Details\n        </Text>\n        <ImageLink defaultSrc=\"/icons/defaultCamera.png\" width=\"100px\" height=\"100px\" />\n        <Flex column gap=\"gap.small\">\n          <Text size=\"large\" content={'Name:'} />\n          <Text size=\"large\" content={'RTSP Url:'} />\n        </Flex>\n        <Flex column gap=\"gap.medium\">\n          <Text size=\"large\" content={name} />\n          <Text size=\"large\" content={rtsp} />\n        </Flex>\n      </Grid>\n      <ConfirmDialog\n        trigger={\n          <Button\n            primary\n            content=\"Delete Camera\"\n            styles={{\n              backgroundColor: '#C4314B',\n              ':hover': { backgroundColor: '#A72037' },\n              ':active': { backgroundColor: '#8E192E' },\n            }}\n          />\n        }\n        content=\"Delete Camera\"\n        primaryStyles={{\n          backgroundColor: '#C4314B',\n          ':hover': { backgroundColor: '#A72037' },\n          ':active': { backgroundColor: '#8E192E' },\n        }}\n        onConfirm={(): void => {\n          dispatch(deleteCamera(id));\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default memo(CameraDetailInfo);\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay): void => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick(): void {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return (): void => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import Axios from 'axios';\nimport {\n  ProjectThunk,\n  GetProjectSuccessAction,\n  GET_PROJECT_SUCCESS,\n  GetProjectFailedAction,\n  GET_PROJECT_FAILED,\n  PostProjectSuccessAction,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  PostProjectFaliedAction,\n  DeleteProjectSuccessAction,\n  DELETE_PROJECT_SUCCESS,\n  DeleteProjectFaliedAction,\n  DELETE_PROJECT_FALIED,\n  ProjectData,\n  PostProjectRequestAction,\n  POST_PROJECT_REQUEST,\n  GetProjectRequestAction,\n  GET_PROJECT_REQUEST,\n  UpdateProjectDataAction,\n  UPDATE_PROJECT_DATA,\n  GetTrainingLogRequesAction,\n  GET_TRAINING_LOG_REQUEST,\n  GetTrainingLogSuccessAction,\n  GET_TRAINING_LOG_SUCCESS,\n  GetTrainingLogFailedAction,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GetTrainingMetricsRequestAction,\n  GET_TRAINING_METRICS_REQUEST,\n  GetTrainingMetricsSuccessAction,\n  GET_TRAINING_METRICS_SUCCESS,\n  GetTrainingMetricsFailedAction,\n  GET_TRAINING_METRICS_FAILED,\n  Consequence,\n  GetInferenceMetricsRequestAction,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GetInferenceMetricsSuccessAction,\n  GetInferenceMetricsFailedAction,\n  GET_INFERENCE_METRICS_FAILED,\n  StartInferenceAction,\n  START_INFERENCE,\n  STOP_INFERENCE,\n  StopInferenceAction,\n  UPDATE_ORIGIN_PROJECT_DATA,\n  UpdateOriginProjectDataAction,\n} from './projectTypes';\n\nconst getProjectRequest = (): GetProjectRequestAction => ({ type: GET_PROJECT_REQUEST });\nconst getProjectSuccess = (project: ProjectData): GetProjectSuccessAction => ({\n  type: GET_PROJECT_SUCCESS,\n  payload: { project },\n});\nconst getProjectFailed = (error: Error): GetProjectFailedAction => ({ type: GET_PROJECT_FAILED, error });\n\nconst getTrainingLogRequest = (): GetTrainingLogRequesAction => ({ type: GET_TRAINING_LOG_REQUEST });\nconst getTrainingLogSuccess = (trainingLog: string, newStatus: Status): GetTrainingLogSuccessAction => ({\n  type: GET_TRAINING_LOG_SUCCESS,\n  payload: {\n    trainingLog,\n    newStatus,\n  },\n});\nconst getTrainingStatusFailed = (error: Error): GetTrainingLogFailedAction => ({\n  type: GET_TRAINING_LOG_FAILED,\n  error,\n});\n\nconst postProjectRequest = (): PostProjectRequestAction => ({ type: POST_PROJECT_REQUEST });\nconst postProjectSuccess = (): PostProjectSuccessAction => ({ type: POST_PROJECT_SUCCESS });\nconst postProjectFail = (error: Error): PostProjectFaliedAction => ({ type: POST_PROJECT_FALIED, error });\n\nconst deleteProjectSuccess = (): DeleteProjectSuccessAction => ({ type: DELETE_PROJECT_SUCCESS });\nconst deleteProjectFailed = (): DeleteProjectFaliedAction => ({ type: DELETE_PROJECT_FALIED });\n\nconst getTrainingMetricsRequest = (): GetTrainingMetricsRequestAction => ({\n  type: GET_TRAINING_METRICS_REQUEST,\n});\nconst getTrainingMetricsSuccess = (\n  curConsequence: Consequence,\n  prevConsequence: Consequence,\n): GetTrainingMetricsSuccessAction => ({\n  type: GET_TRAINING_METRICS_SUCCESS,\n  payload: { prevConsequence, curConsequence },\n});\nconst getTrainingMetricsFailed = (error: Error): GetTrainingMetricsFailedAction => ({\n  type: GET_TRAINING_METRICS_FAILED,\n  error,\n});\n\nconst getInferenceMetricsRequest = (): GetInferenceMetricsRequestAction => ({\n  type: GET_INFERENCE_METRICS_REQUEST,\n});\nconst getInferenceMetricsSuccess = (\n  successRate: number,\n  successfulInferences: number,\n  unIdetifiedItems: number,\n  isGpu: boolean,\n  averageTime: number,\n): GetInferenceMetricsSuccessAction => ({\n  type: GET_INFERENCE_METRICS_SUCCESS,\n  payload: { successRate, successfulInferences, unIdetifiedItems, isGpu, averageTime },\n});\nconst getInferenceMetricsFailed = (error: Error): GetInferenceMetricsFailedAction => ({\n  type: GET_INFERENCE_METRICS_FAILED,\n  error,\n});\n\nexport const startInference = (): StartInferenceAction => ({\n  type: START_INFERENCE,\n});\n\nexport const stopInference = (): StopInferenceAction => ({\n  type: STOP_INFERENCE,\n});\n\nexport const updateProjectData = (projectData: ProjectData): UpdateProjectDataAction => ({\n  type: UPDATE_PROJECT_DATA,\n  payload: projectData,\n});\n\nexport const updateOriginProjectData = (): UpdateOriginProjectDataAction => ({\n  type: UPDATE_ORIGIN_PROJECT_DATA,\n});\n\nexport const thunkGetProject = (isTestModel?: boolean): ProjectThunk => (dispatch): Promise<void> => {\n  dispatch(getProjectRequest());\n\n  const url = isTestModel === undefined ? '/api/projects/' : `/api/projects/?is_demo=${Number(isTestModel)}`;\n\n  return Axios.get(url)\n    .then(({ data }) => {\n      const project: ProjectData = {\n        id: data[0]?.id ?? null,\n        camera: parseInt(data[0]?.camera.split('/')[5], 10) ?? null,\n        location: parseInt(data[0]?.location.split('/')[5], 10) ?? null,\n        parts: data[0]?.parts.map((ele) => parseInt(ele.split('/')[5], 10)) ?? [],\n        modelUrl: data[0]?.download_uri ?? '',\n        needRetraining: data[0]?.needRetraining ?? true,\n        accuracyRangeMin: data[0]?.accuracyRangeMin ?? 60,\n        accuracyRangeMax: data[0]?.accuracyRangeMax ?? 80,\n        maxImages: data[0]?.maxImages ?? 20,\n        sendMessageToCloud: data[0]?.metrics_is_send_iothub,\n        framesPerMin: data[0]?.metrics_frame_per_minutes,\n        accuracyThreshold: data[0]?.metrics_accuracy_threshold,\n        cvProjectId: data[0]?.customvision_project_id,\n      };\n      dispatch(getProjectSuccess(project));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(getProjectFailed(err));\n    });\n};\n\nexport const thunkPostProject = (\n  projectId,\n  selectedLocations,\n  selectedParts,\n  selectedCamera,\n  isTestModel,\n): ProjectThunk => (dispatch, getState): Promise<number> => {\n  const isProjectEmpty = projectId === null;\n  const url = isProjectEmpty ? `/api/projects/` : `/api/projects/${projectId}/`;\n\n  dispatch(postProjectRequest());\n\n  const projectData = getState().project.data;\n\n  return Axios(url, {\n    data: {\n      location: `http://localhost:8000/api/locations/${selectedLocations.id}/`,\n      parts: selectedParts.map((e) => `http://localhost:8000/api/parts/${e.id}/`),\n      camera: `http://localhost:8000/api/cameras/${selectedCamera.id}/`,\n      download_uri: projectData.modelUrl,\n      needRetraining: projectData.needRetraining,\n      accuracyRangeMin: projectData.accuracyRangeMin,\n      accuracyRangeMax: projectData.accuracyRangeMax,\n      maxImages: projectData.maxImages,\n      metrics_is_send_iothub: projectData.sendMessageToCloud,\n      metrics_frame_per_minutes: projectData.framesPerMin,\n      metrics_accuracy_threshold: projectData.accuracyThreshold,\n    },\n    method: isProjectEmpty ? 'POST' : 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(({ data }) => {\n      dispatch(postProjectSuccess());\n      getTrain(data.id, isTestModel);\n      return data.id;\n    })\n    .catch((err) => {\n      dispatch(postProjectFail(err));\n    }) as Promise<number>;\n};\nconst getTrain = (projectId, isTestModel: boolean): void => {\n  const url = isTestModel ? `/api/projects/${projectId}/train?demo=True` : `/api/projects/${projectId}/train`;\n  Axios.get(url).catch((err) => console.error(err));\n};\n\nexport const thunkDeleteProject = (projectId): ProjectThunk => (dispatch): Promise<any> => {\n  return Axios.get(`/api/projects/${projectId}/reset_camera`)\n    .then(() => {\n      return dispatch(deleteProjectSuccess());\n    })\n    .catch((err) => {\n      alert(err);\n      dispatch(deleteProjectFailed());\n    });\n};\n\nexport const thunkGetTrainingLog = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getTrainingLogRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      if (data.status === 'failed') throw new Error(data.log);\n      else if (data.status === 'ok' || data.status === 'demo ok')\n        dispatch(getTrainingLogSuccess('', Status.FinishTraining));\n      else dispatch(getTrainingLogSuccess(data.log, Status.WaitTraining));\n      return void 0;\n    })\n    .catch((err) => dispatch(getTrainingStatusFailed(err)));\n};\n\nexport const thunkGetTrainingMetrics = (projectId: number) => (dispacth): Promise<any> => {\n  dispacth(getTrainingMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/train_performance`)\n    .then(({ data }) => {\n      const curConsequence: Consequence = data.new\n        ? {\n            precision: data.new.precision,\n            recall: data.new.recall,\n            mAP: data.new.map,\n          }\n        : null;\n\n      const prevConsequence: Consequence = data.previous\n        ? {\n            precision: data.previous.precision,\n            recall: data.previous.recall,\n            mAP: data.previous.map,\n          }\n        : null;\n\n      return dispacth(getTrainingMetricsSuccess(curConsequence, prevConsequence));\n    })\n    .catch((err) => dispacth(getTrainingMetricsFailed(err)));\n};\n\nexport const thunkGetInferenceMetrics = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getInferenceMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      return dispatch(\n        getInferenceMetricsSuccess(\n          data.success_rate,\n          data.inference_num,\n          data.unidentified_num,\n          data.gpu,\n          data.average_time,\n        ),\n      );\n    })\n    .catch((err) => dispatch(getInferenceMetricsFailed(err)));\n};\n","import { useEffect, useState } from 'react';\n\n/**\n * Fetch the parts data from server\n */\nexport const useParts = (isDemo?: boolean): any[] => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const url = isDemo === undefined ? '/api/parts/' : `/api/parts/?is_demo=${Number(isDemo)}`;\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data);\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [isDemo]);\n\n  return parts;\n};\n","import { useLocation } from 'react-router-dom';\n\n/**\n * Get query parameter in the route\n */\nexport const useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Stage, Image as KonvaImage, Shape, Group, Line, Layer, Circle, Path } from 'react-konva';\nimport Konva from 'konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport * as R from 'ramda';\nimport uniqid from 'uniqid';\n\nimport {\n  LiveViewProps,\n  MaskProps,\n  AOIBoxProps,\n  AOILayerProps,\n  CreatingState,\n} from './LiveViewContainer.type';\n\nconst getRelativePosition = (layer: Konva.Layer): { x: number; y: number } => {\n  const transform = layer.getAbsoluteTransform().copy();\n  transform.invert();\n  const pos = layer.getStage().getPointerPosition();\n  return transform.point(pos);\n};\n\nexport const LiveViewScene: React.FC<LiveViewProps> = ({\n  AOIs,\n  setAOIs,\n  visible,\n  imageInfo,\n  creatingState,\n  setCreatingState,\n}) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const stageRef = useRef(null);\n  const imgRef = useRef(null);\n  const layerRef = useRef<Konva.Layer>(null);\n\n  const [imgEle, status, { width: imgWidth, height: imgHeight }] = imageInfo;\n\n  /* The component need to support image with Content-type \"multipart/x-mixed-replace\",\n     which will keep updating the image data.\n     Keep updating the canvas by using Konva.Animation so we can see the latest image.\n  */\n  useEffect(() => {\n    const anim = new Konva.Animation(() => {}, layerRef.current);\n    anim.start();\n\n    return (): void => {\n      anim.stop();\n    };\n  }, []);\n\n  useEffect(() => {\n    const { width: divWidth, height: divHeight } = divRef.current.getBoundingClientRect();\n    stageRef.current.width(divWidth);\n    stageRef.current.height(divHeight);\n  }, []);\n\n  /* Fit Image to Stage */\n  useEffect(() => {\n    if (imgWidth !== 0 && imgHeight !== 0) {\n      const { width: stageWidth, height: stageHeight } = stageRef.current.size();\n      const scale = Math.min(stageWidth / imgWidth, stageHeight / imgHeight);\n      layerRef.current.scale({ x: scale, y: scale });\n\n      const offsetX = (stageWidth - imgWidth * scale) / 2;\n      const offsetY = (stageHeight - imgHeight * scale) / 2;\n      layerRef.current.position({ x: offsetX, y: offsetY });\n    }\n  }, [imgHeight, imgWidth]);\n\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    if (creatingState === CreatingState.Disabled) return;\n\n    const { x, y } = getRelativePosition(e.target.getLayer());\n    setAOIs((prev) => [...prev, { id: uniqid(), x1: x, y1: y, x2: x, y2: y }]);\n    setCreatingState(CreatingState.Creating);\n  };\n\n  const onMouseMove = (e: KonvaEventObject<MouseEvent>): void => {\n    if (creatingState !== CreatingState.Creating) return;\n\n    const { x, y } = getRelativePosition(e.target.getLayer());\n    setAOIs(R.adjust(-1, (rear) => ({ ...rear, x2: x, y2: y })));\n  };\n\n  return (\n    <div ref={divRef} style={{ width: '100%', height: '100%' }}>\n      <Stage ref={stageRef} style={{ cursor: creatingState !== CreatingState.Disabled ? 'crosshair' : '' }}>\n        <Layer\n          ref={layerRef}\n          onMouseDown={onMouseDown}\n          onMouseMove={onMouseMove}\n          onMouseUp={(): void => {\n            if (creatingState === CreatingState.Creating) setCreatingState(CreatingState.Waiting);\n          }}\n        >\n          <KonvaImage image={imgEle} ref={imgRef} />\n          {\n            /* Render when image is loaded to prevent AOI boxes show in unscale size */\n            status === 'loaded' && (\n              <AOILayer\n                imgWidth={imgWidth}\n                imgHeight={imgHeight}\n                AOIs={AOIs}\n                setAOIs={setAOIs}\n                visible={visible}\n                creatingState={creatingState}\n              />\n            )\n          }\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nconst AOILayer: React.FC<AOILayerProps> = ({\n  imgWidth,\n  imgHeight,\n  AOIs,\n  setAOIs,\n  visible,\n  creatingState,\n}): JSX.Element => {\n  return (\n    <>\n      <Mask width={imgWidth} height={imgHeight} holes={AOIs} visible={visible} />\n      {AOIs.map((e, i) => (\n        <AOIBox\n          key={e.id}\n          box={e}\n          visible={visible}\n          boundary={{ x1: 0, y1: 0, x2: imgWidth, y2: imgHeight }}\n          onBoxChange={(updateBox): void =>\n            setAOIs((prev) => {\n              const newBox = updateBox(prev[i]);\n              if (newBox.x1 > newBox.x2) {\n                const tmp = newBox.x1;\n                newBox.x1 = newBox.x2;\n                newBox.x2 = tmp;\n              }\n\n              if (newBox.y1 > newBox.y2) {\n                const tmp = newBox.y1;\n                newBox.y1 = newBox.y2;\n                newBox.y2 = tmp;\n              }\n\n              const newAOIs = [...prev];\n              newAOIs[i] = newBox;\n              return newAOIs;\n            })\n          }\n          removeBox={(id): void => {\n            setAOIs((prev) => prev.filter((ele) => ele.id !== id));\n          }}\n          creatingState={creatingState}\n        />\n      ))}\n    </>\n  );\n};\n\nconst Mask: React.FC<MaskProps> = ({ width, height, holes, visible }) => {\n  return (\n    <Shape\n      width={width}\n      height={height}\n      fill={'rgba(0,0,0,0.5)'}\n      visible={visible}\n      sceneFunc={(ctx, shape): void => {\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(shape.width(), 0);\n        ctx.lineTo(shape.width(), shape.height());\n        ctx.lineTo(0, shape.height());\n        ctx.lineTo(0, 0);\n\n        // Nonozero-rule\n        holes.forEach(({ x1, y1, x2, y2 }) => {\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x1, y2);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, y1);\n          ctx.lineTo(x1, y1);\n        });\n\n        ctx.fillStrokeShape(shape);\n      }}\n      listening={false}\n    />\n  );\n};\n\nconst AOIBox: React.FC<AOIBoxProps> = ({ box, onBoxChange, visible, boundary, removeBox, creatingState }) => {\n  const { x1, y1, x2, y2 } = box;\n  const COLOR = 'white';\n  const [cancelBtnVisible, setCanceBtnVisible] = useState(false);\n  const groupRef = useRef<Konva.Group>(null);\n\n  const handleDrag = (e: KonvaEventObject<DragEvent>): void => {\n    let { x, y } = e.target.position();\n\n    if (x < boundary.x1) {\n      x = boundary.x1;\n      e.target.x(x);\n    }\n\n    if (x > boundary.x2) {\n      x = boundary.x2;\n      e.target.x(x);\n    }\n\n    if (y < boundary.y1) {\n      y = boundary.y1;\n      e.target.y(y);\n    }\n\n    if (y > boundary.y2) {\n      y = boundary.y2;\n      e.target.y(y);\n    }\n\n    switch (e.target.name()) {\n      case 'leftTop':\n        onBoxChange((prev) => ({ ...prev, x1: x, y1: y }));\n        break;\n      case 'rightTop':\n        onBoxChange((prev) => ({ ...prev, x2: x, y1: y }));\n        break;\n      case 'rightBottom':\n        onBoxChange((prev) => ({ ...prev, x2: x, y2: y }));\n        break;\n      case 'leftBottom':\n        onBoxChange((prev) => ({ ...prev, x1: x, y2: y }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const scale = groupRef.current?.getLayer().scale().x || 1;\n\n  const radius = 5 / scale;\n\n  return (\n    <Group\n      visible={visible}\n      onMouseEnter={(): void => setCanceBtnVisible(true)}\n      onMouseLeave={(): void => setCanceBtnVisible(false)}\n      cache={[{ drawBorder: true }]}\n      ref={groupRef}\n    >\n      {/** A bigger region for mouseEnter event */}\n      <Line x={x1} y={y1 - 40} points={[0, -40, 0, y2 - y1, x2 - x1, y2 - y1, x2 - x1, -40]} closed />\n      <Line\n        x={x1}\n        y={y1}\n        points={[0, 0, 0, y2 - y1, x2 - x1, y2 - y1, x2 - x1, 0]}\n        closed\n        stroke={COLOR}\n        strokeWidth={2 / scale}\n      />\n      <Circle draggable name=\"leftTop\" x={x1} y={y1} radius={radius} fill={COLOR} onDragMove={handleDrag} />\n      <Circle draggable name=\"rightTop\" x={x2} y={y1} radius={radius} fill={COLOR} onDragMove={handleDrag} />\n      <Circle\n        draggable\n        name=\"rightBottom\"\n        x={x2}\n        y={y2}\n        radius={radius}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Circle\n        draggable\n        name=\"leftBottom\"\n        x={x1}\n        y={y2}\n        radius={radius}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Path\n        x={x1}\n        y={y1 - 30 / scale}\n        data=\"M 0 0 L 20 20 M 20 0 L 0 20\"\n        stroke=\"red\"\n        strokeWidth={5}\n        visible={cancelBtnVisible && creatingState === CreatingState.Disabled}\n        onMouseEnter={(e): void => {\n          e.target.getStage().container().style.cursor = 'pointer';\n        }}\n        onMouseLeave={(e): void => {\n          e.target.getStage().container().style.cursor = 'default';\n        }}\n        onClick={(): void => removeBox(box.id)}\n        scale={{ x: 1 / scale, y: 1 / scale }}\n      />\n    </Group>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\n\ntype ImageState = {\n  image: HTMLImageElement;\n  status: string;\n  size: { width: number; height: number };\n};\nconst defaultState: ImageState = {\n  image: undefined,\n  status: 'loading',\n  size: { width: 0, height: 0 },\n};\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nconst useImage = (url: string, crossOrigin: string): [HTMLImageElement, string, { width: number; height: number }] => {\n  const [imageState, setImageState] = useState<ImageState>(defaultState);\n  const { image, status, size } = imageState;\n\n  const prevUrl = usePrevious<string>(url);\n\n  useEffect(() => {\n    if (!url) return;\n\n    const img = document.createElement('img');\n\n    if (url !== prevUrl) {\n      setImageState((prev) => ({ ...prev, image: prev.image, status: 'loading' }));\n    }\n\n    const onload = (): void => {\n      setImageState({\n        image: img,\n        status: 'loaded',\n        size: { width: img.width, height: img.height },\n      });\n    };\n\n    const onerror = (): void => {\n      setImageState((prev) => ({ ...prev, image: undefined, status: 'failed' }));\n    };\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n\n    img.src = url;\n\n    return (): void => {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, prevUrl]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status, size];\n};\n\nexport default useImage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as R from 'ramda';\nimport Axios from 'axios';\nimport uniqid from 'uniqid';\n\nimport { Text, Checkbox, Flex, Button, Alert } from '@fluentui/react-northstar';\nimport { LiveViewScene } from './LiveViewScene';\nimport { AOIData, Box } from '../../type';\nimport useImage from '../LabelingPage/util/useImage';\nimport { CreatingState } from './LiveViewContainer.type';\n\nexport const LiveViewContainer: React.FC<{\n  showVideo: boolean;\n  initialAOIData: AOIData;\n  cameraId: number;\n}> = ({ showVideo, initialAOIData, cameraId }) => {\n  const [showAOI, setShowAOI] = useState(initialAOIData.useAOI);\n  const lasteUpdatedAOIs = useRef(initialAOIData.AOIs);\n  const [AOIs, setAOIs] = useState<Box[]>(lasteUpdatedAOIs.current);\n  const [showUpdateSuccessTxt, setShowUpdateSuccessTxt] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>(null);\n  const imageInfo = useImage(`http://${window.location.hostname}:5000/video_feed?inference=1`, '');\n  const [creatingAOI, setCreatingAOI] = useState(CreatingState.Disabled);\n\n  const onCheckboxClick = async (): Promise<void> => {\n    setShowAOI(!showAOI);\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: !showAOI,\n          AOIs: lasteUpdatedAOIs.current,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      if (!showAOI) setAOIs(lasteUpdatedAOIs.current);\n    } catch (e) {\n      // Set back to the state before updating for switch case\n      setShowAOI(showAOI);\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  const onUpdate = async (): Promise<void> => {\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: showAOI,\n          AOIs,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      lasteUpdatedAOIs.current = R.clone(AOIs);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (showUpdateSuccessTxt) {\n      const timer = setTimeout(() => {\n        setShowUpdateSuccessTxt(false);\n      }, 3000);\n      return (): void => clearTimeout(timer);\n    }\n  }, [showUpdateSuccessTxt]);\n\n  useEffect(() => {\n    if (!AOIs.length)\n      setAOIs([{ id: uniqid(), x1: 0, y1: 0, x2: imageInfo[2].width, y2: imageInfo[2].height }]);\n  }, [AOIs.length, imageInfo[2].width, imageInfo[2].height]);\n\n  const hasEdit = !R.equals(lasteUpdatedAOIs.current, AOIs);\n  const updateBtnDisabled = !showAOI || !hasEdit;\n\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }} size=\"large\">\n        Live View:\n      </Text>\n      {error && <Alert danger header=\"Failed to Update!\" content={`${error.name}: ${error.message}`} />}\n      <Flex hAlign=\"end\" gap=\"gap.small\" vAlign=\"center\">\n        <Checkbox\n          labelPosition=\"start\"\n          label=\"Show area of interest\"\n          toggle\n          checked={showAOI}\n          onClick={onCheckboxClick}\n        />\n        <Button content=\"Update\" primary disabled={updateBtnDisabled} onClick={onUpdate} loading={loading} />\n        <Button\n          content=\"Create Area of Interest\"\n          primary={creatingAOI !== CreatingState.Disabled}\n          disabled={!showAOI}\n          onClick={(): void => {\n            if (creatingAOI === CreatingState.Disabled) setCreatingAOI(CreatingState.Waiting);\n            else setCreatingAOI(CreatingState.Disabled);\n          }}\n          circular\n          styles={{ padding: '0 5px' }}\n        />\n        <Text styles={{ visibility: showUpdateSuccessTxt ? 'visible' : 'hidden' }}>Updated!</Text>\n      </Flex>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {showVideo ? (\n          <LiveViewScene\n            AOIs={AOIs}\n            setAOIs={setAOIs}\n            visible={showAOI}\n            imageInfo={imageInfo}\n            creatingState={creatingAOI}\n            setCreatingState={setCreatingAOI}\n          />\n        ) : null}\n      </div>\n    </Flex>\n  );\n};\n","import React, { useEffect, FC, useState, useCallback } from 'react';\nimport { Flex, Text, Status, Button, Loader, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useInterval } from '../../hooks/useInterval';\nimport {\n  thunkDeleteProject,\n  thunkGetTrainingLog,\n  thunkGetTrainingMetrics,\n  thunkGetInferenceMetrics,\n} from '../../store/project/projectActions';\nimport { Project, Status as CameraConfigStatus } from '../../store/project/projectTypes';\nimport { State } from '../../store/State';\nimport { useParts } from '../../hooks/useParts';\nimport { useQuery } from '../../hooks/useQuery';\nimport { LiveViewContainer } from '../LiveViewContainer';\nimport { AOIData } from '../../type';\n\nexport const CameraConfigureInfo: React.FC<{ projectId: number; AOIs: AOIData }> = ({ projectId, AOIs }) => {\n  const { error, data: project, trainingLog, status, trainingMetrics, inferenceMetrics } = useSelector<\n    State,\n    Project\n  >((state) => state.project);\n  const allTrainingLog = useAllTrainingLog(trainingLog);\n  const parts = useParts();\n  const dispatch = useDispatch();\n  const cameraName = useQuery().get('name');\n  const isDemo = useQuery().get('isDemo') === 'true';\n  const history = useHistory();\n\n  const onDeleteConfigure = useCallback((): void => {\n    // eslint-disable-next-line no-restricted-globals\n    const sureDelete = confirm('Delete this configuration?');\n    if (!sureDelete) return;\n    const result = (dispatch(thunkDeleteProject(projectId)) as unknown) as Promise<any>;\n    result\n      .then((data) => {\n        if (data) return history.push(`/cameras/detail?name=${cameraName}`);\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  }, [dispatch, history, cameraName, projectId]);\n\n  useEffect(() => {\n    dispatch(thunkGetTrainingLog(projectId));\n  }, [dispatch, projectId]);\n  useInterval(\n    () => {\n      dispatch(thunkGetTrainingLog(projectId));\n    },\n    status === CameraConfigStatus.WaitTraining ? 5000 : null,\n  );\n\n  useEffect(() => {\n    if (status === CameraConfigStatus.FinishTraining) {\n      dispatch(thunkGetTrainingMetrics(projectId));\n    }\n  }, [dispatch, status, projectId]);\n\n  useInterval(\n    () => {\n      dispatch(thunkGetInferenceMetrics(projectId));\n    },\n    status === CameraConfigStatus.StartInference ? 5000 : null,\n  );\n\n  const isCameraOnline = [CameraConfigStatus.FinishTraining, CameraConfigStatus.StartInference].includes(\n    status,\n  );\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Configuration</h1>\n      {error && <Alert danger header={error.name} content={`${error.message}`} />}\n      {status === CameraConfigStatus.WaitTraining ? (\n        <>\n          <Loader size=\"smallest\" />\n          <pre>{allTrainingLog}</pre>\n        </>\n      ) : (\n        <>\n          <ListItem title=\"Status\">\n            <CameraStatus online={isCameraOnline} />\n          </ListItem>\n          <ListItem title=\"Configured for\">\n            {parts\n              .filter((e) => project.parts.includes(e.id))\n              .map((e) => e.name)\n              .join(', ')}\n          </ListItem>\n          <Flex column gap=\"gap.small\">\n            <LiveViewContainer showVideo={true} initialAOIData={AOIs} cameraId={project.camera} />\n          </Flex>\n          <Grid columns={2} styles={{ rowGap: '20px' }}>\n            <ListItem title=\"Success Rate\">\n              <Text styles={{ color: 'rgb(244, 152, 40)', fontWeight: 'bold' }} size=\"large\">\n                {`${inferenceMetrics.successRate}%`}\n              </Text>\n            </ListItem>\n            <ListItem title={`Running on ${inferenceMetrics.isGpu ? 'GPU' : 'CPU'} (accelerated)`}>{`${\n              Math.round(inferenceMetrics.averageTime * 100) / 100\n            }/ms`}</ListItem>\n            <ListItem title=\"Successful Inferences\">{inferenceMetrics.successfulInferences}</ListItem>\n          </Grid>\n          <ListItem title=\"Unidentified Items\">\n            <Text styles={{ margin: '5px' }} size=\"large\">\n              {inferenceMetrics.unIdetifiedItems}\n            </Text>\n            <Button\n              content=\"Identify Manually\"\n              primary\n              styles={{\n                backgroundColor: 'red',\n                marginLeft: '100px',\n                ':hover': {\n                  backgroundColor: '#A72037',\n                },\n                ':active': {\n                  backgroundColor: '#8E192E',\n                },\n              }}\n              as={Link}\n              to=\"/manual\"\n            />\n          </ListItem>\n          {trainingMetrics.prevConsequence && (\n            <>\n              <Text>Previous Model Metrics</Text>\n              <ConsequenceDashboard\n                precision={trainingMetrics.prevConsequence?.precision}\n                recall={trainingMetrics.prevConsequence?.recall}\n                mAP={trainingMetrics.prevConsequence?.mAP}\n              />\n            </>\n          )}\n          <Text>Updated Model Metrics</Text>\n          <ConsequenceDashboard\n            precision={trainingMetrics.curConsequence?.precision}\n            recall={trainingMetrics.curConsequence?.recall}\n            mAP={trainingMetrics.curConsequence?.mAP}\n          />\n          <Button primary disabled={isDemo} onClick={onDeleteConfigure}>\n            Delete Configuration\n          </Button>\n          <Button primary as={Link} to=\"/partIdentification\">\n            Edit Configuration\n          </Button>\n        </>\n      )}\n    </Flex>\n  );\n};\n\n/**\n * Retrun a string which contains all logs get from server during training\n * @param trainingLog The log get from the api export\n */\nconst useAllTrainingLog = (trainingLog: string): string => {\n  const [allLogs, setAllLogs] = useState(trainingLog);\n  useEffect(() => {\n    setAllLogs((prev) => `${prev}\\n${trainingLog}`);\n  }, [trainingLog]);\n  return allLogs;\n};\n\ninterface ConsequenceDashboardProps {\n  precision: number;\n  recall: number;\n  mAP: number;\n}\nconst ConsequenceDashboard: FC<ConsequenceDashboardProps> = ({ precision, recall, mAP }) => {\n  return (\n    <Grid columns={3}>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Precision\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#9a0089' }}>\n          {precision === null ? '' : `${((precision * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Recall\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#0063b1' }}>\n          {recall === null ? '' : `${((recall * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          mAP\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#69c138' }}>\n          {mAP === null ? '' : `${((mAP * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n    </Grid>\n  );\n};\n\nconst ListItem = ({ title, children }): JSX.Element => {\n  return (\n    <Flex vAlign=\"center\">\n      <Text style={{ width: '200px' }} size=\"large\">{`${title}: `}</Text>\n      {typeof children === 'string' || typeof children === 'number' ? (\n        <Text size=\"large\">{children}</Text>\n      ) : (\n        children\n      )}\n    </Flex>\n  );\n};\n\nconst CameraStatus = ({ online }): JSX.Element => {\n  const text = online ? 'Online' : 'Offline';\n  const state = online ? 'success' : 'unknown';\n\n  return (\n    <Flex gap=\"gap.smaller\" vAlign=\"center\">\n      <Status state={state} />\n      <Text styles={{ margin: '5px' }} size=\"large\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const CreateCameraConfig: React.FC = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <h1>Configuration</h1>\n      <Flex hAlign=\"center\" vAlign=\"center\" design={{ height: '100%' }} column gap=\"gap.large\">\n        <Button\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular color=\"brand\" />}\n          style={{ width: 100, height: 100, border: '5px solid #0094d8' }}\n          color=\"brand\"\n          as={Link}\n          to=\"/partIdentification\"\n        />\n        <h2>Configure Task for the Device</h2>\n      </Flex>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CameraDetailInfo from '../components/CameraDetails/CameraDetailInfo';\nimport { CameraConfigureInfo, CreateCameraConfig } from '../components/CameraConfigure';\nimport { getCameras } from '../store/camera/cameraActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { State } from '../store/State';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { useQuery } from '../hooks/useQuery';\nimport { AOIData } from '../type';\n\nconst CameraDetails: FC = (): JSX.Element => {\n  const cameraIdInproject = useSelector<State, number>((state) => state.project.data.camera);\n  const projectId = useSelector<State, number>((state) => state.project.data.id);\n  const dispatch = useDispatch();\n  const name = useQuery().get('name');\n  const isDemo = useQuery().get('isDemo');\n  const camera = useSelector<State, Camera>((state) => state.cameras.find((ele) => ele.name === name));\n\n  useEffect(() => {\n    dispatch(thunkGetProject(isDemo === 'true'));\n    dispatch(getCameras());\n  }, [dispatch, isDemo]);\n\n  if (!camera) return <Redirect to=\"/cameras\" />;\n\n  const hasProject = cameraIdInproject === camera.id;\n  const aoiData = getAOIData(camera.area);\n\n  return (\n    <Grid columns=\"2\" design={{ height: '100%' }}>\n      <CameraDetailInfo id={camera.id} name={name} rtsp={camera.rtsp} />\n      {hasProject ? <CameraConfigureInfo projectId={projectId} AOIs={aoiData} /> : <CreateCameraConfig />}\n    </Grid>\n  );\n};\n\nexport default CameraDetails;\n\nconst getAOIData = (cameraArea: string): AOIData => {\n  try {\n    return JSON.parse(cameraArea);\n  } catch (e) {\n    return {\n      useAOI: false,\n      AOIs: [],\n    };\n  }\n};\n","import { Size2D } from '../../../store/labelingPage/labelingPageTypes';\n\nconst getResizeImageFunction = (defaultSize: Size2D) => (size: Size2D): [Size2D, number] => {\n  if (size.width !== 0) {\n    if (size.width > size.height) {\n      const scaleX = defaultSize.width / size.width;\n\n      return [{ width: defaultSize.width, height: size.height * scaleX }, scaleX];\n    }\n    const scaleY = defaultSize.height / size.height;\n\n    return [{ height: defaultSize.height, width: size.width * scaleY }, scaleY];\n  }\n  return [defaultSize, 1];\n};\n\nexport default getResizeImageFunction;\n","import {\n  Annotation,\n  AnnotationState,\n  BoxObject,\n  Position2D,\n  REQUEST_ANNOTATION_SUCCESS,\n  REMOVE_ANNOTATION,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  UPDATE_ANNOTATION,\n  RESET_ANNOTATION,\n  RequestAnnotationSuccessAction,\n  CreateAnnotationAction,\n  UpdateAnnotationAction,\n  UpdateCreatingAnnotationAction,\n  RemoveAnnotationAction,\n  ResetAnnotationAction,\n} from './labelingPageTypes';\n\nexport const requestAnnotationsSuccess = (data: Annotation[]): RequestAnnotationSuccessAction => ({\n  type: REQUEST_ANNOTATION_SUCCESS,\n  payload: { annotations: data },\n});\n\nexport const getAnnotations = (imageId: number) => (dispatch, getState): void => {\n  const { images } = getState();\n  const { labels } = images.find((image) => image.id === imageId);\n\n  if (labels === null) {\n    dispatch(requestAnnotationsSuccess([]));\n  } else {\n    const annotations: Annotation[] = JSON.parse(labels).map((parsedLabels, i) => ({\n      id: i,\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n\n    dispatch(requestAnnotationsSuccess(annotations));\n  }\n};\n\nexport const createAnnotation = (pos: Position2D): CreateAnnotationAction => {\n  const annotation = BoxObj.createWithPoint(pos, '');\n  return {\n    type: CREATE_ANNOTATION,\n    payload: { annotation },\n  };\n};\n\nexport const updateCreatingAnnotation = (pos: Position2D): UpdateCreatingAnnotationAction => {\n  const updater = (annotation: Annotation): Annotation => BoxObj.add(pos, annotation);\n  return {\n    type: UPDATE_CREATING_ANNOTATION,\n    payload: { updater },\n  };\n};\n\nexport const updateAnnotation = (index: number = null, annotation: Annotation): UpdateAnnotationAction => ({\n  type: UPDATE_ANNOTATION,\n  payload: { index, annotation: BoxObj.setVerticesToValidValue(annotation) },\n});\n\nexport const removeAnnotation = (index: number = null): RemoveAnnotationAction => ({\n  type: REMOVE_ANNOTATION,\n  payload: { index },\n});\n\nexport const resetAnnotation = (): ResetAnnotationAction => ({\n  type: RESET_ANNOTATION,\n});\n\n// * Annotation Functions\nexport const BoxObj: BoxObject = {\n  init(): Annotation {\n    return {\n      id: null,\n      label: { x1: 0, y1: 0, x2: 0, y2: 0 },\n      attribute: '',\n      annotationState: AnnotationState.Empty,\n    };\n  },\n  createWithPoint(p: Position2D, attribute) {\n    const obj = {\n      ...this.init(),\n      attribute,\n    };\n    return this.add(p, obj);\n  },\n  add({ x, y }, obj) {\n    // make the original object immutable, for future history usage\n    const newObj = { ...obj };\n\n    if (obj.annotationState === AnnotationState.Empty) {\n      newObj.label.x1 = x;\n      newObj.label.y1 = y;\n      newObj.label.x2 = x; // initialize x2 y2\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.P1Added;\n    } else if (obj.annotationState === AnnotationState.P1Added) {\n      newObj.label.x2 = x;\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.Finish;\n    }\n\n    return this.setVerticesToValidValue(newObj);\n  },\n  setVerticesToInt(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    newObj.label = {\n      x1: Math.round(x1),\n      y1: Math.round(y1),\n      x2: Math.round(x2),\n      y2: Math.round(y2),\n    };\n    return newObj;\n  },\n  setVerticesPointsOrder(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    if (x1 > x2) {\n      newObj.label.x1 = x2;\n      newObj.label.x2 = x1;\n    }\n    if (y1 > y2) {\n      newObj.label.y1 = y2;\n      newObj.label.y2 = y1;\n    }\n\n    return newObj;\n  },\n  setVerticesToValidValue(object: Annotation): Annotation {\n    return this.setVerticesPointsOrder(this.setVerticesToInt(object));\n  },\n  // setFinished(obj: Annotation): Annotation {\n  //   if (obj.state === AnnotationState.Created) return;\n\n  //   const newObj = R.clone(obj);\n  //   newObj.state = AnnotationState.Created;\n  //   newObj.creatingState = undefined;\n\n  //   return newObj;\n  // },\n  // setStateCreated(idx: number, annotations: Annotation[]): Annotation[] {\n  //   const { creatingState } = annotations[idx];\n\n  //   if (creatingState === 'addedX2Y2') return R.update(idx, this.setFinished, annotations);\n  //   if (creatingState === 'addedX1Y1') return R.remove(idx, 1, annotations);\n  //   return R.clone(annotations);\n  // },\n};\n","import React, { useState, useRef, useEffect, FC, useCallback } from 'react';\nimport { Line, Group, Circle } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport {\n  BoxLabel,\n  Box2dComponentProps,\n  WorkState,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport { updateAnnotation } from '../../store/labelingPage/labelingPageActions';\n\nexport const Box2d: FC<Box2dComponentProps> = ({\n  scale,\n  workState,\n  onSelect,\n  selected,\n  annotationIndex,\n  visible = true,\n  annotation,\n  dispatch,\n  changeCursorState = null,\n}) => {\n  const [vertices, setVertices] = useState<BoxLabel>(annotation.label);\n  const anchorRadius: number = 5 / scale;\n  const strokeWidth: number = 2 / scale;\n  const boxRef = useRef(null);\n\n  const dispatchLabel = (): void => {\n    changeCursorState();\n\n    if (!dispatch) return;\n    const newAnnotation = { ...annotation };\n    newAnnotation.label = vertices;\n    dispatch(updateAnnotation(annotationIndex, newAnnotation));\n  };\n\n  const mouseMoveListener = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (workState === WorkState.Creating && selected) {\n        setVertices((prev) => ({ ...prev, x2: e.evt.offsetX / scale, y2: e.evt.offsetY / scale }));\n      }\n    },\n    [workState, setVertices, selected, scale],\n  );\n\n  const onDragAnchor = useCallback(\n    ({ xi = 'x1', yi = 'y1' }) => (e: KonvaEventObject<DragEvent>): void => {\n      const stage = e.target.getStage();\n      const { width, height } = stage.getSize();\n      let x = Math.round(e.target.position().x);\n      let y = Math.round(e.target.position().y);\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > width / scale) x = width / scale;\n      if (y > height / scale) y = height / scale;\n      // * Round the anchor (circle) position so user can only drag anchor on integer.\n      e.target.setAttr('x', x);\n      e.target.setAttr('y', y);\n\n      const anotherPosXArr = ['x1', 'x2'];\n      const anotherPosYArr = ['y1', 'y2'];\n      anotherPosXArr.splice(\n        anotherPosXArr.findIndex((xx) => xx === xi),\n        1,\n      );\n      anotherPosYArr.splice(\n        anotherPosYArr.findIndex((yy) => yy === yi),\n        1,\n      );\n      if (vertices[anotherPosXArr[0]] > vertices[xi]) {\n        if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n          changeCursorState(LabelingCursorStates.nwseResize);\n        } else {\n          changeCursorState(LabelingCursorStates.neswResize);\n        }\n      } else if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n        changeCursorState(LabelingCursorStates.neswResize);\n      } else {\n        changeCursorState(LabelingCursorStates.nwseResize);\n      }\n\n      setVertices((prevVertices) => ({ ...prevVertices, [xi]: x, [yi]: y }));\n    },\n    [changeCursorState, scale, vertices],\n  );\n\n  useEffect(() => {\n    const layer = boxRef.current.getLayer();\n    layer.on('mousemove', mouseMoveListener);\n    return (): void => {\n      layer.off('mousemove', mouseMoveListener);\n    };\n  }, [mouseMoveListener]);\n  useEffect(() => {\n    setVertices(annotation.label);\n  }, [annotation.label]);\n\n  return (\n    <Group\n      ref={(e): void => {\n        if (e) {\n          boxRef.current = e;\n        }\n      }}\n      visible={visible}\n      onMouseDown={(e): void => {\n        if (workState === WorkState.None) {\n          onSelect(annotationIndex);\n          e.cancelBubble = true;\n        }\n      }}\n    >\n      <Line\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke=\"red\"\n        strokeWidth={strokeWidth}\n        closed={true}\n      />\n      <Group visible={selected}>\n        <Circle\n          key={'anchor-0'}\n          name={'anchor-0'}\n          x={vertices.x1}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-1'}\n          name={'anchor-1'}\n          x={vertices.x2}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-2'}\n          name={'anchor-2'}\n          x={vertices.x2}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-3'}\n          name={'anchor-3'}\n          x={vertices.x1}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n      </Group>\n    </Group>\n  );\n};\n\nexport const DisplayBox: FC<{ vertices: BoxLabel; color: string; scale: number }> = ({\n  scale,\n  vertices,\n  color,\n}) => {\n  return (\n    <>\n      <Line\n        ref={(ref): void => {\n          if (ref) ref.cache();\n        }}\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke={color}\n        strokeWidth={1 / scale}\n        closed={true}\n      />\n      <Circle x={vertices.x1} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y2} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x1} y={vertices.y2} radius={3 / scale} fill={color} />\n    </>\n  );\n};\n","import React, { FC, memo, Dispatch, useState, useEffect } from 'react';\nimport { Group, Line, Rect } from 'react-konva';\n\nimport { Size2D, LabelingCursorStates, BoxLabel } from '../../store/labelingPage/labelingPageTypes';\n\ninterface RemoveBoxButtonProps {\n  visible: boolean;\n  imageSize: Size2D;\n  label: BoxLabel;\n  changeCursorState: (cursorType?: LabelingCursorStates) => void;\n  scale: number;\n  setShowOuterRemoveButton: Dispatch<boolean>;\n  removeBox: () => void;\n}\nconst RemoveBoxButton: FC<RemoveBoxButtonProps> = ({\n  visible,\n  imageSize,\n  label,\n  changeCursorState,\n  scale,\n  setShowOuterRemoveButton,\n  removeBox,\n}) => {\n  const [color, setColor] = useState<string>('#F9526B');\n  const [strokeWidth, setStrokeWidth] = useState<number>(1.5 / scale);\n  let x: number;\n  let y: number;\n\n  if (\n    label.x1 < 0 ||\n    label.x2 > imageSize.width / scale ||\n    label.y1 < 0 ||\n    label.y2 > imageSize.height / scale\n  ) {\n    x = 0;\n    y = -60;\n  } else if (label.x1 > 30 / scale || label.x2 < (imageSize.width - 25) / scale) {\n    if (label.x1 > 30 / scale) x = label.x1 - 20 / scale;\n    else x = label.x2 + 25 / scale;\n\n    if (label.y1 > 12 / scale) {\n      y = label.y1 - 10 / scale;\n    } else {\n      y = label.y1 + 12 / scale;\n    }\n  } else {\n    x = 12 / scale;\n    if (label.y1 > 20 / scale) {\n      y = label.y1 - 20 / scale;\n    } else {\n      // * Make remove button disappear\n      y = -60;\n    }\n  }\n  if (y === -60) setShowOuterRemoveButton(true);\n  else setShowOuterRemoveButton(false);\n\n  useEffect(() => {\n    setStrokeWidth(1.5 / scale);\n  }, [scale]);\n\n  return (\n    <Group\n      visible={visible}\n      x={x}\n      y={y}\n      onMouseEnter={(): void => {\n        changeCursorState(LabelingCursorStates.pointer);\n        setColor('#E73550');\n        setStrokeWidth(3 / scale);\n      }}\n      onMouseLeave={(): void => {\n        changeCursorState();\n        setColor('#F9526B');\n        setStrokeWidth(1.5 / scale);\n      }}\n      onClick={(e): void => {\n        removeBox();\n        e.cancelBubble = true;\n      }}\n    >\n      <Rect x={-5 / scale} y={-5 / scale} width={10 / scale} height={10 / scale} />\n      <Line\n        points={[-5 / scale, -5 / scale, 5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n      <Line\n        points={[5 / scale, -5 / scale, -5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n    </Group>\n  );\n};\n\nexport default memo(RemoveBoxButton);\n","import React, { FC, useState, useEffect, useCallback, useRef, Dispatch, useMemo } from 'react';\nimport { Button, CloseIcon } from '@fluentui/react-northstar';\nimport { Stage, Layer, Image, Group, Text as KonvaText } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useDispatch } from 'react-redux';\n\nimport useImage from './util/useImage';\nimport getResizeImageFunction from './util/resizeImage';\nimport { Box2d } from './Box';\nimport {\n  Size2D,\n  Annotation,\n  WorkState,\n  LabelingType,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport {\n  createAnnotation,\n  updateCreatingAnnotation,\n  removeAnnotation,\n} from '../../store/labelingPage/labelingPageActions';\nimport RemoveBoxButton from './RemoveBoxButton';\n\nconst defaultSize: Size2D = {\n  width: 800,\n  height: 600,\n};\n\ninterface SceneProps {\n  url?: string;\n  labelingType: LabelingType;\n  annotations: Annotation[];\n  workState: WorkState;\n  setWorkState: Dispatch<WorkState>;\n}\nconst Scene: FC<SceneProps> = ({ url = '', labelingType, annotations, workState, setWorkState }) => {\n  const dispatch = useDispatch();\n  const resizeImage = useCallback(getResizeImageFunction(defaultSize), [defaultSize]);\n  const [imageSize, setImageSize] = useState<Size2D>(defaultSize);\n  const noMoreCreate = useMemo(\n    () => labelingType === LabelingType.SingleAnnotation && annotations.length === 1,\n    [labelingType, annotations],\n  );\n  const [cursorState, setCursorState] = useState<LabelingCursorStates>(LabelingCursorStates.default);\n  const [image, status, size] = useImage(url, 'anonymous');\n  const [selectedAnnotationIndex, setSelectedAnnotationIndex] = useState<number>(null);\n  const [showOuterRemoveButton, setShowOuterRemoveButton] = useState<boolean>(false);\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const scale = useRef<number>(1);\n  const changeCursorState = useCallback(\n    (cursorType?: LabelingCursorStates): void => {\n      if (!cursorType) {\n        if (noMoreCreate) {\n          setCursorState(LabelingCursorStates.default);\n        } else {\n          setCursorState(LabelingCursorStates.crosshair);\n        }\n      } else {\n        setCursorState(cursorType);\n      }\n    },\n    [noMoreCreate],\n  );\n  const removeBox = useCallback((): void => {\n    dispatch(removeAnnotation(selectedAnnotationIndex));\n    setWorkState(WorkState.None);\n    setShowOuterRemoveButton(false);\n  }, [dispatch, selectedAnnotationIndex, setWorkState, setShowOuterRemoveButton]);\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate || workState === WorkState.Creating) return;\n\n    dispatch(createAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }));\n    setSelectedAnnotationIndex(annotations.length - 1);\n    setWorkState(WorkState.Creating);\n  };\n\n  const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\n    if (workState === WorkState.Creating) {\n      dispatch(\n        updateCreatingAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }),\n      );\n      if (annotations.length - 1 === selectedAnnotationIndex) {\n        setWorkState(WorkState.Selecting);\n      } else {\n        setWorkState(WorkState.None);\n      }\n    }\n  };\n\n  const onSelect = (index: number): void => {\n    setSelectedAnnotationIndex(index);\n    setWorkState(WorkState.Selecting);\n  };\n\n  useEffect(() => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) {\n      changeCursorState();\n      setSelectedAnnotationIndex(0);\n    } else {\n      changeCursorState();\n    }\n  }, [noMoreCreate, changeCursorState]);\n  useEffect(() => {\n    if (workState === WorkState.None && !noMoreCreate) setSelectedAnnotationIndex(null);\n  }, [workState, noMoreCreate]);\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  const isLoading = status === 'loading' || (imageSize.height === 0 && imageSize.width === 0);\n\n  return (\n    <div style={{ margin: '0.2em' }}>\n      {annotations.length !== 0 &&\n      showOuterRemoveButton &&\n      !isDragging &&\n      workState !== WorkState.Creating ? (\n        <Button\n          iconOnly\n          text\n          styles={{ color: '#F9526B', ':hover': { color: '#E73550' } }}\n          content={<CloseIcon size=\"large\" />}\n          onClick={removeBox}\n        />\n      ) : (\n        <div style={{ height: '2em' }} />\n      )}\n      <Stage\n        width={imageSize.width}\n        height={imageSize.height}\n        scale={{ x: scale.current, y: scale.current }}\n        style={{ cursor: cursorState }}\n      >\n        <Layer\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onDragStart={(): void => {\n            setIsDragging(true);\n          }}\n          onDragEnd={(): void => {\n            setIsDragging(false);\n          }}\n        >\n          <Image image={image} />\n          {!isLoading &&\n            annotations.map((annotation, i) => (\n              <Group key={i}>\n                <RemoveBoxButton\n                  imageSize={imageSize}\n                  visible={!isDragging && workState !== WorkState.Creating && i === selectedAnnotationIndex}\n                  label={annotation.label}\n                  scale={scale.current}\n                  changeCursorState={changeCursorState}\n                  setShowOuterRemoveButton={setShowOuterRemoveButton}\n                  removeBox={removeBox}\n                />\n                <Box2d\n                  workState={workState}\n                  onSelect={onSelect}\n                  annotation={annotation}\n                  scale={scale.current}\n                  annotationIndex={i}\n                  selected={i === selectedAnnotationIndex}\n                  dispatch={dispatch}\n                  changeCursorState={changeCursorState}\n                />\n              </Group>\n            ))}\n          {isLoading && (\n            <KonvaText\n              x={imageSize.width / 2 - 50}\n              y={imageSize.height / 2 - 25}\n              fontSize={50}\n              text=\"Loading...\"\n              fill=\"rgb(255, 0, 0)\"\n            />\n          )}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Scene;\n","import axios from 'axios';\nimport {\n  LabelImage,\n  GetLabelImagesSuccess,\n  GET_LABEL_IMAGE_SUCCESS,\n  DeleteLabelImageSuccess,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  PostLabelImageSuccess,\n  POST_LABEL_IMAGE_SUCCESS,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n  UpdateLabelImageAnnotation,\n} from './imageTypes';\nimport { Annotation } from '../labelingPage/labelingPageTypes';\n\nconst getLabelImagesSuccess = (data: LabelImage[]): GetLabelImagesSuccess => ({\n  type: GET_LABEL_IMAGE_SUCCESS,\n  payload: data,\n});\n\nconst deleteLabelImageSuccess = (id: number): DeleteLabelImageSuccess => ({\n  type: DELETE_LABEL_IMAGE_SUCCESS,\n  payload: { id },\n});\n\nconst requestLabelImagesFailure = (error: any): any => {\n  console.error(error);\n  return { type: REQUEST_LABEL_IMAGE_FAILURE };\n};\n\nconst postLabelImageSuccess = (image: LabelImage): PostLabelImageSuccess => ({\n  type: POST_LABEL_IMAGE_SUCCESS,\n  payload: image,\n});\n\nexport const getLabelImages = () => (dispatch): Promise<void> => {\n  return axios('/api/images/')\n    .then(({ data }) => {\n      dispatch(getLabelImagesSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\n\nexport const postLabelImage = (newImage: LabelImage | FormData) => (dispatch): Promise<void> => {\n  return axios('/api/images/', {\n    method: 'POST',\n    data: newImage,\n  })\n    .then(({ data }) => {\n      dispatch(postLabelImageSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const deleteLabelImage = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/images/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteLabelImageSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const saveLabelImageAnnotation = (imageId: number, annotations: Annotation[]) => (\n  dispatch,\n): Promise<void> => {\n  const url = `/api/images/${imageId}/`;\n  return axios({\n    url,\n    method: 'PATCH',\n    data: {\n      labels: JSON.stringify(annotations.map((e) => e.label)),\n    },\n  })\n    .then(({ data }) => {\n      console.info('Save successfully');\n      dispatch(updateLabelImageAnnotation(data.id, data.labels));\n      // dispatch(requestAnnotationsSuccess(annotations));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const updateLabelImageAnnotation = (imageId: number, labels: any): UpdateLabelImageAnnotation => ({\n  type: UPDATE_LABEL_IMAGE_ANNOTATION,\n  payload: { id: imageId, labels },\n});","import React, { FC } from 'react';\nimport { Flex, Button, ChevronStartIcon, ChevronEndIcon } from '@fluentui/react-northstar';\n\ninterface PrevNextButtonProps {\n  isRelabel: boolean;\n  prevDisabled: boolean;\n  nextDisabled: boolean;\n  onPrevClick: () => void;\n  onNextClick: () => void;\n}\nconst PrevNextButton: FC<PrevNextButtonProps> = ({\n  isRelabel,\n  children,\n  prevDisabled,\n  nextDisabled,\n  onPrevClick,\n  onNextClick,\n}) => {\n  return (\n    <Flex vAlign=\"center\">\n      {!isRelabel && (\n        <Button\n          text\n          disabled={prevDisabled}\n          icon={<ChevronStartIcon size=\"larger\" />}\n          onClick={onPrevClick}\n        />\n      )}\n      {children}\n      {!isRelabel && (\n        <Button text disabled={nextDisabled} icon={<ChevronEndIcon size=\"larger\" />} onClick={onNextClick} />\n      )}\n    </Flex>\n  );\n};\n\nexport default PrevNextButton;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Button, Text } from '@fluentui/react-northstar';\n\nimport Scene from '../components/LabelingPage/Scene';\nimport { LabelingType, Annotation, WorkState } from '../store/labelingPage/labelingPageTypes';\nimport { State } from '../store/State';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getAnnotations, resetAnnotation } from '../store/labelingPage/labelingPageActions';\nimport { saveLabelImageAnnotation } from '../store/image/imageActions';\nimport { RelabelImage } from '../components/ManualIdentification/types';\nimport PrevNextButton from '../components/LabelingPage/PrevNextButton';\n\ninterface LabelingPageProps {\n  labelingType: LabelingType;\n  images: LabelImage[] | RelabelImage[];\n  imageIndex: number;\n  closeDialog: () => void;\n  isRelabel: boolean;\n}\nconst LabelingPage: FC<LabelingPageProps> = ({\n  labelingType,\n  images,\n  imageIndex,\n  closeDialog,\n  isRelabel,\n}) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState<number>(imageIndex);\n  const [workState, setWorkState] = useState<WorkState>(WorkState.None);\n\n  const annotations = useSelector<State, Annotation[]>((state) => state.labelingPageState.annotations);\n\n  const isOnePointBox = checkOnePointBox(annotations);\n  const imageUrl = images[index]?.image;\n  const imageId = images[index]?.id;\n\n  useEffect(() => {\n    if (typeof imageId === 'number') dispatch(getAnnotations(imageId));\n    return (): void => {\n      dispatch(resetAnnotation());\n    };\n  }, [dispatch, imageId]);\n\n  return (\n    <Flex column hAlign=\"center\">\n      <Text size=\"larger\" weight=\"semibold\">\n        DRAW A RECTANGLE AROUND THE PART\n      </Text>\n      <Text size=\"larger\" styles={{ alignSelf: 'flex-start' }}>\n        {index}\n      </Text>\n      <PrevNextButton\n        isRelabel={isRelabel}\n        prevDisabled={index === 0 || workState === WorkState.Creating || isOnePointBox}\n        nextDisabled={index === images.length - 1 || workState === WorkState.Creating || isOnePointBox}\n        onPrevClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev - 1 + images.length) % images.length);\n        }}\n        onNextClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev + 1) % images.length);\n        }}\n      >\n        <Scene\n          url={imageUrl ?? '/icons/Play.png'}\n          annotations={annotations}\n          workState={workState}\n          setWorkState={setWorkState}\n          labelingType={labelingType}\n        />\n      </PrevNextButton>\n      <Flex gap=\"gap.medium\">\n        <Button\n          primary\n          content={index === images.length - 1 ? 'Save and Done' : 'Save and Next'}\n          disabled={isOnePointBox || workState === WorkState.Creating}\n          onClick={(): void => {\n            dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n            if (index === images.length - 1) closeDialog();\n            setIndex((prev) => (prev + 1) % images.length);\n          }}\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            closeDialog();\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst checkOnePointBox = (annotations: Annotation[]): boolean => {\n  if (annotations.length === 0) return false;\n  const { label } = annotations[annotations.length - 1];\n  return label.x1 === label.x2 && label.y1 === label.y2;\n};\n\nexport default LabelingPage;\n","import React, { memo, FC, useState } from 'react';\nimport { Dialog } from '@fluentui/react-northstar';\n\nimport LabelingPage from '../pages/LabelingPage';\nimport { LabelingType } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { RelabelImage } from './ManualIdentification/types';\n\ninterface LabelingPageDialogProps {\n  trigger: JSX.Element;\n  imageIndex: number;\n  images: LabelImage[] | RelabelImage[];\n  isRelabel: boolean;\n}\nconst LabelingPageDialog: FC<LabelingPageDialogProps> = ({\n  trigger,\n  images,\n  imageIndex,\n  isRelabel,\n}): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '80%' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      content={\n        <LabelingPage\n          closeDialog={(): void => setOpen(false)}\n          labelingType={LabelingType.SingleAnnotation}\n          images={images}\n          imageIndex={imageIndex}\n          isRelabel={isRelabel}\n        />\n      }\n    />\n  );\n};\n\nexport default memo(LabelingPageDialog);\n","import React, { useEffect, useMemo, useCallback, useLayoutEffect, memo, MouseEvent, FC, useRef } from 'react';\nimport Konva from 'konva';\nimport { Text } from '@fluentui/react-northstar';\n\nimport useImage from './LabelingPage/util/useImage';\nimport { AnnotationState, Annotation, Size2D } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport getResizeImageFunction from './LabelingPage/util/resizeImage';\n\ninterface LabelDisplayImageProps {\n  labelImage: LabelImage;\n  labelText?: string;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst LabelDisplayImage: FC<LabelDisplayImageProps> = ({\n  labelImage,\n  labelText = '',\n  pointerCursor = false,\n  onClick,\n}) => {\n  const stage = useRef<Konva.Stage>(null);\n  const layer = useRef<Konva.FastLayer>(null);\n  const img = useRef<Konva.Image>(null);\n\n  const imgSize = useRef<Size2D>({ width: 400, height: 300 });\n  const imgScale = useRef<number>(1);\n  const shapes = useRef<BoxShape[]>([]);\n  const [image, , size] = useImage(labelImage.image, 'anonymous');\n  const resizeImage = useCallback(getResizeImageFunction(imgSize.current), [imgSize.current]);\n\n  const annotations = useMemo<Annotation[]>(() => {\n    if (!labelImage?.labels) return [];\n\n    return JSON.parse(labelImage.labels).map((parsedLabels, i) => ({\n      id: i,\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n  }, [labelImage]);\n  useLayoutEffect(() => {\n    const container: HTMLDivElement = document.querySelector('#container');\n    const width = container.offsetWidth;\n    const height = container.offsetHeight;\n    imgSize.current = { width, height };\n  }, []);\n  useEffect(() => {\n    if (size.width > 0) {\n      if (layer.current === null) {\n        const [outcomeSize, outcomeScale] = resizeImage(size);\n        imgScale.current = outcomeScale;\n\n        stage.current = new Konva.Stage({\n          height: outcomeSize.height,\n          width: outcomeSize.width,\n          scale: { x: outcomeScale, y: outcomeScale },\n          container: `display-${labelImage.id}`,\n        });\n\n        layer.current = new Konva.FastLayer();\n\n        img.current = new Konva.Image({ image });\n\n        layer.current.add(img.current);\n        stage.current.add(layer.current);\n      }\n      const newShapes = annotations.map((e) => annotationToShape(e, imgScale.current));\n\n      for (let i = 0; i < shapes.current.length; i++) {\n        shapes.current[i].edge.destroy();\n        shapes.current[i].points.forEach((e) => e.destroy());\n      }\n\n      shapes.current = newShapes;\n      for (let i = 0; i < newShapes.length; i++) {\n        const { points, edge } = newShapes[i];\n        layer.current.add(edge);\n\n        for (let j = 0; j < points.length; j++) {\n          layer.current.add(points[j]);\n        }\n      }\n\n      layer.current.draw();\n    }\n  }, [size, image, resizeImage, labelImage.id, annotations]);\n\n  return (\n    <div\n      onClick={onClick}\n      id=\"container\"\n      style={{\n        cursor: pointerCursor ? 'pointer' : 'default',\n        display: 'flex',\n        flexFlow: 'column',\n        height: '100%',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <div id={`display-${labelImage.id}`} />\n      <Text align=\"center\">{labelText}</Text>\n    </div>\n  );\n};\n\ntype BoxShape = {\n  id: number;\n  edge: Konva.Line;\n  points: Konva.Circle[];\n};\nconst annotationToShape = (annotation: Annotation, imgScale: number): BoxShape => {\n  const { id, label } = annotation;\n  const edge = new Konva.Line({\n    points: [\n      label.x1,\n      label.y1,\n      label.x2,\n      label.y1,\n      label.x2,\n      label.y2,\n      label.x1,\n      label.y2,\n      label.x1,\n      label.y1,\n    ],\n    stroke: 'red',\n    strokeWidth: 1 / imgScale,\n    closed: true,\n  });\n\n  const points = [];\n\n  points.push(new Konva.Circle({ x: label.x1, y: label.y1, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x1, y: label.y2, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x2, y: label.y2, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x2, y: label.y1, radius: 3 / imgScale, fill: 'red' }));\n\n  return {\n    id,\n    edge,\n    points,\n  };\n};\n\nexport default memo(LabelDisplayImage);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Image, Tooltip, Flex } from '@fluentui/react-northstar';\n\nimport { thunkAddCapturedImages } from '../../store/part/partActions';\nimport { RTSPVideoProps } from './RTSPVideo.type';\n\nexport const RTSPVideoComponent: React.FC<RTSPVideoProps> = ({\n  rtsp = null,\n  partId,\n  canCapture,\n  onVideoStart,\n  onVideoPause,\n}) => {\n  const [streamId, setStreamId] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const onCreateStream = (): void => {\n    let url = `/api/streams/connect/?part_id=${partId}&rtsp=${rtsp}`;\n    if (!canCapture) url += '&inference=1';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.status === 'ok') {\n          setStreamId(data.stream_id);\n        }\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoStart) onVideoStart();\n  };\n\n  const onCapturePhoto = (): void => {\n    dispatch(thunkAddCapturedImages(streamId));\n  };\n\n  const onDisconnect = (): void => {\n    setStreamId('');\n    fetch(`/api/streams/${streamId}/disconnect`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoPause) onVideoPause();\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onDisconnect);\n    return (): void => {\n      window.removeEventListener('beforeunload', onDisconnect);\n    };\n  });\n\n  const src = streamId ? `/api/streams/${streamId}/video_feed` : '';\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '30rem', backgroundColor: 'black' }}>\n        {src ? <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'contain' }} /> : null}\n      </div>\n      <Flex styles={{ height: '50px' }} hAlign=\"center\" gap=\"gap.large\">\n        <ImageBtn\n          name=\"Play\"\n          src=\"/icons/play-button.png\"\n          disabled={rtsp === null}\n          onClick={onCreateStream}\n        />\n        {canCapture && (\n          <ImageBtn\n            name=\"Capture\"\n            src=\"/icons/screenshot.png\"\n            disabled={!streamId}\n            onClick={onCapturePhoto}\n          />\n        )}\n        <ImageBtn name=\"Stop\" src=\"/icons/stop.png\" disabled={!streamId} onClick={onDisconnect} />\n      </Flex>\n    </>\n  );\n};\n\nexport const RTSPVideo = React.memo(RTSPVideoComponent);\n\nconst ImageBtn = ({ src, name, disabled = false, onClick = () => {} }): JSX.Element => {\n  if (disabled) return <Image src={src} styles={{ height: '100%', filter: 'opacity(50%)' }} />;\n\n  return (\n    <Tooltip content={name}>\n      <Image src={src} styles={{ height: '100%', cursor: 'pointer' }} onClick={onClick} />\n    </Tooltip>\n  );\n};\n","import {\n  AddCapturedImageAction,\n  ADD_CAPTURED_IMAGE,\n  PartThunk,\n  UpdateCapturedImageAction,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\nimport { LabelImage } from '../image/imageTypes';\nimport { getLabelImages } from '../image/imageActions';\n\nexport const addCapturedImages = (newCapturedImage: LabelImage): AddCapturedImageAction => ({\n  type: ADD_CAPTURED_IMAGE,\n  payload: { newCapturedImage },\n});\n\nexport const updateCapturedImages = (capturedImages: LabelImage[]): UpdateCapturedImageAction => ({\n  type: UPDATE_CAPTURED_IMAGES,\n  payload: { capturedImages },\n});\n\nexport const thunkAddCapturedImages = (streamId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/streams/${streamId}/capture`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 'ok') {\n        dispatch(addCapturedImages(data.image));\n        dispatch(getLabelImages());\n      }\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const thunkGetCapturedImages = (partId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/images`)\n    .then((response) => response.json())\n    .then((data) => {\n      const imagesWithRelatedPart = data.reduce((acc, cur) => {\n        if (cur.part.split('/')[5] === partId) acc.push(cur);\n        return acc;\n      }, []);\n      dispatch(updateCapturedImages(imagesWithRelatedPart));\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","export const getIdFromUrl = (url: string): number => parseInt(url.split(\"/\")[5], 10) ;","import { LabelImage } from '../store/image/imageTypes';\nimport { getIdFromUrl } from './GetIDFromUrl';\n\ninterface Options {\n  partId?: number;\n  isRelabel?: boolean;\n}\nexport const getFilteredImages = (\n  images: LabelImage[],\n  { partId, isRelabel = false }: Options,\n): LabelImage[] => {\n  if (partId === undefined) return images;\n  return images.filter((image) => getIdFromUrl(image.part) === partId && image.is_relabel === isRelabel);\n};\n","import { DropdownItemProps } from '@fluentui/react-northstar';\n\nexport type Value = { id: number; name: string } | { id: number; name: string }[];\n\nexport const formatDropdownValue = (value: Value): DropdownItemProps | DropdownItemProps[] => {\n  if (Array.isArray(value)) {\n    return value.map((e) => ({\n      header: e.name,\n      content: {\n        key: e.id,\n      },\n    }));\n  }\n  if (value) {\n    return {\n      header: value.name,\n      content: {\n        key: value.id,\n      },\n    };\n  }\n  return null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Dropdown, Text, DropdownItemProps } from '@fluentui/react-northstar';\nimport { Link, Prompt } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useCameras } from '../../hooks/useCameras';\nimport { State } from '../../store/State';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { RTSPVideo } from '../RTSPVideo';\nimport { getLabelImages } from '../../store/image/imageActions';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { formatDropdownValue } from '../../util/formatDropdownValue';\n\nexport const CapturePhotos: React.FC<{ partId: number }> = ({ partId }) => {\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n\n  return (\n    <>\n      <CameraSelector selectedCamera={selectedCamera} setSelectedCamera={setSelectedCamera} />\n      <RTSPVideo rtsp={selectedCamera?.rtsp} partId={partId} canCapture={true} />\n      <CapturedImagesContainer partId={partId} />\n    </>\n  );\n};\n\nconst CameraSelector = ({ selectedCamera, setSelectedCamera }): JSX.Element => {\n  const availableCameras = useCameras();\n\n  const items: DropdownItemProps[] = availableCameras.map((ele) => ({\n    header: ele.name,\n    content: {\n      key: ele.id,\n    },\n  }));\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setSelectedCamera((prev) => prev);\n    else {\n      const { key } = data.value.content;\n      const newSelectedCamera = availableCameras.find((ele) => ele.id === key);\n      if (newSelectedCamera) setSelectedCamera(newSelectedCamera);\n    }\n  };\n\n  // FIXME Find a better way to replace the setState in the effect\n  useEffect(() => {\n    if (availableCameras.length === 1) setSelectedCamera(availableCameras[0]);\n  }, [availableCameras, setSelectedCamera]);\n\n  return (\n    <Flex gap=\"gap.small\" vAlign=\"center\">\n      <Text>Select Camera</Text>\n      <Dropdown items={items} onChange={onDropdownChange} value={formatDropdownValue(selectedCamera)} />\n      <Link to=\"/cameras\">Add Camera</Link>\n    </Flex>\n  );\n};\n\nconst CapturedImagesContainer = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images).filter(\n    (image) => !image.is_relabel,\n  );\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  const imageCount = filteredImages.length;\n\n  return (\n    <>\n      <Text>Total: {imageCount}</Text>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Flex\n        styles={{\n          overflow: 'scroll',\n          border: '1px solid grey',\n          height: '150px',\n          borderColor: isValid ? '' : 'red',\n        }}\n        gap=\"gap.small\"\n        vAlign=\"center\"\n      >\n        {filteredImages.map((image, i, arr) => (\n          <div key={image.id} style={{ height: '100%', width: '100%' }}>\n            <span>{i + 1}</span>\n            <LabelingPageDialog\n              key={i}\n              imageIndex={i}\n              images={arr}\n              trigger={\n                <div style={{ height: 150, width: 200 }}>\n                  <LabelDisplayImage labelImage={image} pointerCursor />\n                </div>\n              }\n              isRelabel={false}\n            />\n          </div>\n        ))}\n      </Flex>\n      <Prompt\n        when={imageCount < 15}\n        message=\"The count of images is less than 15, which may cause error when configure part identification. Sure you want to leave?\"\n      />\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { getCameras } from '../store/camera/cameraActions';\n\n/**\n * Fetch the cameras data from server and set to Redux Store\n */\nexport const useCameras = (): Camera[] => {\n  const dispatch = useDispatch();\n  const cameras: Camera[] = useSelector<State, Camera[]>((state) => state.cameras.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return cameras;\n};\n","import React, { useEffect } from 'react';\nimport { Text, Grid } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/State';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getLabelImages, postLabelImage } from '../../store/image/imageActions';\n\nexport const UploadPhotos = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  function handleUpload(e: React.ChangeEvent<HTMLInputElement>): void {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const formData = new FormData();\n      formData.append('image', e.target.files[i]);\n      formData.append('part', `/api/parts/${partId}/`);\n      dispatch(postLabelImage(formData));\n    }\n  }\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleUpload} accept=\"image/*\" multiple />\n      <CapturedImagesContainer capturedImages={filteredImages} isValid={isValid} partId={partId} />\n    </>\n  );\n};\n\nconst CapturedImagesContainer = ({ capturedImages, isValid, partId }): JSX.Element => {\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"2\"\n        styles={{\n          border: '1px solid grey',\n          height: '45rem',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n          justifyItems: 'center',\n          alignItems: 'center',\n          overflow: 'scroll',\n        }}\n      >\n        {capturedImages.map((image, i, arr) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            images={arr}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor />}\n            isRelabel={false}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Input, TextArea, Button, Menu, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useLocation, Switch, Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { CapturePhotos } from '../components/CapturePhoto';\nimport { UploadPhotos } from '../components/UploadPhotos';\nimport { useQuery } from '../hooks/useQuery';\n\nexport const PartDetails = (): JSX.Element => {\n  const partId = useQuery().get('partId');\n\n  return (\n    <Grid columns={'repeat(12, 1fr)'} styles={{ gridColumnGap: '20px', height: '100%' }}>\n      <LeftPanel partId={partId} />\n      <RightPanel partId={partId} />\n    </Grid>\n  );\n};\n\nconst LeftPanel = ({ partId }): JSX.Element => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    if (partId) {\n      axios\n        .get(`/api/parts/${partId}/`)\n        .then(({ data }) => {\n          setName(data.name);\n          setDescription(data.description);\n          return void 0;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [partId]);\n\n  const onSave = (): void => {\n    axios({\n      method: 'PUT',\n      url: `/api/parts/${partId}/`,\n      data: {\n        name,\n        description,\n      },\n    })\n      .then(() => {\n        history.push(`/parts/`);\n        return void 0;\n      })\n      .catch((err) => {\n        setError(JSON.stringify(err.response.data));\n      });\n  };\n\n  return (\n    <Flex column space=\"around\" styles={{ gridColumn: '1 / span 4' }}>\n      <Input\n        placeholder=\"Enter Part Name...\"\n        fluid\n        styles={{ fontSize: '2em' }}\n        value={name}\n        onChange={(_, newProps): void => {\n          setName(newProps.value);\n        }}\n      />\n      <TextArea\n        placeholder=\"Enter Description...\"\n        design={{ height: '80%' }}\n        value={description}\n        onChange={(_, newProps): void => {\n          setDescription(newProps.value);\n        }}\n      />\n      <Flex space=\"around\">\n        <Button content=\"Save\" primary onClick={onSave} disabled={!name || !description} />\n      </Flex>\n      {!!error && <Alert danger content={error} dismissible />}\n    </Flex>\n  );\n};\n\nconst RightPanel = ({ partId }): JSX.Element => {\n  return (\n    <Flex column gap=\"gap.small\" styles={{ gridColumn: '5 / span 8' }}>\n      {partId ? <Tab partId={partId} /> : null}\n      <Switch>\n        <Route path={`/parts/detail/capturePhotos`}>\n          <CapturePhotos partId={parseInt(partId, 10)} />\n        </Route>\n        <Route path={`/parts/detail/uploadPhotos`}>\n          <UploadPhotos partId={parseInt(partId, 10)} />\n        </Route>\n      </Switch>\n    </Flex>\n  );\n};\n\nconst Tab = ({ partId }): JSX.Element => {\n  const items = [\n    {\n      key: 'uploadPhotos',\n      as: Link,\n      to: `/parts/detail/uploadPhotos?partId=${partId}`,\n      content: 'Upload Photos',\n    },\n    {\n      key: 'capturePhotos',\n      as: Link,\n      to: `/parts/detail/capturePhotos?partId=${partId}`,\n      content: 'Capture Photo',\n    },\n  ];\n\n  const { pathname } = useLocation();\n  const activeIndex = items.findIndex((ele) => ele.to.split('?')[0] === pathname);\n\n  return <Menu items={items} activeIndex={activeIndex} pointing primary />;\n};\n","import axios from 'axios';\nimport {\n  GET_LOCATION_SUCCESS,\n  POST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  GetLocationsSuccess,\n  RequestLocationsFailure,\n  PostLocationSuccess,\n  Location,\n} from './locationTypes';\n\nconst getLocationsSuccess = (data: Location[]): GetLocationsSuccess => ({\n  type: GET_LOCATION_SUCCESS,\n  payload: data,\n});\n\nconst requestLocationsFailure = (error: any): RequestLocationsFailure => {\n  console.error(error);\n  alert(error);\n  return { type: REQUEST_LOCATION_FAILURE };\n};\n\nconst postLocationSuccess = (data: Location): PostLocationSuccess => ({\n  type: POST_LOCATION_SUCCESS,\n  payload: data,\n});\n\nexport const getLocations = () => (dispatch): Promise<void> => {\n  return axios('/api/locations/')\n    .then(({ data }) => {\n      dispatch(getLocationsSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n\nexport const postLocation = (newLocation: Location) => (dispatch): Promise<void> => {\n  return axios('/api/locations/', {\n    method: 'POST',\n    data: newLocation,\n  })\n    .then(({ data }) => {\n      dispatch(postLocationSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n","import React, { useEffect, FC } from 'react';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { State } from '../store/State';\nimport { Location } from '../store/location/locationTypes';\nimport ImageLink from '../components/ImageLink';\nimport { getLocations, postLocation } from '../store/location/locationActions';\nimport { AddModuleDialog } from '../components/AddModuleDialog';\n\nconst Locations: FC = () => {\n  const dispatch = useDispatch();\n  const locations = useSelector<State, Location[]>((state) => state.locations.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getLocations());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {locations.map((location, i) => (\n          <ImageLink\n            key={i}\n            to={`/locations/detail?name=${location.name}`}\n            defaultSrc=\"/icons/defaultLocation.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            label={location.name}\n          />\n        ))}\n      </Grid>\n      <div style={{ alignSelf: 'flex-end' }}>\n        <AddModuleDialog\n          header=\"Add Location\"\n          fields={[\n            {\n              placeholder: 'Location Name',\n              key: 'name',\n              type: 'input',\n              required: true,\n            },\n            {\n              placeholder: 'Description',\n              key: 'description',\n              type: 'textArea',\n              required: false,\n            },\n          ]}\n          onConfirm={({ name, description }): void => {\n            dispatch(postLocation({ name, description, is_demo: false }));\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Locations;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Flex, Text, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { Location } from '../store/location/locationTypes';\nimport { State } from '../store/State';\nimport { useQuery } from '../hooks/useQuery';\n\nconst LocationDetails: FC = () => {\n  const name = useQuery().get('name');\n  const location = useSelector<State, Location>((state) => state.locations.find((e) => e.name === name));\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Details\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"6.25em\" height=\"6.25em\" />\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Text styles={{ paddingTop: '0.625em', minHeight: '6.25em' }}>{location.name}</Text>\n          <Text styles={{ height: '60%' }}>{location.description}</Text>\n        </Flex>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationDetails;\n","import React, { useState, useEffect, SetStateAction, Dispatch, FC, memo, useMemo } from 'react';\nimport { Dropdown, DropdownItemProps, Text, Button, RadioGroup } from '@fluentui/react-northstar';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImageIdentificationItemProps {\n  confidenceLevel: number;\n  relabelImages: RelabelImage[];\n  imageIndex: number;\n  setJudgedImageList: Dispatch<SetStateAction<JudgedImageList>>;\n  partId: number;\n  partItems: DropdownItemProps[];\n  isPartCorrect: number;\n}\nconst ImageIdentificationItem: FC<ImageIdentificationItemProps> = ({\n  confidenceLevel,\n  relabelImages,\n  imageIndex,\n  setJudgedImageList,\n  partId,\n  partItems,\n  isPartCorrect,\n}) => {\n  const filteredPartItems = useMemo(\n    () => [\n      {\n        header: 'No Object',\n        content: {\n          key: null,\n        },\n      },\n      ...partItems.filter((e) => (e.content as { key: number }).key !== partId),\n    ],\n    [partId, partItems],\n  );\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(filteredPartItems[0]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n\n      setJudgedImageList((prev) => {\n        const next = [...prev];\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx === -1) throw new Error(\"Image id doesn't match\");\n        next[idx] = { ...next[idx], partId: value.content.key };\n\n        return next;\n      });\n    }\n  };\n\n  const onRadioGroupChange = (_, newProps): void => {\n    setJudgedImageList((prev) => {\n      const next = [...prev];\n\n      if (newProps.value === 1) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId };\n        else next.push({ imageId: relabelImages[imageIndex].id, partId });\n      } else if (newProps.value === 0) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId: null };\n        else {\n          next.push({\n            imageId: relabelImages[imageIndex].id,\n            partId: null,\n          });\n        }\n      }\n      return next;\n    });\n  };\n\n  useEffect(() => {\n    setJudgedImageList([]);\n    setSelectedPartItem(filteredPartItems[0]);\n  }, [filteredPartItems, setSelectedPartItem, setJudgedImageList]);\n\n  return (\n    <div\n      style={{\n        minHeight: '16em',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <div\n        style={{\n          padding: '0.5em',\n          height: '100%',\n          flex: '1 0 0',\n        }}\n      >\n        <LabelDisplayImage labelImage={relabelImages[imageIndex]} />\n      </div>\n      <div\n        style={{\n          height: '80%',\n          flex: '1 0 0',\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <Text truncated>\n          Confidence Level: <b>{confidenceLevel}%</b>\n        </Text>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '50%',\n            padding: '0.2em',\n          }}\n        >\n          <RadioGroup\n            checkedValue={isPartCorrect}\n            onCheckedValueChange={onRadioGroupChange}\n            items={[\n              {\n                key: '1',\n                label: 'Yes',\n                value: 1,\n              },\n              {\n                key: '0',\n                label: 'No',\n                value: 0,\n              },\n            ]}\n          />\n          {isPartCorrect === 0 && filteredPartItems.length > 0 && (\n            <div style={{ width: '50%' }}>\n              <Dropdown\n                fluid\n                items={filteredPartItems}\n                onChange={onDropdownChange}\n                value={selectedPartItem}\n              />\n            </div>\n          )}\n        </div>\n        <LabelingPageDialog\n          imageIndex={imageIndex}\n          images={relabelImages}\n          isRelabel={true}\n          trigger={<Button primary content=\"Identify\" />}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImageIdentificationItem);\n","import React, { FC, Dispatch, memo } from 'react';\nimport { Grid, DropdownItemProps } from '@fluentui/react-northstar';\nimport ImageIdentificationItem from './ImageItem';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImagesContainerProps {\n  images: RelabelImage[];\n  judgedImageList: JudgedImageList;\n  setJudgedImageList: Dispatch<JudgedImageList>;\n  selectedPartId: number;\n  partItems: DropdownItemProps[];\n}\nconst ImagesContainer: FC<ImagesContainerProps> = ({\n  images,\n  judgedImageList,\n  setJudgedImageList,\n  selectedPartId,\n  partItems,\n}) => (\n  <Grid\n    columns=\"2\"\n    styles={{\n      width: '100%',\n      height: '80%',\n      overflow: 'scroll',\n      borderWidth: '0.0625em',\n      borderStyle: 'solid',\n    }}\n  >\n    {images.map((img, i, arr) => {\n      if (img.display) {\n        let isPartCorrect: number = null;\n        const idx = judgedImageList.findIndex((e) => e.imageId === img.id);\n\n        if (idx >= 0) {\n          if (judgedImageList[idx].partId === selectedPartId) {\n            isPartCorrect = 1;\n          } else isPartCorrect = 0;\n        }\n\n        return (\n          <ImageIdentificationItem\n            key={img.id}\n            confidenceLevel={img.confidenceLevel}\n            imageIndex={i}\n            relabelImages={arr}\n            isPartCorrect={isPartCorrect}\n            setJudgedImageList={setJudgedImageList}\n            partId={selectedPartId}\n            partItems={partItems}\n          />\n        );\n      }\n      return void 0;\n    })}\n  </Grid>\n);\n\nexport default memo(ImagesContainer);\n","import React, { useState, useEffect, useRef, useMemo, FC } from 'react';\nimport {\n  Dropdown,\n  DropdownItemProps,\n  Grid,\n  Flex,\n  Text,\n  Divider,\n  Button,\n  ArrowDownIcon,\n  ArrowUpIcon,\n} from '@fluentui/react-northstar';\nimport Axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport { Range, Handle } from 'rc-slider';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../rc-slider.css';\n\nimport { State } from '../store/State';\nimport { useParts } from '../hooks/useParts';\nimport { ProjectData } from '../store/project/projectTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getFilteredImages } from '../util/getFilteredImages';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { getLabelImages } from '../store/image/imageActions';\nimport { JudgedImageList, RelabelImage } from '../components/ManualIdentification/types';\nimport ImagesContainer from '../components/ManualIdentification/ImagesContainer';\n\nconst ManualIdentification: FC = () => {\n  const dispatch = useDispatch();\n  const { projectData, images } = useSelector<State, { projectData: ProjectData; images: LabelImage[] }>(\n    (state) => ({\n      projectData: state.project.data,\n      images: state.images,\n    }),\n  );\n  const parts = useParts(false);\n  const partItems = useMemo<DropdownItemProps[]>(() => {\n    if (parts.length === 0 || projectData.parts.length === 0) return [];\n\n    return projectData.parts.reduce((acc, partId) => {\n      const part = parts.find((e) => e.id === partId);\n\n      if (!part) return acc;\n\n      acc.push({\n        header: part.name,\n        content: {\n          key: part.id,\n        },\n      });\n      return acc;\n    }, []);\n  }, [parts, projectData]);\n\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(null);\n  const selectedPartId: number = (selectedPartItem?.content as { key: number })?.key ?? null;\n\n  const [confidenceLevelRange, setConfidenceLevelRange] = useState<[number, number]>([\n    projectData.accuracyRangeMin,\n    projectData.accuracyRangeMax,\n  ]);\n  const [ascend, setAscend] = useState<boolean>(false);\n  const sortRef = useRef({ sorted: false, prevIsAscend: false });\n  const [judgedImageList, setJudgedImageList] = useState<JudgedImageList>([]);\n\n  const [relabelImages, setRelabelImages] = useState<RelabelImage[]>([]);\n\n  useEffect(() => {\n    dispatch(thunkGetProject(false));\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setRelabelImages(\n      getFilteredImages(images, {\n        partId: selectedPartId,\n        isRelabel: true,\n      }).map((e) => {\n        const confidenceLevel = ((e.confidence * 1000) | 0) / 10;\n        return {\n          ...e,\n          confidenceLevel,\n          display: confidenceLevel >= confidenceLevelRange[0] && confidenceLevel <= confidenceLevelRange[1],\n        };\n      }),\n    );\n    return (): void => {\n      setAscend(false);\n      sortRef.current = { sorted: false, prevIsAscend: false };\n    };\n  }, [confidenceLevelRange, images, selectedPartId]);\n\n  useEffect(() => {\n    if (sortRef.current.sorted) {\n      if (sortRef.current.prevIsAscend !== ascend) {\n        setRelabelImages((prev) => {\n          const next = [...prev];\n          next.reverse();\n          return next;\n        });\n        sortRef.current.prevIsAscend = ascend;\n      }\n    } else {\n      setRelabelImages((prev) => {\n        if (ascend) prev.sort((a, b) => a.confidenceLevel - b.confidenceLevel);\n        else prev.sort((a, b) => b.confidenceLevel - a.confidenceLevel);\n        return [...prev];\n      });\n      sortRef.current = { sorted: true, prevIsAscend: true };\n    }\n  }, [ascend]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n    }\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Manual Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.medium\" space=\"between\" styles={{ height: '75vh', padding: '1em' }}>\n        <Grid columns=\"3\" styles={{ columnGap: '1em', justifyItems: 'center' }}>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text truncated>Select Part:</Text>\n            <Dropdown items={partItems} onChange={onDropdownChange} value={selectedPartItem} />\n          </Flex>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\" styles={{ width: '80%' }}>\n            <Text>Confidence Level:</Text>\n            <div style={{ width: '70%' }}>\n              <Range\n                value={confidenceLevelRange}\n                allowCross={false}\n                onChange={setConfidenceLevelRange}\n                handle={({ value, dragging, index, ...restProps }): JSX.Element => {\n                  return (\n                    <Tooltip\n                      prefixCls=\"rc-slider-tooltip\"\n                      overlay={`${value}%`}\n                      visible={dragging}\n                      placement=\"top\"\n                      key={index}\n                    >\n                      <Handle value={value} {...restProps} />\n                    </Tooltip>\n                  );\n                }}\n              />\n            </div>\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text truncated>Sort:</Text>\n            <Button\n              icon={ascend ? <ArrowDownIcon /> : <ArrowUpIcon />}\n              styles={{ color: sortRef.current.sorted ? '#0094d8' : 'grey' }}\n              text\n              iconOnly\n              onClick={(): void => {\n                setAscend((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Grid>\n        <div style={{ display: 'flex', minWidth: '20em', maxWidth: '20%', justifyContent: 'space-around' }}>\n          <Button\n            primary\n            content=\"Yes to all\"\n            onClick={(): void => {\n              setJudgedImageList(relabelImages.map((e) => ({ imageId: e.id, partId: selectedPartId })));\n            }}\n          />\n          <Button\n            styles={{\n              backgroundColor: '#E97548',\n              color: 'white',\n              ':hover': { backgroundColor: '#CC4A31', color: 'white' },\n            }}\n            content=\"No to remaining\"\n            onClick={(): void => {\n              setJudgedImageList((prev) =>\n                relabelImages.map((relabelImage) => {\n                  const judgedImage = prev.find((imgInList) => imgInList.imageId === relabelImage.id);\n                  return judgedImage === undefined ? { imageId: relabelImage.id, partId: null } : judgedImage;\n                }),\n              );\n            }}\n          />\n        </div>\n        <ImagesContainer\n          images={relabelImages}\n          judgedImageList={judgedImageList}\n          setJudgedImageList={setJudgedImageList}\n          selectedPartId={selectedPartId}\n          partItems={partItems}\n        />\n        <Button\n          content=\"Update\"\n          styles={{ width: '15%' }}\n          primary\n          disabled={judgedImageList.length === 0}\n          onClick={(): void => {\n            Axios({ method: 'POST', url: '/api/relabel/update', data: judgedImageList })\n              .then(() => {\n                dispatch(getLabelImages());\n                setJudgedImageList([]);\n                return void 0;\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ManualIdentification;\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\nimport { AddModuleDialog } from '../components/AddModuleDialog';\n\nexport const Parts: React.FC = () => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const partsAPI = Axios.get('/api/parts/');\n    const imagesAPI = Axios.get('/api/images/');\n\n    Axios.all([partsAPI, imagesAPI])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: partsRes } = responses[0];\n          const { data: images } = responses[1];\n          setParts(\n            partsRes.map((e) => ({\n              ...e,\n              images: images.find((img) => getIdFromUrl(img.part) === e.id)?.image,\n            })),\n          );\n        }),\n      )\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <Flex gap=\"gap.large\" wrap>\n        {parts\n          .filter((e) => !e.is_demo)\n          .map((ele) => (\n            <Item key={ele.id} src={ele.images} id={ele.id} name={ele.name} />\n          ))}\n      </Flex>\n      <div style={{ position: 'absolute', right: '100px', bottom: '100px' }}>\n        <AddModuleDialog\n          header=\"Add Part\"\n          fields={[\n            {\n              placeholder: 'Part Name',\n              key: 'name',\n              type: 'input',\n              required: true,\n            },\n            {\n              placeholder: 'Description',\n              key: 'description',\n              type: 'textArea',\n              required: false,\n            },\n          ]}\n          onConfirm={({ name, description }): void => {\n            // TODO Migrate this to part action\n            Axios({\n              method: 'POST',\n              url: `/api/parts/`,\n              data: {\n                name,\n                description,\n              },\n            })\n              .then(({ data }) => {\n                setParts((prev) => prev.concat(data));\n                return void 0;\n              })\n              .catch((err) => {\n                alert(err);\n              });\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst Item = ({ src, id, name }): JSX.Element => {\n  return (\n    <Flex column hAlign=\"center\" gap=\"gap.large\" as={Link} to={`/parts/detail/capturePhotos?partId=${id}`}>\n      <div style={{ width: '250px', height: '250px' }}>\n        <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n      </div>\n      <Text size=\"larger\">{name}</Text>\n    </Flex>\n  );\n};\n","import { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport { ReactPlugin } from '@microsoft/applicationinsights-react-js';\n\nlet reactPlugin = null;\nlet appInsights = null;\n\n/**\n * Create the App Insights Telemetry Service\n * @return {{reactPlugin: ReactPlugin, appInsights: Object, initialize: Function}} - Object\n */\nconst createTelemetryService = (): { reactPlugin; appInsights; initialize } => {\n  /**\n   * Initialize the Application Insights class\n   * @param {string} instrumentationKey - Application Insights Instrumentation Key\n   * @param {Object} browserHistory - client's browser history, supplied by the withRouter HOC\n   * @return {void}\n   */\n  const initialize = (instrumentationKey: string, isAppInsightOn: boolean, browserHistory): any => {\n    if (!browserHistory) {\n      throw new Error('Could not initialize Telemetry Service');\n    }\n    if (!instrumentationKey) {\n      throw new Error('Instrumentation key not provided in /src/components/TelemetryProvider.tsx');\n    }\n\n    reactPlugin = new ReactPlugin();\n\n    appInsights = new ApplicationInsights({\n      config: {\n        instrumentationKey,\n        maxBatchInterval: 0,\n        disableFetchTracking: false,\n        disableTelemetry: !isAppInsightOn,\n        extensions: [reactPlugin],\n        extensionConfig: {\n          [reactPlugin.identifier]: {\n            history: browserHistory,\n          },\n        },\n      },\n    });\n\n    appInsights.loadAppInsights();\n  };\n\n  return { reactPlugin, appInsights, initialize };\n};\n\nexport const ai = createTelemetryService();\nexport const getAppInsights = (): ApplicationInsights => appInsights;\n","import React from 'react';\nimport { Dialog, Flex, ExclamationCircleIcon } from '@fluentui/react-northstar';\nimport { WarningDialogProps } from './WarningDialog.type';\n\nexport const WarningDialog: React.FC<WarningDialogProps> = ({\n  onConfirm = null,\n  onCancel = null,\n  trigger,\n  contentText,\n  cancelButton = 'Cancel',\n  confirmButton = 'Confirm',\n  open = undefined,\n}): JSX.Element => {\n  return (\n    <Dialog\n      styles={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n      cancelButton={cancelButton}\n      confirmButton={confirmButton}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      open={open}\n      content={\n        <>\n          <Flex hAlign=\"center\" column>\n            <ExclamationCircleIcon\n              size=\"largest\"\n              styles={({ theme: { siteVariables } }): any => ({\n                color: siteVariables.colorScheme.brand.foreground,\n              })}\n            />\n            <div>{contentText}</div>\n          </Flex>\n        </>\n      }\n      trigger={trigger}\n    />\n  );\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Divider,\n  Text,\n  Flex,\n  Dropdown,\n  Button,\n  DropdownItemProps,\n  Checkbox,\n  Input,\n  Alert,\n  ShorthandCollection,\n} from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\n\nimport { thunkGetProject, thunkPostProject, updateProjectData } from '../store/project/projectActions';\nimport { Project, ProjectData } from '../store/project/projectTypes';\nimport { State } from '../store/State';\nimport { formatDropdownValue, Value } from '../util/formatDropdownValue';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\nimport { getAppInsights } from '../TelemetryService';\nimport { WarningDialog } from '../components/WarningDialog';\n\nconst sendTrainInfoToAppInsight = async (selectedParts): Promise<void> => {\n  const { data: images } = await Axios.get('/api/images/');\n\n  const selectedPartIds = selectedParts.map((e) => e.id);\n  const interestedImagesLength = images.filter((e) => selectedPartIds.includes(getIdFromUrl(e.part))).length;\n  const appInsight = getAppInsights();\n  if (appInsight)\n    appInsight.trackEvent({\n      name: 'train',\n      properties: {\n        images: interestedImagesLength,\n        parts: selectedParts.length,\n        source: window.location.hostname,\n      },\n    });\n};\n\nexport const PartIdentification: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error, data } = useSelector<State, Project>((state) => state.project);\n  const {\n    id: projectId,\n    camera,\n    location,\n    parts,\n    needRetraining,\n    accuracyRangeMin,\n    accuracyRangeMax,\n    maxImages: maxImage,\n    sendMessageToCloud,\n    framesPerMin,\n    accuracyThreshold,\n  } = data;\n  const [isTestModel, setIsTestModel] = useState(false);\n  const [cameraLoading, dropDownCameras, selectedCamera, setSelectedCameraById] = useDropdownItems<any>(\n    'cameras',\n    isTestModel,\n  );\n  const [partLoading, dropDownParts, selectedParts, setSelectedPartsById] = useDropdownItems<any>(\n    'parts',\n    isTestModel,\n    true,\n  );\n  const [locationLoading, dropDownLocations, selectedLocations, setSelectedLocationById] = useDropdownItems<\n    any\n  >('locations', isTestModel);\n  const history = useHistory();\n  const [maxImgCountError, setMaxImgCountError] = useState(false);\n\n  useEffect(() => {\n    if (!cameraLoading && !partLoading && !locationLoading) {\n      dispatch(thunkGetProject(isTestModel));\n    }\n  }, [dispatch, cameraLoading, locationLoading, partLoading, isTestModel]);\n\n  useEffect(() => {\n    if (!isTestModel) {\n      if (location) setSelectedLocationById(location);\n      if (parts.length) setSelectedPartsById(parts);\n      if (camera) setSelectedCameraById(camera);\n    }\n  }, [\n    camera,\n    isTestModel,\n    location,\n    parts,\n    setSelectedCameraById,\n    setSelectedLocationById,\n    setSelectedPartsById,\n  ]);\n\n  const handleSubmitConfigure = async (): Promise<void> => {\n    try {\n      if (!isTestModel) sendTrainInfoToAppInsight(selectedParts);\n\n      const id = await dispatch(\n        thunkPostProject(projectId, selectedLocations, selectedParts, selectedCamera, isTestModel),\n      );\n\n      if (typeof id !== 'undefined')\n        history.push(`/cameras/detail?name=${selectedCamera.name}&isDemo=${isTestModel}`);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  const setData = (keyName: keyof ProjectData, value: ProjectData[keyof ProjectData]): void => {\n    dispatch(updateProjectData({ ...data, [keyName]: value }));\n  };\n\n  const accracyRangeDisabled = !needRetraining || isTestModel;\n  const messageToCloudDisabled = !sendMessageToCloud || isTestModel;\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Part Identification\n      </Text>\n      <Divider color=\"black\" />\n      {error && (\n        <Alert danger header=\"Load Part Identification Error\" content={`${error.name}: ${error.message}`} />\n      )}\n      <Flex column gap=\"gap.large\" design={{ paddingTop: '30px' }}>\n        <ModuleSelector\n          moduleName=\"camera\"\n          to=\"/cameras\"\n          value={selectedCamera}\n          setSelectedModuleItem={setSelectedCameraById}\n          items={dropDownCameras}\n          isMultiple={false}\n        />\n        <ModuleSelector\n          moduleName=\"parts\"\n          to=\"/parts\"\n          value={selectedParts}\n          setSelectedModuleItem={setSelectedPartsById}\n          items={dropDownParts}\n          isMultiple={true}\n        />\n        <ModuleSelector\n          moduleName=\"location\"\n          to=\"/locations\"\n          value={selectedLocations}\n          setSelectedModuleItem={setSelectedLocationById}\n          items={dropDownLocations}\n          isMultiple={false}\n          isTestModel={isTestModel}\n        />\n        <Flex gap=\"gap.large\">\n          <Flex column gap=\"gap.medium\">\n            <Checkbox\n              label=\"Set up retraining\"\n              checked={needRetraining}\n              onChange={(_, { checked }): void => setData('needRetraining', checked)}\n              disabled={isTestModel}\n            />\n            <Text disabled={accracyRangeDisabled}>Capture Image</Text>\n            <Text disabled={accracyRangeDisabled}>\n              Minimum:{' '}\n              <Input\n                type=\"number\"\n                disabled={accracyRangeDisabled}\n                inline\n                value={accuracyRangeMin}\n                onChange={(_, { value }): void => setData('accuracyRangeMin', value)}\n              />\n              %\n            </Text>\n            <Text disabled={accracyRangeDisabled}>\n              Maximum:{' '}\n              <Input\n                type=\"number\"\n                disabled={accracyRangeDisabled}\n                inline\n                value={accuracyRangeMax}\n                onChange={(_, { value }): void => setData('accuracyRangeMax', value)}\n              />\n              %\n            </Text>\n            <Text disabled={accracyRangeDisabled}>\n              Maximum Images to Store:{' '}\n              <Input\n                type=\"number\"\n                disabled={accracyRangeDisabled}\n                inline\n                value={maxImage}\n                onChange={(_, { value }): void => {\n                  if ((value as any) < 15) setMaxImgCountError(true);\n                  else setMaxImgCountError(false);\n                  setData('maxImages', value);\n                }}\n              />\n              {maxImgCountError && <Text error>Cannot be less than 15</Text>}\n            </Text>\n          </Flex>\n          <Flex column gap=\"gap.medium\">\n            <Checkbox\n              label=\"Send message to cloud\"\n              checked={sendMessageToCloud}\n              onChange={(_, { checked }): void => setData('sendMessageToCloud', checked)}\n              disabled={isTestModel}\n            />\n            <Text disabled={messageToCloudDisabled}>\n              Frames per minute:{' '}\n              <Input\n                type=\"number\"\n                disabled={messageToCloudDisabled}\n                inline\n                value={framesPerMin}\n                onChange={(_, { value }): void => setData('framesPerMin', value)}\n              />\n            </Text>\n            <Text disabled={messageToCloudDisabled}>\n              Accuracy threshold:{' '}\n              <Input\n                type=\"number\"\n                disabled={messageToCloudDisabled}\n                inline\n                value={accuracyThreshold}\n                onChange={(_, { value }): void => setData('accuracyThreshold', value)}\n              />\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex gap=\"gap.large\">\n          <Button\n            content=\"Configure\"\n            primary\n            onClick={handleSubmitConfigure}\n            disabled={(!selectedCamera || !selectedLocations || !selectedParts || isLoading) && !isTestModel}\n            loading={isLoading}\n          />\n          <TestModelButton isTestModel={isTestModel} setIsTestModel={setIsTestModel} />\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nconst TestModelButton = ({ isTestModel, setIsTestModel }): JSX.Element => {\n  if (isTestModel) {\n    return <Button content=\"Back\" onClick={(): void => setIsTestModel(false)} primary />;\n  }\n\n  return (\n    <WarningDialog\n      confirmButton=\"Confirm\"\n      onConfirm={(): void => setIsTestModel(true)}\n      contentText={\n        <>\n          <p>\n            &quot;Demo Pretrained Detection&quot; is for seeing inference result, no retraining experience\n            here.\n          </p>\n          <p>For retraining experience, please create a new model</p>\n        </>\n      }\n      trigger={<Button content=\"Demo Pretrained Detection\" primary />}\n    />\n  );\n};\n\n// TODO Make this integrate with Redux\nfunction useDropdownItems<T>(\n  moduleName: string,\n  isTestModel: boolean,\n  isMultiple?: boolean,\n): [boolean, DropdownItemProps[], T | T[], (id: string | string[]) => void] {\n  const originItems = useRef<(T & { id: number })[]>([]);\n  const [dropDownItems, setDropDownItems] = useState<DropdownItemProps[]>([]);\n  const [selectedItem, setSelectedItem] = useState<T | T[]>(isMultiple ? [] : null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const url =\n      moduleName === 'cameras' && isTestModel\n        ? `/api/${moduleName}/`\n        : `/api/${moduleName}/?is_demo=${Number(isTestModel)}`;\n    setLoading(true);\n    Axios(url)\n      .then(({ data }) => {\n        setDropDownItems(\n          data.map((e) => ({\n            header: e.name,\n            content: {\n              key: e.id,\n            },\n          })),\n        );\n        originItems.current = data;\n        if (isMultiple) {\n          setSelectedItem(data);\n        } else {\n          setSelectedItem(data[0]);\n        }\n        setLoading(false);\n        return void 0;\n      })\n      .catch((err) => console.error(err))\n      .finally(() => setLoading(false));\n  }, [isMultiple, moduleName, isTestModel]);\n\n  const setSelectedItemById = useCallback((id: string | string[]): void => {\n    if (Array.isArray(id)) {\n      const correspondedItems = id.reduce((acc, cur) => {\n        const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === cur.toString());\n        if (correspondedItem) acc.push(correspondedItem);\n        return acc;\n      }, []);\n      setSelectedItem(correspondedItems as any);\n    } else {\n      const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === id.toString());\n      if (correspondedItem) setSelectedItem(correspondedItem);\n    }\n  }, []);\n\n  return [loading, dropDownItems, selectedItem, setSelectedItemById];\n}\n\n/* Module Selector */\n\ntype ModuleSelectorProps = {\n  moduleName: string;\n  to: string;\n  value: Value;\n  setSelectedModuleItem: (id: string | string[]) => void;\n  items: ShorthandCollection<DropdownItemProps>;\n  isMultiple: boolean;\n  isTestModel?: boolean;\n};\n\nconst ModuleSelector: React.FC<ModuleSelectorProps> = ({\n  moduleName,\n  to,\n  value,\n  setSelectedModuleItem,\n  items,\n  isMultiple,\n  isTestModel,\n}): JSX.Element => {\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) return;\n    if (Array.isArray(data.value)) {\n      const ids = data.value.map((ele) => ele.content.key);\n      setSelectedModuleItem(ids);\n    } else {\n      const { key } = data.value.content;\n      setSelectedModuleItem(key);\n    }\n  };\n\n  return (\n    <Flex vAlign=\"center\" gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }}>{`Select ${moduleName}`}</Text>\n      {isTestModel ? (\n        <Dropdown items={items} value={formatDropdownValue(value)} multiple={isMultiple} open={false} />\n      ) : (\n        <Dropdown\n          items={items}\n          onChange={onDropdownChange}\n          value={formatDropdownValue(value)}\n          multiple={isMultiple}\n        />\n      )}\n      <Link to={to}>{`Add ${moduleName}`}</Link>\n    </Flex>\n  );\n};\n","import Axios, { AxiosRequestConfig } from 'axios';\n\nimport {\n  UpdateKeyAction,\n  UpdateNamespaceAction,\n  GetSettingRequestAction,\n  GetSettingSuccessAction,\n  Setting,\n  GetSettingFailedAction,\n  SettingThunk,\n  GetAllCvProjectsRequestAction,\n  GetAllCvProjectsSuccessAction,\n  GetAllCvProjectsErrorAction,\n} from './settingType';\n\nexport const updateKey = (key: string): UpdateKeyAction => ({ type: 'UPDATE_KEY', payload: key });\n\nexport const updateNamespace = (namespace: string): UpdateNamespaceAction => ({\n  type: 'UPDATE_NAMESPACE',\n  payload: namespace,\n});\n\nexport const settingRequest = (): GetSettingRequestAction => ({\n  type: 'REQUEST_START',\n});\n\nexport const settingSuccess = (data: Setting): GetSettingSuccessAction => ({\n  type: 'REQUEST_SUCCESS',\n  payload: data,\n});\n\nexport const settingFailed = (error: Error): GetSettingFailedAction => ({\n  type: 'REQUEST_FAIL',\n  error,\n});\n\nconst getAllCvProjectsRequest = (): GetAllCvProjectsRequestAction => ({\n  type: 'GET_ALL_CV_PROJECTS_REQUEST',\n});\n\nconst getAllCvProjectsSuccess = (cvProjects: Record<string, string>): GetAllCvProjectsSuccessAction => ({\n  type: 'GET_ALL_CV_PROJECTS_SUCCESS',\n  pyload: cvProjects,\n});\n\nconst getAllCvProjectError = (error: Error): GetAllCvProjectsErrorAction => ({\n  type: 'GET_ALL_CV_PROJECTS_ERROR',\n  error,\n});\n\nexport const thunkGetSetting = () => (dispatch): Promise<any> => {\n  dispatch(settingRequest());\n\n  return Axios.get('/api/settings/')\n    .then(({ data }) => {\n      if (data.length > 0) {\n        dispatch(\n          settingSuccess({\n            loading: false,\n            error: null,\n            current: {\n              id: data[0].id,\n              key: data[0].training_key,\n              namespace: data[0].endpoint,\n            },\n            origin: {\n              id: data[0].id,\n              key: data[0].training_key,\n              namespace: data[0].endpoint,\n            },\n            isTrainerValid: data[0].is_trainer_valid,\n          }),\n        );\n      }\n      return data[0].is_collect_data;\n    })\n    .catch((err) => {\n      dispatch(settingFailed(err));\n    });\n};\n\nexport const thunkPostSetting = (): SettingThunk => (dispatch, getStore): Promise<any> => {\n  const settingData = getStore().setting.current;\n  const isSettingEmpty = settingData.id === -1;\n  const url = isSettingEmpty ? `/api/settings/` : `/api/settings/${settingData.id}/`;\n  const requestConfig: AxiosRequestConfig = isSettingEmpty\n    ? {\n        data: {\n          training_key: settingData.key,\n          endpoint: settingData.namespace,\n          name: '',\n          iot_hub_connection_string: '',\n          device_id: '',\n          module_id: '',\n        },\n        method: 'POST',\n      }\n    : {\n        data: {\n          training_key: settingData.key,\n          endpoint: settingData.namespace,\n        },\n        method: 'PUT',\n      };\n\n  dispatch(settingRequest());\n\n  return Axios(url, requestConfig)\n    .then(({ data }) => {\n      dispatch(\n        settingSuccess({\n          loading: false,\n          error: null,\n          current: {\n            id: data.id,\n            key: data.training_key,\n            namespace: data.endpoint,\n          },\n          origin: {\n            id: data.id,\n            key: data.training_key,\n            namespace: data.endpoint,\n          },\n          isTrainerValid: data.is_trainer_valid,\n        }),\n      );\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(settingFailed(err));\n    });\n};\n\nexport const thunkGetAllCvProjects = (): SettingThunk => (dispatch, getState) => {\n  dispatch(getAllCvProjectsRequest());\n\n  const settingId = getState().setting.current.id;\n  return Axios.get(`/api/settings/${settingId}/list_projects`)\n    .then(({ data }) => {\n      dispatch(getAllCvProjectsSuccess(data));\n      return void 0;\n    })\n    .catch((e) => {\n      if (e.response) {\n        throw new Error(e.response.data.log);\n      } else if (e.request) {\n        throw new Error(e.request);\n      } else {\n        throw e;\n      }\n    })\n    .catch((e) => {\n      dispatch(getAllCvProjectError(e));\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport * as R from 'ramda';\nimport {\n  Divider,\n  Flex,\n  Text,\n  Input,\n  Button,\n  Alert,\n  Dropdown,\n  DropdownItemProps,\n  Checkbox,\n  Dialog,\n  QuestionCircleIcon,\n  Tooltip,\n} from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useProject } from '../hooks/useProject';\nimport { getAppInsights } from '../TelemetryService';\nimport { WarningDialog } from '../components/WarningDialog';\nimport { State } from '../store/State';\nimport { Setting as SettingType } from '../store/setting/settingType';\nimport {\n  updateNamespace,\n  updateKey,\n  thunkGetSetting,\n  thunkPostSetting,\n  thunkGetAllCvProjects,\n} from '../store/setting/settingAction';\nimport { updateProjectData, updateOriginProjectData, thunkGetProject } from '../store/project/projectActions';\n\nexport const Setting = (): JSX.Element => {\n  const {\n    loading,\n    error,\n    current: settingData,\n    origin: originSettingData,\n    isTrainerValid,\n    cvProjects,\n  } = useSelector<State, SettingType>((state) => state.setting);\n  const dispatch = useDispatch();\n  const [checkboxChecked, setCheckboxChecked] = useState(false);\n  const [isUserGuideOpen, setIsUserGuideOpen] = useState(false);\n  const [otherError, setOtherError] = useState<Error>(null);\n\n  const notEmpty = originSettingData.namespace && originSettingData.key;\n\n  const cannotUpdateOrSave = R.equals(settingData, originSettingData);\n\n  useEffect(() => {\n    (dispatch(thunkGetSetting()) as any)\n      .then((isCollectData: boolean) => setCheckboxChecked(isCollectData))\n      .catch((e) => console.error(e));\n  }, [dispatch]);\n\n  const onSave = (): void => {\n    (dispatch(thunkPostSetting()) as any)\n      .then(() => {\n        // Reload page so PreviousProjectPanel can query again\n        window.location.reload();\n        return void 0;\n      })\n      .catch((e) => console.error(e));\n  };\n\n  const onCheckBoxClick = (): void => {\n    const newCheckboxChecked = !checkboxChecked;\n    setCheckboxChecked(newCheckboxChecked);\n    Axios.patch(`/api/settings/${settingData.id}`, { is_collect_data: newCheckboxChecked })\n      .then(() => {\n        const appInsight = getAppInsights();\n        if (!appInsight) throw Error('App Insight hasnot been initialize');\n        appInsight.config.disableTelemetry = !newCheckboxChecked;\n        return void 0;\n      })\n      .catch((err) => {\n        setCheckboxChecked(checkboxChecked);\n        setOtherError(err);\n      });\n  };\n\n  useEffect(() => {\n    if (settingData.id !== -1) {\n      dispatch(thunkGetAllCvProjects());\n    }\n  }, [dispatch, settingData.id]);\n\n  return (\n    <>\n      <h1>Setting</h1>\n      <Divider color=\"grey\" design={{ paddingBottom: '10px' }} />\n      <Flex gap=\"gap.large\" design={{ height: '80%' }}>\n        <Flex column gap=\"gap.large\" design={{ width: '50%' }}>\n          <Text size=\"large\" weight=\"bold\">\n            Azure Cognitive Services Settings:{' '}\n          </Text>\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: '100px auto 50px',\n              gridTemplateRows: 'auto auto',\n              rowGap: '30px',\n            }}\n          >\n            <Text size=\"large\">Endpoint:</Text>\n            <Input\n              value={settingData.namespace}\n              onChange={(_, { value }): void => {\n                dispatch(updateNamespace(value));\n              }}\n              fluid\n            />\n            <Tooltip\n              trigger={\n                <Button\n                  text\n                  icon={<QuestionCircleIcon />}\n                  iconOnly\n                  onClick={(): void => setIsUserGuideOpen(true)}\n                />\n              }\n              content=\"Where to get Endpoint and Key?\"\n            />\n            <Dialog\n              open={isUserGuideOpen}\n              header=\"Get Endpoint and Key\"\n              content={\n                <Flex column styles={{ maxHeight: '800px', overflow: 'scroll' }}>\n                  <p>\n                    Step 1: Login Custom vision,{' '}\n                    <a href=\"https://www.customvision.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      https://www.customvision.ai/\n                    </a>\n                  </p>\n                  <p>Step 2: Click on the setting icon on the top</p>\n                  <img src=\"/icons/guide_step_2.png\" style={{ width: '100%' }} />\n                  <p>\n                    Step 3: Choose the resources under the account, you will see information of\n                    &quot;Key&quot; and &quot;Endpoint&quot;\n                  </p>\n                  <img src=\"/icons/guide_step_3.png\" style={{ width: '100%' }} />\n                </Flex>\n              }\n              confirmButton=\"Close\"\n              onConfirm={(): void => setIsUserGuideOpen(false)}\n            />\n            <Text size=\"large\">Key:</Text>\n            <Input\n              value={settingData.key}\n              onChange={(_, { value }): void => {\n                dispatch(updateKey(value));\n              }}\n              fluid\n            />\n          </div>\n          <Flex gap=\"gap.large\">\n            <WarningDialog\n              onConfirm={onSave}\n              trigger={\n                <Button primary disabled={cannotUpdateOrSave || loading} loading={loading}>\n                  {notEmpty ? 'Update' : 'Save'}\n                </Button>\n              }\n              contentText={<p>Update Key / Namespace will remove all the parts, sure you want to update?</p>}\n            />\n            <Button primary as={Link} to=\"/\">\n              Cancel\n            </Button>\n          </Flex>\n          {error ? <Alert danger content={`Failed to save ${error}`} dismissible /> : null}\n          {otherError ? <Alert danger content={`Error ${otherError}`} dismissible /> : null}\n        </Flex>\n        {isTrainerValid && <PreviousProjectPanel cvProjects={cvProjects} />}\n      </Flex>\n      <Divider color=\"grey\" />\n      <Checkbox\n        label=\"Allow to Send Usage Data\"\n        toggle\n        checked={checkboxChecked}\n        onChange={onCheckBoxClick}\n      />\n    </>\n  );\n};\n\nconst initialDropdownItem = [\n  {\n    header: '+ Create New Project',\n    content: {\n      key: 'NEW',\n    },\n  },\n];\n\nconst PreviousProjectPanel: React.FC<{ cvProjects: Record<string, string> }> = ({ cvProjects = {} }) => {\n  const { isLoading: isProjectLoading, error: projectError, data: projectData, originData } = useProject(\n    false,\n  );\n  const [loadFullImages, setLoadFullImages] = useState(false);\n  const [otherLoading, setOtherLoading] = useState(false);\n  const [otherError, setOtherError] = useState<Error>(null);\n  const [createProjectModel, setCreateProjectModel] = useState(false);\n  const [projectName, setProjectName] = useState('');\n  const [successDialog, setSuccessDialog] = useState('');\n  const dispatch = useDispatch();\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null)\n      dispatch(updateProjectData({ ...projectData, cvProjectId: projectData.cvProjectId }));\n    else if (data.value.content.key === initialDropdownItem[0].content.key) setCreateProjectModel(true);\n    else dispatch(updateProjectData({ ...projectData, cvProjectId: data.value.content.key }));\n  };\n\n  const onLoad = (): void => {\n    setOtherLoading(true);\n    Axios.get(\n      `/api/projects/${projectData.id}/pull_cv_project?customvision_project_id=${\n        projectData.cvProjectId\n      }&partial=${Number(!loadFullImages)}`,\n    )\n      .then(() => {\n        dispatch(updateOriginProjectData());\n        setSuccessDialog('Load Project Success');\n        return void 0;\n      })\n      .catch((err) => setOtherError(err))\n      .finally(() => setOtherLoading(false));\n  };\n\n  const onCreateNewProject = async (): Promise<void> => {\n    setOtherLoading(true);\n    try {\n      await Axios.get(`/api/projects/${projectData.id}/reset_project?project_name=${projectName}`);\n      // Update cvProject when create success\n      dispatch(thunkGetProject(false));\n      dispatch(thunkGetAllCvProjects());\n      setSuccessDialog('Create Project Success');\n    } catch (err) {\n      setOtherError(err);\n    }\n    setOtherLoading(false);\n  };\n\n  useEffect(() => {\n    let didCancel = false;\n    if (successDialog) {\n      setTimeout(() => {\n        if (!didCancel) setSuccessDialog('');\n      }, 3000);\n    }\n\n    return (): void => {\n      didCancel = true;\n    };\n  });\n\n  const dropdownItems: DropdownItemProps[] = [\n    ...initialDropdownItem,\n    ...Object.entries(cvProjects).map(([key, value]) => ({\n      header: value,\n      content: {\n        key,\n      },\n    })),\n  ];\n\n  const loading = otherLoading || isProjectLoading;\n  const error = [otherError, projectError].filter((e) => !!e);\n\n  const selectedDropdownItems = dropdownItems.find((e) => (e.content as any).key === projectData.cvProjectId);\n\n  return (\n    <>\n      <Divider color=\"grey\" vertical styles={{ height: '100%' }} />\n      <Flex column gap=\"gap.large\">\n        <Text size=\"large\" weight=\"bold\">\n          Projects:{' '}\n        </Text>\n        <Dropdown items={dropdownItems} onChange={onDropdownChange} value={selectedDropdownItems} />\n        {loadFullImages && projectData.cvProjectId !== 'NEW' && (\n          <Checkbox\n            checked={loadFullImages}\n            label=\"Load Full Images\"\n            onClick={(): void => setLoadFullImages((prev) => !prev)}\n          />\n        )}\n        {!loadFullImages && projectData.cvProjectId !== 'NEW' && (\n          <WarningDialog\n            contentText={<p>Depends on the number of images, loading full images takes time</p>}\n            onConfirm={(): void => setLoadFullImages((prev) => !prev)}\n            trigger={<Checkbox checked={loadFullImages} label=\"Load Full Images\" />}\n          />\n        )}\n        {projectData.cvProjectId === 'NEW' && (\n          <Input\n            placeholder=\"Input a project name\"\n            fluid\n            onChange={(_, { value }) => {\n              setProjectName(value);\n            }}\n          />\n        )}\n        {projectData.cvProjectId === 'NEW' ? (\n          <Button\n            primary\n            content={'Create'}\n            disabled={loading}\n            loading={loading}\n            onClick={onCreateNewProject}\n          />\n        ) : (\n          <WarningDialog\n            contentText={<p>Load Project will remove all the parts, sure you want to do that?</p>}\n            onConfirm={onLoad}\n            trigger={\n              <Button\n                primary\n                content={'Load'}\n                disabled={(!loadFullImages && projectData.cvProjectId === originData.cvProjectId) || loading}\n                loading={loading}\n              />\n            }\n          />\n        )}\n        <WarningDialog\n          contentText={<p>Create New Project will remove all the parts, sure you want to do that?</p>}\n          open={createProjectModel}\n          onConfirm={(): void => {\n            setCreateProjectModel(false);\n            dispatch(updateProjectData({ ...projectData, cvProjectId: 'NEW' }));\n          }}\n          onCancel={(): void => setCreateProjectModel(false)}\n        />\n        {error.length ? <Alert danger content={`Failed to load ${error.join(', ')}`} dismissible /> : null}\n        {successDialog && <Alert dismissible header={successDialog} success visible />}\n      </Flex>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Project } from '../store/project/projectTypes';\nimport { thunkGetProject } from '../store/project/projectActions';\n\n/**\n * Fetch the project data from server and set to Redux Store\n */\nexport const useProject = (isDemo?: boolean): Project => {\n  const dispatch = useDispatch();\n  const project = useSelector<State, Project>((state) => state.project);\n\n  useEffect(() => {\n    dispatch(thunkGetProject(isDemo));\n  }, [dispatch, isDemo]);\n\n  return project;\n};\n","import React, { useEffect } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../store/State';\nimport { thunkGetSetting } from '../store/setting/settingAction';\n\nexport const PrivateRoute: React.FC<RouteProps> = ({ component, ...rest }) => {\n  const isTrainerValid = useSelector<State, boolean>((state) => state.setting.isTrainerValid);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(thunkGetSetting());\n  }, [dispatch]);\n\n  if (isTrainerValid) return <Route {...rest} component={component} />;\n\n  return <Route {...rest} render={() => <Redirect to=\"/setting\" />} />;\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Cameras from '../pages/Cameras';\nimport CameraDetails from '../pages/CameraDetails';\nimport { PartDetails } from '../pages/PartDetails';\nimport Locations from '../pages/Locations';\nimport LocationDetails from '../pages/LocationDetails';\nimport ManualIdentification from '../pages/ManualIdentification';\nimport { Parts } from '../pages/Parts';\nimport { PartIdentification } from '../pages/PartIdentification';\nimport { Setting } from '../pages/Setting';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const RootRouter: FC = () => {\n  return (\n    <Switch>\n      <PrivateRoute path=\"/manual\" component={ManualIdentification} />\n      <PrivateRoute path=\"/locations/detail\" component={LocationDetails} />\n      <PrivateRoute path=\"/locations\" component={Locations} />\n      <PrivateRoute path=\"/cameras/detail\" component={CameraDetails} />\n      <PrivateRoute path=\"/cameras\" component={Cameras} />\n      <PrivateRoute path=\"/parts/detail\" component={PartDetails} />\n      <PrivateRoute path=\"/parts\" component={Parts} />\n      <PrivateRoute path=\"/partIdentification\" component={PartIdentification} />\n      <Route path=\"/setting\" component={Setting} />\n      <PrivateRoute path=\"/\" component={Home} />\n    </Switch>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nconst getTitle = (pathname: string): string => {\n  switch (pathname) {\n    case 'cameras':\n      return 'Camera';\n    case 'parts':\n      return 'Part';\n    case 'locations':\n      return 'Location';\n    case 'register':\n      return 'Register';\n    case 'label':\n      return 'Label';\n    case 'manual':\n      return 'Identify Manually';\n    case 'detail':\n      return 'Details';\n    case 'partIdentification':\n      return 'Job Configuration';\n    case 'capturePhotos':\n      return null;\n    case 'uploadPhotos':\n      return null;\n    default:\n      if (typeof pathname === 'string') return 'Details';\n      return null;\n  }\n};\n\nconst Breadcrumb: FC = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/') return <Text color=\"black\">Home</Text>;\n\n  const { pathTitles } = pathname\n    .split('/')\n    .slice(1)\n    .reduce(\n      (acc, cur) => {\n        const title = getTitle(cur);\n        if (!title) return acc;\n\n        const path = `${acc.path}/${cur}`;\n\n        return {\n          pathTitles: [...acc.pathTitles, { title, to: path }],\n          path,\n        };\n      },\n      { pathTitles: [], path: '' },\n    );\n\n  return (\n    <Flex gap=\"gap.smaller\">\n      <Link to={'/'} style={{ color: '#0094d8', textDecoration: 'none' }}>\n        <Text>Home</Text>\n      </Link>\n      {pathTitles.map((e, i, arr) => {\n        // const title = getTitle(e);\n\n        return (\n          <Fragment key={i}>\n            <Text color=\"black\">{'>'}</Text>\n            {i === arr.length - 1 ? (\n              <Text color=\"black\">{e.title}</Text>\n            ) : (\n              <Link to={`${e.to}`} style={{ color: '#0094d8', textDecoration: 'none' }}>\n                <Text>{e.title}</Text>\n              </Link>\n            )}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { memo, FC } from 'react';\nimport { Segment, Image, Flex } from '@fluentui/react-northstar';\nimport { NavLink } from 'react-router-dom';\n\nconst LeftNav: FC<any> = ({ styles }): JSX.Element => {\n  return (\n    <Segment color=\"grey\" inverted styles={{ ...styles, padding: 0, paddingTop: '1em' }}>\n      <Flex column gap=\"gap.large\" hAlign=\"center\">\n        <NavItem src=\"/icons/location.png\" to=\"/locations\"></NavItem>\n        <NavItem src=\"/icons/camera.png\" to=\"/cameras\"></NavItem>\n        <NavItem src=\"/icons/part.png\" to=\"/parts\"></NavItem>\n        <NavItem src=\"/icons/partIdentification.png\" to=\"/partIdentification\"></NavItem>\n        <NavItem src=\"/icons/manual.png\" to=\"/manual\"></NavItem>\n      </Flex>\n    </Segment>\n  );\n};\n\nconst NavItem = ({ src, to }): JSX.Element => {\n  return (\n    <NavLink\n      to={to}\n      style={{ display: 'flex', justifyContent: 'center', padding: '0.8em' }}\n      activeStyle={{ backgroundColor: 'rgba(250, 83, 5, 0.5)' }}\n    >\n      <Image src={src} design={{ width: '100%' }}></Image>\n    </NavLink>\n  );\n};\n\nexport default memo(LeftNav);\n","import React, { FC } from 'react';\nimport { Grid, Segment, Image, Flex, Text, MenuIcon } from '@fluentui/react-northstar';\nimport { NavLink, Link } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport LeftNav from './LeftNav';\n\nexport const MainLayout: React.FC = ({ children }) => {\n  return (\n    <Grid\n      columns=\"60px auto\"\n      rows=\"50px auto\"\n      design={{ height: '100vh' }}\n      styles={{ justifyContent: 'stretch' }}\n    >\n      <TopNav />\n      <LeftNav\n        styles={{\n          gridColumn: '1 / span 1',\n          gridRow: '2 / span 1',\n          boxShadow: '1px 0px 10px 0px rgba(0,0,0,0.75)',\n          zIndex: 1,\n        }}\n      />\n\n      <Segment styles={{ gridColumn: 'span 1', padding: '30px' }}>\n        <Breadcrumb />\n        {children}\n      </Segment>\n    </Grid>\n  );\n};\n\nconst TopNav: FC = () => {\n  return (\n    <Flex\n      space=\"between\"\n      vAlign=\"center\"\n      padding=\"padding.medium\"\n      styles={{\n        backgroundColor: '#0094d8',\n        gridColumn: '1 / span 2',\n        boxShadow: '0px 1px 10px 0px rgba(0,0,0,0.75)',\n        zIndex: 2,\n        fontSize: '20px',\n        padding: '0.5em 1em',\n      }}\n    >\n      <Flex gap=\"gap.large\" vAlign=\"center\">\n        <MenuIcon size=\"large\" styles={{ color: 'white' }} />\n        <NavLink to={'/'} style={{ textDecoration: 'none' }}>\n          <Text color=\"white\">Vision on Edge</Text>\n        </NavLink>\n      </Flex>\n      <Flex vAlign=\"center\" hAlign=\"end\" gap=\"gap.medium\" styles={{ height: '100%' }}>\n        <Link to=\"/setting\" style={{ height: '100%' }}>\n          <Image styles={{ height: '100%' }} src=\"/icons/setting.png\" />\n        </Link>\n        <Text color=\"white\">User</Text>\n      </Flex>\n    </Flex>\n  );\n};\n","import { ThemeInput, mergeThemes, themes } from '@fluentui/react-northstar';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colors: {\n      brand: {\n        '50': '#f3fafd',\n        '100': '#d1ecf9',\n        '200': '#aadcf4',\n        '300': '#5dbce8',\n        '400': '#1ba0dd',\n        '500': '#0094d8',\n        '600': '#0085c3',\n        '700': '#0071a5',\n        '800': '#005379',\n        '900': 'black',\n      },\n    },\n    colorScheme: {\n      brand: {\n        foreground: '#0094d8',\n        background: '#0094d8',\n        border: '#E1DFDD',\n        shadow: '#000',\n        foregroundHover: '#0094d8',\n        backgroundHover: '#0085c3',\n        borderHover: '#5dbce8',\n        shadowHover: '#000',\n        foregroundActive: '#0094d8',\n        backgroundActive: '#0094d8',\n        borderActive: '#E1DFDD',\n        shadowActive: undefined,\n        foregroundFocus: '#0094d8',\n        backgroundFocus: '#0094d8',\n        borderFocus: '#000',\n        shadowFocus: undefined,\n        foregroundPressed: '#0071a5',\n        backgroundPressed: '#0071a5',\n        borderPressed: '#5dbce8',\n        shadowPressed: undefined,\n        foregroundDisabled: '#C8C6C4',\n        backgroundDisabled: '#EDEBE9',\n        borderDisabled: '#EDEBE9',\n        shadowDisabled: undefined,\n        foreground1: '#0094d8',\n        foreground2: '#0085c3',\n        foreground3: '#aadcf4',\n        foreground4: '#fff',\n        background1: '#d1ecf9',\n        background2: '#005379',\n        background3: '#373644',\n        background4: '#0071a5',\n        border1: '#aadcf4',\n        border2: '#5dbce8',\n        foregroundHover1: '#fff',\n        foregroundHover2: '#aadcf4',\n        backgroundHover1: '#f3fafd',\n        foregroundPressed1: '#fff',\n        foregroundActive1: '#0094d8',\n        foregroundActive2: '#aadcf4',\n        backgroundActive1: '#0094d8',\n        borderActive1: '#aadcf4',\n        borderActive2: '#5dbce8',\n        foregroundFocus1: '#0094d8',\n        foregroundFocus2: '#0085c3',\n        foregroundFocus3: '#aadcf4',\n        foregroundFocus4: '#fff',\n        backgroundFocus1: '#d1ecf9',\n        backgroundFocus2: '#005379',\n        backgroundFocus3: '#373644',\n        borderFocusWithin: '#fff',\n        borderFocus1: '#0094d8',\n        foregroundDisabled1: '#C8C6C4',\n        backgroundDisabled1: '#EDEBE9',\n      },\n    },\n  },\n};\n\n/**\n * Primary color is based on #0094d8 and generated by https://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/theming-designer/index.html\n */\nexport const myTheme = mergeThemes(themes.teams, theme);\n","import React, { useEffect, useRef } from 'react';\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\nimport { withRouter } from 'react-router-dom';\n\nimport { ai } from '../TelemetryService';\n\n/**\n * This Component provides telemetry with Azure App Insights\n */\nconst TelemetryProvider: React.FC<any> = ({ instrumentationKey, isAppInsightOn, history, children }) => {\n  const initialized = useRef(false);\n\n  useEffect(() => {\n    const AppInsightsInstrumentationKey = instrumentationKey;\n    if (!initialized.current && Boolean(AppInsightsInstrumentationKey) && Boolean(history)) {\n      ai.initialize(AppInsightsInstrumentationKey, isAppInsightOn, history);\n      initialized.current = true;\n    }\n  }, [history, instrumentationKey, isAppInsightOn]);\n\n  return <>{children}</>;\n};\n\nexport default withRouter(withAITracking(ai.reactPlugin, TelemetryProvider, 'TelemetryProvider'));\n","import React, { FC, useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from '@fluentui/react-northstar';\nimport Axios from 'axios';\nimport { RootRouter } from './routes/RootRouter';\nimport { MainLayout } from './components/MainLayout';\nimport { myTheme } from './theme';\nimport TelemetryProvider from './components/TelemetryProvider';\n\nconst App: FC = (): JSX.Element => {\n  const [appInsightInfo, setAppInsightInfo] = useState({\n    key: '',\n    isAppInsightOn: false,\n  });\n\n  useEffect(() => {\n    const appInsightKey = Axios.get('/api/appinsight/key');\n    const settings = Axios.get('/api/settings/');\n\n    Axios.all([appInsightKey, settings])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: appInsightKeyData } = responses[0];\n          const { data: settingsData } = responses[1];\n\n          if (appInsightKeyData.key)\n            return setAppInsightInfo({\n              key: appInsightKeyData.key,\n              isAppInsightOn: settingsData[0].is_collect_data,\n            });\n          throw new Error('No API Key');\n        }),\n      )\n      .catch((e) => console.error(e));\n  }, []);\n\n  return (\n    <Provider theme={myTheme}>\n      <BrowserRouter>\n        <TelemetryProvider\n          instrumentationKey={appInsightInfo.key}\n          isAppInsightOn={appInsightInfo.isAppInsightOn}\n        >\n          <div className=\"App\">\n            <MainLayout>\n              <RootRouter />\n            </MainLayout>\n          </div>\n        </TelemetryProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/State';\n\nconst { store, persistor } = configureStore(initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading..</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}