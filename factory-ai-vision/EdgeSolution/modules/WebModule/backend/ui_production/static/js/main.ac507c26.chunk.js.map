{"version":3,"sources":["store/project/projectTypes.ts","store/part/partReducer.ts","store/labelingPage/labelingPageTypes.ts","store/State.ts","store/camera/cameraReducer.ts","store/camera/cameraTypes.ts","store/part/partTypes.ts","store/labelingPage/labelingPageReducer.ts","store/location/locationReducer.ts","store/location/locationTypes.ts","store/dialog/dialogIsOpenReducer.ts","store/dialog/dialogIsOpenTypes.ts","store/project/projectReducer.ts","store/image/imageReducer.ts","store/image/imageTypes.ts","store/rootReducer.ts","store/index.ts","components/ImageLink.tsx","pages/Home.tsx","store/dialog/dialogIsOpenActions.ts","store/camera/cameraActions.ts","components/AddButton.tsx","pages/Cameras.tsx","components/ConfirmDialog.tsx","components/CameraDetails/CameraDetailInfo.tsx","hooks/useInterval.ts","store/project/projectActions.ts","hooks/useParts.ts","hooks/useQuery.ts","components/LiveViewContainer/LiveViewScene.tsx","components/LabelingPage/util/useImage.ts","components/LiveViewContainer/LiveViewContainer.tsx","components/CameraConfigure/CameraConfigureInfo.tsx","components/CameraConfigure/CreateCameraConfig.tsx","pages/CameraDetails.tsx","components/LabelingPage/util/resizeImage.ts","store/labelingPage/labelingPageActions.ts","components/LabelingPage/Box.tsx","components/LabelingPage/RemoveBoxButton.tsx","components/LabelingPage/Scene.tsx","store/image/imageActions.ts","components/LabelingPage/PrevNextButton.tsx","pages/LabelingPage.tsx","components/LabelingPageDialog.tsx","components/LabelDisplayImage.tsx","components/RTSPVideo/RTSPVideo.tsx","store/part/partActions.ts","util/GetIDFromUrl.ts","util/getFilteredImages.ts","util/formatDropdownValue.ts","components/CapturePhoto/CapturePhotos.tsx","hooks/useCameras.ts","components/UploadPhotos/UploadPhotos.tsx","pages/PartDetails.tsx","store/location/locationActions.ts","pages/Locations.tsx","pages/LocationRegister.tsx","pages/LocationDetails.tsx","components/ManualIdentification/ImageItem.tsx","components/ManualIdentification/ImagesContainer.tsx","pages/ManualIdentification.tsx","pages/Parts.tsx","TelemetryService.ts","components/WarningDialog/WarningDialog.tsx","pages/PartIdentification.tsx","pages/Setting.tsx","hooks/useProject.ts","routes/RootRouter.tsx","components/Breadcrumb.tsx","components/MainLayout/LeftNav.tsx","components/MainLayout/MainLayout.tsx","theme.ts","components/TelemetryProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Status","reducer","AnnotationState","LabelingCursorStates","WorkState","LabelingType","initialState","dialogIsOpen","cameras","locations","images","labelingPageState","annotations","part","capturedImages","isValid","project","isLoading","data","id","camera","location","parts","needRetraining","accuracyRangeMin","accuracyRangeMax","maxImages","modelUrl","trainingMetrics","prevConsequence","curConsequence","inferenceMetrics","successRate","successfulInferences","unIdetifiedItems","isGpu","averageTime","status","None","error","trainingLog","camerasReducer","state","action","type","payload","concat","idx","findIndex","e","slice","checkIfImagesCountIsValidToTrain","newCapturedImage","newState","filter","image","labels","length","labelingPageStateReducer","push","annotation","creatingAnnotation","updater","annotationState","Finish","label","x1","x2","y1","y2","pop","index","locationsReducer","dialogIsOpenReducer","projectReducer","newStatus","TrainingFailed","StartInference","labelImagesReducer","updatedImageIdx","rootReducer","combineReducers","partReducer","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","memo","to","imgSrc","defaultSrc","bgImgSrc","imgPadding","width","height","bgImgStyle","pointerCursor","onClick","Flex","column","styles","style","Image","src","padding","objectFit","backgroundImage","cursor","Text","align","Home","dispatch","useDispatch","gap","size","weight","color","backgroundColor","requestCamerasFailure","console","getCameras","axios","then","getCamerasSuccess","catch","err","AddButton","Button","primary","fluid","circular","content","Cameras","useSelector","is_demo","useState","name","setName","rtsp","setRtsp","model_name","setModel_name","useEffect","display","flexFlow","justifyContent","Grid","columns","map","i","backgroundSize","backgroundPosition","backgroundRepeat","Dialog","open","trigger","alignSelf","alignItems","Input","placeholder","value","onChange","_","newProps","disabled","newCamera","method","postCameraSuccess","ConfirmDialog","onConfirm","primaryStyles","setOpen","onOpen","footer","space","modelName","deleteCameraSuccess","deleteCamera","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","getTrainingLogSuccess","thunkGetProject","isTestModel","url","undefined","Number","Axios","get","parseInt","split","ele","download_uri","getProjectSuccess","thunkPostProject","projectId","selectedLocations","selectedParts","selectedCamera","getState","isProjectEmpty","projectData","headers","getTrain","thunkGetTrainingLog","Error","log","FinishTraining","WaitTraining","useParts","isDemo","setParts","fetch","res","json","useQuery","URLSearchParams","useLocation","search","LiveViewScene","AOIs","setAOIs","visible","imageInfo","divRef","stageRef","imgRef","layerRef","imgEle","imgWidth","imgHeight","anim","Konva","Animation","start","stop","getBoundingClientRect","divWidth","divHeight","stageWidth","stageHeight","scale","Math","min","x","y","offsetX","offsetY","position","ref","AOILayer","holes","box","boundary","onBoxChange","updateBox","prev","newBox","tmp","newAOIs","Mask","fill","sceneFunc","ctx","shape","beginPath","moveTo","lineTo","forEach","fillStrokeShape","listening","AOIBox","handleDrag","target","points","closed","stroke","strokeWidth","draggable","radius","onDragMove","defaultState","useImage","crossOrigin","imageState","setImageState","prevUrl","usePrevious","img","document","createElement","onload","onerror","addEventListener","removeEventListener","LiveViewContainer","showVideo","initialAOIData","cameraId","useAOI","showAOI","setShowAOI","lasteUpdatedAOIs","showUpdateSuccessTxt","setShowUpdateSuccessTxt","loading","setLoading","setError","window","hostname","onCheckboxClick","a","patch","area","JSON","stringify","onUpdate","R","timer","setTimeout","clearTimeout","hasEdit","updateBtnDisabled","Alert","danger","header","message","hAlign","vAlign","Checkbox","labelPosition","toggle","checked","visibility","CameraConfigureInfo","allTrainingLog","useAllTrainingLog","cameraName","history","useHistory","onDeleteConfigure","useCallback","confirm","delete","alert","thunkDeleteProject","CameraConfigStatus","dispacth","new","precision","recall","mAP","previous","getTrainingMetricsSuccess","thunkGetTrainingMetrics","success_rate","inference_num","unidentified_num","gpu","average_time","thunkGetInferenceMetrics","isCameraOnline","includes","Loader","title","online","join","rowGap","fontWeight","margin","marginLeft","as","Link","allLogs","setAllLogs","ConsequenceDashboard","ListItem","children","CameraStatus","text","CreateCameraConfig","design","border","CameraDetails","cameraIdInproject","find","hasProject","aoiData","getAOIData","cameraArea","parse","getResizeImageFunction","defaultSize","scaleX","scaleY","requestAnnotationsSuccess","BoxObj","init","attribute","Empty","createWithPoint","p","obj","this","add","newObj","P1Added","setVerticesToValidValue","setVerticesToInt","round","setVerticesPointsOrder","object","Box2d","workState","onSelect","selected","annotationIndex","changeCursorState","vertices","setVertices","anchorRadius","boxRef","dispatchLabel","newAnnotation","updateAnnotation","mouseMoveListener","Creating","evt","onDragAnchor","xi","yi","getStage","getSize","setAttr","anotherPosXArr","anotherPosYArr","splice","xx","yy","nwseResize","neswResize","prevVertices","layer","getLayer","on","off","onMouseDown","cancelBubble","onDragEnd","onMouseEnter","onMouseLeave","imageSize","setShowOuterRemoveButton","removeBox","setColor","setStrokeWidth","pointer","Scene","labelingType","setWorkState","resizeImage","setImageSize","noMoreCreate","useMemo","SingleAnnotation","default","cursorState","setCursorState","selectedAnnotationIndex","setSelectedAnnotationIndex","showOuterRemoveButton","isDragging","setIsDragging","cursorType","crosshair","removeAnnotation","Selecting","outcomeSize","outcomeScale","iconOnly","pos","onMouseUp","onDragStart","fontSize","requestLabelImagesFailure","getLabelImages","getLabelImagesSuccess","postLabelImage","newImage","saveLabelImageAnnotation","imageId","info","updateLabelImageAnnotation","PrevNextButton","isRelabel","prevDisabled","nextDisabled","onPrevClick","onNextClick","icon","checkOnePointBox","LabelingPage","imageIndex","closeDialog","setIndex","isOnePointBox","imageUrl","parsedLabels","getAnnotations","annotationToShape","imgScale","edge","Line","Circle","labelImage","labelText","stage","shapes","Stage","container","FastLayer","destroy","newShapes","j","draw","RTSPVideo","React","partId","canCapture","onVideoStart","onVideoPause","streamId","setStreamId","onDisconnect","response","Group","buttons","stream_id","thunkAddCapturedImages","getIdFromUrl","getFilteredImages","is_relabel","formatDropdownValue","Array","isArray","CapturePhotos","setSelectedCamera","CameraSelector","availableCameras","useCameras","items","Dropdown","newSelectedCamera","CapturedImagesContainer","filteredImages","imageCount","overflow","borderColor","arr","when","UploadPhotos","files","formData","FormData","append","accept","multiple","gridGap","justifyItems","PartDetails","gridColumnGap","LeftPanel","description","setDescription","gridColumn","TextArea","hasPartId","dismissible","RightPanel","path","Tab","pathname","activeIndex","Menu","pointing","requestLocationsFailure","Locations","getLocationsSuccess","LocationRegister","coordinates","setCoordinates","Divider","paddingTop","minHeight","newLocation","postLocationSuccess","LocationDetails","confidenceLevel","relabelImages","setJudgedImageList","partItems","isPartCorrect","filteredPartItems","selectedPartItem","setSelectedPartItem","maxHeight","truncated","RadioGroup","checkedValue","onCheckedValueChange","next","judgedImageList","selectedPartId","borderWidth","borderStyle","ManualIdentification","confidenceLevelRange","setConfidenceLevelRange","ascend","setAscend","sortRef","sorted","prevIsAscend","setRelabelImages","confidence","reverse","sort","b","columnGap","allowCross","handle","dragging","restProps","prefixCls","overlay","placement","minWidth","maxWidth","Parts","partsAPI","imagesAPI","all","spread","partsRes","wrap","right","bottom","Item","reactPlugin","appInsights","ai","initialize","instrumentationKey","isAppInsightOn","browserHistory","ReactPlugin","ApplicationInsights","config","maxBatchInterval","disableFetchTracking","disableTelemetry","extensions","extensionConfig","identifier","loadAppInsights","getAppInsights","WarningDialog","onCancel","contentText","cancelButton","confirmButton","flexDirection","theme","siteVariables","colorScheme","brand","foreground","sendTrainInfoToAppInsight","selectedPartIds","interestedImagesLength","appInsight","trackEvent","properties","source","PartIdentification","maxImage","setIsTestModel","useDropdownItems","cameraLoading","dropDownCameras","setSelectedCameraById","partLoading","dropDownParts","setSelectedPartsById","locationLoading","dropDownLocations","setSelectedLocationById","maxImgCountError","setMaxImgCountError","handleSubmitConfigure","setData","keyName","accracyRangeDisabled","moduleName","setSelectedModuleItem","isMultiple","inline","TestModelButton","originItems","dropDownItems","setDropDownItems","selectedItem","setSelectedItem","finally","correspondedItems","reduce","acc","cur","correspondedItem","toString","ModuleSelector","ids","namespace","origin","Setting","useReducer","settingData","originSettingData","checkboxChecked","setCheckboxChecked","notEmpty","cannotUpdateOrSave","training_key","endpoint","is_collect_data","paddingBottom","isSettingEmpty","requestConfig","iot_hub_connection_string","device_id","module_id","reload","settingDataId","newCheckboxChecked","initialDropdownItem","PreviousProjectPanel","dropdownItems","setDropdownItems","customVisionProjectId","setCustomVisionProjectId","useProject","isProjectLoading","projectError","loadFullImages","setLoadFullImages","otherLoading","setOtherLoading","otherError","setOtherError","createProjectModel","setCreateProjectModel","Object","entries","vertical","RootRouter","component","Breadcrumb","pathTitles","getTitle","textDecoration","NavItem","activeStyle","Segment","inverted","MainLayout","rows","gridRow","boxShadow","zIndex","TopNav","colors","background","shadow","foregroundHover","backgroundHover","borderHover","shadowHover","foregroundActive","backgroundActive","borderActive","shadowActive","foregroundFocus","backgroundFocus","borderFocus","shadowFocus","foregroundPressed","backgroundPressed","borderPressed","shadowPressed","foregroundDisabled","backgroundDisabled","borderDisabled","shadowDisabled","foreground1","foreground2","foreground3","foreground4","background1","background2","background3","background4","border1","border2","foregroundHover1","foregroundHover2","backgroundHover1","foregroundPressed1","foregroundActive1","foregroundActive2","backgroundActive1","borderActive1","borderActive2","foregroundFocus1","foregroundFocus2","foregroundFocus3","foregroundFocus4","backgroundFocus1","backgroundFocus2","backgroundFocus3","borderFocusWithin","borderFocus1","foregroundDisabled1","backgroundDisabled1","myTheme","mergeThemes","themes","teams","withRouter","withAITracking","initialized","AppInsightsInstrumentationKey","Boolean","App","appInsightInfo","setAppInsightInfo","appInsightKey","settings","appInsightKeyData","settingsData","Provider","className","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac507c26.chunk.js","sourcesContent":["import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport type { State } from '../State';\n\nexport type Project = {\n  isLoading: boolean;\n  trainingLog: string;\n  data: ProjectData;\n  inferenceMetrics: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n    isGpu: boolean;\n    averageTime: number;\n  };\n  trainingMetrics: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n  status: Status;\n  error: Error;\n};\n\nexport enum Status {\n  None = 'none',\n  WaitTraining = 'waitTraining',\n  FinishTraining = 'finishTraining',\n  TrainingFailed = 'trainingFailed',\n  StartInference = 'startInference',\n}\n\nexport type Consequence = {\n  precision: number;\n  recall: number;\n  mAP: number;\n};\n\nexport type ProjectData = {\n  id: number;\n  camera: any;\n  location: any;\n  parts: any[];\n  needRetraining: boolean;\n  accuracyRangeMin: number;\n  accuracyRangeMax: number;\n  maxImages: number;\n  modelUrl: string;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_PROJECT_REQUEST = 'GET_PROJECT_REQUEST';\nexport type GetProjectRequestAction = {\n  type: typeof GET_PROJECT_REQUEST;\n};\n\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\nexport type GetProjectSuccessAction = {\n  type: typeof GET_PROJECT_SUCCESS;\n  payload: {\n    project: ProjectData;\n  };\n};\n\nexport const GET_PROJECT_FAILED = 'GET_PROJECT_FAILED';\nexport type GetProjectFailedAction = {\n  type: typeof GET_PROJECT_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_LOG_REQUEST = 'GET_TRAINING_LOG_REQUEST';\nexport type GetTrainingLogRequesAction = {\n  type: typeof GET_TRAINING_LOG_REQUEST;\n};\n\nexport const GET_TRAINING_LOG_SUCCESS = 'GET_TRAINING_LOG_SUCCESS';\nexport type GetTrainingLogSuccessAction = {\n  type: typeof GET_TRAINING_LOG_SUCCESS;\n  payload: {\n    trainingLog: string;\n    newStatus: Status;\n  };\n};\n\nexport const GET_TRAINING_LOG_FAILED = 'GET_TRAINING_LOG_FAILED';\nexport type GetTrainingLogFailedAction = {\n  type: typeof GET_TRAINING_LOG_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_METRICS_REQUEST = 'GET_TRAINING_METRICS_REQUEST';\nexport type GetTrainingMetricsRequestAction = {\n  type: typeof GET_TRAINING_METRICS_REQUEST;\n};\n\nexport const GET_TRAINING_METRICS_SUCCESS = 'GET_TRAINING_METRICS_SUCCESS';\nexport type GetTrainingMetricsSuccessAction = {\n  type: typeof GET_TRAINING_METRICS_SUCCESS;\n  payload: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n};\n\nexport const GET_TRAINING_METRICS_FAILED = 'GET_TRAINING_METRICS_FAILED';\nexport type GetTrainingMetricsFailedAction = {\n  type: typeof GET_TRAINING_METRICS_FAILED;\n  error: Error;\n};\n\nexport const GET_INFERENCE_METRICS_REQUEST = 'GET_TRAINING_INFERENCE_REQUEST';\nexport type GetInferenceMetricsRequestAction = {\n  type: typeof GET_INFERENCE_METRICS_REQUEST;\n};\n\nexport const GET_INFERENCE_METRICS_SUCCESS = 'GET_INFERENCE_METRICS_SUCCESS';\nexport type GetInferenceMetricsSuccessAction = {\n  type: typeof GET_INFERENCE_METRICS_SUCCESS;\n  payload: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n    isGpu: boolean;\n    averageTime: number;\n  };\n};\n\nexport const GET_INFERENCE_METRICS_FAILED = 'GET_INFERENCE_METRICS_FAILED';\nexport type GetInferenceMetricsFailedAction = {\n  type: typeof GET_INFERENCE_METRICS_FAILED;\n  error: Error;\n};\n\nexport const POST_PROJECT_REQUEST = 'POST_PROJECT_REQUEST';\nexport type PostProjectRequestAction = {\n  type: typeof POST_PROJECT_REQUEST;\n};\n\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\nexport type PostProjectSuccessAction = {\n  type: typeof POST_PROJECT_SUCCESS;\n};\n\nexport const POST_PROJECT_FALIED = 'POST_PROJECT_FALIED';\nexport type PostProjectFaliedAction = {\n  type: typeof POST_PROJECT_FALIED;\n  error: Error;\n};\n\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport type DeleteProjectSuccessAction = {\n  type: typeof DELETE_PROJECT_SUCCESS;\n};\n\nexport const DELETE_PROJECT_FALIED = 'DELETE_PROJECT_FALIED';\nexport type DeleteProjectFaliedAction = {\n  type: typeof DELETE_PROJECT_FALIED;\n};\n\nexport const UPDATE_PROJECT_DATA = 'UPDATE_PROJECT_DATA';\nexport type UpdateProjectDataAction = {\n  type: typeof UPDATE_PROJECT_DATA;\n  payload: ProjectData;\n};\n\nexport const START_INFERENCE = 'START_INFERENCE';\nexport type StartInferenceAction = {\n  type: typeof START_INFERENCE;\n};\n\nexport const STOP_INFERENCE = 'STOP_INFERENCE';\nexport type StopInferenceAction = {\n  type: typeof STOP_INFERENCE;\n};\n\nexport type ProjectActionTypes =\n  | GetProjectRequestAction\n  | GetProjectSuccessAction\n  | GetProjectFailedAction\n  | GetTrainingLogRequesAction\n  | GetTrainingLogSuccessAction\n  | GetTrainingLogFailedAction\n  | PostProjectRequestAction\n  | PostProjectSuccessAction\n  | PostProjectFaliedAction\n  | DeleteProjectSuccessAction\n  | DeleteProjectFaliedAction\n  | UpdateProjectDataAction\n  | GetTrainingMetricsRequestAction\n  | GetTrainingMetricsSuccessAction\n  | GetTrainingMetricsFailedAction\n  | GetInferenceMetricsRequestAction\n  | GetInferenceMetricsSuccessAction\n  | GetInferenceMetricsFailedAction\n  | StartInferenceAction\n  | StopInferenceAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type ProjectThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, Action<string>>;\n","import { initialState } from '../State';\nimport {\n  PartActionTypes,\n  ADD_CAPTURED_IMAGE,\n  Part,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\n\nconst partReducer = (state = initialState.part, action: PartActionTypes): Part => {\n  switch (action.type) {\n    case ADD_CAPTURED_IMAGE:\n      return { ...state, capturedImages: [...state.capturedImages, action.payload.newCapturedImage] };\n    case UPDATE_CAPTURED_IMAGES:\n      return { ...state, capturedImages: action.payload.capturedImages };\n    default:\n      return state;\n  }\n};\n\ntype PartReducerType = typeof partReducer;\nconst checkIfImagesCountIsValidToTrain = (reducer: PartReducerType) => (\n  state = initialState.part,\n  action: PartActionTypes,\n): Part => {\n  const newState = reducer(state, action);\n  const isValid = newState.capturedImages.filter((image) => image.labels).length >= 15;\n  return { ...newState, isValid };\n};\n\nexport default checkIfImagesCountIsValidToTrain(partReducer);\n","// * Request Operation\nexport const REQUEST_ANNOTATION_FAILURE = 'REQUEST_ANNOTATION_FAILURE';\nexport type RequestAnnotationSuccessAction = { type: typeof REQUEST_ANNOTATION_SUCCESS; payload: any };\nexport const REQUEST_ANNOTATION_SUCCESS = 'REQUEST_ANNOTATION_SUCCESS';\nexport type RequestAnnotationFailureAction = { type: typeof REQUEST_ANNOTATION_FAILURE };\n\n// * Store Operation\nexport const CREATE_ANNOTATION = 'CREATE_ANNOTATION';\nexport type CreateAnnotationAction = { type: typeof CREATE_ANNOTATION; payload: { annotation: Annotation } };\nexport const UPDATE_CREATING_ANNOTATION = 'UPDATE_CREATING_ANNOTATION';\nexport type UpdateCreatingAnnotationAction = {\n  type: typeof UPDATE_CREATING_ANNOTATION;\n  payload: { updater: (annotation: Annotation) => Annotation };\n};\nexport const UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nexport type UpdateAnnotationAction = {\n  type: typeof UPDATE_ANNOTATION;\n  payload: { annotation: Annotation; index: number };\n};\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport type RemoveAnnotationAction = {\n  type: typeof REMOVE_ANNOTATION;\n  payload: { index: number };\n};\nexport const RESET_ANNOTATION = 'RESET_ANNOTATION';\nexport type ResetAnnotationAction = {\n  type: typeof RESET_ANNOTATION;\n};\n\nexport type AnnotationAction =\n  | RequestAnnotationSuccessAction\n  | RequestAnnotationFailureAction\n  | CreateAnnotationAction\n  | UpdateCreatingAnnotationAction\n  | UpdateAnnotationAction\n  | RemoveAnnotationAction\n  | ResetAnnotationAction;\n\nexport type Position2D = {\n  x: number;\n  y: number;\n};\nexport type BoxLabel = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\nexport type Size2D = { width: number; height: number };\nexport type Annotation = {\n  id: number;\n  label: BoxLabel;\n  attribute: string;\n  annotationState: AnnotationState;\n};\n\nexport enum AnnotationState {\n  Empty = 'Empty',\n  P1Added = 'P1Added',\n  Finish = 'Finish',\n}\n\nexport enum LabelingCursorStates {\n  default = 'default',\n  pointer = 'pointer',\n  crosshair = 'crosshair',\n  neswResize = 'nesw-resize',\n  nwseResize = 'nwse-resize',\n}\nexport interface Box2dComponentProps {\n  workState: WorkState;\n  scale: number;\n  onSelect: Function;\n  annotation: Annotation;\n  annotationIndex: number;\n  selected: boolean;\n  visible?: boolean;\n  dispatch: any;\n  changeCursorState?: (cursorType?: LabelingCursorStates) => void;\n  // instanceID: number;\n}\nexport type BoxObject = {\n  init: () => Annotation;\n  createWithPoint: (point: Position2D, attribute: string) => Annotation;\n  add: (point: Position2D, arg1: Annotation) => Annotation;\n  setVerticesToValidValue: (arg0: Annotation) => Annotation;\n  setVerticesToInt: (arg0: Annotation) => Annotation;\n  setVerticesPointsOrder: (arg0: Annotation) => Annotation;\n};\n\nexport enum WorkState {\n  Creating = 'Creating',\n  Selecting = 'Selecting',\n  None = 'None',\n}\n\nexport enum LabelingType {\n  SingleAnnotation = 0,\n  MultiAnnotation = 1,\n}\n","import { Annotation } from './labelingPage/labelingPageTypes';\nimport { Camera } from './camera/cameraTypes';\nimport { Part } from './part/partTypes';\nimport { Location } from './location/locationTypes';\nimport { Project, Status } from './project/projectTypes';\nimport { LabelImage } from './image/imageTypes';\n\nexport interface State {\n  dialogIsOpen: boolean;\n  cameras: Camera[];\n  locations: Location[];\n  labelingPageState: LabelingPageState;\n  part: Part;\n  project: Project;\n  images: LabelImage[];\n}\n\nexport type LabelingPageState = { annotations: Annotation[] };\n\nexport const initialState: State = {\n  dialogIsOpen: false,\n  cameras: [],\n  locations: [],\n  images: [],\n  labelingPageState: { annotations: [] },\n  part: {\n    capturedImages: [],\n    isValid: true,\n  },\n  project: {\n    isLoading: false,\n    data: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 50,\n      modelUrl: '',\n    },\n    trainingMetrics: {\n      prevConsequence: null,\n      curConsequence: null,\n    },\n    inferenceMetrics: {\n      successRate: null,\n      successfulInferences: null,\n      unIdetifiedItems: null,\n      isGpu: false,\n      averageTime: null,\n    },\n    status: Status.None,\n    error: null,\n    trainingLog: '',\n  },\n};\n","import {\n  GET_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  POST_CAMERA_SUCCESS,\n  Camera,\n  CameraAction,\n  DELETE_CAMERA_SUCCESS,\n} from './cameraTypes';\nimport { initialState } from '../State';\n\nconst camerasReducer = (state = initialState.cameras, action: CameraAction): Camera[] => {\n  switch (action.type) {\n    case GET_CAMERA_SUCCESS:\n      return action.payload;\n    case REQUEST_CAMERA_FAILURE:\n      return state;\n    case POST_CAMERA_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_CAMERA_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default camerasReducer;\n","// Describing the shape of the camera's slice of state\nexport type Camera = {\n  id?: number;\n  name: string;\n  rtsp: string;\n  model_name: string;\n  area?: string;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_CAMERA_SUCCESS = 'GET_CAMERA_SUCCESS';\nexport const POST_CAMERA_SUCCESS = 'POST_CAMERA_SUCCESS';\nexport const DELETE_CAMERA_SUCCESS = 'DELETE_CAMERA_SUCCESS';\nexport const REQUEST_CAMERA_FAILURE = 'REQUEST_CAMERA_FAILURE';\n\nexport type GetCamerasSuccess = { type: typeof GET_CAMERA_SUCCESS; payload: Camera[] };\nexport type PostCameraSuccess = { type: typeof POST_CAMERA_SUCCESS; payload: Camera };\nexport type DeleteCameraSuccess = { type: typeof DELETE_CAMERA_SUCCESS; payload: { id: number } };\nexport type RequestCamerasFailure = { type: typeof REQUEST_CAMERA_FAILURE };\n\nexport type CameraAction =\n  | GetCamerasSuccess\n  | PostCameraSuccess\n  | DeleteCameraSuccess\n  | RequestCamerasFailure;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { LabelImage } from '../image/imageTypes';\n\n// Describing the shape of the chat's slice of state\nexport type Part = { capturedImages: LabelImage[]; isValid: boolean };\n\n// Describing the different ACTION NAMES available\nexport const ADD_CAPTURED_IMAGE = 'ADD_CAPTURED_IMAGE';\n\nexport type AddCapturedImageAction = {\n  type: typeof ADD_CAPTURED_IMAGE;\n  payload: {\n    newCapturedImage: LabelImage;\n  };\n};\n\nexport const UPDATE_CAPTURED_IMAGES = 'UPDATE_CAPTURED_IMAGES';\n\nexport type UpdateCapturedImageAction = {\n  type: typeof UPDATE_CAPTURED_IMAGES;\n  payload: {\n    capturedImages: LabelImage[];\n  };\n};\n\nexport type PartActionTypes = AddCapturedImageAction | UpdateCapturedImageAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type PartThunk<ReturnType = void> = ThunkAction<ReturnType, Part, unknown, Action<string>>;\n","import {\n  AnnotationState,\n  UPDATE_ANNOTATION,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  REMOVE_ANNOTATION,\n  AnnotationAction,\n  RESET_ANNOTATION,\n} from './labelingPageTypes';\nimport { initialState, LabelingPageState } from '../State';\n\nconst labelingPageStateReducer = (\n  state = initialState.labelingPageState,\n  action: AnnotationAction,\n): LabelingPageState => {\n  const newState = state;\n  switch (action.type) {\n    case REQUEST_ANNOTATION_SUCCESS:\n      newState.annotations = action.payload.annotations;\n      break;\n    case REQUEST_ANNOTATION_FAILURE:\n      break;\n    case CREATE_ANNOTATION:\n      newState.annotations.push(action.payload.annotation);\n      break;\n    case UPDATE_CREATING_ANNOTATION:\n      {\n        const creatingAnnotation = action.payload.updater(\n          newState.annotations[newState.annotations.length - 1],\n        );\n\n        if (creatingAnnotation.annotationState === AnnotationState.Finish) {\n          if (\n            (creatingAnnotation.label.x1 | 0) === (creatingAnnotation.label.x2 | 0) &&\n            (creatingAnnotation.label.y1 | 0) === (creatingAnnotation.label.y2 | 0)\n          ) {\n            newState.annotations.pop();\n          } else {\n            newState.annotations[newState.annotations.length - 1] = creatingAnnotation;\n            newState.annotations = [...newState.annotations];\n          }\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION:\n      newState.annotations[action.payload.index] = action.payload.annotation;\n      break;\n    case REMOVE_ANNOTATION:\n      newState.annotations = newState.annotations\n        .slice(0, action.payload.index)\n        .concat(newState.annotations.slice(action.payload.index + 1));\n      break;\n    case RESET_ANNOTATION:\n      newState.annotations = initialState.labelingPageState.annotations;\n      break;\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport default labelingPageStateReducer;\n","import {\n  GET_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  POST_LOCATION_SUCCESS,\n  Location,\n  LocationAction,\n} from './locationTypes';\nimport { initialState } from '../State';\n\nconst locationsReducer = (state = initialState.locations, action: LocationAction): Location[] => {\n  switch (action.type) {\n    case GET_LOCATION_SUCCESS:\n      return action.payload;\n    case REQUEST_LOCATION_FAILURE:\n      return state;\n    case POST_LOCATION_SUCCESS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default locationsReducer;\n","// Describing the shape of the loaction's slice of state\nexport type Location = {\n  id?: number;\n  name: string;\n  coordinates: string;\n  description: string;\n  projectId?: number;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const REQUEST_LOCATION_FAILURE = 'REQUEST_LOCATION_FAILURE';\nexport const POST_LOCATION_SUCCESS = 'POST_LOCATION_SUCCESS';\n\nexport type GetLocationsSuccess = { type: typeof GET_LOCATION_SUCCESS; payload: Location[] };\nexport type RequestLocationsFailure = { type: typeof REQUEST_LOCATION_FAILURE };\nexport type PostLocationSuccess = { type: typeof POST_LOCATION_SUCCESS; payload: Location };\n\nexport type LocationAction = GetLocationsSuccess | RequestLocationsFailure | PostLocationSuccess;\n","import {\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n  DialogIsOpenAction,\n} from './dialogIsOpenTypes';\nimport { initialState } from '../State';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import { initialState } from '../State';\nimport {\n  Project,\n  ProjectActionTypes,\n  GET_PROJECT_SUCCESS,\n  GET_PROJECT_FAILED,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FALIED,\n  GET_PROJECT_REQUEST,\n  UPDATE_PROJECT_DATA,\n  POST_PROJECT_REQUEST,\n  GET_TRAINING_LOG_REQUEST,\n  GET_TRAINING_LOG_SUCCESS,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GET_TRAINING_METRICS_REQUEST,\n  GET_TRAINING_METRICS_SUCCESS,\n  GET_TRAINING_METRICS_FAILED,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GET_INFERENCE_METRICS_FAILED,\n} from './projectTypes';\n\nconst projectReducer = (state = initialState.project, action: ProjectActionTypes): Project => {\n  switch (action.type) {\n    case GET_PROJECT_REQUEST:\n      return { ...state, isLoading: true, error: null };\n    case GET_PROJECT_SUCCESS:\n      return { ...state, isLoading: false, data: { ...action.payload.project }, error: null };\n    case GET_PROJECT_FAILED:\n      return { ...state, isLoading: false, error: action.error };\n    case POST_PROJECT_REQUEST:\n      return { ...state, isLoading: true };\n    case POST_PROJECT_SUCCESS:\n      return { ...state, isLoading: false };\n    case POST_PROJECT_FALIED:\n      return { ...state, isLoading: false, error: action.error };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n        },\n        inferenceMetrics: {\n          successRate: 0,\n          successfulInferences: 0,\n          unIdetifiedItems: 0,\n          isGpu: false,\n          averageTime: 0,\n        },\n        trainingMetrics: {\n          curConsequence: null,\n          prevConsequence: null,\n        },\n        trainingLog: '',\n        status: Status.None,\n        error: null,\n      };\n    case DELETE_PROJECT_FALIED:\n      return { ...state };\n    case UPDATE_PROJECT_DATA:\n      return { ...state, data: action.payload };\n    case GET_TRAINING_LOG_REQUEST:\n      return {\n        ...state,\n      };\n    case GET_TRAINING_LOG_SUCCESS:\n      return {\n        ...state,\n        trainingLog: action.payload.trainingLog,\n        status: action.payload.newStatus,\n      };\n    case GET_TRAINING_LOG_FAILED:\n      return {\n        ...state,\n        trainingLog: '',\n        data: { ...state.data },\n        status: Status.TrainingFailed,\n        error: action.error,\n      };\n    case GET_TRAINING_METRICS_REQUEST:\n      return state;\n    case GET_TRAINING_METRICS_SUCCESS:\n      return {\n        ...state,\n        trainingMetrics: action.payload,\n        status: Status.StartInference,\n      };\n    case GET_TRAINING_METRICS_FAILED:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case GET_INFERENCE_METRICS_REQUEST:\n      return state;\n    case GET_INFERENCE_METRICS_SUCCESS:\n      return { ...state, inferenceMetrics: action.payload };\n    case GET_INFERENCE_METRICS_FAILED:\n      return { ...state, error: action.error };\n    default:\n      return { ...state };\n  }\n};\n\nexport default projectReducer;\n","import {\n  GET_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  POST_LABEL_IMAGE_SUCCESS,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  LabelImageAction,\n  LabelImage,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n} from './imageTypes';\nimport { initialState } from '../State';\n\nconst labelImagesReducer = (state = initialState.images, action: LabelImageAction): LabelImage[] => {\n  switch (action.type) {\n    case GET_LABEL_IMAGE_SUCCESS:\n      return action.payload;\n    case REQUEST_LABEL_IMAGE_FAILURE:\n      return state;\n    case POST_LABEL_IMAGE_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_LABEL_IMAGE_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    case UPDATE_LABEL_IMAGE_ANNOTATION: {\n      const newState = [...state];\n      const updatedImageIdx = newState.findIndex((e) => e.id === action.payload.id);\n      newState[updatedImageIdx] = {\n        ...newState[updatedImageIdx],\n        labels: action.payload.labels,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default labelImagesReducer;\n","// Describe the shape of the labelImage's slice of state\nexport type LabelImage = {\n  id: number;\n  image: string;\n  labels: string;\n  part: string;\n  is_relabel: boolean;\n  confidence: number;\n};\n\n// Describe the different ACTION NAMES available\nexport const GET_LABEL_IMAGE_SUCCESS = 'GET_LABEL_IMAGE_SUCCESS';\nexport const POST_LABEL_IMAGE_SUCCESS = 'POST_LABEL_IMAGE_SUCCESS';\nexport const DELETE_LABEL_IMAGE_SUCCESS = 'DELETE_LABEL_IMAGE_SUCCESS';\nexport const REQUEST_LABEL_IMAGE_FAILURE = 'REQUEST_LABEL_IMAGE_FAILURE';\nexport const UPDATE_LABEL_IMAGE_ANNOTATION = 'UPDATE_LABEL_IMAGE_ANNOTATION';\n\nexport type GetLabelImagesSuccess = { type: typeof GET_LABEL_IMAGE_SUCCESS; payload: LabelImage[] };\nexport type PostLabelImageSuccess = { type: typeof POST_LABEL_IMAGE_SUCCESS; payload: LabelImage };\nexport type DeleteLabelImageSuccess = { type: typeof DELETE_LABEL_IMAGE_SUCCESS; payload: { id: number } };\nexport type RequestLabelImagesFailure = { type: typeof REQUEST_LABEL_IMAGE_FAILURE };\nexport type UpdateLabelImageAnnotation = {\n  type: typeof UPDATE_LABEL_IMAGE_ANNOTATION;\n  payload: { id: number; labels: any };\n};\n\nexport type LabelImageAction =\n  | GetLabelImagesSuccess\n  | PostLabelImageSuccess\n  | DeleteLabelImageSuccess\n  | RequestLabelImagesFailure\n  | UpdateLabelImageAnnotation;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport camerasReducer from './camera/cameraReducer';\nimport partReducer from './part/partReducer';\nimport labelingPageStateReducer from './labelingPage/labelingPageReducer';\nimport locationsReducer from './location/locationReducer';\nimport dialogIsOpenReducer from './dialog/dialogIsOpenReducer';\nimport projectReducer from './project/projectReducer';\nimport labelImagesReducer from './image/imageReducer';\n\nconst rootReducer = combineReducers({\n  cameras: camerasReducer,\n  locations: locationsReducer,\n  part: partReducer,\n  labelingPageState: labelingPageStateReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  project: projectReducer,\n  images: labelImagesReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State } from './State';\nimport { persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React, { FC, memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex, Text, Image } from '@fluentui/react-northstar';\n\ntype BgImgStyle = {\n  backgroundSize?: '60%';\n  backgroundPosition?: 'center';\n  backgroundRepeat?: 'no-repeat';\n};\ninterface ImageLinkProps {\n  to?: string;\n  imgSrc?: string;\n  defaultSrc?: string;\n  bgImgSrc?: string;\n  label?: string;\n  imgPadding?: string;\n  width: string;\n  height?: string;\n  bgImgStyle?: BgImgStyle;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst ImageLink: FC<ImageLinkProps> = ({\n  to = '',\n  imgSrc,\n  defaultSrc,\n  bgImgSrc,\n  label = '',\n  imgPadding = '0.625em',\n  width = '6.25em',\n  height = '6.25em',\n  bgImgStyle,\n  pointerCursor = false,\n  onClick,\n}) => {\n  return (\n    <Flex column styles={{ width }}>\n      {to === '' ? (\n        <div style={{ height }} onClick={onClick}>\n          <Image\n            src={imgSrc ?? defaultSrc}\n            styles={{\n              padding: imgPadding,\n              height: '100%',\n              objectFit: 'contain',\n              backgroundImage: `url(${bgImgSrc})`,\n              cursor: pointerCursor ? 'pointer' : 'default',\n              ...bgImgStyle,\n            }}\n          />\n        </div>\n      ) : (\n        <Link to={to}>\n          <div style={{ height }} onClick={onClick}>\n            <Image\n              src={imgSrc ?? defaultSrc}\n              styles={{\n                padding: imgPadding,\n                height: '100%',\n                objectFit: 'contain',\n                backgroundImage: `url(${bgImgSrc})`,\n                ...bgImgStyle,\n              }}\n            />\n          </div>\n        </Link>\n      )}\n      <Text align=\"center\">{label}</Text>\n    </Flex>\n  );\n};\n\nexport default memo(ImageLink);\n","import React, { FC } from 'react';\nimport { Text, Flex } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ImageLink from '../components/ImageLink';\nimport { openDialog } from '../store/dialog/dialogIsOpenActions';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text size=\"larger\" weight=\"semibold\">\n        Hello User!\n      </Text>\n      <Text>\n      </Text>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        GET STARTED:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/location-filled.png\"\n          to=\"/locations/register\"\n          label=\"Register a new Location\"\n          width=\"6.25em\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/camera-filled.png\"\n          to=\"/cameras\"\n          label=\"Register a new Camera\"\n          width=\"6.25em\"\n          imgPadding=\"0.625em 0.1875em 0.625em 0.1875em\"\n          onClick={(): void => {\n            dispatch(openDialog());\n          }}\n        />\n        <ImageLink\n          imgSrc=\"/icons/part-filled.png\"\n          to=\"/parts/detail\"\n          label=\"Register a new Part\"\n          width=\"6.25em\"\n        />\n      </Flex>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        SELECT FROM THE FOLLOWING TASKS:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/doubleCube.png\"\n          to=\"/partIdentification\"\n          label=\"Identify Parts\"\n          width=\"6.25em\"\n        />\n        <ImageLink imgSrc=\"/icons/defects.png\" to=\"/\" label=\"Identify Defects\" width=\"6.25em\" />\n        <ImageLink\n          imgSrc=\"/icons/manual-filled.png\"\n          to=\"/manual\"\n          label=\"Identify items manually\"\n          width=\"6.25em\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { OpenDialog, CloseDialog, OPEN_DIALOG, CLOSE_DIALOG } from './dialogIsOpenTypes';\n\nexport const openDialog = (): OpenDialog => ({ type: OPEN_DIALOG });\nexport const closeDialog = (): CloseDialog => ({ type: CLOSE_DIALOG });\n","import axios from 'axios';\nimport {\n  GET_CAMERA_SUCCESS,\n  POST_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  GetCamerasSuccess,\n  RequestCamerasFailure,\n  PostCameraSuccess,\n  Camera,\n  DELETE_CAMERA_SUCCESS,\n  DeleteCameraSuccess,\n} from './cameraTypes';\n\nconst getCamerasSuccess = (data: Camera[]): GetCamerasSuccess => ({\n  type: GET_CAMERA_SUCCESS,\n  payload: data,\n});\n\nconst deleteCameraSuccess = (id: number): DeleteCameraSuccess => ({\n  type: DELETE_CAMERA_SUCCESS,\n  payload: { id },\n});\n\nconst requestCamerasFailure = (error: any): RequestCamerasFailure => {\n  console.error(error);\n  return { type: REQUEST_CAMERA_FAILURE };\n};\n\nconst postCameraSuccess = (data: Camera): PostCameraSuccess => ({\n  type: POST_CAMERA_SUCCESS,\n  payload: data,\n});\n\nexport const getCameras = () => (dispatch): Promise<void> => {\n  return axios('/api/cameras/')\n    .then(({ data }) => {\n      dispatch(getCamerasSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const postCamera = (newCamera: Camera) => (dispatch): Promise<void> => {\n  return axios('/api/cameras/', {\n    method: 'POST',\n    data: newCamera,\n  })\n    .then(({ data }) => {\n      dispatch(postCameraSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const deleteCamera = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/cameras/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteCameraSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n","import React, { FC } from 'react';\nimport { Button, AddIcon } from '@fluentui/react-northstar';\n\ninterface AddButtonProps {\n  onClick?: () => void;\n}\nconst AddButton: FC<AddButtonProps> = ({ onClick }) => (\n  <Button\n    primary\n    fluid\n    circular\n    content={<AddIcon size=\"largest\" circular />}\n    styles={{ width: '6em', height: '6em' }}\n    onClick={onClick}\n  />\n);\n\nexport default AddButton;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text, Dialog, Input, Grid, Button } from '@fluentui/react-northstar';\n\nimport { postCamera, getCameras } from '../store/camera/cameraActions';\nimport ImageLink from '../components/ImageLink';\nimport { State } from '../store/State';\nimport { closeDialog, openDialog } from '../store/dialog/dialogIsOpenActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport AddButton from '../components/AddButton';\n\nconst Cameras: FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { dialogIsOpen, cameras } = useSelector<State, { dialogIsOpen: boolean; cameras: Camera[] }>(\n    (state) => ({ dialogIsOpen: state.dialogIsOpen, cameras: state.cameras.filter((e) => !e.is_demo) }),\n  );\n\n  const [name, setName] = useState<string>('');\n  const [rtsp, setRtsp] = useState<string>('');\n  const [model_name, setModel_name] = useState<string>('');\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {cameras.map((camera, i) => (\n          <ImageLink\n            key={i}\n            to={`/cameras/detail?name=${camera.name}`}\n            defaultSrc=\"/icons/Play.png\"\n            bgImgSrc=\"/icons/defaultCamera.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            bgImgStyle={{\n              backgroundSize: '60%',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n            }}\n            label={camera.name}\n          />\n        ))}\n      </Grid>\n      <Dialog\n        styles={{ width: '20%', height: '40%', padding: 0, display: 'flex' }}\n        open={dialogIsOpen}\n        trigger={\n          <div style={{ alignSelf: 'flex-end' }}>\n            <AddButton\n              onClick={(): void => {\n                dispatch(openDialog());\n              }}\n            />\n          </div>\n        }\n        content={\n          <div\n            style={{\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'column',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Text size=\"larger\" weight=\"semibold\">\n              Add Camera\n            </Text>\n            <div\n              style={{\n                display: 'flex',\n                flexFlow: 'column',\n                height: '50%',\n                justifyContent: 'space-around',\n              }}\n            >\n              <Input\n                placeholder=\"Name\"\n                value={name}\n                onChange={(_, newProps): void => setName(newProps.value)}\n              />\n\n              <Input\n                placeholder=\"RTSP URL\"\n                value={rtsp}\n                onChange={(_, newProps): void => setRtsp(newProps.value)}\n              />\n              <Input\n                placeholder=\"Model Name\"\n                value={model_name}\n                onChange={(_, newProps): void => setModel_name(newProps.value)}\n              />\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', width: '100%' }}>\n              <Button\n                primary\n                content=\"Submit\"\n                disabled={name === '' || rtsp === '' || model_name === ''}\n                onClick={(): void => {\n                  dispatch(postCamera({ name, rtsp, model_name, is_demo: false }));\n                  setName('');\n                  setRtsp('');\n                  setModel_name('');\n                  dispatch(closeDialog());\n                }}\n              />\n              <Button\n                content=\"Cancel\"\n                onClick={(): void => {\n                  dispatch(closeDialog());\n                }}\n              />\n            </div>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Cameras;\n","import React, { FC, useState, CSSProperties } from 'react';\nimport { Flex, Text, Button, Dialog } from '@fluentui/react-northstar';\n\n/**\n * @param trigger Trigger Button\n * @param primaryStyles CSS style of Confirm Button\n */\ninterface FluentUIStylesProperties extends CSSProperties {\n  [':hover']: any;\n  [':active']: any;\n}\n\ninterface ConfirmDialogProps {\n  trigger: JSX.Element;\n  onConfirm: () => void;\n  primaryStyles: FluentUIStylesProperties;\n  content: string;\n}\nconst ConfirmDialog: FC<ConfirmDialogProps> = ({ trigger, onConfirm, primaryStyles, content }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '20em', padding: '0.5em' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      footer={\n        <Flex column gap=\"gap.large\">\n          <Text size=\"large\" align=\"center\">\n            {content}\n          </Text>\n          <Flex space=\"around\">\n            <Button primary content=\"Confirm\" styles={primaryStyles} onClick={onConfirm} />\n            <Button content=\"Cancel\" onClick={(): void => setOpen(false)} />\n          </Flex>\n        </Flex>\n      }\n    />\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { FC, memo } from 'react';\nimport { Flex, Text, Grid, Button } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ConfirmDialog from '../ConfirmDialog';\nimport ImageLink from '../ImageLink';\nimport { deleteCamera } from '../../store/camera/cameraActions';\n\ninterface CameraDetailInfoProps {\n  name: string;\n  rtsp: string;\n  modelName: string;\n  id: number;\n}\nconst CameraDetailInfo: FC<CameraDetailInfoProps> = ({ id, name, rtsp, modelName }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex styles={{ padding: '1em 2em' }} column space=\"between\">\n      <Grid columns=\"2\" styles={{ gap: '3em' }}>\n        <Text size=\"larger\" weight=\"semibold\">\n          Details\n        </Text>\n        <ImageLink defaultSrc=\"/icons/defaultCamera.png\" width=\"100px\" height=\"100px\" />\n        <Flex column gap=\"gap.small\">\n          <Text size=\"large\" content={'Name:'} />\n          <Text size=\"large\" content={'RTSP Url:'} />\n          <Text size=\"large\" content={'Model:'} />\n        </Flex>\n        <Flex column gap=\"gap.medium\">\n          <Text size=\"large\" content={name} />\n          <Text size=\"large\" content={rtsp} />\n          <Text size=\"large\" content={modelName} />\n        </Flex>\n      </Grid>\n      <ConfirmDialog\n        trigger={\n          <Button\n            primary\n            content=\"Delete Camera\"\n            styles={{\n              backgroundColor: '#C4314B',\n              ':hover': { backgroundColor: '#A72037' },\n              ':active': { backgroundColor: '#8E192E' },\n            }}\n          />\n        }\n        content=\"Delete Camera\"\n        primaryStyles={{\n          backgroundColor: '#C4314B',\n          ':hover': { backgroundColor: '#A72037' },\n          ':active': { backgroundColor: '#8E192E' },\n        }}\n        onConfirm={(): void => {\n          dispatch(deleteCamera(id));\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default memo(CameraDetailInfo);\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay): void => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick(): void {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return (): void => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import Axios from 'axios';\nimport {\n  ProjectThunk,\n  GetProjectSuccessAction,\n  GET_PROJECT_SUCCESS,\n  GetProjectFailedAction,\n  GET_PROJECT_FAILED,\n  PostProjectSuccessAction,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  PostProjectFaliedAction,\n  DeleteProjectSuccessAction,\n  DELETE_PROJECT_SUCCESS,\n  DeleteProjectFaliedAction,\n  DELETE_PROJECT_FALIED,\n  ProjectData,\n  PostProjectRequestAction,\n  POST_PROJECT_REQUEST,\n  GetProjectRequestAction,\n  GET_PROJECT_REQUEST,\n  UpdateProjectDataAction,\n  UPDATE_PROJECT_DATA,\n  GetTrainingLogRequesAction,\n  GET_TRAINING_LOG_REQUEST,\n  GetTrainingLogSuccessAction,\n  GET_TRAINING_LOG_SUCCESS,\n  GetTrainingLogFailedAction,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GetTrainingMetricsRequestAction,\n  GET_TRAINING_METRICS_REQUEST,\n  GetTrainingMetricsSuccessAction,\n  GET_TRAINING_METRICS_SUCCESS,\n  GetTrainingMetricsFailedAction,\n  GET_TRAINING_METRICS_FAILED,\n  Consequence,\n  GetInferenceMetricsRequestAction,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GetInferenceMetricsSuccessAction,\n  GetInferenceMetricsFailedAction,\n  GET_INFERENCE_METRICS_FAILED,\n  StartInferenceAction,\n  START_INFERENCE,\n  STOP_INFERENCE,\n  StopInferenceAction,\n} from './projectTypes';\n\nconst getProjectRequest = (): GetProjectRequestAction => ({ type: GET_PROJECT_REQUEST });\nconst getProjectSuccess = (project: ProjectData): GetProjectSuccessAction => ({\n  type: GET_PROJECT_SUCCESS,\n  payload: { project },\n});\nconst getProjectFailed = (error: Error): GetProjectFailedAction => ({ type: GET_PROJECT_FAILED, error });\n\nconst getTrainingLogRequest = (): GetTrainingLogRequesAction => ({ type: GET_TRAINING_LOG_REQUEST });\nconst getTrainingLogSuccess = (trainingLog: string, newStatus: Status): GetTrainingLogSuccessAction => ({\n  type: GET_TRAINING_LOG_SUCCESS,\n  payload: {\n    trainingLog,\n    newStatus,\n  },\n});\nconst getTrainingStatusFailed = (error: Error): GetTrainingLogFailedAction => ({\n  type: GET_TRAINING_LOG_FAILED,\n  error,\n});\n\nconst postProjectRequest = (): PostProjectRequestAction => ({ type: POST_PROJECT_REQUEST });\nconst postProjectSuccess = (): PostProjectSuccessAction => ({ type: POST_PROJECT_SUCCESS });\nconst postProjectFail = (error: Error): PostProjectFaliedAction => ({ type: POST_PROJECT_FALIED, error });\n\nconst deleteProjectSuccess = (): DeleteProjectSuccessAction => ({ type: DELETE_PROJECT_SUCCESS });\nconst deleteProjectFailed = (): DeleteProjectFaliedAction => ({ type: DELETE_PROJECT_FALIED });\n\nconst getTrainingMetricsRequest = (): GetTrainingMetricsRequestAction => ({\n  type: GET_TRAINING_METRICS_REQUEST,\n});\nconst getTrainingMetricsSuccess = (\n  curConsequence: Consequence,\n  prevConsequence: Consequence,\n): GetTrainingMetricsSuccessAction => ({\n  type: GET_TRAINING_METRICS_SUCCESS,\n  payload: { prevConsequence, curConsequence },\n});\nconst getTrainingMetricsFailed = (error: Error): GetTrainingMetricsFailedAction => ({\n  type: GET_TRAINING_METRICS_FAILED,\n  error,\n});\n\nconst getInferenceMetricsRequest = (): GetInferenceMetricsRequestAction => ({\n  type: GET_INFERENCE_METRICS_REQUEST,\n});\nconst getInferenceMetricsSuccess = (\n  successRate: number,\n  successfulInferences: number,\n  unIdetifiedItems: number,\n  isGpu: boolean,\n  averageTime: number,\n): GetInferenceMetricsSuccessAction => ({\n  type: GET_INFERENCE_METRICS_SUCCESS,\n  payload: { successRate, successfulInferences, unIdetifiedItems, isGpu, averageTime },\n});\nconst getInferenceMetricsFailed = (error: Error): GetInferenceMetricsFailedAction => ({\n  type: GET_INFERENCE_METRICS_FAILED,\n  error,\n});\n\nexport const startInference = (): StartInferenceAction => ({\n  type: START_INFERENCE,\n});\n\nexport const stopInference = (): StopInferenceAction => ({\n  type: STOP_INFERENCE,\n});\n\nexport const updateProjectData = (projectData: ProjectData): UpdateProjectDataAction => ({\n  type: UPDATE_PROJECT_DATA,\n  payload: projectData,\n});\n\nexport const thunkGetProject = (isTestModel?: boolean): ProjectThunk => (dispatch): Promise<void> => {\n  dispatch(getProjectRequest());\n\n  const url = isTestModel === undefined ? '/api/projects/' : `/api/projects/?is_demo=${Number(isTestModel)}`;\n\n  return Axios.get(url)\n    .then(({ data }) => {\n      const project: ProjectData = {\n        id: data[0]?.id ?? null,\n        camera: parseInt(data[0]?.camera.split('/')[5], 10) ?? null,\n        location: parseInt(data[0]?.location.split('/')[5], 10) ?? null,\n        parts: data[0]?.parts.map((ele) => parseInt(ele.split('/')[5], 10)) ?? [],\n        modelUrl: data[0]?.download_uri ?? '',\n        needRetraining: data[0]?.needRetraining ?? true,\n        accuracyRangeMin: data[0]?.accuracyRangeMin ?? 60,\n        accuracyRangeMax: data[0]?.accuracyRangeMax ?? 80,\n        maxImages: data[0]?.maxImages ?? 50,\n      };\n      dispatch(getProjectSuccess(project));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(getProjectFailed(err));\n    });\n};\n\nexport const thunkPostProject = (\n  projectId,\n  selectedLocations,\n  selectedParts,\n  selectedCamera,\n  isTestModel,\n): ProjectThunk => (dispatch, getState): Promise<number> => {\n  const isProjectEmpty = projectId === null;\n  const url = isProjectEmpty ? `/api/projects/` : `/api/projects/${projectId}/`;\n\n  dispatch(postProjectRequest());\n\n  const projectData = getState().project.data;\n\n  return Axios(url, {\n    data: {\n      location: `http://localhost:8000/api/locations/${selectedLocations.id}/`,\n      parts: selectedParts.map((e) => `http://localhost:8000/api/parts/${e.id}/`),\n      camera: `http://localhost:8000/api/cameras/${selectedCamera.id}/`,\n      download_uri: projectData.modelUrl,\n      needRetraining: projectData.needRetraining,\n      accuracyRangeMin: projectData.accuracyRangeMin,\n      accuracyRangeMax: projectData.accuracyRangeMax,\n      maxImages: projectData.maxImages,\n    },\n    method: isProjectEmpty ? 'POST' : 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(({ data }) => {\n      dispatch(postProjectSuccess());\n      getTrain(data.id, isTestModel);\n      return data.id;\n    })\n    .catch((err) => {\n      dispatch(postProjectFail(err));\n    }) as Promise<number>;\n};\nconst getTrain = (projectId, isTestModel: boolean): void => {\n  const url = isTestModel ? `/api/projects/${projectId}/train?demo=True` : `/api/projects/${projectId}/train`;\n  Axios.get(url).catch((err) => console.error(err));\n};\n\nexport const thunkDeleteProject = (projectId): ProjectThunk => (dispatch): Promise<any> => {\n  return Axios.delete(`/api/projects/${projectId}/`)\n    .then(() => {\n      return dispatch(deleteProjectSuccess());\n    })\n    .catch((err) => {\n      alert(err);\n      dispatch(deleteProjectFailed());\n    });\n};\n\nexport const thunkGetTrainingLog = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getTrainingLogRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      if (data.status === 'failed') throw new Error(data.log);\n      else if (data.status === 'ok') dispatch(getTrainingLogSuccess('', Status.FinishTraining));\n      else dispatch(getTrainingLogSuccess(data.log, Status.WaitTraining));\n      return void 0;\n    })\n    .catch((err) => dispatch(getTrainingStatusFailed(err)));\n};\n\nexport const thunkGetTrainingMetrics = (projectId: number) => (dispacth): Promise<any> => {\n  dispacth(getTrainingMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/train_performance`)\n    .then(({ data }) => {\n      const curConsequence: Consequence = data.new\n        ? {\n            precision: data.new.precision,\n            recall: data.new.recall,\n            mAP: data.new.map,\n          }\n        : null;\n\n      const prevConsequence: Consequence = data.previous\n        ? {\n            precision: data.previous.precision,\n            recall: data.previous.recall,\n            mAP: data.previous.map,\n          }\n        : null;\n\n      return dispacth(getTrainingMetricsSuccess(curConsequence, prevConsequence));\n    })\n    .catch((err) => dispacth(getTrainingMetricsFailed(err)));\n};\n\nexport const thunkGetInferenceMetrics = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getInferenceMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      return dispatch(\n        getInferenceMetricsSuccess(\n          data.success_rate,\n          data.inference_num,\n          data.unidentified_num,\n          data.gpu,\n          data.average_time,\n        ),\n      );\n    })\n    .catch((err) => dispatch(getInferenceMetricsFailed(err)));\n};\n","import { useEffect, useState } from 'react';\n\n/**\n * Fetch the parts data from server\n */\nexport const useParts = (isDemo?: boolean): any[] => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const url = isDemo === undefined ? '/api/parts/' : `/api/parts/?is_demo=${Number(isDemo)}`;\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data);\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [isDemo]);\n\n  return parts;\n};\n","import { useLocation } from 'react-router-dom';\n\n/**\n * Get query parameter in the route\n */\nexport const useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import React, { useEffect, useRef } from 'react';\nimport { Stage, Image as KonvaImage, Shape, Group, Line, Layer, Circle } from 'react-konva';\nimport Konva from 'konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport { LiveViewProps, MaskProps, AOIBoxProps, AOILayerProps } from './LiveViewContainer.type';\n\nexport const LiveViewScene: React.FC<LiveViewProps> = ({ AOIs, setAOIs, visible, imageInfo }) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const stageRef = useRef(null);\n  const imgRef = useRef(null);\n  const layerRef = useRef(null);\n\n  const [imgEle, status, { width: imgWidth, height: imgHeight }] = imageInfo;\n\n  /* The component need to support image with Content-type \"multipart/x-mixed-replace\",\n     which will keep updating the image data.\n     Keep updating the canvas by using Konva.Animation so we can see the latest image.\n  */\n  useEffect(() => {\n    const anim = new Konva.Animation(() => {}, layerRef.current);\n    anim.start();\n\n    return (): void => {\n      anim.stop();\n    };\n  }, []);\n\n  useEffect(() => {\n    const { width: divWidth, height: divHeight } = divRef.current.getBoundingClientRect();\n    stageRef.current.width(divWidth);\n    stageRef.current.height(divHeight);\n  }, []);\n\n  /* Fit Image to Stage */\n  useEffect(() => {\n    if (imgWidth !== 0 && imgHeight !== 0) {\n      const { width: stageWidth, height: stageHeight } = stageRef.current.size();\n      const scale = Math.min(stageWidth / imgWidth, stageHeight / imgHeight);\n      layerRef.current.scale({ x: scale, y: scale });\n\n      const offsetX = (stageWidth - imgWidth * scale) / 2;\n      const offsetY = (stageHeight - imgHeight * scale) / 2;\n      layerRef.current.position({ x: offsetX, y: offsetY });\n    }\n  }, [imgHeight, imgWidth]);\n\n  return (\n    <div ref={divRef} style={{ width: '100%', height: '100%' }}>\n      <Stage ref={stageRef}>\n        <Layer ref={layerRef}>\n          <KonvaImage image={imgEle} ref={imgRef} />\n          {\n            /* Render when image is loaded to prevent AOI boxes show in unscale size */\n            status === 'loaded' && (\n              <AOILayer\n                imgWidth={imgWidth}\n                imgHeight={imgHeight}\n                AOIs={AOIs}\n                setAOIs={setAOIs}\n                visible={visible}\n              />\n            )\n          }\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nconst AOILayer: React.FC<AOILayerProps> = ({ imgWidth, imgHeight, AOIs, setAOIs, visible }): JSX.Element => {\n  return (\n    <>\n      <Mask width={imgWidth} height={imgHeight} holes={AOIs} visible={visible} />\n      {AOIs.map((e, i) => (\n        <AOIBox\n          key={i}\n          box={e}\n          visible={visible}\n          boundary={{ x1: 0, y1: 0, x2: imgWidth, y2: imgHeight }}\n          onBoxChange={(updateBox): void =>\n            setAOIs((prev) => {\n              const newBox = updateBox(prev[i]);\n              if (newBox.x1 > newBox.x2) {\n                const tmp = newBox.x1;\n                newBox.x1 = newBox.x2;\n                newBox.x2 = tmp;\n              }\n\n              if (newBox.y1 > newBox.y2) {\n                const tmp = newBox.y1;\n                newBox.y1 = newBox.y2;\n                newBox.y2 = tmp;\n              }\n\n              const newAOIs = [...prev];\n              newAOIs[i] = newBox;\n              return newAOIs;\n            })\n          }\n        />\n      ))}\n    </>\n  );\n};\n\nconst Mask: React.FC<MaskProps> = ({ width, height, holes, visible }) => {\n  return (\n    <Shape\n      width={width}\n      height={height}\n      fill={'rgba(0,0,0,0.5)'}\n      visible={visible}\n      sceneFunc={(ctx, shape): void => {\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(shape.width(), 0);\n        ctx.lineTo(shape.width(), shape.height());\n        ctx.lineTo(0, shape.height());\n        ctx.lineTo(0, 0);\n\n        // Nonozero-rule\n        holes.forEach(({ x1, y1, x2, y2 }) => {\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x1, y2);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, y1);\n          ctx.lineTo(x1, y1);\n        });\n\n        ctx.fillStrokeShape(shape);\n      }}\n      listening={false}\n    />\n  );\n};\n\nconst AOIBox: React.FC<AOIBoxProps> = ({ box, onBoxChange, visible, boundary }) => {\n  const { x1, y1, x2, y2 } = box;\n  const COLOR = 'white';\n  const RADIUS = 20;\n\n  const handleDrag = (e: KonvaEventObject<DragEvent>): void => {\n    let { x, y } = e.target.position();\n\n    if (x < boundary.x1) {\n      x = boundary.x1;\n      e.target.x(x);\n    }\n\n    if (x > boundary.x2) {\n      x = boundary.x2;\n      e.target.x(x);\n    }\n\n    if (y < boundary.y1) {\n      y = boundary.y1;\n      e.target.y(y);\n    }\n\n    if (y > boundary.y2) {\n      y = boundary.y2;\n      e.target.y(y);\n    }\n\n    switch (e.target.name()) {\n      case 'leftTop':\n        onBoxChange((prev) => ({ ...prev, x1: x, y1: y }));\n        break;\n      case 'rightTop':\n        onBoxChange((prev) => ({ ...prev, x2: x, y1: y }));\n        break;\n      case 'rightBottom':\n        onBoxChange((prev) => ({ ...prev, x2: x, y2: y }));\n        break;\n      case 'leftBottom':\n        onBoxChange((prev) => ({ ...prev, x1: x, y2: y }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Group visible={visible}>\n      <Line points={[x1, y1, x1, y2, x2, y2, x2, y1]} closed stroke={COLOR} strokeWidth={10} />\n      <Circle draggable name=\"leftTop\" x={x1} y={y1} radius={RADIUS} fill={COLOR} onDragMove={handleDrag} />\n      <Circle draggable name=\"rightTop\" x={x2} y={y1} radius={RADIUS} fill={COLOR} onDragMove={handleDrag} />\n      <Circle\n        draggable\n        name=\"rightBottom\"\n        x={x2}\n        y={y2}\n        radius={RADIUS}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Circle\n        draggable\n        name=\"leftBottom\"\n        x={x1}\n        y={y2}\n        radius={RADIUS}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n    </Group>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\n\ntype ImageState = {\n  image: HTMLImageElement;\n  status: string;\n  size: { width: number; height: number };\n};\nconst defaultState: ImageState = {\n  image: undefined,\n  status: 'loading',\n  size: { width: 0, height: 0 },\n};\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nconst useImage = (url: string, crossOrigin: string): [HTMLImageElement, string, { width: number; height: number }] => {\n  const [imageState, setImageState] = useState<ImageState>(defaultState);\n  const { image, status, size } = imageState;\n\n  const prevUrl = usePrevious<string>(url);\n\n  useEffect(() => {\n    if (!url) return;\n\n    const img = document.createElement('img');\n\n    if (url !== prevUrl) {\n      setImageState((prev) => ({ ...prev, image: prev.image, status: 'loading' }));\n    }\n\n    const onload = (): void => {\n      setImageState({\n        image: img,\n        status: 'loaded',\n        size: { width: img.width, height: img.height },\n      });\n    };\n\n    const onerror = (): void => {\n      setImageState((prev) => ({ ...prev, image: undefined, status: 'failed' }));\n    };\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n\n    img.src = url;\n\n    return (): void => {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, prevUrl]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status, size];\n};\n\nexport default useImage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as R from 'ramda';\nimport Axios from 'axios';\n\nimport { Text, Checkbox, Flex, Button, Alert } from '@fluentui/react-northstar';\nimport { LiveViewScene } from './LiveViewScene';\nimport { AOIData, Box } from '../../type';\nimport useImage from '../LabelingPage/util/useImage';\n\nexport const LiveViewContainer: React.FC<{\n  showVideo: boolean;\n  initialAOIData: AOIData;\n  cameraId: number;\n}> = ({ showVideo, initialAOIData, cameraId }) => {\n  const [showAOI, setShowAOI] = useState(initialAOIData.useAOI);\n  const lasteUpdatedAOIs = useRef(initialAOIData.AOIs);\n  const [AOIs, setAOIs] = useState<Box[]>(lasteUpdatedAOIs.current);\n  const [showUpdateSuccessTxt, setShowUpdateSuccessTxt] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>(null);\n  const imageInfo = useImage(`http://${window.location.hostname}:5000/video_feed?inference=1`, '');\n\n  const onCheckboxClick = async (): Promise<void> => {\n    setShowAOI(!showAOI);\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: !showAOI,\n          AOIs: lasteUpdatedAOIs.current,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      if (!showAOI) setAOIs(lasteUpdatedAOIs.current);\n    } catch (e) {\n      // Set back to the state before updating for switch case\n      setShowAOI(showAOI);\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  const onUpdate = async (): Promise<void> => {\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: showAOI,\n          AOIs,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      lasteUpdatedAOIs.current = R.clone(AOIs);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (showUpdateSuccessTxt) {\n      const timer = setTimeout(() => {\n        setShowUpdateSuccessTxt(false);\n      }, 3000);\n      return (): void => clearTimeout(timer);\n    }\n  }, [showUpdateSuccessTxt]);\n\n  useEffect(() => {\n    if (!AOIs.length) setAOIs([{ x1: 0, y1: 0, x2: imageInfo[2].width, y2: imageInfo[2].height }]);\n  }, [AOIs.length, imageInfo[2].width, imageInfo[2].height]);\n\n  const hasEdit = !R.equals(lasteUpdatedAOIs.current, AOIs);\n  const updateBtnDisabled = !showAOI || !hasEdit;\n\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }} size=\"large\">\n        Live View:\n      </Text>\n      {error && <Alert danger header=\"Failed to Update!\" content={`${error.name}: ${error.message}`} />}\n      <Flex hAlign=\"end\" gap=\"gap.small\" vAlign=\"center\">\n        <Checkbox\n          labelPosition=\"start\"\n          label=\"Show area of interest\"\n          toggle\n          checked={showAOI}\n          onClick={onCheckboxClick}\n        />\n        <Button content=\"Update\" primary disabled={updateBtnDisabled} onClick={onUpdate} loading={loading} />\n        <Text styles={{ visibility: showUpdateSuccessTxt ? 'visible' : 'hidden' }}>Updated!</Text>\n      </Flex>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {showVideo ? (\n          <LiveViewScene AOIs={AOIs} setAOIs={setAOIs} visible={showAOI} imageInfo={imageInfo} />\n        ) : null}\n      </div>\n    </Flex>\n  );\n};\n","import React, { useEffect, FC, useState, useCallback } from 'react';\nimport { Flex, Text, Status, Button, Loader, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useInterval } from '../../hooks/useInterval';\nimport {\n  thunkDeleteProject,\n  thunkGetTrainingLog,\n  thunkGetTrainingMetrics,\n  thunkGetInferenceMetrics,\n} from '../../store/project/projectActions';\nimport { Project, Status as CameraConfigStatus } from '../../store/project/projectTypes';\nimport { State } from '../../store/State';\nimport { useParts } from '../../hooks/useParts';\nimport { useQuery } from '../../hooks/useQuery';\nimport { LiveViewContainer } from '../LiveViewContainer';\nimport { AOIData } from '../../type';\n\nexport const CameraConfigureInfo: React.FC<{ projectId: number; AOIs: AOIData }> = ({ projectId, AOIs }) => {\n  const { error, data: project, trainingLog, status, trainingMetrics, inferenceMetrics } = useSelector<\n    State,\n    Project\n  >((state) => state.project);\n  const allTrainingLog = useAllTrainingLog(trainingLog);\n  const parts = useParts();\n  const dispatch = useDispatch();\n  const cameraName = useQuery().get('name');\n  const history = useHistory();\n\n  const onDeleteConfigure = useCallback((): void => {\n    // eslint-disable-next-line no-restricted-globals\n    const sureDelete = confirm('Delete this configuration?');\n    if (!sureDelete) return;\n    const result = (dispatch(thunkDeleteProject(projectId)) as unknown) as Promise<any>;\n    result\n      .then((data) => {\n        if (data) return history.push(`/cameras/detail?name=${cameraName}`);\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  }, [dispatch, history, cameraName, projectId]);\n\n  useEffect(() => {\n    dispatch(thunkGetTrainingLog(projectId));\n  }, [dispatch, projectId]);\n  useInterval(\n    () => {\n      dispatch(thunkGetTrainingLog(projectId));\n    },\n    status === CameraConfigStatus.WaitTraining ? 5000 : null,\n  );\n\n  useEffect(() => {\n    if (status === CameraConfigStatus.FinishTraining) {\n      dispatch(thunkGetTrainingMetrics(projectId));\n    }\n  }, [dispatch, status, projectId]);\n\n  useInterval(\n    () => {\n      dispatch(thunkGetInferenceMetrics(projectId));\n    },\n    status === CameraConfigStatus.StartInference ? 5000 : null,\n  );\n\n  const isCameraOnline = [CameraConfigStatus.FinishTraining, CameraConfigStatus.StartInference].includes(\n    status,\n  );\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Configuration</h1>\n      {error && <Alert danger header={error.name} content={`${error.message}`} />}\n      {status === CameraConfigStatus.WaitTraining ? (\n        <>\n          <Loader size=\"smallest\" />\n          <pre>{allTrainingLog}</pre>\n        </>\n      ) : (\n        <>\n          <ListItem title=\"Status\">\n            <CameraStatus online={isCameraOnline} />\n          </ListItem>\n          <ListItem title=\"Configured for\">\n            {parts\n              .filter((e) => project.parts.includes(e.id))\n              .map((e) => e.name)\n              .join(', ')}\n          </ListItem>\n          <Flex column gap=\"gap.small\">\n            <LiveViewContainer showVideo={true} initialAOIData={AOIs} cameraId={project.camera} />\n          </Flex>\n          <Grid columns={2} styles={{ rowGap: '20px' }}>\n            <ListItem title=\"Success Rate\">\n              <Text styles={{ color: 'rgb(244, 152, 40)', fontWeight: 'bold' }} size=\"large\">\n                {`${inferenceMetrics.successRate}%`}\n              </Text>\n            </ListItem>\n            <ListItem\n              title={`Running on ${inferenceMetrics.isGpu ? 'GPU' : 'CPU'} (accelerated)`}\n            >{`${inferenceMetrics.averageTime}/ms`}</ListItem>\n            <ListItem title=\"Successful Inferences\">{inferenceMetrics.successfulInferences}</ListItem>\n          </Grid>\n          <ListItem title=\"Unidentified Items\">\n            <Text styles={{ margin: '5px' }} size=\"large\">\n              {inferenceMetrics.unIdetifiedItems}\n            </Text>\n            <Button\n              content=\"Identify Manually\"\n              primary\n              styles={{\n                backgroundColor: 'red',\n                marginLeft: '100px',\n                ':hover': {\n                  backgroundColor: '#A72037',\n                },\n                ':active': {\n                  backgroundColor: '#8E192E',\n                },\n              }}\n              as={Link}\n              to=\"/manual\"\n            />\n          </ListItem>\n          {trainingMetrics.prevConsequence && (\n            <>\n              <Text>Previous Model Metrics</Text>\n              <ConsequenceDashboard\n                precision={trainingMetrics.prevConsequence?.precision}\n                recall={trainingMetrics.prevConsequence?.recall}\n                mAP={trainingMetrics.prevConsequence?.mAP}\n              />\n            </>\n          )}\n          <Text>Updated Model Metrics</Text>\n          <ConsequenceDashboard\n            precision={trainingMetrics.curConsequence?.precision}\n            recall={trainingMetrics.curConsequence?.recall}\n            mAP={trainingMetrics.curConsequence?.mAP}\n          />\n          <Button primary onClick={onDeleteConfigure}>\n            Delete Configuration\n          </Button>\n          <Button primary as={Link} to=\"/partIdentification\">\n            Edit Configuration\n          </Button>\n        </>\n      )}\n    </Flex>\n  );\n};\n\n/**\n * Retrun a string which contains all logs get from server during training\n * @param trainingLog The log get from the api export\n */\nconst useAllTrainingLog = (trainingLog: string): string => {\n  const [allLogs, setAllLogs] = useState(trainingLog);\n  useEffect(() => {\n    setAllLogs((prev) => `${prev}\\n${trainingLog}`);\n  }, [trainingLog]);\n  return allLogs;\n};\n\ninterface ConsequenceDashboardProps {\n  precision: number;\n  recall: number;\n  mAP: number;\n}\nconst ConsequenceDashboard: FC<ConsequenceDashboardProps> = ({ precision, recall, mAP }) => {\n  return (\n    <Grid columns={3}>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Precison\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#9a0089' }}>\n          {precision === null ? '' : `${((precision * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Recall\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#0063b1' }}>\n          {recall === null ? '' : `${((recall * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          mAP\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#69c138' }}>\n          {mAP === null ? '' : `${((mAP * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n    </Grid>\n  );\n};\n\nconst ListItem = ({ title, children }): JSX.Element => {\n  return (\n    <Flex vAlign=\"center\">\n      <Text style={{ width: '200px' }} size=\"large\">{`${title}: `}</Text>\n      {typeof children === 'string' || typeof children === 'number' ? (\n        <Text size=\"large\">{children}</Text>\n      ) : (\n        children\n      )}\n    </Flex>\n  );\n};\n\nconst CameraStatus = ({ online }): JSX.Element => {\n  const text = online ? 'Online' : 'Offline';\n  const state = online ? 'success' : 'unknown';\n\n  return (\n    <Flex gap=\"gap.smaller\" vAlign=\"center\">\n      <Status state={state} />\n      <Text styles={{ margin: '5px' }} size=\"large\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const CreateCameraConfig: React.FC = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <h1>Configuration</h1>\n      <Flex hAlign=\"center\" vAlign=\"center\" design={{ height: '100%' }} column gap=\"gap.large\">\n        <Button\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular color=\"brand\" />}\n          style={{ width: 100, height: 100, border: '5px solid #0094d8' }}\n          color=\"brand\"\n          as={Link}\n          to=\"/partIdentification\"\n        />\n        <h2>Configure Task for the Device</h2>\n      </Flex>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CameraDetailInfo from '../components/CameraDetails/CameraDetailInfo';\nimport { CameraConfigureInfo, CreateCameraConfig } from '../components/CameraConfigure';\nimport { getCameras } from '../store/camera/cameraActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { State } from '../store/State';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { useQuery } from '../hooks/useQuery';\nimport { AOIData } from '../type';\n\nconst CameraDetails: FC = (): JSX.Element => {\n  const cameraIdInproject = useSelector<State, number>((state) => state.project.data.camera);\n  const projectId = useSelector<State, number>((state) => state.project.data.id);\n  const dispatch = useDispatch();\n  const name = useQuery().get('name');\n  const isDemo = useQuery().get('isDemo');\n  const camera = useSelector<State, Camera>((state) => state.cameras.find((ele) => ele.name === name));\n\n  useEffect(() => {\n    dispatch(thunkGetProject(isDemo === 'true'));\n    dispatch(getCameras());\n  }, [dispatch, isDemo]);\n\n  if (!camera) return <Redirect to=\"/cameras\" />;\n\n  const hasProject = cameraIdInproject === camera.id;\n  const aoiData = getAOIData(camera.area);\n\n  return (\n    <Grid columns=\"2\" design={{ height: '100%' }}>\n      <CameraDetailInfo id={camera.id} name={name} rtsp={camera.rtsp} modelName={camera.model_name} />\n      {hasProject ? <CameraConfigureInfo projectId={projectId} AOIs={aoiData} /> : <CreateCameraConfig />}\n    </Grid>\n  );\n};\n\nexport default CameraDetails;\n\nconst getAOIData = (cameraArea: string): AOIData => {\n  try {\n    return JSON.parse(cameraArea);\n  } catch (e) {\n    return {\n      useAOI: false,\n      AOIs: [],\n    };\n  }\n};\n","import { Size2D } from '../../../store/labelingPage/labelingPageTypes';\n\nconst getResizeImageFunction = (defaultSize: Size2D) => (size: Size2D): [Size2D, number] => {\n  if (size.width !== 0) {\n    if (size.width > size.height) {\n      const scaleX = defaultSize.width / size.width;\n\n      return [{ width: defaultSize.width, height: size.height * scaleX }, scaleX];\n    }\n    const scaleY = defaultSize.height / size.height;\n\n    return [{ height: defaultSize.height, width: size.width * scaleY }, scaleY];\n  }\n  return [defaultSize, 1];\n};\n\nexport default getResizeImageFunction;\n","import {\n  Annotation,\n  AnnotationState,\n  BoxObject,\n  Position2D,\n  REQUEST_ANNOTATION_SUCCESS,\n  REMOVE_ANNOTATION,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  UPDATE_ANNOTATION,\n  RESET_ANNOTATION,\n  RequestAnnotationSuccessAction,\n  CreateAnnotationAction,\n  UpdateAnnotationAction,\n  UpdateCreatingAnnotationAction,\n  RemoveAnnotationAction,\n  ResetAnnotationAction,\n} from './labelingPageTypes';\n\nexport const requestAnnotationsSuccess = (data: Annotation[]): RequestAnnotationSuccessAction => ({\n  type: REQUEST_ANNOTATION_SUCCESS,\n  payload: { annotations: data },\n});\n\nexport const getAnnotations = (imageId: number) => (dispatch, getState): void => {\n  const { images } = getState();\n  const { labels } = images.find((image) => image.id === imageId);\n\n  if (labels === null) {\n    dispatch(requestAnnotationsSuccess([]));\n  } else {\n    const annotations: Annotation[] = JSON.parse(labels).map((parsedLabels, i) => ({\n      id: i,\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n\n    dispatch(requestAnnotationsSuccess(annotations));\n  }\n};\n\nexport const createAnnotation = (pos: Position2D): CreateAnnotationAction => {\n  const annotation = BoxObj.createWithPoint(pos, '');\n  return {\n    type: CREATE_ANNOTATION,\n    payload: { annotation },\n  };\n};\n\nexport const updateCreatingAnnotation = (pos: Position2D): UpdateCreatingAnnotationAction => {\n  const updater = (annotation: Annotation): Annotation => BoxObj.add(pos, annotation);\n  return {\n    type: UPDATE_CREATING_ANNOTATION,\n    payload: { updater },\n  };\n};\n\nexport const updateAnnotation = (index: number = null, annotation: Annotation): UpdateAnnotationAction => ({\n  type: UPDATE_ANNOTATION,\n  payload: { index, annotation: BoxObj.setVerticesToValidValue(annotation) },\n});\n\nexport const removeAnnotation = (index: number = null): RemoveAnnotationAction => ({\n  type: REMOVE_ANNOTATION,\n  payload: { index },\n});\n\nexport const resetAnnotation = (): ResetAnnotationAction => ({\n  type: RESET_ANNOTATION,\n});\n\n// * Annotation Functions\nexport const BoxObj: BoxObject = {\n  init(): Annotation {\n    return {\n      id: null,\n      label: { x1: 0, y1: 0, x2: 0, y2: 0 },\n      attribute: '',\n      annotationState: AnnotationState.Empty,\n    };\n  },\n  createWithPoint(p: Position2D, attribute) {\n    const obj = {\n      ...this.init(),\n      attribute,\n    };\n    return this.add(p, obj);\n  },\n  add({ x, y }, obj) {\n    // make the original object immutable, for future history usage\n    const newObj = { ...obj };\n\n    if (obj.annotationState === AnnotationState.Empty) {\n      newObj.label.x1 = x;\n      newObj.label.y1 = y;\n      newObj.label.x2 = x; // initialize x2 y2\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.P1Added;\n    } else if (obj.annotationState === AnnotationState.P1Added) {\n      newObj.label.x2 = x;\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.Finish;\n    }\n\n    return this.setVerticesToValidValue(newObj);\n  },\n  setVerticesToInt(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    newObj.label = {\n      x1: Math.round(x1),\n      y1: Math.round(y1),\n      x2: Math.round(x2),\n      y2: Math.round(y2),\n    };\n    return newObj;\n  },\n  setVerticesPointsOrder(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    if (x1 > x2) {\n      newObj.label.x1 = x2;\n      newObj.label.x2 = x1;\n    }\n    if (y1 > y2) {\n      newObj.label.y1 = y2;\n      newObj.label.y2 = y1;\n    }\n\n    return newObj;\n  },\n  setVerticesToValidValue(object: Annotation): Annotation {\n    return this.setVerticesPointsOrder(this.setVerticesToInt(object));\n  },\n  // setFinished(obj: Annotation): Annotation {\n  //   if (obj.state === AnnotationState.Created) return;\n\n  //   const newObj = R.clone(obj);\n  //   newObj.state = AnnotationState.Created;\n  //   newObj.creatingState = undefined;\n\n  //   return newObj;\n  // },\n  // setStateCreated(idx: number, annotations: Annotation[]): Annotation[] {\n  //   const { creatingState } = annotations[idx];\n\n  //   if (creatingState === 'addedX2Y2') return R.update(idx, this.setFinished, annotations);\n  //   if (creatingState === 'addedX1Y1') return R.remove(idx, 1, annotations);\n  //   return R.clone(annotations);\n  // },\n};\n","import React, { useState, useRef, useEffect, FC, useCallback } from 'react';\nimport { Line, Group, Circle } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport {\n  BoxLabel,\n  Box2dComponentProps,\n  WorkState,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport { updateAnnotation } from '../../store/labelingPage/labelingPageActions';\n\nexport const Box2d: FC<Box2dComponentProps> = ({\n  scale,\n  workState,\n  onSelect,\n  selected,\n  annotationIndex,\n  visible = true,\n  annotation,\n  dispatch,\n  changeCursorState = null,\n}) => {\n  const [vertices, setVertices] = useState<BoxLabel>(annotation.label);\n  const anchorRadius: number = 5 / scale;\n  const strokeWidth: number = 2 / scale;\n  const boxRef = useRef(null);\n\n  const dispatchLabel = (): void => {\n    changeCursorState();\n\n    if (!dispatch) return;\n    const newAnnotation = { ...annotation };\n    newAnnotation.label = vertices;\n    dispatch(updateAnnotation(annotationIndex, newAnnotation));\n  };\n\n  const mouseMoveListener = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (workState === WorkState.Creating && selected) {\n        setVertices((prev) => ({ ...prev, x2: e.evt.offsetX / scale, y2: e.evt.offsetY / scale }));\n      }\n    },\n    [workState, setVertices, selected, scale],\n  );\n\n  const onDragAnchor = useCallback(\n    ({ xi = 'x1', yi = 'y1' }) => (e: KonvaEventObject<DragEvent>): void => {\n      const stage = e.target.getStage();\n      const { width, height } = stage.getSize();\n      let x = Math.round(e.target.position().x);\n      let y = Math.round(e.target.position().y);\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > width / scale) x = width / scale;\n      if (y > height / scale) y = height / scale;\n      // * Round the anchor (circle) position so user can only drag anchor on integer.\n      e.target.setAttr('x', x);\n      e.target.setAttr('y', y);\n\n      const anotherPosXArr = ['x1', 'x2'];\n      const anotherPosYArr = ['y1', 'y2'];\n      anotherPosXArr.splice(\n        anotherPosXArr.findIndex((xx) => xx === xi),\n        1,\n      );\n      anotherPosYArr.splice(\n        anotherPosYArr.findIndex((yy) => yy === yi),\n        1,\n      );\n      if (vertices[anotherPosXArr[0]] > vertices[xi]) {\n        if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n          changeCursorState(LabelingCursorStates.nwseResize);\n        } else {\n          changeCursorState(LabelingCursorStates.neswResize);\n        }\n      } else if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n        changeCursorState(LabelingCursorStates.neswResize);\n      } else {\n        changeCursorState(LabelingCursorStates.nwseResize);\n      }\n\n      setVertices((prevVertices) => ({ ...prevVertices, [xi]: x, [yi]: y }));\n    },\n    [changeCursorState, scale, vertices],\n  );\n\n  useEffect(() => {\n    const layer = boxRef.current.getLayer();\n    layer.on('mousemove', mouseMoveListener);\n    return (): void => {\n      layer.off('mousemove', mouseMoveListener);\n    };\n  }, [mouseMoveListener]);\n  useEffect(() => {\n    setVertices(annotation.label);\n  }, [annotation.label]);\n\n  return (\n    <Group\n      ref={(e): void => {\n        if (e) {\n          boxRef.current = e;\n        }\n      }}\n      visible={visible}\n      onMouseDown={(e): void => {\n        if (workState === WorkState.None) {\n          onSelect(annotationIndex);\n          e.cancelBubble = true;\n        }\n      }}\n    >\n      <Line\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke=\"red\"\n        strokeWidth={strokeWidth}\n        closed={true}\n      />\n      <Group visible={selected}>\n        <Circle\n          key={'anchor-0'}\n          name={'anchor-0'}\n          x={vertices.x1}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-1'}\n          name={'anchor-1'}\n          x={vertices.x2}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-2'}\n          name={'anchor-2'}\n          x={vertices.x2}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-3'}\n          name={'anchor-3'}\n          x={vertices.x1}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n      </Group>\n    </Group>\n  );\n};\n\nexport const DisplayBox: FC<{ vertices: BoxLabel; color: string; scale: number }> = ({\n  scale,\n  vertices,\n  color,\n}) => {\n  return (\n    <>\n      <Line\n        ref={(ref): void => {\n          if (ref) ref.cache();\n        }}\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke={color}\n        strokeWidth={1 / scale}\n        closed={true}\n      />\n      <Circle x={vertices.x1} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y2} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x1} y={vertices.y2} radius={3 / scale} fill={color} />\n    </>\n  );\n};\n","import React, { FC, memo, Dispatch, useState, useEffect } from 'react';\nimport { Group, Line, Rect } from 'react-konva';\n\nimport { Size2D, LabelingCursorStates, BoxLabel } from '../../store/labelingPage/labelingPageTypes';\n\ninterface RemoveBoxButtonProps {\n  visible: boolean;\n  imageSize: Size2D;\n  label: BoxLabel;\n  changeCursorState: (cursorType?: LabelingCursorStates) => void;\n  scale: number;\n  setShowOuterRemoveButton: Dispatch<boolean>;\n  removeBox: () => void;\n}\nconst RemoveBoxButton: FC<RemoveBoxButtonProps> = ({\n  visible,\n  imageSize,\n  label,\n  changeCursorState,\n  scale,\n  setShowOuterRemoveButton,\n  removeBox,\n}) => {\n  const [color, setColor] = useState<string>('#F9526B');\n  const [strokeWidth, setStrokeWidth] = useState<number>(1.5 / scale);\n  let x: number;\n  let y: number;\n\n  if (\n    label.x1 < 0 ||\n    label.x2 > imageSize.width / scale ||\n    label.y1 < 0 ||\n    label.y2 > imageSize.height / scale\n  ) {\n    x = 0;\n    y = -60;\n  } else if (label.x1 > 30 / scale || label.x2 < (imageSize.width - 25) / scale) {\n    if (label.x1 > 30 / scale) x = label.x1 - 20 / scale;\n    else x = label.x2 + 25 / scale;\n\n    if (label.y1 > 12 / scale) {\n      y = label.y1 - 10 / scale;\n    } else {\n      y = label.y1 + 12 / scale;\n    }\n  } else {\n    x = 12 / scale;\n    if (label.y1 > 20 / scale) {\n      y = label.y1 - 20 / scale;\n    } else {\n      // * Make remove button disappear\n      y = -60;\n    }\n  }\n  if (y === -60) setShowOuterRemoveButton(true);\n  else setShowOuterRemoveButton(false);\n\n  useEffect(() => {\n    setStrokeWidth(1.5 / scale);\n  }, [scale]);\n\n  return (\n    <Group\n      visible={visible}\n      x={x}\n      y={y}\n      onMouseEnter={(): void => {\n        changeCursorState(LabelingCursorStates.pointer);\n        setColor('#E73550');\n        setStrokeWidth(3 / scale);\n      }}\n      onMouseLeave={(): void => {\n        changeCursorState();\n        setColor('#F9526B');\n        setStrokeWidth(1.5 / scale);\n      }}\n      onClick={(e): void => {\n        removeBox();\n        e.cancelBubble = true;\n      }}\n    >\n      <Rect x={-5 / scale} y={-5 / scale} width={10 / scale} height={10 / scale} />\n      <Line\n        points={[-5 / scale, -5 / scale, 5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n      <Line\n        points={[5 / scale, -5 / scale, -5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n    </Group>\n  );\n};\n\nexport default memo(RemoveBoxButton);\n","import React, { FC, useState, useEffect, useCallback, useRef, Dispatch, useMemo } from 'react';\nimport { Button, CloseIcon } from '@fluentui/react-northstar';\nimport { Stage, Layer, Image, Group, Text as KonvaText } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useDispatch } from 'react-redux';\n\nimport useImage from './util/useImage';\nimport getResizeImageFunction from './util/resizeImage';\nimport { Box2d } from './Box';\nimport {\n  Size2D,\n  Annotation,\n  WorkState,\n  LabelingType,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport {\n  createAnnotation,\n  updateCreatingAnnotation,\n  removeAnnotation,\n} from '../../store/labelingPage/labelingPageActions';\nimport RemoveBoxButton from './RemoveBoxButton';\n\nconst defaultSize: Size2D = {\n  width: 800,\n  height: 600,\n};\n\ninterface SceneProps {\n  url?: string;\n  labelingType: LabelingType;\n  annotations: Annotation[];\n  workState: WorkState;\n  setWorkState: Dispatch<WorkState>;\n}\nconst Scene: FC<SceneProps> = ({ url = '', labelingType, annotations, workState, setWorkState }) => {\n  const dispatch = useDispatch();\n  const resizeImage = useCallback(getResizeImageFunction(defaultSize), [defaultSize]);\n  const [imageSize, setImageSize] = useState<Size2D>(defaultSize);\n  const noMoreCreate = useMemo(\n    () => labelingType === LabelingType.SingleAnnotation && annotations.length === 1,\n    [labelingType, annotations],\n  );\n  const [cursorState, setCursorState] = useState<LabelingCursorStates>(LabelingCursorStates.default);\n  const [image, status, size] = useImage(url, 'anonymous');\n  const [selectedAnnotationIndex, setSelectedAnnotationIndex] = useState<number>(null);\n  const [showOuterRemoveButton, setShowOuterRemoveButton] = useState<boolean>(false);\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const scale = useRef<number>(1);\n  const changeCursorState = useCallback(\n    (cursorType?: LabelingCursorStates): void => {\n      if (!cursorType) {\n        if (noMoreCreate) {\n          setCursorState(LabelingCursorStates.default);\n        } else {\n          setCursorState(LabelingCursorStates.crosshair);\n        }\n      } else {\n        setCursorState(cursorType);\n      }\n    },\n    [noMoreCreate],\n  );\n  const removeBox = useCallback((): void => {\n    dispatch(removeAnnotation(selectedAnnotationIndex));\n    setWorkState(WorkState.None);\n    setShowOuterRemoveButton(false);\n  }, [dispatch, selectedAnnotationIndex, setWorkState, setShowOuterRemoveButton]);\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate || workState === WorkState.Creating) return;\n\n    dispatch(createAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }));\n    setSelectedAnnotationIndex(annotations.length - 1);\n    setWorkState(WorkState.Creating);\n  };\n\n  const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\n    if (workState === WorkState.Creating) {\n      dispatch(\n        updateCreatingAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }),\n      );\n      if (annotations.length - 1 === selectedAnnotationIndex) {\n        setWorkState(WorkState.Selecting);\n      } else {\n        setWorkState(WorkState.None);\n      }\n    }\n  };\n\n  const onSelect = (index: number): void => {\n    setSelectedAnnotationIndex(index);\n    setWorkState(WorkState.Selecting);\n  };\n\n  useEffect(() => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) {\n      changeCursorState();\n      setSelectedAnnotationIndex(0);\n    } else {\n      changeCursorState();\n    }\n  }, [noMoreCreate, changeCursorState]);\n  useEffect(() => {\n    if (workState === WorkState.None && !noMoreCreate) setSelectedAnnotationIndex(null);\n  }, [workState, noMoreCreate]);\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  const isLoading = status === 'loading' || (imageSize.height === 0 && imageSize.width === 0);\n\n  return (\n    <div style={{ margin: '0.2em' }}>\n      {annotations.length !== 0 &&\n      showOuterRemoveButton &&\n      !isDragging &&\n      workState !== WorkState.Creating ? (\n        <Button\n          iconOnly\n          text\n          styles={{ color: '#F9526B', ':hover': { color: '#E73550' } }}\n          content={<CloseIcon size=\"large\" />}\n          onClick={removeBox}\n        />\n      ) : (\n        <div style={{ height: '2em' }} />\n      )}\n      <Stage\n        width={imageSize.width}\n        height={imageSize.height}\n        scale={{ x: scale.current, y: scale.current }}\n        style={{ cursor: cursorState }}\n      >\n        <Layer\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onDragStart={(): void => {\n            setIsDragging(true);\n          }}\n          onDragEnd={(): void => {\n            setIsDragging(false);\n          }}\n        >\n          <Image image={image} />\n          {!isLoading &&\n            annotations.map((annotation, i) => (\n              <Group key={i}>\n                <RemoveBoxButton\n                  imageSize={imageSize}\n                  visible={!isDragging && workState !== WorkState.Creating && i === selectedAnnotationIndex}\n                  label={annotation.label}\n                  scale={scale.current}\n                  changeCursorState={changeCursorState}\n                  setShowOuterRemoveButton={setShowOuterRemoveButton}\n                  removeBox={removeBox}\n                />\n                <Box2d\n                  workState={workState}\n                  onSelect={onSelect}\n                  annotation={annotation}\n                  scale={scale.current}\n                  annotationIndex={i}\n                  selected={i === selectedAnnotationIndex}\n                  dispatch={dispatch}\n                  changeCursorState={changeCursorState}\n                />\n              </Group>\n            ))}\n          {isLoading && (\n            <KonvaText\n              x={imageSize.width / 2 - 50}\n              y={imageSize.height / 2 - 25}\n              fontSize={50}\n              text=\"Loading...\"\n              fill=\"rgb(255, 0, 0)\"\n            />\n          )}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Scene;\n","import axios from 'axios';\nimport {\n  LabelImage,\n  GetLabelImagesSuccess,\n  GET_LABEL_IMAGE_SUCCESS,\n  DeleteLabelImageSuccess,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  PostLabelImageSuccess,\n  POST_LABEL_IMAGE_SUCCESS,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n  UpdateLabelImageAnnotation,\n} from './imageTypes';\nimport { Annotation } from '../labelingPage/labelingPageTypes';\n\nconst getLabelImagesSuccess = (data: LabelImage[]): GetLabelImagesSuccess => ({\n  type: GET_LABEL_IMAGE_SUCCESS,\n  payload: data,\n});\n\nconst deleteLabelImageSuccess = (id: number): DeleteLabelImageSuccess => ({\n  type: DELETE_LABEL_IMAGE_SUCCESS,\n  payload: { id },\n});\n\nconst requestLabelImagesFailure = (error: any): any => {\n  console.error(error);\n  return { type: REQUEST_LABEL_IMAGE_FAILURE };\n};\n\nconst postLabelImageSuccess = (image: LabelImage): PostLabelImageSuccess => ({\n  type: POST_LABEL_IMAGE_SUCCESS,\n  payload: image,\n});\n\nexport const getLabelImages = () => (dispatch): Promise<void> => {\n  return axios('/api/images/')\n    .then(({ data }) => {\n      dispatch(getLabelImagesSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\n\nexport const postLabelImage = (newImage: LabelImage | FormData) => (dispatch): Promise<void> => {\n  return axios('/api/images/', {\n    method: 'POST',\n    data: newImage,\n  })\n    .then(({ data }) => {\n      dispatch(postLabelImageSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const deleteLabelImage = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/images/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteLabelImageSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const saveLabelImageAnnotation = (imageId: number, annotations: Annotation[]) => (\n  dispatch,\n): Promise<void> => {\n  const url = `/api/images/${imageId}/`;\n  return axios({\n    url,\n    method: 'PATCH',\n    data: {\n      labels: JSON.stringify(annotations.map((e) => e.label)),\n    },\n  })\n    .then(({ data }) => {\n      console.info('Save successfully');\n      dispatch(updateLabelImageAnnotation(data.id, data.labels));\n      // dispatch(requestAnnotationsSuccess(annotations));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const updateLabelImageAnnotation = (imageId: number, labels: any): UpdateLabelImageAnnotation => ({\n  type: UPDATE_LABEL_IMAGE_ANNOTATION,\n  payload: { id: imageId, labels },\n});","import React, { FC } from 'react';\nimport { Flex, Button, ChevronStartIcon, ChevronEndIcon } from '@fluentui/react-northstar';\n\ninterface PrevNextButtonProps {\n  isRelabel: boolean;\n  prevDisabled: boolean;\n  nextDisabled: boolean;\n  onPrevClick: () => void;\n  onNextClick: () => void;\n}\nconst PrevNextButton: FC<PrevNextButtonProps> = ({\n  isRelabel,\n  children,\n  prevDisabled,\n  nextDisabled,\n  onPrevClick,\n  onNextClick,\n}) => {\n  return (\n    <Flex vAlign=\"center\">\n      {!isRelabel && (\n        <Button\n          text\n          disabled={prevDisabled}\n          icon={<ChevronStartIcon size=\"larger\" />}\n          onClick={onPrevClick}\n        />\n      )}\n      {children}\n      {!isRelabel && (\n        <Button text disabled={nextDisabled} icon={<ChevronEndIcon size=\"larger\" />} onClick={onNextClick} />\n      )}\n    </Flex>\n  );\n};\n\nexport default PrevNextButton;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Button, Text } from '@fluentui/react-northstar';\n\nimport Scene from '../components/LabelingPage/Scene';\nimport { LabelingType, Annotation, WorkState } from '../store/labelingPage/labelingPageTypes';\nimport { State } from '../store/State';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getAnnotations, resetAnnotation } from '../store/labelingPage/labelingPageActions';\nimport { saveLabelImageAnnotation } from '../store/image/imageActions';\nimport { RelabelImage } from '../components/ManualIdentification/types';\nimport PrevNextButton from '../components/LabelingPage/PrevNextButton';\n\ninterface LabelingPageProps {\n  labelingType: LabelingType;\n  images: LabelImage[] | RelabelImage[];\n  imageIndex: number;\n  closeDialog: () => void;\n  isRelabel: boolean;\n}\nconst LabelingPage: FC<LabelingPageProps> = ({\n  labelingType,\n  images,\n  imageIndex,\n  closeDialog,\n  isRelabel,\n}) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState<number>(imageIndex);\n  const [workState, setWorkState] = useState<WorkState>(WorkState.None);\n\n  const annotations = useSelector<State, Annotation[]>((state) => state.labelingPageState.annotations);\n\n  const isOnePointBox = checkOnePointBox(annotations);\n  const imageUrl = images[index]?.image;\n  const imageId = images[index]?.id;\n\n  useEffect(() => {\n    if (typeof imageId === 'number') dispatch(getAnnotations(imageId));\n    return (): void => {\n      dispatch(resetAnnotation());\n    };\n  }, [dispatch, imageId]);\n\n  return (\n    <Flex column hAlign=\"center\">\n      <Text size=\"larger\" weight=\"semibold\">\n        DRAW A RECTANGLE AROUND THE PART\n      </Text>\n      <PrevNextButton\n        isRelabel={isRelabel}\n        prevDisabled={index === 0 || workState === WorkState.Creating || isOnePointBox}\n        nextDisabled={index === images.length - 1 || workState === WorkState.Creating || isOnePointBox}\n        onPrevClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev - 1 + images.length) % images.length);\n        }}\n        onNextClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev + 1) % images.length);\n        }}\n      >\n        <Scene\n          url={imageUrl ?? '/icons/Play.png'}\n          annotations={annotations}\n          workState={workState}\n          setWorkState={setWorkState}\n          labelingType={labelingType}\n        />\n      </PrevNextButton>\n      <Flex gap=\"gap.medium\">\n        <Button\n          primary\n          content=\"Save\"\n          disabled={isOnePointBox || workState === WorkState.Creating}\n          onClick={(): void => {\n            dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n            closeDialog();\n          }}\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            closeDialog();\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst checkOnePointBox = (annotations: Annotation[]): boolean => {\n  if (annotations.length === 0) return false;\n  const { label } = annotations[annotations.length - 1];\n  return label.x1 === label.x2 && label.y1 === label.y2;\n};\n\nexport default LabelingPage;\n","import React, { memo, FC, useState } from 'react';\nimport { Dialog } from '@fluentui/react-northstar';\n\nimport LabelingPage from '../pages/LabelingPage';\nimport { LabelingType } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { RelabelImage } from './ManualIdentification/types';\n\ninterface LabelingPageDialogProps {\n  trigger: JSX.Element;\n  imageIndex: number;\n  images: LabelImage[] | RelabelImage[];\n  isRelabel: boolean;\n}\nconst LabelingPageDialog: FC<LabelingPageDialogProps> = ({\n  trigger,\n  images,\n  imageIndex,\n  isRelabel,\n}): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '80%' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      content={\n        <LabelingPage\n          closeDialog={(): void => setOpen(false)}\n          labelingType={LabelingType.SingleAnnotation}\n          images={images}\n          imageIndex={imageIndex}\n          isRelabel={isRelabel}\n        />\n      }\n    />\n  );\n};\n\nexport default memo(LabelingPageDialog);\n","import React, { useEffect, useMemo, useCallback, memo, MouseEvent, FC, useRef } from 'react';\nimport Konva from 'konva';\nimport { Text } from '@fluentui/react-northstar';\n\nimport useImage from './LabelingPage/util/useImage';\nimport { AnnotationState, Annotation } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport getResizeImageFunction from './LabelingPage/util/resizeImage';\n\ninterface LabelDisplayImageProps {\n  labelImage: LabelImage;\n  labelText?: string;\n  width: number;\n  height?: number;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst LabelDisplayImage: FC<LabelDisplayImageProps> = ({\n  labelImage,\n  labelText = '',\n  width = 300,\n  height = 150,\n  pointerCursor = false,\n  onClick,\n}) => {\n  const stage = useRef<Konva.Stage>(null);\n  const layer = useRef<Konva.FastLayer>(null);\n  const img = useRef<Konva.Image>(null);\n  const imgScale = useRef<number>(1);\n  const shapes = useRef<BoxShape[]>([]);\n  const [image, , size] = useImage(labelImage.image, 'anonymous');\n  const resizeImage = useCallback(getResizeImageFunction({ width, height }), [width, height]);\n\n  const annotations = useMemo<Annotation[]>(() => {\n    if (!labelImage?.labels) return [];\n\n    return JSON.parse(labelImage.labels).map((parsedLabels, i) => ({\n      id: i,\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n  }, [labelImage]);\n\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    imgScale.current = outcomeScale;\n    stage.current = new Konva.Stage({\n      height: outcomeSize.height,\n      width: outcomeSize.width,\n      scale: { x: outcomeScale, y: outcomeScale },\n      container: `display-${labelImage.id}`,\n    });\n\n    layer.current = new Konva.FastLayer();\n\n    img.current = new Konva.Image({ image });\n    layer.current.add(img.current);\n    stage.current.add(layer.current);\n\n    return (): void => {\n      stage.current.destroy();\n      layer.current.destroy();\n    };\n  }, [size, image, resizeImage, labelImage.id]);\n\n  useEffect(() => {\n    const newShapes = annotations.map((e) => annotationToShape(e, imgScale.current));\n\n    for (let i = 0; i < shapes.current.length; i++) {\n      shapes.current[i].edge.destroy();\n\n      shapes.current[i].points.forEach((e) => e.destroy());\n    }\n    shapes.current = newShapes;\n    for (let i = 0; i < newShapes.length; i++) {\n      const { points, edge } = newShapes[i];\n      layer.current.add(edge);\n\n      for (let j = 0; j < points.length; j++) {\n        layer.current.add(points[j]);\n      }\n    }\n    stage.current.draw();\n  }, [annotations]);\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        cursor: pointerCursor ? 'pointer' : 'default',\n        display: 'flex',\n        flexFlow: 'column',\n      }}\n    >\n      <div id={`display-${labelImage.id}`} />\n      <Text align=\"center\">{labelText}</Text>\n    </div>\n  );\n};\n\ntype BoxShape = {\n  id: number;\n  edge: Konva.Line;\n  points: Konva.Circle[];\n};\nconst annotationToShape = (annotation: Annotation, imgScale: number): BoxShape => {\n  const { id, label } = annotation;\n  const edge = new Konva.Line({\n    points: [\n      label.x1,\n      label.y1,\n      label.x2,\n      label.y1,\n      label.x2,\n      label.y2,\n      label.x1,\n      label.y2,\n      label.x1,\n      label.y1,\n    ],\n    stroke: 'red',\n    strokeWidth: 1 / imgScale,\n    closed: true,\n  });\n\n  const points = [];\n\n  points.push(new Konva.Circle({ x: label.x1, y: label.y1, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x1, y: label.y2, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x2, y: label.y2, radius: 3 / imgScale, fill: 'red' }));\n  points.push(new Konva.Circle({ x: label.x2, y: label.y1, radius: 3 / imgScale, fill: 'red' }));\n\n  return {\n    id,\n    edge,\n    points,\n  };\n};\n\nexport default memo(LabelDisplayImage);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Button,\n  PlayIcon,\n  CallControlPresentNewIcon,\n  PauseThickIcon,\n  Image,\n} from '@fluentui/react-northstar';\n\nimport { thunkAddCapturedImages } from '../../store/part/partActions';\nimport { RTSPVideoProps } from './RTSPVideo.type';\n\nexport const RTSPVideoComponent: React.FC<RTSPVideoProps> = ({\n  rtsp = null,\n  partId,\n  canCapture,\n  onVideoStart,\n  onVideoPause,\n}) => {\n  const [streamId, setStreamId] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const onCreateStream = (): void => {\n    let url = `/api/streams/connect/?part_id=${partId}&rtsp=${rtsp}`;\n    if (!canCapture) url += '&inference=1';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.status === 'ok') {\n          setStreamId(data.stream_id);\n        }\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoStart) onVideoStart();\n  };\n\n  const onCapturePhoto = (): void => {\n    dispatch(thunkAddCapturedImages(streamId));\n  };\n\n  const onDisconnect = (): void => {\n    setStreamId('');\n    fetch(`/api/streams/${streamId}/disconnect`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoPause) onVideoPause();\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onDisconnect);\n    return (): void => {\n      window.removeEventListener('beforeunload', onDisconnect);\n    };\n  });\n\n  const src = streamId ? `/api/streams/${streamId}/video_feed` : '';\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {src ? <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'contain' }} /> : null}\n      </div>\n      <Button.Group\n        styles={{ alignSelf: 'center' }}\n        buttons={[\n          {\n            key: 'start',\n            icon: <PlayIcon />,\n            iconOnly: true,\n            onClick: onCreateStream,\n            disabled: rtsp === null,\n          },\n          canCapture && {\n            key: 'capture',\n            icon: <CallControlPresentNewIcon />,\n            iconOnly: true,\n            onClick: onCapturePhoto,\n            disabled: !streamId,\n          },\n          {\n            key: 'stop',\n            icon: <PauseThickIcon />,\n            iconOnly: true,\n            onClick: onDisconnect,\n            disabled: !streamId,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport const RTSPVideo = React.memo(RTSPVideoComponent);\n","import {\n  AddCapturedImageAction,\n  ADD_CAPTURED_IMAGE,\n  PartThunk,\n  UpdateCapturedImageAction,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\nimport { LabelImage } from '../image/imageTypes';\nimport { getLabelImages } from '../image/imageActions';\n\nexport const addCapturedImages = (newCapturedImage: LabelImage): AddCapturedImageAction => ({\n  type: ADD_CAPTURED_IMAGE,\n  payload: { newCapturedImage },\n});\n\nexport const updateCapturedImages = (capturedImages: LabelImage[]): UpdateCapturedImageAction => ({\n  type: UPDATE_CAPTURED_IMAGES,\n  payload: { capturedImages },\n});\n\nexport const thunkAddCapturedImages = (streamId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/streams/${streamId}/capture`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 'ok') {\n        dispatch(addCapturedImages(data.image));\n        dispatch(getLabelImages());\n      }\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const thunkGetCapturedImages = (partId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/images`)\n    .then((response) => response.json())\n    .then((data) => {\n      const imagesWithRelatedPart = data.reduce((acc, cur) => {\n        if (cur.part.split('/')[5] === partId) acc.push(cur);\n        return acc;\n      }, []);\n      dispatch(updateCapturedImages(imagesWithRelatedPart));\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","export const getIdFromUrl = (url: string): number => parseInt(url.split(\"/\")[5], 10) ;","import { LabelImage } from '../store/image/imageTypes';\nimport { getIdFromUrl } from './GetIDFromUrl';\n\ninterface Options {\n  partId?: number;\n  isRelabel?: boolean;\n}\nexport const getFilteredImages = (\n  images: LabelImage[],\n  { partId, isRelabel = false }: Options,\n): LabelImage[] => {\n  if (partId === undefined) return images;\n  return images.filter((image) => getIdFromUrl(image.part) === partId && image.is_relabel === isRelabel);\n};\n","import { DropdownItemProps } from '@fluentui/react-northstar';\n\nexport type Value = { id: number; name: string } | { id: number; name: string }[];\n\nexport const formatDropdownValue = (value: Value): DropdownItemProps | DropdownItemProps[] => {\n  if (Array.isArray(value)) {\n    return value.map((e) => ({\n      header: e.name,\n      content: {\n        key: e.id,\n      },\n    }));\n  }\n  if (value) {\n    return {\n      header: value.name,\n      content: {\n        key: value.id,\n      },\n    };\n  }\n  return null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Dropdown, Text, DropdownItemProps } from '@fluentui/react-northstar';\nimport { Link, Prompt } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useCameras } from '../../hooks/useCameras';\nimport { State } from '../../store/State';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { RTSPVideo } from '../RTSPVideo';\nimport { getLabelImages } from '../../store/image/imageActions';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { formatDropdownValue } from '../../util/formatDropdownValue';\n\nexport const CapturePhotos: React.FC<{ partId: number }> = ({ partId }) => {\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n\n  return (\n    <>\n      <CameraSelector selectedCamera={selectedCamera} setSelectedCamera={setSelectedCamera} />\n      <RTSPVideo rtsp={selectedCamera?.rtsp} partId={partId} canCapture={true} />\n      <CapturedImagesContainer partId={partId} />\n    </>\n  );\n};\n\nconst CameraSelector = ({ selectedCamera, setSelectedCamera }): JSX.Element => {\n  const availableCameras = useCameras();\n\n  const items: DropdownItemProps[] = availableCameras.map((ele) => ({\n    header: ele.name,\n    content: {\n      key: ele.id,\n    },\n  }));\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setSelectedCamera((prev) => prev);\n    else {\n      const { key } = data.value.content;\n      const newSelectedCamera = availableCameras.find((ele) => ele.id === key);\n      if (newSelectedCamera) setSelectedCamera(newSelectedCamera);\n    }\n  };\n\n  return (\n    <Flex gap=\"gap.small\" vAlign=\"center\">\n      <Text>Select Camera</Text>\n      <Dropdown items={items} onChange={onDropdownChange} value={formatDropdownValue(selectedCamera)} />\n      <Link to=\"/addCamera\">Add Camera</Link>\n    </Flex>\n  );\n};\n\nconst CapturedImagesContainer = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images).filter(\n    (image) => !image.is_relabel,\n  );\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  const imageCount = filteredImages.length;\n\n  return (\n    <>\n      <Text>Total: {imageCount}</Text>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Flex\n        styles={{\n          overflow: 'scroll',\n          border: '1px solid grey',\n          height: '150px',\n          borderColor: isValid ? '' : 'red',\n        }}\n        gap=\"gap.small\"\n        vAlign=\"center\"\n      >\n        {filteredImages.map((image, i, arr) => (\n          <div key={image.id}>\n            <span>{i + 1}</span>\n            <LabelingPageDialog\n              key={i}\n              imageIndex={i}\n              images={arr}\n              trigger={<LabelDisplayImage labelImage={image} pointerCursor width={200} height={150} />}\n              isRelabel={false}\n            />\n          </div>\n        ))}\n      </Flex>\n      <Prompt\n        when={imageCount < 15}\n        message=\"The count of images is less than 15, which may cause error when configure part identification. Sure you want to leave?\"\n      />\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { getCameras } from '../store/camera/cameraActions';\n\n/**\n * Fetch the cameras data from server and set to Redux Store\n */\nexport const useCameras = (): Camera[] => {\n  const dispatch = useDispatch();\n  const cameras: Camera[] = useSelector<State, Camera[]>((state) => state.cameras.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return cameras;\n};\n","import React, { useEffect } from 'react';\nimport { Text, Grid } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/State';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getLabelImages, postLabelImage } from '../../store/image/imageActions';\n\nexport const UploadPhotos = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  function handleUpload(e: React.ChangeEvent<HTMLInputElement>): void {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const formData = new FormData();\n      formData.append('image', e.target.files[i]);\n      formData.append('part', `/api/parts/${partId}/`);\n      dispatch(postLabelImage(formData));\n    }\n  }\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleUpload} accept=\"image/*\" multiple />\n      <CapturedImagesContainer capturedImages={filteredImages} isValid={isValid} partId={partId} />\n    </>\n  );\n};\n\nconst CapturedImagesContainer = ({ capturedImages, isValid, partId }): JSX.Element => {\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"2\"\n        styles={{\n          border: '1px solid grey',\n          height: '100%',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n          justifyItems: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {capturedImages.map((image, i, arr) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            images={arr}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor width={300} height={225} />}\n            isRelabel={false}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Input, TextArea, Button, Menu, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useLocation, Switch, Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { CapturePhotos } from '../components/CapturePhoto';\nimport { UploadPhotos } from '../components/UploadPhotos';\nimport { useQuery } from '../hooks/useQuery';\n\nexport const PartDetails = (): JSX.Element => {\n  const partId = useQuery().get('partId');\n\n  return (\n    <Grid columns={'repeat(12, 1fr)'} styles={{ gridColumnGap: '20px', height: '100%' }}>\n      <LeftPanel partId={partId} />\n      <RightPanel partId={partId} />\n    </Grid>\n  );\n};\n\nconst LeftPanel = ({ partId }): JSX.Element => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    if (partId) {\n      axios\n        .get(`/api/parts/${partId}/`)\n        .then(({ data }) => {\n          setName(data.name);\n          setDescription(data.description);\n          return void 0;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [partId]);\n\n  const onSave = (): void => {\n    const hasPartId = ![undefined, null].includes(partId);\n    const url = hasPartId ? `/api/parts/${partId}/` : `/api/parts/`;\n\n    axios({\n      method: hasPartId ? 'PUT' : 'POST',\n      url,\n      data: {\n        name,\n        description,\n      },\n    })\n      .then(({ data }) => {\n        history.push(`/parts/detail/capturePhotos?partId=${data.id}`);\n        return void 0;\n      })\n      .catch((err) => {\n        setError(JSON.stringify(err.response.data));\n      });\n  };\n\n  return (\n    <Flex column space=\"around\" styles={{ gridColumn: '1 / span 4' }}>\n      <Input\n        placeholder=\"Enter Part Name...\"\n        fluid\n        styles={{ fontSize: '2em' }}\n        value={name}\n        onChange={(_, newProps): void => {\n          setName(newProps.value);\n        }}\n      />\n      <TextArea\n        placeholder=\"Enter Description...\"\n        design={{ height: '80%' }}\n        value={description}\n        onChange={(_, newProps): void => {\n          setDescription(newProps.value);\n        }}\n      />\n      <Flex space=\"around\">\n        <Button content=\"Save\" primary onClick={onSave} disabled={!name || !description} />\n        <Button content=\"Cancel\" />\n      </Flex>\n      {!!error && <Alert danger content={error} dismissible />}\n    </Flex>\n  );\n};\n\nconst RightPanel = ({ partId }): JSX.Element => {\n  return (\n    <Flex column gap=\"gap.small\" styles={{ gridColumn: '5 / span 8' }}>\n      {partId ? <Tab partId={partId} /> : null}\n      <Switch>\n        <Route path={`/parts/detail/capturePhotos`}>\n          <CapturePhotos partId={parseInt(partId, 10)} />\n        </Route>\n        <Route path={`/parts/detail/uploadPhotos`}>\n          <UploadPhotos partId={parseInt(partId, 10)} />\n        </Route>\n      </Switch>\n    </Flex>\n  );\n};\n\nconst Tab = ({ partId }): JSX.Element => {\n  const items = [\n    {\n      key: 'uploadPhotos',\n      as: Link,\n      to: `/parts/detail/uploadPhotos?partId=${partId}`,\n      content: 'Upload Photos',\n    },\n    {\n      key: 'capturePhotos',\n      as: Link,\n      to: `/parts/detail/capturePhotos?partId=${partId}`,\n      content: 'Capture Photo',\n    },\n  ];\n\n  const { pathname } = useLocation();\n  const activeIndex = items.findIndex((ele) => ele.to.split('?')[0] === pathname);\n\n  return <Menu items={items} activeIndex={activeIndex} pointing primary />;\n};\n","import axios from 'axios';\nimport {\n  GET_LOCATION_SUCCESS,\n  POST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  GetLocationsSuccess,\n  RequestLocationsFailure,\n  PostLocationSuccess,\n  Location,\n} from './locationTypes';\n\nconst getLocationsSuccess = (data: Location[]): GetLocationsSuccess => ({\n  type: GET_LOCATION_SUCCESS,\n  payload: data,\n});\n\nconst requestLocationsFailure = (error: any): RequestLocationsFailure => {\n  console.error(error);\n  return { type: REQUEST_LOCATION_FAILURE };\n};\n\nconst postLocationSuccess = (data: Location): PostLocationSuccess => ({\n  type: POST_LOCATION_SUCCESS,\n  payload: data,\n});\n\nexport const getLocations = () => (dispatch): Promise<void> => {\n  return axios('/api/locations/')\n    .then(({ data }) => {\n      dispatch(getLocationsSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n\nexport const postLocation = (newLocation: Location) => (dispatch): Promise<void> => {\n  return axios('/api/locations/', {\n    method: 'POST',\n    data: newLocation,\n  })\n    .then(({ data }) => {\n      dispatch(postLocationSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n","import React, { useEffect, FC } from 'react';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { State } from '../store/State';\nimport { Location } from '../store/location/locationTypes';\nimport ImageLink from '../components/ImageLink';\nimport { getLocations } from '../store/location/locationActions';\nimport AddButton from '../components/AddButton';\n\nconst Locations: FC = () => {\n  const dispatch = useDispatch();\n  const locations = useSelector<State, Location[]>((state) => state.locations.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getLocations());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {locations.map((location, i) => (\n          <ImageLink\n            key={i}\n            to={`/locations/detail?name=${location.name}`}\n            defaultSrc=\"/icons/defaultLocation.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            label={location.name}\n          />\n        ))}\n      </Grid>\n      <div style={{ alignSelf: 'flex-end' }}>\n        <Link to=\"/locations/register\">\n          <AddButton />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Locations;\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Flex, Text, Input, TextArea, Button, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { postLocation } from '../store/location/locationActions';\n\nconst LocationRegister: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState<string>('');\n  const [coordinates, setCoordinates] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Register Location\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"100px\" height=\"100px\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Input\n            styles={{ paddingTop: '10px', minHeight: '100px' }}\n            placeholder=\"Location Name\"\n            value={name}\n            onChange={(_, newProps): void => setName(newProps.value)}\n          />\n          <Input value={coordinates} onChange={(_, newProps): void => setCoordinates(newProps.value)} />\n          <TextArea\n            styles={{ height: '60%' }}\n            value={description}\n            onChange={(_, newProps): void => setDescription(newProps.value)}\n          />\n        </Flex>\n      </Grid>\n      <Flex gap=\"gap.medium\" padding=\"padding.medium\">\n        <Button\n          primary\n          disabled={[name, coordinates, description].includes('')}\n          onClick={(): void => {\n            dispatch(postLocation({ name, coordinates, description, is_demo: false }));\n            history.push('/locations');\n          }}\n          content=\"Save\"\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            history.push('/locations');\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default LocationRegister;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Flex, Text, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { Location } from '../store/location/locationTypes';\nimport { State } from '../store/State';\nimport { useQuery } from '../hooks/useQuery';\n\nconst LocationDetails: FC = () => {\n  const name = useQuery().get('name');\n  const location = useSelector<State, Location>((state) => state.locations.find((e) => e.name === name));\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Details\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"6.25em\" height=\"6.25em\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Text styles={{ paddingTop: '0.625em', minHeight: '6.25em' }}>{location.name}</Text>\n          <Text>{location.coordinates}</Text>\n          <Text styles={{ height: '60%' }}>{location.description}</Text>\n        </Flex>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationDetails;\n","import React, { useState, useEffect, SetStateAction, Dispatch, FC, memo, useMemo } from 'react';\nimport { Dropdown, DropdownItemProps, Text, Button, RadioGroup } from '@fluentui/react-northstar';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImageIdentificationItemProps {\n  confidenceLevel: number;\n  relabelImages: RelabelImage[];\n  imageIndex: number;\n  setJudgedImageList: Dispatch<SetStateAction<JudgedImageList>>;\n  partId: number;\n  partItems: DropdownItemProps[];\n  isPartCorrect: number;\n}\nconst ImageIdentificationItem: FC<ImageIdentificationItemProps> = ({\n  confidenceLevel,\n  relabelImages,\n  imageIndex,\n  setJudgedImageList,\n  partId,\n  partItems,\n  isPartCorrect,\n}) => {\n  const filteredPartItems = useMemo(\n    () => [\n      {\n        header: 'No Object',\n        content: {\n          key: null,\n        },\n      },\n      ...partItems.filter((e) => (e.content as { key: number }).key !== partId),\n    ],\n    [partId, partItems],\n  );\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(filteredPartItems[0]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n\n      setJudgedImageList((prev) => {\n        const next = [...prev];\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx === -1) throw new Error(\"Image id doesn't match\");\n        next[idx] = { ...next[idx], partId: value.content.key };\n\n        return next;\n      });\n    }\n  };\n\n  const onRadioGroupChange = (_, newProps): void => {\n    setJudgedImageList((prev) => {\n      const next = [...prev];\n\n      if (newProps.value === 1) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId };\n        else next.push({ imageId: relabelImages[imageIndex].id, partId });\n      } else if (newProps.value === 0) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId: null };\n        else {\n          next.push({\n            imageId: relabelImages[imageIndex].id,\n            partId: null,\n          });\n        }\n      }\n      return next;\n    });\n  };\n\n  useEffect(() => {\n    setJudgedImageList([]);\n    setSelectedPartItem(filteredPartItems[0]);\n  }, [filteredPartItems, setSelectedPartItem, setJudgedImageList]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        minHeight: '13em',\n        maxHeight: '40%',\n        justifyContent: 'center',\n        padding: '1em',\n      }}\n    >\n      <div\n        style={{\n          margin: '0.2em',\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'space-around',\n        }}\n      >\n        <LabelDisplayImage labelImage={relabelImages[imageIndex]} width={150} height={150} />\n      </div>\n      <div\n        style={{\n          height: '100%',\n          width: '40%',\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <Text truncated>\n          Confidence Level: <b>{confidenceLevel}%</b>\n        </Text>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '50%',\n          }}\n        >\n          <RadioGroup\n            checkedValue={isPartCorrect}\n            onCheckedValueChange={onRadioGroupChange}\n            items={[\n              {\n                key: '1',\n                label: 'Yes',\n                value: 1,\n              },\n              {\n                key: '0',\n                label: 'No',\n                value: 0,\n              },\n            ]}\n          />\n          {isPartCorrect === 0 && filteredPartItems.length > 0 && (\n            <div style={{ width: '50%' }}>\n              <Dropdown\n                fluid\n                items={filteredPartItems}\n                onChange={onDropdownChange}\n                value={selectedPartItem}\n              />\n            </div>\n          )}\n        </div>\n        <LabelingPageDialog\n          imageIndex={imageIndex}\n          images={relabelImages}\n          isRelabel={true}\n          trigger={<Button primary content=\"Identify\" />}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImageIdentificationItem);\n","import React, { FC, Dispatch, memo } from 'react';\nimport { Grid, DropdownItemProps } from '@fluentui/react-northstar';\nimport ImageIdentificationItem from './ImageItem';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImagesContainerProps {\n  images: RelabelImage[];\n  judgedImageList: JudgedImageList;\n  setJudgedImageList: Dispatch<JudgedImageList>;\n  selectedPartId: number;\n  partItems: DropdownItemProps[];\n}\nconst ImagesContainer: FC<ImagesContainerProps> = ({\n  images,\n  judgedImageList,\n  setJudgedImageList,\n  selectedPartId,\n  partItems,\n}) => {\n  return (\n    <Grid\n      columns=\"2\"\n      styles={{\n        width: '100%',\n        height: '80%',\n        overflow: 'scroll',\n        borderWidth: '0.0625em',\n        borderStyle: 'solid'\n      }}\n    >\n      {images.map((img, i, arr) => {\n        if (img.display) {\n          let isPartCorrect: number = null;\n          const idx = judgedImageList.findIndex((e) => e.imageId === img.id);\n\n          if (idx >= 0) {\n            if (judgedImageList[idx].partId === selectedPartId) {\n              isPartCorrect = 1;\n            } else isPartCorrect = 0;\n          }\n\n          return (\n            <ImageIdentificationItem\n              key={img.id}\n              confidenceLevel={img.confidenceLevel}\n              imageIndex={i}\n              relabelImages={arr}\n              isPartCorrect={isPartCorrect}\n              setJudgedImageList={setJudgedImageList}\n              partId={selectedPartId}\n              partItems={partItems}\n            />\n          );\n        }\n        return void 0;\n      })}\n    </Grid>\n  );\n};\n\nexport default memo(ImagesContainer);\n","import React, { useState, useEffect, useRef, useMemo, FC } from 'react';\nimport {\n  Dropdown,\n  DropdownItemProps,\n  Grid,\n  Flex,\n  Text,\n  Divider,\n  Button,\n  ArrowDownIcon,\n  ArrowUpIcon,\n} from '@fluentui/react-northstar';\nimport Axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport { Range, Handle } from 'rc-slider';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../rc-slider.css';\n\nimport { State } from '../store/State';\nimport { useParts } from '../hooks/useParts';\nimport { ProjectData } from '../store/project/projectTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getFilteredImages } from '../util/getFilteredImages';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { getLabelImages } from '../store/image/imageActions';\nimport { JudgedImageList, RelabelImage } from '../components/ManualIdentification/types';\nimport ImagesContainer from '../components/ManualIdentification/ImagesContainer';\n\nconst ManualIdentification: FC = () => {\n  const dispatch = useDispatch();\n  const { projectData, images } = useSelector<State, { projectData: ProjectData; images: LabelImage[] }>(\n    (state) => ({\n      projectData: state.project.data,\n      images: state.images,\n    }),\n  );\n  const parts = useParts(false);\n  const partItems = useMemo<DropdownItemProps[]>(() => {\n    if (parts.length === 0 || projectData.parts.length === 0) return [];\n\n    return projectData.parts.map((partId) => {\n      const part = parts.find((e) => e.id === partId);\n\n      return {\n        header: part.name,\n        content: {\n          key: part.id,\n        },\n      };\n    });\n  }, [parts, projectData]);\n\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(null);\n  const selectedPartId: number = (selectedPartItem?.content as { key: number })?.key ?? null;\n\n  const [confidenceLevelRange, setConfidenceLevelRange] = useState<[number, number]>([\n    projectData.accuracyRangeMin,\n    projectData.accuracyRangeMax,\n  ]);\n  const [ascend, setAscend] = useState<boolean>(false);\n  const sortRef = useRef({ sorted: false, prevIsAscend: false });\n  const [judgedImageList, setJudgedImageList] = useState<JudgedImageList>([]);\n\n  const [relabelImages, setRelabelImages] = useState<RelabelImage[]>([]);\n\n  useEffect(() => {\n    dispatch(thunkGetProject(false));\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setRelabelImages(\n      getFilteredImages(images, {\n        partId: selectedPartId,\n        isRelabel: true,\n      }).map((e) => {\n        const confidenceLevel = ((e.confidence * 1000) | 0) / 10;\n        return {\n          ...e,\n          confidenceLevel,\n          display: confidenceLevel >= confidenceLevelRange[0] && confidenceLevel <= confidenceLevelRange[1],\n        };\n      }),\n    );\n    return (): void => {\n      setAscend(false);\n      sortRef.current = { sorted: false, prevIsAscend: false };\n    };\n  }, [confidenceLevelRange, images, selectedPartId]);\n\n  useEffect(() => {\n    if (sortRef.current.sorted) {\n      if (sortRef.current.prevIsAscend !== ascend) {\n        setRelabelImages((prev) => {\n          const next = [...prev];\n          next.reverse();\n          return next;\n        });\n        sortRef.current.prevIsAscend = ascend;\n      }\n    } else {\n      setRelabelImages((prev) => {\n        if (ascend) prev.sort((a, b) => a.confidenceLevel - b.confidenceLevel);\n        else prev.sort((a, b) => b.confidenceLevel - a.confidenceLevel);\n        return [...prev];\n      });\n      sortRef.current = { sorted: true, prevIsAscend: true };\n    }\n  }, [ascend]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n    }\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Manual Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.medium\" space=\"between\" styles={{ height: '75vh', padding: '1em' }}>\n        <Grid columns=\"3\" styles={{ columnGap: '1em', justifyItems: 'center' }}>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text truncated>Select Part:</Text>\n            <Dropdown items={partItems} onChange={onDropdownChange} value={selectedPartItem} />\n          </Flex>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\" styles={{ width: '80%' }}>\n            <Text>Confidence Level:</Text>\n            <div style={{ width: '70%' }}>\n              <Range\n                value={confidenceLevelRange}\n                allowCross={false}\n                onChange={setConfidenceLevelRange}\n                handle={({ value, dragging, index, ...restProps }): JSX.Element => {\n                  return (\n                    <Tooltip\n                      prefixCls=\"rc-slider-tooltip\"\n                      overlay={`${value}%`}\n                      visible={dragging}\n                      placement=\"top\"\n                      key={index}\n                    >\n                      <Handle value={value} {...restProps} />\n                    </Tooltip>\n                  );\n                }}\n              />\n            </div>\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text truncated>Sort:</Text>\n            <Button\n              icon={ascend ? <ArrowDownIcon /> : <ArrowUpIcon />}\n              styles={{ color: sortRef.current.sorted ? '#0094d8' : 'grey' }}\n              text\n              iconOnly\n              onClick={(): void => {\n                setAscend((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Grid>\n        <div style={{ display: 'flex', minWidth: '15em', maxWidth: '15%', justifyContent: 'space-around' }}>\n          <Button\n            primary\n            content=\"Yes to all\"\n            onClick={(): void => {\n              setJudgedImageList(relabelImages.map((e) => ({ imageId: e.id, partId: selectedPartId })));\n            }}\n          />\n          <Button\n            styles={{\n              backgroundColor: '#E97548',\n              color: 'white',\n              ':hover': { backgroundColor: '#CC4A31', color: 'white' },\n            }}\n            content=\"No to all\"\n            onClick={(): void => {\n              setJudgedImageList(relabelImages.map((e) => ({ imageId: e.id, partId: null })));\n            }}\n          />\n        </div>\n        <ImagesContainer\n          images={relabelImages}\n          judgedImageList={judgedImageList}\n          setJudgedImageList={setJudgedImageList}\n          selectedPartId={selectedPartId}\n          partItems={partItems}\n        />\n        <Button\n          content=\"Update\"\n          styles={{ width: '15%' }}\n          primary\n          disabled={judgedImageList.length === 0}\n          onClick={(): void => {\n            Axios({ method: 'POST', url: '/api/relabel/update', data: judgedImageList })\n              .then(() => {\n                dispatch(getLabelImages());\n                setJudgedImageList([]);\n                return void 0;\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ManualIdentification;\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text, Button, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\n\nexport const Parts: React.FC = () => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const partsAPI = Axios.get('/api/parts/');\n    const imagesAPI = Axios.get('/api/images/');\n\n    Axios.all([partsAPI, imagesAPI])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: partsRes } = responses[0];\n          const { data: images } = responses[1];\n          setParts(\n            partsRes.map((e) => ({\n              ...e,\n              images: images.find((img) => getIdFromUrl(img.part) === e.id)?.image,\n            })),\n          );\n        }),\n      )\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <Flex gap=\"gap.large\" wrap>\n        {parts\n          .filter((e) => !e.is_demo)\n          .map((ele) => (\n            <Item key={ele.id} src={ele.images} id={ele.id} name={ele.name} />\n          ))}\n      </Flex>\n      <Button\n        primary\n        fluid\n        circular\n        content={<AddIcon size=\"largest\" circular />}\n        style={{\n          width: 100,\n          height: 100,\n          position: 'fixed',\n          right: '100px',\n          bottom: '100px',\n        }}\n        as={Link}\n        to=\"/parts/detail\"\n      />\n    </div>\n  );\n};\n\nconst Item = ({ src, id, name }): JSX.Element => {\n  return (\n    <Flex column hAlign=\"center\" gap=\"gap.large\" as={Link} to={`/parts/detail/capturePhotos?partId=${id}`}>\n      <div style={{ width: '250px', height: '250px' }}>\n        <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n      </div>\n      <Text size=\"larger\">{name}</Text>\n    </Flex>\n  );\n};\n","import { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport { ReactPlugin } from '@microsoft/applicationinsights-react-js';\n\nlet reactPlugin = null;\nlet appInsights = null;\n\n/**\n * Create the App Insights Telemetry Service\n * @return {{reactPlugin: ReactPlugin, appInsights: Object, initialize: Function}} - Object\n */\nconst createTelemetryService = (): { reactPlugin; appInsights; initialize } => {\n  /**\n   * Initialize the Application Insights class\n   * @param {string} instrumentationKey - Application Insights Instrumentation Key\n   * @param {Object} browserHistory - client's browser history, supplied by the withRouter HOC\n   * @return {void}\n   */\n  const initialize = (instrumentationKey: string, isAppInsightOn: boolean, browserHistory): any => {\n    if (!browserHistory) {\n      throw new Error('Could not initialize Telemetry Service');\n    }\n    if (!instrumentationKey) {\n      throw new Error('Instrumentation key not provided in /src/components/TelemetryProvider.tsx');\n    }\n\n    reactPlugin = new ReactPlugin();\n\n    appInsights = new ApplicationInsights({\n      config: {\n        instrumentationKey,\n        maxBatchInterval: 0,\n        disableFetchTracking: false,\n        disableTelemetry: !isAppInsightOn,\n        extensions: [reactPlugin],\n        extensionConfig: {\n          [reactPlugin.identifier]: {\n            history: browserHistory,\n          },\n        },\n      },\n    });\n\n    appInsights.loadAppInsights();\n  };\n\n  return { reactPlugin, appInsights, initialize };\n};\n\nexport const ai = createTelemetryService();\nexport const getAppInsights = (): ApplicationInsights => appInsights;\n","import React from 'react';\nimport { Dialog, Flex, ExclamationCircleIcon } from '@fluentui/react-northstar';\nimport { WarningDialogProps } from './WarningDialog.type';\n\nexport const WarningDialog: React.FC<WarningDialogProps> = ({\n  onConfirm = null,\n  onCancel = null,\n  trigger,\n  contentText,\n  cancelButton = 'Cancel',\n  confirmButton = 'Confirm',\n  open = undefined,\n}): JSX.Element => {\n  return (\n    <Dialog\n      styles={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n      cancelButton={cancelButton}\n      confirmButton={confirmButton}\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n      open={open}\n      content={\n        <>\n          <Flex hAlign=\"center\" column>\n            <ExclamationCircleIcon\n              size=\"largest\"\n              styles={({ theme: { siteVariables } }): any => ({\n                color: siteVariables.colorScheme.brand.foreground,\n              })}\n            />\n            <div>{contentText}</div>\n          </Flex>\n        </>\n      }\n      trigger={trigger}\n    />\n  );\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Divider,\n  Text,\n  Flex,\n  Dropdown,\n  Button,\n  DropdownItemProps,\n  Checkbox,\n  Input,\n  Alert,\n  ShorthandCollection,\n} from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\n\nimport { thunkGetProject, thunkPostProject, updateProjectData } from '../store/project/projectActions';\nimport { Project, ProjectData } from '../store/project/projectTypes';\nimport { State } from '../store/State';\nimport { formatDropdownValue, Value } from '../util/formatDropdownValue';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\nimport { getAppInsights } from '../TelemetryService';\nimport { WarningDialog } from '../components/WarningDialog';\n\nconst sendTrainInfoToAppInsight = async (selectedParts): Promise<void> => {\n  const { data: images } = await Axios.get('/api/images/');\n\n  const selectedPartIds = selectedParts.map((e) => e.id);\n  const interestedImagesLength = images.filter((e) => selectedPartIds.includes(getIdFromUrl(e.part))).length;\n  const appInsight = getAppInsights();\n  if (appInsight)\n    appInsight.trackEvent({\n      name: 'train',\n      properties: {\n        images: interestedImagesLength,\n        parts: selectedParts.length,\n        source: window.location.hostname,\n      },\n    });\n};\n\nexport const PartIdentification: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error, data } = useSelector<State, Project>((state) => state.project);\n  const {\n    id: projectId,\n    camera,\n    location,\n    parts,\n    needRetraining,\n    accuracyRangeMin,\n    accuracyRangeMax,\n    maxImages: maxImage,\n  } = data;\n  const [isTestModel, setIsTestModel] = useState(false);\n  const [cameraLoading, dropDownCameras, selectedCamera, setSelectedCameraById] = useDropdownItems<any>(\n    'cameras',\n    isTestModel,\n  );\n  const [partLoading, dropDownParts, selectedParts, setSelectedPartsById] = useDropdownItems<any>(\n    'parts',\n    isTestModel,\n    true,\n  );\n  const [locationLoading, dropDownLocations, selectedLocations, setSelectedLocationById] = useDropdownItems<\n    any\n  >('locations', isTestModel);\n  const history = useHistory();\n  const [maxImgCountError, setMaxImgCountError] = useState(false);\n\n  useEffect(() => {\n    if (!cameraLoading && !partLoading && !locationLoading) {\n      dispatch(thunkGetProject(isTestModel));\n    }\n  }, [dispatch, cameraLoading, locationLoading, partLoading, isTestModel]);\n\n  useEffect(() => {\n    if (!isTestModel) {\n      if (location) setSelectedLocationById(location);\n      if (parts.length) setSelectedPartsById(parts);\n      if (camera) setSelectedCameraById(camera);\n    }\n  }, [\n    camera,\n    isTestModel,\n    location,\n    parts,\n    setSelectedCameraById,\n    setSelectedLocationById,\n    setSelectedPartsById,\n  ]);\n\n  const handleSubmitConfigure = async (): Promise<void> => {\n    try {\n      if (!isTestModel) sendTrainInfoToAppInsight(selectedParts);\n\n      const id = await dispatch(\n        thunkPostProject(projectId, selectedLocations, selectedParts, selectedCamera, isTestModel),\n      );\n\n      if (typeof id !== 'undefined')\n        history.push(`/cameras/detail?name=${selectedCamera.name}&isDemo=${isTestModel}`);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  const setData = (keyName: keyof ProjectData, value: ProjectData[keyof ProjectData]): void => {\n    dispatch(updateProjectData({ ...data, [keyName]: value }));\n  };\n\n  const accracyRangeDisabled = !needRetraining || isTestModel;\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Part Identification\n      </Text>\n      <Divider color=\"black\" />\n      {error && (\n        <Alert danger header=\"Load Part Identification Error\" content={`${error.name}: ${error.message}`} />\n      )}\n      <TestModelButton isTestModel={isTestModel} setIsTestModel={setIsTestModel} />\n      <Flex column gap=\"gap.large\" design={{ paddingTop: '30px' }}>\n        <ModuleSelector\n          moduleName=\"cameras\"\n          to=\"/cameras\"\n          value={selectedCamera}\n          setSelectedModuleItem={setSelectedCameraById}\n          items={dropDownCameras}\n          isMultiple={false}\n        />\n        <ModuleSelector\n          moduleName=\"parts\"\n          to=\"/parts\"\n          value={selectedParts}\n          setSelectedModuleItem={setSelectedPartsById}\n          items={dropDownParts}\n          isMultiple={true}\n        />\n        <ModuleSelector\n          moduleName=\"locations\"\n          to=\"/locations\"\n          value={selectedLocations}\n          setSelectedModuleItem={setSelectedLocationById}\n          items={dropDownLocations}\n          isMultiple={false}\n          isTestModel={isTestModel}\n        />\n        <Checkbox\n          label=\"Set up retraining\"\n          checked={needRetraining}\n          onChange={(_, { checked }): void => setData('needRetraining', checked)}\n          disabled={isTestModel}\n        />\n        <Text disabled={accracyRangeDisabled}>Accuracy Range</Text>\n        <Text disabled={accracyRangeDisabled}>\n          Minimum:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={accuracyRangeMin}\n            onChange={(_, { value }): void => setData('accuracyRangeMin', value)}\n          />\n          %\n        </Text>\n        <Text disabled={accracyRangeDisabled}>\n          Maximum:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={accuracyRangeMax}\n            onChange={(_, { value }): void => setData('accuracyRangeMax', value)}\n          />\n          %\n        </Text>\n        <Text disabled={accracyRangeDisabled}>\n          Maximum Images:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={maxImage}\n            onChange={(_, { value }): void => {\n              if ((value as any) < 15) setMaxImgCountError(true);\n              else setMaxImgCountError(false);\n              setData('maxImages', value);\n            }}\n          />\n          {maxImgCountError && <Text error>Cannot be less than 15</Text>}\n        </Text>\n        <Link to=\"\">Advanced Configuration</Link>\n        <Button\n          content=\"Configure\"\n          primary\n          onClick={handleSubmitConfigure}\n          disabled={(!selectedCamera || !selectedLocations || !selectedParts || isLoading) && !isTestModel}\n          loading={isLoading}\n        />\n      </Flex>\n    </>\n  );\n};\n\nconst TestModelButton = ({ isTestModel, setIsTestModel }): JSX.Element => {\n  if (isTestModel) {\n    return (\n      <Button\n        styles={{\n          backgroundColor: '#ff9727',\n          ':hover': {\n            backgroundColor: '#cf7a1f',\n          },\n          ':active': {\n            backgroundColor: '#cf7a1f',\n          },\n        }}\n        content=\"Back\"\n        onClick={(): void => setIsTestModel(false)}\n        primary\n      />\n    );\n  }\n\n  return (\n    <WarningDialog\n      confirmButton=\"Confirm to use test model\"\n      onConfirm={(): void => setIsTestModel(true)}\n      contentText={\n        <>\n          <p>Test model is for seeing inference result, no retraining experience here.</p>\n          <p>For retraining experience, please create a new model</p>\n        </>\n      }\n      trigger={\n        <Button\n          styles={{\n            backgroundColor: '#ff9727',\n            ':hover': {\n              backgroundColor: '#cf7a1f',\n            },\n            ':active': {\n              backgroundColor: '#cf7a1f',\n            },\n          }}\n          content=\"Test Model\"\n          primary\n        />\n      }\n    />\n  );\n};\n\n// TODO Make this integrate with Redux\nfunction useDropdownItems<T>(\n  moduleName: string,\n  isTestModel: boolean,\n  isMultiple?: boolean,\n): [boolean, DropdownItemProps[], T | T[], (id: string | string[]) => void] {\n  const originItems = useRef<(T & { id: number })[]>([]);\n  const [dropDownItems, setDropDownItems] = useState<DropdownItemProps[]>([]);\n  const [selectedItem, setSelectedItem] = useState<T | T[]>(isMultiple ? [] : null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const url =\n      moduleName === 'cameras' && isTestModel\n        ? `/api/${moduleName}/`\n        : `/api/${moduleName}/?is_demo=${Number(isTestModel)}`;\n    setLoading(true);\n    Axios(url)\n      .then(({ data }) => {\n        setDropDownItems(\n          data.map((e) => ({\n            header: e.name,\n            content: {\n              key: e.id,\n            },\n          })),\n        );\n        originItems.current = data;\n        if (isMultiple) {\n          setSelectedItem(data);\n        } else {\n          setSelectedItem(data[0]);\n        }\n        setLoading(false);\n        return void 0;\n      })\n      .catch((err) => console.error(err))\n      .finally(() => setLoading(false));\n  }, [isMultiple, moduleName, isTestModel]);\n\n  const setSelectedItemById = useCallback((id: string | string[]): void => {\n    if (Array.isArray(id)) {\n      const correspondedItems = id.reduce((acc, cur) => {\n        const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === cur.toString());\n        if (correspondedItem) acc.push(correspondedItem);\n        return acc;\n      }, []);\n      setSelectedItem(correspondedItems as any);\n    } else {\n      const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === id.toString());\n      if (correspondedItem) setSelectedItem(correspondedItem);\n    }\n  }, []);\n\n  return [loading, dropDownItems, selectedItem, setSelectedItemById];\n}\n\n/* Module Selector */\n\ntype ModuleSelectorProps = {\n  moduleName: string;\n  to: string;\n  value: Value;\n  setSelectedModuleItem: (id: string | string[]) => void;\n  items: ShorthandCollection<DropdownItemProps>;\n  isMultiple: boolean;\n  isTestModel?: boolean;\n};\n\nconst ModuleSelector: React.FC<ModuleSelectorProps> = ({\n  moduleName,\n  to,\n  value,\n  setSelectedModuleItem,\n  items,\n  isMultiple,\n  isTestModel,\n}): JSX.Element => {\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) return;\n    if (Array.isArray(data.value)) {\n      const ids = data.value.map((ele) => ele.content.key);\n      setSelectedModuleItem(ids);\n    } else {\n      const { key } = data.value.content;\n      setSelectedModuleItem(key);\n    }\n  };\n\n  return (\n    <Flex vAlign=\"center\" gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }}>{`Select ${moduleName}`}</Text>\n      {isTestModel ? (\n        <Dropdown items={items} value={formatDropdownValue(value)} multiple={isMultiple} open={false} />\n      ) : (\n        <Dropdown\n          items={items}\n          onChange={onDropdownChange}\n          value={formatDropdownValue(value)}\n          multiple={isMultiple}\n        />\n      )}\n      <Link to={to}>{`Add ${moduleName}`}</Link>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect, useReducer, Reducer } from 'react';\nimport * as R from 'ramda';\nimport {\n  Divider,\n  Flex,\n  Text,\n  Input,\n  Button,\n  Alert,\n  Dropdown,\n  DropdownItemProps,\n  Checkbox,\n} from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios, { AxiosRequestConfig } from 'axios';\nimport { useProject } from '../hooks/useProject';\nimport { getAppInsights } from '../TelemetryService';\nimport { WarningDialog } from '../components/WarningDialog';\n\nconst initialState = {\n  loading: false,\n  error: null,\n  current: {\n    id: -1,\n    key: '',\n    namespace: '',\n  },\n  origin: {\n    id: -1,\n    key: '',\n    namespace: '',\n  },\n};\n\ntype SettingDataState = typeof initialState;\n\ntype Action =\n  | {\n      type: 'UPDATE_KEY';\n      payload: string;\n    }\n  | {\n      type: 'UPDATE_NAMESPACE';\n      payload: string;\n    }\n  | {\n      type: 'REQUEST_START';\n    }\n  | {\n      type: 'REQUEST_SUCCESS';\n      payload: SettingDataState;\n    }\n  | {\n      type: 'REQUEST_FAIL';\n      error: Error;\n    };\n\ntype SettingReducer = Reducer<SettingDataState, Action>;\n\nconst reducer: SettingReducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_KEY':\n      return { ...state, current: { ...state.current, key: action.payload } };\n    case 'UPDATE_NAMESPACE':\n      return { ...state, current: { ...state.current, namespace: action.payload } };\n    case 'REQUEST_START':\n      return { ...state, loading: true };\n    case 'REQUEST_SUCCESS':\n      return action.payload;\n    case 'REQUEST_FAIL':\n      return { ...state, error: action.error };\n    default:\n      return state;\n  }\n};\n\nexport const Setting = (): JSX.Element => {\n  const [{ loading, error, current: settingData, origin: originSettingData }, dispatch] = useReducer<\n    SettingReducer\n  >(reducer, initialState);\n  const [checkboxChecked, setCheckboxChecked] = useState(false);\n\n  const notEmpty = originSettingData.namespace && originSettingData.key;\n\n  const cannotUpdateOrSave = R.equals(settingData, originSettingData);\n\n  useEffect(() => {\n    dispatch({ type: 'REQUEST_START' });\n\n    Axios.get('/api/settings/')\n      .then(({ data }) => {\n        if (data.length > 0) {\n          dispatch({\n            type: 'REQUEST_SUCCESS',\n            payload: {\n              loading: false,\n              error: null,\n              current: {\n                id: data[0].id,\n                key: data[0].training_key,\n                namespace: data[0].endpoint,\n              },\n              origin: {\n                id: data[0].id,\n                key: data[0].training_key,\n                namespace: data[0].endpoint,\n              },\n            },\n          });\n          setCheckboxChecked(data[0].is_collect_data);\n        }\n        return void 0;\n      })\n      .catch((err) => {\n        dispatch({ type: 'REQUEST_FAIL', error: err });\n      });\n  }, []);\n\n  const onSave = (): void => {\n    const isSettingEmpty = settingData.id === -1;\n    const url = isSettingEmpty ? `/api/settings/` : `/api/settings/${settingData.id}/`;\n    const requestConfig: AxiosRequestConfig = isSettingEmpty\n      ? {\n          data: {\n            training_key: settingData.key,\n            endpoint: settingData.namespace,\n            name: '',\n            iot_hub_connection_string: '',\n            device_id: '',\n            module_id: '',\n          },\n          method: 'POST',\n        }\n      : {\n          data: {\n            training_key: settingData.key,\n            endpoint: settingData.namespace,\n          },\n          method: 'PUT',\n        };\n\n    dispatch({ type: 'REQUEST_START' });\n\n    Axios(url, requestConfig)\n      .then(({ data }) => {\n        dispatch({\n          type: 'REQUEST_SUCCESS',\n          payload: {\n            loading: false,\n            error: null,\n            current: {\n              id: data.id,\n              key: data.training_key,\n              namespace: data.endpoint,\n            },\n            origin: {\n              id: data.id,\n              key: data.training_key,\n              namespace: data.endpoint,\n            },\n          },\n        });\n        // Reload page so PreviousProjectPanel can query again\n        window.location.reload();\n        return void 0;\n      })\n      .catch((err) => {\n        dispatch({ type: 'REQUEST_FAIL', error: err });\n      });\n  };\n\n  const onCheckBoxClick = (): void => {\n    const newCheckboxChecked = !checkboxChecked;\n    setCheckboxChecked(newCheckboxChecked);\n    Axios.patch(`/api/settings/${settingData.id}`, { is_collect_data: newCheckboxChecked })\n      .then(() => {\n        const appInsight = getAppInsights();\n        if (!appInsight) throw Error('App Insight hasnot been initialize');\n        appInsight.config.disableTelemetry = !newCheckboxChecked;\n        return void 0;\n      })\n      .catch((err) => {\n        setCheckboxChecked(checkboxChecked);\n        alert(err);\n      });\n  };\n\n  return (\n    <>\n      <h1>Setting</h1>\n      <Divider color=\"grey\" design={{ paddingBottom: '10px' }} />\n      <Flex gap=\"gap.large\" design={{ height: '80%' }}>\n        <Flex column gap=\"gap.large\" design={{ width: '50%' }}>\n          <Text size=\"large\" weight=\"bold\">\n            Azure Cognitive Services Settings:{' '}\n          </Text>\n          <Flex vAlign=\"center\">\n            <Text size=\"large\" design={{ width: '300px' }}>\n              Namespace:\n            </Text>\n            <Input\n              value={settingData.namespace}\n              onChange={(_, { value }): void => dispatch({ type: 'UPDATE_NAMESPACE', payload: value })}\n              fluid\n            />\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text size=\"large\" design={{ width: '300px' }}>\n              Key:\n            </Text>\n            <Input\n              value={settingData.key}\n              onChange={(_, { value }): void => dispatch({ type: 'UPDATE_KEY', payload: value })}\n              fluid\n            />\n          </Flex>\n          <Flex gap=\"gap.large\">\n            <WarningDialog\n              onConfirm={onSave}\n              trigger={\n                <Button primary disabled={cannotUpdateOrSave || loading} loading={loading}>\n                  {notEmpty ? 'Update' : 'Save'}\n                </Button>\n              }\n              contentText={<p>Update Key / Namespace will remove all the parts, sure you want to update?</p>}\n            />\n            <Button primary as={Link} to=\"/\">\n              Cancel\n            </Button>\n          </Flex>\n          {error ? <Alert danger content={`Failed to save ${error}`} dismissible /> : null}\n        </Flex>\n        {notEmpty && <PreviousProjectPanel settingDataId={settingData.id} />}\n      </Flex>\n      <Divider color=\"grey\" />\n      <Checkbox\n        label=\"Allow to Send Usage Data\"\n        toggle\n        checked={checkboxChecked}\n        onChange={onCheckBoxClick}\n      />\n    </>\n  );\n};\n\nconst initialDropdownItem = [\n  {\n    header: '+ Create New Project',\n    content: {\n      key: 'NEW',\n    },\n  },\n];\n\nconst PreviousProjectPanel: React.FC<{ settingDataId: number }> = ({ settingDataId }) => {\n  const [dropdownItems, setDropdownItems] = useState<DropdownItemProps[]>(initialDropdownItem);\n  const [customVisionProjectId, setCustomVisionProjectId] = useState('');\n  const { isLoading: isProjectLoading, error: projectError, data: projectData } = useProject(false);\n  const [loadFullImages, setLoadFullImages] = useState(false);\n  const [otherLoading, setOtherLoading] = useState(false);\n  const [otherError, setOtherError] = useState<Error>(null);\n  const [createProjectModel, setCreateProjectModel] = useState(false);\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setCustomVisionProjectId(customVisionProjectId);\n    else if (data.value.content.key === initialDropdownItem[0].content.key) setCreateProjectModel(true);\n    else setCustomVisionProjectId(data.value.content.key);\n  };\n\n/*\n  const onLoad = (): void => {\n    setOtherLoading(true);\n    Axios.get(\n      `/api/projects/${\n        projectData.id\n      }/pull_cv_project?customvision_project_id=${customVisionProjectId}&partial=${Number(!loadFullImages)}`,\n    )\n      .catch((err) => setOtherError(err))\n      .finally(() => setOtherLoading(false));\n  };\n  */\n  const onLoad = (): void => {\n    setOtherLoading(true);\n    console.log(projectData.id, 'pp')\n    Axios.get(\n      `api/projects/${projectData.id}/pull_cv_project?customvision_project_id=${customVisionProjectId}`,\n    )\n      .catch((err) => {\n      console.log('set')\n      setOtherError(err)})\n      .finally(() => setOtherLoading(false));\n  };\n\n  const onCreateNewProject = (): void => {\n    setOtherLoading(true);\n    Axios.get(`/api/projects/${projectData.id}/reset_project`)\n      .catch((err) => setOtherError(err))\n      .finally(() => setOtherLoading(false));\n  };\n\n  useEffect(() => {\n    if (settingDataId !== -1) {\n      console.log('wew', settingDataId)\n      setOtherLoading(true);\n      console.log(settingDataId)\n      Axios.get(`/api/settings/${settingDataId}/list_projects`)\n        .then(({ data }) => {\n          const items: DropdownItemProps[] = Object.entries(data).map(([key, value]) => ({\n            header: value,\n            content: {\n              key,\n            },\n          }));\n          setDropdownItems([...initialDropdownItem, ...items]);\n          return void 0;\n        })\n        .catch((e) => {\n            console.log('here err'); setOtherError(e);\n        })\n        .finally(() => setOtherLoading(false));\n    }\n  }, [settingDataId]);\n\n  const loading = otherLoading || isProjectLoading;\n  const error = [otherError, projectError].filter((e) => !!e);\n  console.log(otherError, projectError)\n\n  return (\n    <>\n      <Divider color=\"grey\" vertical styles={{ height: '100%' }} />\n      <Flex column gap=\"gap.large\">\n        <Text size=\"large\" weight=\"bold\">\n          Previous Projects:{' '}\n        </Text>\n        <Dropdown items={dropdownItems} onChange={onDropdownChange} />\n        {loadFullImages ? (\n          <Checkbox\n            checked={loadFullImages}\n            label=\"Load Full Images\"\n            onClick={(): void => setLoadFullImages((prev) => !prev)}\n          />\n        ) : (\n          <WarningDialog\n            contentText={<p>Depends on the number of images, loading full images takes time</p>}\n            onConfirm={(): void => setLoadFullImages((prev) => !prev)}\n            trigger={<Checkbox checked={loadFullImages} label=\"Load Full Images\" />}\n          />\n        )}\n        <WarningDialog\n          contentText={<p>Load Project will remove all the parts, sure you want to do that?</p>}\n          onConfirm={onLoad}\n          trigger={\n            <Button primary content=\"Load\" disabled={!customVisionProjectId || loading} loading={loading} />\n          }\n        />\n        <WarningDialog\n          contentText={<p>Create New Project will remove all the parts, sure you want to do that?</p>}\n          open={createProjectModel}\n          onConfirm={() => {\n            onCreateNewProject();\n            setCreateProjectModel(false);\n          }}\n          onCancel={() => {\n            setCreateProjectModel(false);\n            setCustomVisionProjectId(null);\n          }}\n        />\n        {error.length ? <Alert danger content={`Failed to load ${error.join(', ')}`} dismissible /> : null}\n      </Flex>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Project } from '../store/project/projectTypes';\nimport { thunkGetProject } from '../store/project/projectActions';\n\n/**\n * Fetch the project data from server and set to Redux Store\n */\nexport const useProject = (isDemo?: boolean): Project => {\n  const dispatch = useDispatch();\n  const project = useSelector<State, Project>((state) => state.project);\n\n  useEffect(() => {\n    dispatch(thunkGetProject(isDemo));\n  }, [dispatch, isDemo]);\n\n  return project;\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Cameras from '../pages/Cameras';\nimport CameraDetails from '../pages/CameraDetails';\nimport { PartDetails } from '../pages/PartDetails';\nimport Locations from '../pages/Locations';\nimport LocationRegister from '../pages/LocationRegister';\nimport LocationDetails from '../pages/LocationDetails';\nimport ManualIdentification from '../pages/ManualIdentification';\nimport { Parts } from '../pages/Parts';\nimport { PartIdentification } from '../pages/PartIdentification';\nimport { Setting } from '../pages/Setting';\n\nexport const RootRouter: FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/manual\" component={ManualIdentification} />\n      <Route path=\"/locations/register\" component={LocationRegister} />\n      <Route path=\"/locations/detail\" component={LocationDetails} />\n      <Route path=\"/locations\" component={Locations} />\n      <Route path=\"/cameras/detail\" component={CameraDetails} />\n      <Route path=\"/cameras\" component={Cameras} />\n      <Route path=\"/parts/detail\" component={PartDetails} />\n      <Route path=\"/parts\" component={Parts} />\n      <Route path=\"/partIdentification\" component={PartIdentification} />\n      <Route path=\"/setting\" component={Setting} />\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nconst getTitle = (pathname: string): string => {\n  switch (pathname) {\n    case 'cameras':\n      return 'Camera';\n    case 'parts':\n      return 'Part';\n    case 'locations':\n      return 'Location';\n    case 'register':\n      return 'Register';\n    case 'label':\n      return 'Label';\n    case 'manual':\n      return 'Identify Manually';\n    case 'detail':\n      return 'Details';\n    case 'partIdentification':\n      return 'Job Configuration';\n    case 'capturePhotos':\n      return null;\n    case 'uploadPhotos':\n      return null;\n    default:\n      if (typeof pathname === 'string') return 'Details';\n      return null;\n  }\n};\n\nconst Breadcrumb: FC = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/') return <Text color=\"black\">Home</Text>;\n\n  const { pathTitles } = pathname\n    .split('/')\n    .slice(1)\n    .reduce(\n      (acc, cur) => {\n        const title = getTitle(cur);\n        if (!title) return acc;\n\n        const path = `${acc.path}/${cur}`;\n\n        return {\n          pathTitles: [...acc.pathTitles, { title, to: path }],\n          path,\n        };\n      },\n      { pathTitles: [], path: '' },\n    );\n\n  return (\n    <Flex gap=\"gap.smaller\">\n      <Link to={'/'} style={{ color: '#0094d8', textDecoration: 'none' }}>\n        <Text>Home</Text>\n      </Link>\n      {pathTitles.map((e, i, arr) => {\n        // const title = getTitle(e);\n\n        return (\n          <Fragment key={i}>\n            <Text color=\"black\">{'>'}</Text>\n            {i === arr.length - 1 ? (\n              <Text color=\"black\">{e.title}</Text>\n            ) : (\n              <Link to={`${e.to}`} style={{ color: '#0094d8', textDecoration: 'none' }}>\n                <Text>{e.title}</Text>\n              </Link>\n            )}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { memo, FC } from 'react';\nimport { Segment, Image, Flex } from '@fluentui/react-northstar';\nimport { NavLink } from 'react-router-dom';\n\nconst LeftNav: FC<any> = ({ styles }): JSX.Element => {\n  return (\n    <Segment color=\"grey\" inverted styles={{ ...styles, padding: 0, paddingTop: '1em' }}>\n      <Flex column gap=\"gap.large\" hAlign=\"center\">\n        <NavItem src=\"/icons/location.png\" to=\"/locations\"></NavItem>\n        <NavItem src=\"/icons/camera.png\" to=\"/cameras\"></NavItem>\n        <NavItem src=\"/icons/part.png\" to=\"/parts\"></NavItem>\n        <NavItem src=\"/icons/manual.png\" to=\"/manual\"></NavItem>\n        <NavItem src=\"/icons/partIdentification.png\" to=\"/partIdentification\"></NavItem>\n      </Flex>\n    </Segment>\n  );\n};\n\nconst NavItem = ({ src, to }): JSX.Element => {\n  return (\n    <NavLink\n      to={to}\n      style={{ display: 'flex', justifyContent: 'center', padding: '0.8em' }}\n      activeStyle={{ backgroundColor: 'rgba(250, 83, 5, 0.5)' }}\n    >\n      <Image src={src} design={{ width: '100%' }}></Image>\n    </NavLink>\n  );\n};\n\nexport default memo(LeftNav);\n","import React, { FC } from 'react';\nimport { Grid, Segment, Image, Flex, Text, MenuIcon } from '@fluentui/react-northstar';\nimport { NavLink, Link } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport LeftNav from './LeftNav';\n\nexport const MainLayout: React.FC = ({ children }) => {\n  return (\n    <Grid\n      columns=\"60px auto\"\n      rows=\"50px auto\"\n      design={{ height: '100vh' }}\n      styles={{ justifyContent: 'stretch' }}\n    >\n      <TopNav />\n      <LeftNav\n        styles={{\n          gridColumn: '1 / span 1',\n          gridRow: '2 / span 1',\n          boxShadow: '1px 0px 10px 0px rgba(0,0,0,0.75)',\n          zIndex: 1,\n        }}\n      />\n\n      <Segment styles={{ gridColumn: 'span 1', padding: '30px' }}>\n        <Breadcrumb />\n        {children}\n      </Segment>\n    </Grid>\n  );\n};\n\nconst TopNav: FC = () => {\n  return (\n    <Flex\n      space=\"between\"\n      vAlign=\"center\"\n      padding=\"padding.medium\"\n      styles={{\n        backgroundColor: '#0094d8',\n        gridColumn: '1 / span 2',\n        boxShadow: '0px 1px 10px 0px rgba(0,0,0,0.75)',\n        zIndex: 2,\n        fontSize: '20px',\n        padding: '0.5em 1em',\n      }}\n    >\n      <Flex gap=\"gap.large\" vAlign=\"center\">\n        <MenuIcon size=\"large\" styles={{ color: 'white' }} />\n        <NavLink to={'/'} style={{ textDecoration: 'none' }}>\n          <Text color=\"white\">Vision on Edge</Text>\n        </NavLink>\n      </Flex>\n      <Flex vAlign=\"center\" hAlign=\"end\" gap=\"gap.medium\" styles={{ height: '100%' }}>\n        <Link to=\"/setting\" style={{ height: '100%' }}>\n          <Image styles={{ height: '100%' }} src=\"/icons/setting.png\" />\n        </Link>\n        <Text color=\"white\">User</Text>\n      </Flex>\n    </Flex>\n  );\n};\n","import { ThemeInput, mergeThemes, themes } from '@fluentui/react-northstar';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colors: {\n      brand: {\n        '50': '#f3fafd',\n        '100': '#d1ecf9',\n        '200': '#aadcf4',\n        '300': '#5dbce8',\n        '400': '#1ba0dd',\n        '500': '#0094d8',\n        '600': '#0085c3',\n        '700': '#0071a5',\n        '800': '#005379',\n        '900': 'black',\n      },\n    },\n    colorScheme: {\n      brand: {\n        foreground: '#0094d8',\n        background: '#0094d8',\n        border: '#E1DFDD',\n        shadow: '#000',\n        foregroundHover: '#0094d8',\n        backgroundHover: '#0085c3',\n        borderHover: '#5dbce8',\n        shadowHover: '#000',\n        foregroundActive: '#0094d8',\n        backgroundActive: '#0094d8',\n        borderActive: '#E1DFDD',\n        shadowActive: undefined,\n        foregroundFocus: '#0094d8',\n        backgroundFocus: '#0094d8',\n        borderFocus: '#000',\n        shadowFocus: undefined,\n        foregroundPressed: '#0071a5',\n        backgroundPressed: '#0071a5',\n        borderPressed: '#5dbce8',\n        shadowPressed: undefined,\n        foregroundDisabled: '#C8C6C4',\n        backgroundDisabled: '#EDEBE9',\n        borderDisabled: '#EDEBE9',\n        shadowDisabled: undefined,\n        foreground1: '#0094d8',\n        foreground2: '#0085c3',\n        foreground3: '#aadcf4',\n        foreground4: '#fff',\n        background1: '#d1ecf9',\n        background2: '#005379',\n        background3: '#373644',\n        background4: '#0071a5',\n        border1: '#aadcf4',\n        border2: '#5dbce8',\n        foregroundHover1: '#fff',\n        foregroundHover2: '#aadcf4',\n        backgroundHover1: '#f3fafd',\n        foregroundPressed1: '#fff',\n        foregroundActive1: '#0094d8',\n        foregroundActive2: '#aadcf4',\n        backgroundActive1: '#0094d8',\n        borderActive1: '#aadcf4',\n        borderActive2: '#5dbce8',\n        foregroundFocus1: '#0094d8',\n        foregroundFocus2: '#0085c3',\n        foregroundFocus3: '#aadcf4',\n        foregroundFocus4: '#fff',\n        backgroundFocus1: '#d1ecf9',\n        backgroundFocus2: '#005379',\n        backgroundFocus3: '#373644',\n        borderFocusWithin: '#fff',\n        borderFocus1: '#0094d8',\n        foregroundDisabled1: '#C8C6C4',\n        backgroundDisabled1: '#EDEBE9',\n      },\n    },\n  },\n};\n\n/**\n * Primary color is based on #0094d8 and generated by https://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/theming-designer/index.html\n */\nexport const myTheme = mergeThemes(themes.teams, theme);\n","import React, { useEffect, useRef } from 'react';\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\nimport { withRouter } from 'react-router-dom';\n\nimport { ai } from '../TelemetryService';\n\n/**\n * This Component provides telemetry with Azure App Insights\n */\nconst TelemetryProvider: React.FC<any> = ({ instrumentationKey, isAppInsightOn, history, children }) => {\n  const initialized = useRef(false);\n\n  useEffect(() => {\n    const AppInsightsInstrumentationKey = instrumentationKey;\n    if (!initialized.current && Boolean(AppInsightsInstrumentationKey) && Boolean(history)) {\n      ai.initialize(AppInsightsInstrumentationKey, isAppInsightOn, history);\n      initialized.current = true;\n    }\n  }, [history, instrumentationKey, isAppInsightOn]);\n\n  return <>{children}</>;\n};\n\nexport default withRouter(withAITracking(ai.reactPlugin, TelemetryProvider, 'TelemetryProvider'));\n","import React, { FC, useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from '@fluentui/react-northstar';\nimport Axios from 'axios';\nimport { RootRouter } from './routes/RootRouter';\nimport { MainLayout } from './components/MainLayout';\nimport { myTheme } from './theme';\nimport TelemetryProvider from './components/TelemetryProvider';\n\nconst App: FC = (): JSX.Element => {\n  const [appInsightInfo, setAppInsightInfo] = useState({\n    key: '',\n    isAppInsightOn: false,\n  });\n\n  useEffect(() => {\n    const appInsightKey = Axios.get('/api/appinsight/key');\n    const settings = Axios.get('/api/settings/');\n\n    Axios.all([appInsightKey, settings])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: appInsightKeyData } = responses[0];\n          const { data: settingsData } = responses[1];\n\n          if (appInsightKeyData.key)\n            return setAppInsightInfo({\n              key: appInsightKeyData.key,\n              isAppInsightOn: settingsData[0].is_collect_data,\n            });\n          throw new Error('No API Key');\n        }),\n      )\n      .catch((e) => console.error(e));\n  }, []);\n\n  return (\n    <Provider theme={myTheme}>\n      <BrowserRouter>\n        <TelemetryProvider\n          instrumentationKey={appInsightInfo.key}\n          isAppInsightOn={appInsightInfo.isAppInsightOn}\n        >\n          <div className=\"App\">\n            <MainLayout>\n              <RootRouter />\n            </MainLayout>\n          </div>\n        </TelemetryProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/State';\n\nconst { store, persistor } = configureStore(initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading..</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}