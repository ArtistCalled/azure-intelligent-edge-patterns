{"version":3,"sources":["store/project/projectTypes.ts","store/part/partReducer.ts","store/labelingPage/labelingPageTypes.ts","store/State.ts","store/camera/cameraReducer.ts","store/camera/cameraTypes.ts","store/part/partTypes.ts","store/labelingPage/labelingPageReducer.ts","store/location/locationReducer.ts","store/location/locationTypes.ts","store/dialog/dialogIsOpenReducer.ts","store/dialog/dialogIsOpenTypes.ts","store/project/projectReducer.ts","store/image/imageReducer.ts","store/image/imageTypes.ts","store/rootReducer.ts","store/index.ts","components/ImageLink.tsx","pages/Home.tsx","store/dialog/dialogIsOpenActions.ts","store/camera/cameraActions.ts","components/AddButton.tsx","pages/Cameras.tsx","components/ConfirmDialog.tsx","components/CameraDetails/CameraDetailInfo.tsx","hooks/useInterval.ts","store/project/projectActions.ts","hooks/useParts.ts","hooks/useQuery.ts","components/LabelingPage/util/useImage.ts","components/LiveViewContainer/LiveViewScene.tsx","components/LiveViewContainer/LiveViewContainer.tsx","components/CameraConfigure/CameraConfigureInfo.tsx","components/CameraConfigure/CreateCameraConfig.tsx","pages/CameraDetails.tsx","components/LabelingPage/util/resizeImage.ts","store/labelingPage/labelingPageActions.ts","components/LabelingPage/Box.tsx","components/LabelingPage/RemoveBoxButton.tsx","components/LabelingPage/Scene.tsx","store/image/imageActions.ts","components/LabelingPage/PrevNextButton.tsx","pages/LabelingPage.tsx","components/LabelingPageDialog.tsx","components/LabelDisplayImage.tsx","components/RTSPVideo/RTSPVideo.tsx","store/part/partActions.ts","util/GetIDFromUrl.ts","util/getFilteredImages.ts","util/formatDropdownValue.ts","components/CapturePhoto/CapturePhotos.tsx","hooks/useCameras.ts","components/UploadPhotos/UploadPhotos.tsx","pages/PartDetails.tsx","store/location/locationActions.ts","pages/Locations.tsx","pages/LocationRegister.tsx","pages/LocationDetails.tsx","components/ManualIdentification/ImageItem.tsx","components/ManualIdentification/ImagesContainer.tsx","pages/ManualIdentification.tsx","pages/Parts.tsx","pages/PartIdentification.tsx","pages/Setting.tsx","hooks/useProject.ts","routes/RootRouter.tsx","components/Breadcrumb.tsx","components/MainLayout/LeftNav.tsx","components/MainLayout/MainLayout.tsx","theme.ts","TelemetryService.ts","components/TelemetryProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Status","reducer","AnnotationState","LabelingCursorStates","WorkState","LabelingType","initialState","dialogIsOpen","cameras","locations","images","labelingPageState","annotations","part","capturedImages","isValid","project","isLoading","data","id","camera","location","parts","needRetraining","accuracyRangeMin","accuracyRangeMax","maxImages","modelUrl","trainingMetrics","prevConsequence","curConsequence","inferenceMetrics","successRate","successfulInferences","unIdetifiedItems","status","None","error","trainingLog","camerasReducer","state","action","type","payload","concat","idx","findIndex","e","slice","checkIfImagesCountIsValidToTrain","newCapturedImage","newState","filter","image","labels","length","labelingPageStateReducer","push","annotation","creatingAnnotation","updater","annotationState","Finish","label","x1","x2","y1","y2","pop","index","locationsReducer","dialogIsOpenReducer","projectReducer","newStatus","TrainingFailed","StartInference","labelImagesReducer","updatedImageIdx","rootReducer","combineReducers","partReducer","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","memo","to","imgSrc","defaultSrc","bgImgSrc","imgPadding","width","height","bgImgStyle","pointerCursor","onClick","Flex","column","styles","style","Image","src","padding","objectFit","backgroundImage","cursor","Text","align","Home","dispatch","useDispatch","gap","size","weight","color","backgroundColor","requestCamerasFailure","console","getCameras","axios","then","getCamerasSuccess","catch","err","AddButton","Button","primary","fluid","circular","content","Cameras","useSelector","is_demo","useState","name","setName","rtsp","setRtsp","model_name","setModel_name","useEffect","display","flexFlow","justifyContent","Grid","columns","map","i","backgroundSize","backgroundPosition","backgroundRepeat","Dialog","open","trigger","alignSelf","alignItems","Input","placeholder","value","onChange","_","newProps","disabled","newCamera","method","postCameraSuccess","ConfirmDialog","onConfirm","primaryStyles","setOpen","onOpen","footer","space","modelName","deleteCameraSuccess","deleteCamera","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","getTrainingLogSuccess","thunkGetProject","isTestModel","url","undefined","Number","Axios","get","parseInt","split","ele","download_uri","getProjectSuccess","getTrain","projectId","thunkGetTrainingLog","Error","log","FinishTraining","WaitTraining","useParts","setParts","fetch","res","json","useQuery","URLSearchParams","useLocation","search","defaultState","useImage","crossOrigin","imageState","setImageState","prevUrl","ref","usePrevious","img","document","createElement","prev","onload","onerror","addEventListener","removeEventListener","LiveViewScene","AOIs","setAOIs","visible","divRef","stageRef","imgRef","layerRef","window","hostname","imgEle","imgWidth","imgHeight","anim","Konva","Animation","start","stop","getBoundingClientRect","divWidth","divHeight","stageWidth","stageHeight","scale","Math","min","x","y","offsetX","offsetY","position","AOILayer","holes","box","boundary","onBoxChange","updateBox","newBox","tmp","newAOIs","Mask","fill","sceneFunc","ctx","shape","beginPath","moveTo","lineTo","forEach","fillStrokeShape","listening","AOIBox","handleDrag","target","points","closed","stroke","strokeWidth","draggable","radius","onDragMove","LiveViewContainer","showVideo","initialAOIData","cameraId","useAOI","showAOI","setShowAOI","lasteUpdatedAOIs","showUpdateSuccessTxt","setShowUpdateSuccessTxt","loading","setLoading","setError","onCheckboxClick","a","patch","area","JSON","stringify","onUpdate","R","timer","setTimeout","clearTimeout","hasEdit","updateBtnDisabled","Alert","danger","header","message","hAlign","vAlign","Checkbox","labelPosition","toggle","checked","visibility","CameraConfigureInfo","allTrainingLog","useAllTrainingLog","cameraName","history","useHistory","onDeleteConfigure","useCallback","confirm","delete","alert","thunkDeleteProject","CameraConfigStatus","dispacth","new","precision","recall","mAP","previous","getTrainingMetricsSuccess","thunkGetTrainingMetrics","success_rate","inference_num","unidentified_num","thunkGetInferenceMetrics","isCameraOnline","includes","Loader","title","online","join","fontWeight","margin","marginLeft","as","Link","allLogs","setAllLogs","ConsequenceDashboard","ListItem","children","CameraStatus","text","CreateCameraConfig","design","border","CameraDetails","cameraIdInproject","find","hasProject","aoiData","getAOIData","cameraArea","parse","getResizeImageFunction","defaultSize","scaleX","scaleY","requestAnnotationsSuccess","BoxObj","init","attribute","Empty","createWithPoint","p","obj","this","add","newObj","P1Added","setVerticesToValidValue","setVerticesToInt","round","setVerticesPointsOrder","object","Box2d","workState","onSelect","selected","annotationIndex","changeCursorState","vertices","setVertices","anchorRadius","boxRef","dispatchLabel","newAnnotation","updateAnnotation","mouseMoveListener","Creating","evt","onDragAnchor","xi","yi","getStage","getSize","setAttr","anotherPosXArr","anotherPosYArr","splice","xx","yy","nwseResize","neswResize","prevVertices","layer","getLayer","on","off","onMouseDown","cancelBubble","onDragEnd","onMouseEnter","onMouseLeave","DisplayBox","cache","imageSize","setShowOuterRemoveButton","removeBox","setColor","setStrokeWidth","pointer","Scene","labelingType","setWorkState","resizeImage","setImageSize","noMoreCreate","useMemo","SingleAnnotation","default","cursorState","setCursorState","selectedAnnotationIndex","setSelectedAnnotationIndex","showOuterRemoveButton","isDragging","setIsDragging","cursorType","crosshair","removeAnnotation","Selecting","outcomeSize","outcomeScale","iconOnly","pos","onMouseUp","onDragStart","requestLabelImagesFailure","getLabelImages","getLabelImagesSuccess","postLabelImage","newImage","saveLabelImageAnnotation","imageId","info","updateLabelImageAnnotation","PrevNextButton","isRelabel","prevDisabled","nextDisabled","onPrevClick","onNextClick","icon","checkOnePointBox","LabelingPage","imageIndex","closeDialog","setIndex","isOnePointBox","imageUrl","getState","parsedLabels","getAnnotations","labelImage","labelText","RTSPVideo","React","partId","canCapture","onVideoStart","onVideoPause","streamId","setStreamId","onDisconnect","response","Group","buttons","stream_id","thunkAddCapturedImages","getIdFromUrl","getFilteredImages","is_relabel","formatDropdownValue","Array","isArray","CapturePhotos","selectedCamera","setSelectedCamera","CameraSelector","availableCameras","useCameras","items","Dropdown","newSelectedCamera","CapturedImagesContainer","filteredImages","imageCount","overflow","borderColor","arr","when","UploadPhotos","files","formData","FormData","append","accept","multiple","gridGap","justifyItems","PartDetails","gridColumnGap","LeftPanel","description","setDescription","gridColumn","fontSize","TextArea","hasPartId","dismissible","RightPanel","path","Tab","pathname","activeIndex","Menu","pointing","requestLocationsFailure","Locations","getLocationsSuccess","LocationRegister","coordinates","setCoordinates","Divider","paddingTop","minHeight","newLocation","postLocationSuccess","LocationDetails","confidenceLevel","relabelImages","setJudgedImageList","partItems","isPartCorrect","filteredPartItems","selectedPartItem","setSelectedPartItem","maxHeight","truncated","RadioGroup","checkedValue","onCheckedValueChange","next","judgedImageList","selectedPartId","borderWidth","borderStyle","ManualIdentification","projectData","confidenceLevelRange","setConfidenceLevelRange","ascend","setAscend","sortRef","sorted","prevIsAscend","setRelabelImages","confidence","reverse","sort","b","columnGap","allowCross","handle","dragging","restProps","prefixCls","overlay","placement","Parts","partsAPI","imagesAPI","all","spread","partsRes","wrap","right","bottom","Item","PartIdentification","maxImage","setIsTestModel","useDropdownItems","cameraLoading","dropDownCameras","setSelectedCameraById","partLoading","dropDownParts","selectedParts","setSelectedPartsById","locationLoading","dropDownLocations","selectedLocations","setSelectedLocationById","maxImgCountError","setMaxImgCountError","setData","keyName","accracyRangeDisabled","moduleName","setSelectedModuleItem","isMultiple","inline","isProjectEmpty","headers","thunkPostProject","TestModelButton","flexDirection","cancelButton","confirmButton","theme","siteVariables","colorScheme","brand","foreground","originItems","dropDownItems","setDropDownItems","selectedItem","setSelectedItem","finally","correspondedItems","reduce","acc","cur","correspondedItem","toString","ModuleSelector","ids","namespace","origin","Setting","useReducer","settingData","originSettingData","notEmpty","cannotUpdateOrSave","training_key","endpoint","paddingBottom","isSettingEmpty","requestConfig","iot_hub_connection_string","device_id","module_id","reload","settingDataId","PreviousProjectPanel","dropdownItems","setDropdownItems","customVisionProjectId","setCustomVisionProjectId","useProject","isProjectLoading","projectError","otherLoading","setOtherLoading","otherError","setOtherError","Object","entries","vertical","RootRouter","component","Breadcrumb","pathTitles","getTitle","textDecoration","NavItem","activeStyle","Segment","inverted","MainLayout","rows","gridRow","boxShadow","zIndex","TopNav","colors","background","shadow","foregroundHover","backgroundHover","borderHover","shadowHover","foregroundActive","backgroundActive","borderActive","shadowActive","foregroundFocus","backgroundFocus","borderFocus","shadowFocus","foregroundPressed","backgroundPressed","borderPressed","shadowPressed","foregroundDisabled","backgroundDisabled","borderDisabled","shadowDisabled","foreground1","foreground2","foreground3","foreground4","background1","background2","background3","background4","border1","border2","foregroundHover1","foregroundHover2","backgroundHover1","foregroundPressed1","foregroundActive1","foregroundActive2","backgroundActive1","borderActive1","borderActive2","foregroundFocus1","foregroundFocus2","foregroundFocus3","foregroundFocus4","backgroundFocus1","backgroundFocus2","backgroundFocus3","borderFocusWithin","borderFocus1","foregroundDisabled1","backgroundDisabled1","myTheme","mergeThemes","themes","teams","reactPlugin","appInsights","ai","initialize","instrumentationKey","browserHistory","ReactPlugin","ApplicationInsights","config","maxBatchInterval","disableFetchTracking","extensions","extensionConfig","identifier","loadAppInsights","TelemetryProvider","initialized","props","AppInsightsInstrumentationKey","Boolean","setState","after","Component","withRouter","withAITracking","App","setKey","Provider","className","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.527bae3d.chunk.js","sourcesContent":["import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport type { State } from '../State';\n\nexport type Project = {\n  isLoading: boolean;\n  trainingLog: string;\n  data: ProjectData;\n  inferenceMetrics: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n  };\n  trainingMetrics: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n  status: Status;\n  error: Error;\n};\n\nexport enum Status {\n  None = 'none',\n  WaitTraining = 'waitTraining',\n  FinishTraining = 'finishTraining',\n  TrainingFailed = 'trainingFailed',\n  StartInference = 'startInference',\n}\n\nexport type Consequence = {\n  precision: number;\n  recall: number;\n  mAP: number;\n};\n\nexport type ProjectData = {\n  id: number;\n  camera: any;\n  location: any;\n  parts: any[];\n  needRetraining: boolean;\n  accuracyRangeMin: number;\n  accuracyRangeMax: number;\n  maxImages: number;\n  modelUrl: string;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_PROJECT_REQUEST = 'GET_PROJECT_REQUEST';\nexport type GetProjectRequestAction = {\n  type: typeof GET_PROJECT_REQUEST;\n};\n\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\nexport type GetProjectSuccessAction = {\n  type: typeof GET_PROJECT_SUCCESS;\n  payload: {\n    project: ProjectData;\n  };\n};\n\nexport const GET_PROJECT_FAILED = 'GET_PROJECT_FAILED';\nexport type GetProjectFailedAction = {\n  type: typeof GET_PROJECT_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_LOG_REQUEST = 'GET_TRAINING_LOG_REQUEST';\nexport type GetTrainingLogRequesAction = {\n  type: typeof GET_TRAINING_LOG_REQUEST;\n};\n\nexport const GET_TRAINING_LOG_SUCCESS = 'GET_TRAINING_LOG_SUCCESS';\nexport type GetTrainingLogSuccessAction = {\n  type: typeof GET_TRAINING_LOG_SUCCESS;\n  payload: {\n    trainingLog: string;\n    newStatus: Status;\n  };\n};\n\nexport const GET_TRAINING_LOG_FAILED = 'GET_TRAINING_LOG_FAILED';\nexport type GetTrainingLogFailedAction = {\n  type: typeof GET_TRAINING_LOG_FAILED;\n  error: Error;\n};\n\nexport const GET_TRAINING_METRICS_REQUEST = 'GET_TRAINING_METRICS_REQUEST';\nexport type GetTrainingMetricsRequestAction = {\n  type: typeof GET_TRAINING_METRICS_REQUEST;\n};\n\nexport const GET_TRAINING_METRICS_SUCCESS = 'GET_TRAINING_METRICS_SUCCESS';\nexport type GetTrainingMetricsSuccessAction = {\n  type: typeof GET_TRAINING_METRICS_SUCCESS;\n  payload: {\n    prevConsequence: Consequence;\n    curConsequence: Consequence;\n  };\n};\n\nexport const GET_TRAINING_METRICS_FAILED = 'GET_TRAINING_METRICS_FAILED';\nexport type GetTrainingMetricsFailedAction = {\n  type: typeof GET_TRAINING_METRICS_FAILED;\n  error: Error;\n};\n\nexport const GET_INFERENCE_METRICS_REQUEST = 'GET_TRAINING_INFERENCE_REQUEST';\nexport type GetInferenceMetricsRequestAction = {\n  type: typeof GET_INFERENCE_METRICS_REQUEST;\n};\n\nexport const GET_INFERENCE_METRICS_SUCCESS = 'GET_INFERENCE_METRICS_SUCCESS';\nexport type GetInferenceMetricsSuccessAction = {\n  type: typeof GET_INFERENCE_METRICS_SUCCESS;\n  payload: {\n    successRate: number;\n    successfulInferences: number;\n    unIdetifiedItems: number;\n  };\n};\n\nexport const GET_INFERENCE_METRICS_FAILED = 'GET_INFERENCE_METRICS_FAILED';\nexport type GetInferenceMetricsFailedAction = {\n  type: typeof GET_INFERENCE_METRICS_FAILED;\n  error: Error;\n};\n\nexport const POST_PROJECT_REQUEST = 'POST_PROJECT_REQUEST';\nexport type PostProjectRequestAction = {\n  type: typeof POST_PROJECT_REQUEST;\n};\n\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\nexport type PostProjectSuccessAction = {\n  type: typeof POST_PROJECT_SUCCESS;\n};\n\nexport const POST_PROJECT_FALIED = 'POST_PROJECT_FALIED';\nexport type PostProjectFaliedAction = {\n  type: typeof POST_PROJECT_FALIED;\n  error: Error;\n};\n\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\nexport type DeleteProjectSuccessAction = {\n  type: typeof DELETE_PROJECT_SUCCESS;\n};\n\nexport const DELETE_PROJECT_FALIED = 'DELETE_PROJECT_FALIED';\nexport type DeleteProjectFaliedAction = {\n  type: typeof DELETE_PROJECT_FALIED;\n};\n\nexport const UPDATE_PROJECT_DATA = 'UPDATE_PROJECT_DATA';\nexport type UpdateProjectDataAction = {\n  type: typeof UPDATE_PROJECT_DATA;\n  payload: ProjectData;\n};\n\nexport const START_INFERENCE = 'START_INFERENCE';\nexport type StartInferenceAction = {\n  type: typeof START_INFERENCE;\n};\n\nexport const STOP_INFERENCE = 'STOP_INFERENCE';\nexport type StopInferenceAction = {\n  type: typeof STOP_INFERENCE;\n};\n\nexport type ProjectActionTypes =\n  | GetProjectRequestAction\n  | GetProjectSuccessAction\n  | GetProjectFailedAction\n  | GetTrainingLogRequesAction\n  | GetTrainingLogSuccessAction\n  | GetTrainingLogFailedAction\n  | PostProjectRequestAction\n  | PostProjectSuccessAction\n  | PostProjectFaliedAction\n  | DeleteProjectSuccessAction\n  | DeleteProjectFaliedAction\n  | UpdateProjectDataAction\n  | GetTrainingMetricsRequestAction\n  | GetTrainingMetricsSuccessAction\n  | GetTrainingMetricsFailedAction\n  | GetInferenceMetricsRequestAction\n  | GetInferenceMetricsSuccessAction\n  | GetInferenceMetricsFailedAction\n  | StartInferenceAction\n  | StopInferenceAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type ProjectThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, Action<string>>;\n","import { initialState } from '../State';\nimport {\n  PartActionTypes,\n  ADD_CAPTURED_IMAGE,\n  Part,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\n\nconst partReducer = (state = initialState.part, action: PartActionTypes): Part => {\n  switch (action.type) {\n    case ADD_CAPTURED_IMAGE:\n      return { ...state, capturedImages: [...state.capturedImages, action.payload.newCapturedImage] };\n    case UPDATE_CAPTURED_IMAGES:\n      return { ...state, capturedImages: action.payload.capturedImages };\n    default:\n      return state;\n  }\n};\n\ntype PartReducerType = typeof partReducer;\nconst checkIfImagesCountIsValidToTrain = (reducer: PartReducerType) => (\n  state = initialState.part,\n  action: PartActionTypes,\n): Part => {\n  const newState = reducer(state, action);\n  const isValid = newState.capturedImages.filter((image) => image.labels).length >= 15;\n  return { ...newState, isValid };\n};\n\nexport default checkIfImagesCountIsValidToTrain(partReducer);\n","// * Request Operation\nexport const REQUEST_ANNOTATION_FAILURE = 'REQUEST_ANNOTATION_FAILURE';\nexport type RequestAnnotationSuccessAction = { type: typeof REQUEST_ANNOTATION_SUCCESS; payload: any };\nexport const REQUEST_ANNOTATION_SUCCESS = 'REQUEST_ANNOTATION_SUCCESS';\nexport type RequestAnnotationFailureAction = { type: typeof REQUEST_ANNOTATION_FAILURE };\n\n// * Store Operation\nexport const CREATE_ANNOTATION = 'CREATE_ANNOTATION';\nexport type CreateAnnotationAction = { type: typeof CREATE_ANNOTATION; payload: { annotation: Annotation } };\nexport const UPDATE_CREATING_ANNOTATION = 'UPDATE_CREATING_ANNOTATION';\nexport type UpdateCreatingAnnotationAction = {\n  type: typeof UPDATE_CREATING_ANNOTATION;\n  payload: { updater: (annotation: Annotation) => Annotation };\n};\nexport const UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nexport type UpdateAnnotationAction = {\n  type: typeof UPDATE_ANNOTATION;\n  payload: { annotation: Annotation; index: number };\n};\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport type RemoveAnnotationAction = {\n  type: typeof REMOVE_ANNOTATION;\n  payload: { index: number };\n};\nexport const RESET_ANNOTATION = 'RESET_ANNOTATION';\nexport type ResetAnnotationAction = {\n  type: typeof RESET_ANNOTATION;\n};\n\nexport type AnnotationAction =\n  | RequestAnnotationSuccessAction\n  | RequestAnnotationFailureAction\n  | CreateAnnotationAction\n  | UpdateCreatingAnnotationAction\n  | UpdateAnnotationAction\n  | RemoveAnnotationAction\n  | ResetAnnotationAction;\n\nexport type Position2D = {\n  x: number;\n  y: number;\n};\nexport type BoxLabel = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\nexport type Size2D = { width: number; height: number };\nexport type Annotation = {\n  label: BoxLabel;\n  attribute: string;\n  annotationState: AnnotationState;\n};\n\nexport enum AnnotationState {\n  Empty = 'Empty',\n  P1Added = 'P1Added',\n  Finish = 'Finish',\n}\n\nexport enum LabelingCursorStates {\n  default = 'default',\n  pointer = 'pointer',\n  crosshair = 'crosshair',\n  neswResize = 'nesw-resize',\n  nwseResize = 'nwse-resize',\n}\nexport interface Box2dComponentProps {\n  workState: WorkState;\n  scale: number;\n  onSelect: Function;\n  annotation: Annotation;\n  annotationIndex: number;\n  selected: boolean;\n  visible?: boolean;\n  dispatch: any;\n  changeCursorState?: (cursorType?: LabelingCursorStates) => void;\n  // instanceID: number;\n}\nexport type BoxObject = {\n  init: () => Annotation;\n  createWithPoint: (point: Position2D, attribute: string) => Annotation;\n  add: (point: Position2D, arg1: Annotation) => Annotation;\n  setVerticesToValidValue: (arg0: Annotation) => Annotation;\n  setVerticesToInt: (arg0: Annotation) => Annotation;\n  setVerticesPointsOrder: (arg0: Annotation) => Annotation;\n};\n\nexport enum WorkState {\n  Creating = 'Creating',\n  Selecting = 'Selecting',\n  None = 'None',\n}\n\nexport enum LabelingType {\n  SingleAnnotation = 0,\n  MultiAnnotation = 1,\n}\n","import { Annotation } from './labelingPage/labelingPageTypes';\nimport { Camera } from './camera/cameraTypes';\nimport { Part } from './part/partTypes';\nimport { Location } from './location/locationTypes';\nimport { Project, Status } from './project/projectTypes';\nimport { LabelImage } from './image/imageTypes';\n\nexport interface State {\n  dialogIsOpen: boolean;\n  cameras: Camera[];\n  locations: Location[];\n  labelingPageState: LabelingPageState;\n  part: Part;\n  project: Project;\n  images: LabelImage[];\n}\n\nexport type LabelingPageState = { annotations: Annotation[] };\n\nexport const initialState: State = {\n  dialogIsOpen: false,\n  cameras: [],\n  locations: [],\n  images: [],\n  labelingPageState: { annotations: [] },\n  part: {\n    capturedImages: [],\n    isValid: true,\n  },\n  project: {\n    isLoading: false,\n    data: {\n      id: null,\n      camera: null,\n      location: null,\n      parts: [],\n      needRetraining: true,\n      accuracyRangeMin: 60,\n      accuracyRangeMax: 80,\n      maxImages: 50,\n      modelUrl: '',\n    },\n    trainingMetrics: {\n      prevConsequence: null,\n      curConsequence: null,\n    },\n    inferenceMetrics: {\n      successRate: null,\n      successfulInferences: null,\n      unIdetifiedItems: null,\n    },\n    status: Status.None,\n    error: null,\n    trainingLog: '',\n  },\n};\n","import {\n  GET_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  POST_CAMERA_SUCCESS,\n  Camera,\n  CameraAction,\n  DELETE_CAMERA_SUCCESS,\n} from './cameraTypes';\nimport { initialState } from '../State';\n\nconst camerasReducer = (state = initialState.cameras, action: CameraAction): Camera[] => {\n  switch (action.type) {\n    case GET_CAMERA_SUCCESS:\n      return action.payload;\n    case REQUEST_CAMERA_FAILURE:\n      return state;\n    case POST_CAMERA_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_CAMERA_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default camerasReducer;\n","// Describing the shape of the camera's slice of state\nexport type Camera = {\n  id?: number;\n  name: string;\n  rtsp: string;\n  model_name: string;\n  area?: string;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_CAMERA_SUCCESS = 'GET_CAMERA_SUCCESS';\nexport const POST_CAMERA_SUCCESS = 'POST_CAMERA_SUCCESS';\nexport const DELETE_CAMERA_SUCCESS = 'DELETE_CAMERA_SUCCESS';\nexport const REQUEST_CAMERA_FAILURE = 'REQUEST_CAMERA_FAILURE';\n\nexport type GetCamerasSuccess = { type: typeof GET_CAMERA_SUCCESS; payload: Camera[] };\nexport type PostCameraSuccess = { type: typeof POST_CAMERA_SUCCESS; payload: Camera };\nexport type DeleteCameraSuccess = { type: typeof DELETE_CAMERA_SUCCESS; payload: { id: number } };\nexport type RequestCamerasFailure = { type: typeof REQUEST_CAMERA_FAILURE };\n\nexport type CameraAction =\n  | GetCamerasSuccess\n  | PostCameraSuccess\n  | DeleteCameraSuccess\n  | RequestCamerasFailure;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { LabelImage } from '../image/imageTypes';\n\n// Describing the shape of the chat's slice of state\nexport type Part = { capturedImages: LabelImage[]; isValid: boolean };\n\n// Describing the different ACTION NAMES available\nexport const ADD_CAPTURED_IMAGE = 'ADD_CAPTURED_IMAGE';\n\nexport type AddCapturedImageAction = {\n  type: typeof ADD_CAPTURED_IMAGE;\n  payload: {\n    newCapturedImage: LabelImage;\n  };\n};\n\nexport const UPDATE_CAPTURED_IMAGES = 'UPDATE_CAPTURED_IMAGES';\n\nexport type UpdateCapturedImageAction = {\n  type: typeof UPDATE_CAPTURED_IMAGES;\n  payload: {\n    capturedImages: LabelImage[];\n  };\n};\n\nexport type PartActionTypes = AddCapturedImageAction | UpdateCapturedImageAction;\n\n// Describing the different THUNK ACTION NAMES available\nexport type PartThunk<ReturnType = void> = ThunkAction<ReturnType, Part, unknown, Action<string>>;\n","import {\n  AnnotationState,\n  UPDATE_ANNOTATION,\n  REQUEST_ANNOTATION_FAILURE,\n  REQUEST_ANNOTATION_SUCCESS,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  REMOVE_ANNOTATION,\n  AnnotationAction,\n  RESET_ANNOTATION,\n} from './labelingPageTypes';\nimport { initialState, LabelingPageState } from '../State';\n\nconst labelingPageStateReducer = (\n  state = initialState.labelingPageState,\n  action: AnnotationAction,\n): LabelingPageState => {\n  const newState = state;\n  switch (action.type) {\n    case REQUEST_ANNOTATION_SUCCESS:\n      newState.annotations = action.payload.annotations;\n      break;\n    case REQUEST_ANNOTATION_FAILURE:\n      break;\n    case CREATE_ANNOTATION:\n      newState.annotations.push(action.payload.annotation);\n      break;\n    case UPDATE_CREATING_ANNOTATION:\n      {\n        const creatingAnnotation = action.payload.updater(\n          newState.annotations[newState.annotations.length - 1],\n        );\n\n        if (creatingAnnotation.annotationState === AnnotationState.Finish) {\n          if (\n            (creatingAnnotation.label.x1 | 0) === (creatingAnnotation.label.x2 | 0) &&\n            (creatingAnnotation.label.y1 | 0) === (creatingAnnotation.label.y2 | 0)\n          ) {\n            newState.annotations.pop();\n          } else {\n            newState.annotations[newState.annotations.length - 1] = creatingAnnotation;\n            newState.annotations = [...newState.annotations];\n          }\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION:\n      newState.annotations[action.payload.index] = action.payload.annotation;\n      break;\n    case REMOVE_ANNOTATION:\n      newState.annotations = newState.annotations\n        .slice(0, action.payload.index)\n        .concat(newState.annotations.slice(action.payload.index + 1));\n      break;\n    case RESET_ANNOTATION:\n      newState.annotations = initialState.labelingPageState.annotations;\n      break;\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport default labelingPageStateReducer;\n","import {\n  GET_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  POST_LOCATION_SUCCESS,\n  Location,\n  LocationAction,\n} from './locationTypes';\nimport { initialState } from '../State';\n\nconst locationsReducer = (state = initialState.locations, action: LocationAction): Location[] => {\n  switch (action.type) {\n    case GET_LOCATION_SUCCESS:\n      return action.payload;\n    case REQUEST_LOCATION_FAILURE:\n      return state;\n    case POST_LOCATION_SUCCESS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default locationsReducer;\n","// Describing the shape of the loaction's slice of state\nexport type Location = {\n  id?: number;\n  name: string;\n  coordinates: string;\n  description: string;\n  projectId?: number;\n  is_demo: boolean;\n};\n\n// Describing the different ACTION NAMES available\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const REQUEST_LOCATION_FAILURE = 'REQUEST_LOCATION_FAILURE';\nexport const POST_LOCATION_SUCCESS = 'POST_LOCATION_SUCCESS';\n\nexport type GetLocationsSuccess = { type: typeof GET_LOCATION_SUCCESS; payload: Location[] };\nexport type RequestLocationsFailure = { type: typeof REQUEST_LOCATION_FAILURE };\nexport type PostLocationSuccess = { type: typeof POST_LOCATION_SUCCESS; payload: Location };\n\nexport type LocationAction = GetLocationsSuccess | RequestLocationsFailure | PostLocationSuccess;\n","import {\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n  DialogIsOpenAction,\n} from './dialogIsOpenTypes';\nimport { initialState } from '../State';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import { initialState } from '../State';\nimport {\n  Project,\n  ProjectActionTypes,\n  GET_PROJECT_SUCCESS,\n  GET_PROJECT_FAILED,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FALIED,\n  GET_PROJECT_REQUEST,\n  UPDATE_PROJECT_DATA,\n  POST_PROJECT_REQUEST,\n  GET_TRAINING_LOG_REQUEST,\n  GET_TRAINING_LOG_SUCCESS,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GET_TRAINING_METRICS_REQUEST,\n  GET_TRAINING_METRICS_SUCCESS,\n  GET_TRAINING_METRICS_FAILED,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GET_INFERENCE_METRICS_FAILED,\n} from './projectTypes';\n\nconst projectReducer = (state = initialState.project, action: ProjectActionTypes): Project => {\n  switch (action.type) {\n    case GET_PROJECT_REQUEST:\n      return { ...state, isLoading: true, error: null };\n    case GET_PROJECT_SUCCESS:\n      return { ...state, isLoading: false, data: { ...action.payload.project }, error: null };\n    case GET_PROJECT_FAILED:\n      return { ...state, isLoading: false, error: action.error };\n    case POST_PROJECT_REQUEST:\n      return { ...state, isLoading: true };\n    case POST_PROJECT_SUCCESS:\n      return { ...state, isLoading: false };\n    case POST_PROJECT_FALIED:\n      return { ...state, isLoading: false, error: action.error };\n    case DELETE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: {\n          id: null,\n          camera: null,\n          location: null,\n          parts: [],\n          needRetraining: true,\n          accuracyRangeMin: 60,\n          accuracyRangeMax: 80,\n          maxImages: 50,\n          modelUrl: '',\n        },\n        inferenceMetrics: {\n          successRate: 0,\n          successfulInferences: 0,\n          unIdetifiedItems: 0,\n        },\n        trainingMetrics: {\n          curConsequence: null,\n          prevConsequence: null,\n        },\n        trainingLog: '',\n        status: Status.None,\n        error: null,\n      };\n    case DELETE_PROJECT_FALIED:\n      return { ...state };\n    case UPDATE_PROJECT_DATA:\n      return { ...state, data: action.payload };\n    case GET_TRAINING_LOG_REQUEST:\n      return {\n        ...state,\n      };\n    case GET_TRAINING_LOG_SUCCESS:\n      return {\n        ...state,\n        trainingLog: action.payload.trainingLog,\n        status: action.payload.newStatus,\n      };\n    case GET_TRAINING_LOG_FAILED:\n      return {\n        ...state,\n        trainingLog: '',\n        data: { ...state.data },\n        status: Status.TrainingFailed,\n        error: action.error,\n      };\n    case GET_TRAINING_METRICS_REQUEST:\n      return state;\n    case GET_TRAINING_METRICS_SUCCESS:\n      return {\n        ...state,\n        trainingMetrics: action.payload,\n        status: Status.StartInference,\n      };\n    case GET_TRAINING_METRICS_FAILED:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case GET_INFERENCE_METRICS_REQUEST:\n      return state;\n    case GET_INFERENCE_METRICS_SUCCESS:\n      return { ...state, inferenceMetrics: action.payload };\n    case GET_INFERENCE_METRICS_FAILED:\n      return { ...state, error: action.error };\n    default:\n      return { ...state };\n  }\n};\n\nexport default projectReducer;\n","import {\n  GET_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  POST_LABEL_IMAGE_SUCCESS,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  LabelImageAction,\n  LabelImage,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n} from './imageTypes';\nimport { initialState } from '../State';\n\nconst labelImagesReducer = (state = initialState.images, action: LabelImageAction): LabelImage[] => {\n  switch (action.type) {\n    case GET_LABEL_IMAGE_SUCCESS:\n      return action.payload;\n    case REQUEST_LABEL_IMAGE_FAILURE:\n      return state;\n    case POST_LABEL_IMAGE_SUCCESS:\n      return state.concat(action.payload);\n    case DELETE_LABEL_IMAGE_SUCCESS: {\n      const idx = state.findIndex((e) => e.id === action.payload.id);\n      if (idx !== -1) return state.slice(0, idx).concat(state.slice(idx + 1));\n      return state;\n    }\n    case UPDATE_LABEL_IMAGE_ANNOTATION: {\n      const newState = [...state];\n      const updatedImageIdx = newState.findIndex((e) => e.id === action.payload.id);\n      newState[updatedImageIdx] = {\n        ...newState[updatedImageIdx],\n        labels: action.payload.labels,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default labelImagesReducer;\n","// Describe the shape of the labelImage's slice of state\nexport type LabelImage = {\n  id?: number;\n  image: string;\n  labels: string;\n  part: string;\n  is_relabel: boolean;\n  confidence: number;\n};\n\n// Describe the different ACTION NAMES available\nexport const GET_LABEL_IMAGE_SUCCESS = 'GET_LABEL_IMAGE_SUCCESS';\nexport const POST_LABEL_IMAGE_SUCCESS = 'POST_LABEL_IMAGE_SUCCESS';\nexport const DELETE_LABEL_IMAGE_SUCCESS = 'DELETE_LABEL_IMAGE_SUCCESS';\nexport const REQUEST_LABEL_IMAGE_FAILURE = 'REQUEST_LABEL_IMAGE_FAILURE';\nexport const UPDATE_LABEL_IMAGE_ANNOTATION = 'UPDATE_LABEL_IMAGE_ANNOTATION';\n\nexport type GetLabelImagesSuccess = { type: typeof GET_LABEL_IMAGE_SUCCESS; payload: LabelImage[] };\nexport type PostLabelImageSuccess = { type: typeof POST_LABEL_IMAGE_SUCCESS; payload: LabelImage };\nexport type DeleteLabelImageSuccess = { type: typeof DELETE_LABEL_IMAGE_SUCCESS; payload: { id: number } };\nexport type RequestLabelImagesFailure = { type: typeof REQUEST_LABEL_IMAGE_FAILURE };\nexport type UpdateLabelImageAnnotation = {\n  type: typeof UPDATE_LABEL_IMAGE_ANNOTATION;\n  payload: { id: number; labels: any };\n};\n\nexport type LabelImageAction =\n  | GetLabelImagesSuccess\n  | PostLabelImageSuccess\n  | DeleteLabelImageSuccess\n  | RequestLabelImagesFailure\n  | UpdateLabelImageAnnotation;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport camerasReducer from './camera/cameraReducer';\nimport partReducer from './part/partReducer';\nimport labelingPageStateReducer from './labelingPage/labelingPageReducer';\nimport locationsReducer from './location/locationReducer';\nimport dialogIsOpenReducer from './dialog/dialogIsOpenReducer';\nimport projectReducer from './project/projectReducer';\nimport labelImagesReducer from './image/imageReducer';\n\nconst rootReducer = combineReducers({\n  cameras: camerasReducer,\n  locations: locationsReducer,\n  part: partReducer,\n  labelingPageState: labelingPageStateReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  project: projectReducer,\n  images: labelImagesReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State } from './State';\nimport { persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import React, { FC, memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex, Text, Image } from '@fluentui/react-northstar';\n\ntype BgImgStyle = {\n  backgroundSize?: '60%';\n  backgroundPosition?: 'center';\n  backgroundRepeat?: 'no-repeat';\n};\ninterface ImageLinkProps {\n  to?: string;\n  imgSrc?: string;\n  defaultSrc?: string;\n  bgImgSrc?: string;\n  label?: string;\n  imgPadding?: string;\n  width: string;\n  height?: string;\n  bgImgStyle?: BgImgStyle;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst ImageLink: FC<ImageLinkProps> = ({\n  to = '',\n  imgSrc,\n  defaultSrc,\n  bgImgSrc,\n  label = '',\n  imgPadding = '0.625em',\n  width = '6.25em',\n  height = '6.25em',\n  bgImgStyle,\n  pointerCursor = false,\n  onClick,\n}) => {\n  return (\n    <Flex column styles={{ width }}>\n      {to === '' ? (\n        <div style={{ height }} onClick={onClick}>\n          <Image\n            src={imgSrc ?? defaultSrc}\n            styles={{\n              padding: imgPadding,\n              height: '100%',\n              objectFit: 'contain',\n              backgroundImage: `url(${bgImgSrc})`,\n              cursor: pointerCursor ? 'pointer' : 'default',\n              ...bgImgStyle,\n            }}\n          />\n        </div>\n      ) : (\n        <Link to={to}>\n          <div style={{ height }} onClick={onClick}>\n            <Image\n              src={imgSrc ?? defaultSrc}\n              styles={{\n                padding: imgPadding,\n                height: '100%',\n                objectFit: 'contain',\n                backgroundImage: `url(${bgImgSrc})`,\n                ...bgImgStyle,\n              }}\n            />\n          </div>\n        </Link>\n      )}\n      <Text align=\"center\">{label}</Text>\n    </Flex>\n  );\n};\n\nexport default memo(ImageLink);\n","import React, { FC } from 'react';\nimport { Text, Flex } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ImageLink from '../components/ImageLink';\nimport { openDialog } from '../store/dialog/dialogIsOpenActions';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text size=\"larger\" weight=\"semibold\">\n        Hello User!\n      </Text>\n      <Text>\n      </Text>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        GET STARTED:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/location-filled.png\"\n          to=\"/locations/register\"\n          label=\"Register a new Location\"\n          width=\"6.25em\"\n        />\n        <ImageLink\n          imgSrc=\"/icons/camera-filled.png\"\n          to=\"/cameras\"\n          label=\"Register a new Camera\"\n          width=\"6.25em\"\n          imgPadding=\"0.625em 0.1875em 0.625em 0.1875em\"\n          onClick={(): void => {\n            dispatch(openDialog());\n          }}\n        />\n        <ImageLink\n          imgSrc=\"/icons/part-filled.png\"\n          to=\"/parts/detail\"\n          label=\"Register a new Part\"\n          width=\"6.25em\"\n        />\n      </Flex>\n      <Text color=\"white\" styles={{ backgroundColor: '#373644', padding: '0.125em 0.125em 0.125em 0.625em' }}>\n        SELECT FROM THE FOLLOWING TASKS:\n      </Text>\n      <Flex gap=\"gap.large\">\n        <ImageLink\n          imgSrc=\"/icons/doubleCube.png\"\n          to=\"/partIdentification\"\n          label=\"Identify Parts\"\n          width=\"6.25em\"\n        />\n        <ImageLink imgSrc=\"/icons/defects.png\" to=\"/\" label=\"Identify Defects\" width=\"6.25em\" />\n        <ImageLink\n          imgSrc=\"/icons/manual-filled.png\"\n          to=\"/manual\"\n          label=\"Identify items manually\"\n          width=\"6.25em\"\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import { OpenDialog, CloseDialog, OPEN_DIALOG, CLOSE_DIALOG } from './dialogIsOpenTypes';\n\nexport const openDialog = (): OpenDialog => ({ type: OPEN_DIALOG });\nexport const closeDialog = (): CloseDialog => ({ type: CLOSE_DIALOG });\n","import axios from 'axios';\nimport {\n  GET_CAMERA_SUCCESS,\n  POST_CAMERA_SUCCESS,\n  REQUEST_CAMERA_FAILURE,\n  GetCamerasSuccess,\n  RequestCamerasFailure,\n  PostCameraSuccess,\n  Camera,\n  DELETE_CAMERA_SUCCESS,\n  DeleteCameraSuccess,\n} from './cameraTypes';\n\nconst getCamerasSuccess = (data: Camera[]): GetCamerasSuccess => ({\n  type: GET_CAMERA_SUCCESS,\n  payload: data,\n});\n\nconst deleteCameraSuccess = (id: number): DeleteCameraSuccess => ({\n  type: DELETE_CAMERA_SUCCESS,\n  payload: { id },\n});\n\nconst requestCamerasFailure = (error: any): RequestCamerasFailure => {\n  console.error(error);\n  return { type: REQUEST_CAMERA_FAILURE };\n};\n\nconst postCameraSuccess = (data: Camera): PostCameraSuccess => ({\n  type: POST_CAMERA_SUCCESS,\n  payload: data,\n});\n\nexport const getCameras = () => (dispatch): Promise<void> => {\n  return axios('/api/cameras/')\n    .then(({ data }) => {\n      dispatch(getCamerasSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const postCamera = (newCamera: Camera) => (dispatch): Promise<void> => {\n  return axios('/api/cameras/', {\n    method: 'POST',\n    data: newCamera,\n  })\n    .then(({ data }) => {\n      dispatch(postCameraSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n\nexport const deleteCamera = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/cameras/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteCameraSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestCamerasFailure(err));\n    });\n};\n","import React, { FC } from 'react';\nimport { Button, AddIcon } from '@fluentui/react-northstar';\n\ninterface AddButtonProps {\n  onClick?: () => void;\n}\nconst AddButton: FC<AddButtonProps> = ({ onClick }) => (\n  <Button\n    primary\n    fluid\n    circular\n    content={<AddIcon size=\"largest\" circular />}\n    styles={{ width: '6em', height: '6em' }}\n    onClick={onClick}\n  />\n);\n\nexport default AddButton;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text, Dialog, Input, Grid, Button } from '@fluentui/react-northstar';\n\nimport { postCamera, getCameras } from '../store/camera/cameraActions';\nimport ImageLink from '../components/ImageLink';\nimport { State } from '../store/State';\nimport { closeDialog, openDialog } from '../store/dialog/dialogIsOpenActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport AddButton from '../components/AddButton';\n\nconst Cameras: FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { dialogIsOpen, cameras } = useSelector<State, { dialogIsOpen: boolean; cameras: Camera[] }>(\n    (state) => ({ dialogIsOpen: state.dialogIsOpen, cameras: state.cameras.filter((e) => !e.is_demo) }),\n  );\n\n  const [name, setName] = useState<string>('');\n  const [rtsp, setRtsp] = useState<string>('');\n  const [model_name, setModel_name] = useState<string>('');\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {cameras.map((camera, i) => (\n          <ImageLink\n            key={i}\n            to={`/cameras/detail?name=${camera.name}`}\n            defaultSrc=\"/icons/Play.png\"\n            bgImgSrc=\"/icons/defaultCamera.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            bgImgStyle={{\n              backgroundSize: '60%',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n            }}\n            label={camera.name}\n          />\n        ))}\n      </Grid>\n      <Dialog\n        styles={{ width: '20%', height: '40%', padding: 0, display: 'flex' }}\n        open={dialogIsOpen}\n        trigger={\n          <div style={{ alignSelf: 'flex-end' }}>\n            <AddButton\n              onClick={(): void => {\n                dispatch(openDialog());\n              }}\n            />\n          </div>\n        }\n        content={\n          <div\n            style={{\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'column',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Text size=\"larger\" weight=\"semibold\">\n              Add Camera\n            </Text>\n            <div\n              style={{\n                display: 'flex',\n                flexFlow: 'column',\n                height: '50%',\n                justifyContent: 'space-around',\n              }}\n            >\n              <Input\n                placeholder=\"Name\"\n                value={name}\n                onChange={(_, newProps): void => setName(newProps.value)}\n              />\n\n              <Input\n                placeholder=\"RTSP URL\"\n                value={rtsp}\n                onChange={(_, newProps): void => setRtsp(newProps.value)}\n              />\n              <Input\n                placeholder=\"Model Name\"\n                value={model_name}\n                onChange={(_, newProps): void => setModel_name(newProps.value)}\n              />\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', width: '100%' }}>\n              <Button\n                primary\n                content=\"Submit\"\n                disabled={name === '' || rtsp === '' || model_name === ''}\n                onClick={(): void => {\n                  dispatch(postCamera({ name, rtsp, model_name, is_demo: false }));\n                  setName('');\n                  setRtsp('');\n                  setModel_name('');\n                  dispatch(closeDialog());\n                }}\n              />\n              <Button\n                content=\"Cancel\"\n                onClick={(): void => {\n                  dispatch(closeDialog());\n                }}\n              />\n            </div>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Cameras;\n","import React, { FC, useState, CSSProperties } from 'react';\nimport { Flex, Text, Button, Dialog } from '@fluentui/react-northstar';\n\n/**\n * @param trigger Trigger Button\n * @param primaryStyles CSS style of Confirm Button\n */\ninterface FluentUIStylesProperties extends CSSProperties {\n  [':hover']: any;\n  [':active']: any;\n}\n\ninterface ConfirmDialogProps {\n  trigger: JSX.Element;\n  onConfirm: () => void;\n  primaryStyles: FluentUIStylesProperties;\n  content: string;\n}\nconst ConfirmDialog: FC<ConfirmDialogProps> = ({ trigger, onConfirm, primaryStyles, content }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '20em', padding: '0.5em' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      footer={\n        <Flex column gap=\"gap.large\">\n          <Text size=\"large\" align=\"center\">\n            {content}\n          </Text>\n          <Flex space=\"around\">\n            <Button primary content=\"Confirm\" styles={primaryStyles} onClick={onConfirm} />\n            <Button content=\"Cancel\" onClick={(): void => setOpen(false)} />\n          </Flex>\n        </Flex>\n      }\n    />\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { FC, memo } from 'react';\nimport { Flex, Text, Grid, Button } from '@fluentui/react-northstar';\nimport { useDispatch } from 'react-redux';\n\nimport ConfirmDialog from '../ConfirmDialog';\nimport ImageLink from '../ImageLink';\nimport { deleteCamera } from '../../store/camera/cameraActions';\n\ninterface CameraDetailInfoProps {\n  name: string;\n  rtsp: string;\n  modelName: string;\n  id: number;\n}\nconst CameraDetailInfo: FC<CameraDetailInfoProps> = ({ id, name, rtsp, modelName }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex styles={{ padding: '1em 2em' }} column space=\"between\">\n      <Grid columns=\"2\" styles={{ gap: '3em' }}>\n        <Text size=\"larger\" weight=\"semibold\">\n          Details\n        </Text>\n        <ImageLink defaultSrc=\"/icons/defaultCamera.png\" width=\"100px\" height=\"100px\" />\n        <Flex column gap=\"gap.small\">\n          <Text size=\"large\" content={'Name:'} />\n          <Text size=\"large\" content={'RTSP Url:'} />\n          <Text size=\"large\" content={'Model:'} />\n        </Flex>\n        <Flex column gap=\"gap.medium\">\n          <Text size=\"large\" content={name} />\n          <Text size=\"large\" content={rtsp} />\n          <Text size=\"large\" content={modelName} />\n        </Flex>\n      </Grid>\n      <ConfirmDialog\n        trigger={\n          <Button\n            primary\n            content=\"Delete Camera\"\n            styles={{\n              backgroundColor: '#C4314B',\n              ':hover': { backgroundColor: '#A72037' },\n              ':active': { backgroundColor: '#8E192E' },\n            }}\n          />\n        }\n        content=\"Delete Camera\"\n        primaryStyles={{\n          backgroundColor: '#C4314B',\n          ':hover': { backgroundColor: '#A72037' },\n          ':active': { backgroundColor: '#8E192E' },\n        }}\n        onConfirm={(): void => {\n          dispatch(deleteCamera(id));\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default memo(CameraDetailInfo);\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback, delay): void => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick(): void {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return (): void => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import Axios from 'axios';\nimport {\n  ProjectThunk,\n  GetProjectSuccessAction,\n  GET_PROJECT_SUCCESS,\n  GetProjectFailedAction,\n  GET_PROJECT_FAILED,\n  PostProjectSuccessAction,\n  POST_PROJECT_SUCCESS,\n  POST_PROJECT_FALIED,\n  PostProjectFaliedAction,\n  DeleteProjectSuccessAction,\n  DELETE_PROJECT_SUCCESS,\n  DeleteProjectFaliedAction,\n  DELETE_PROJECT_FALIED,\n  ProjectData,\n  PostProjectRequestAction,\n  POST_PROJECT_REQUEST,\n  GetProjectRequestAction,\n  GET_PROJECT_REQUEST,\n  UpdateProjectDataAction,\n  UPDATE_PROJECT_DATA,\n  GetTrainingLogRequesAction,\n  GET_TRAINING_LOG_REQUEST,\n  GetTrainingLogSuccessAction,\n  GET_TRAINING_LOG_SUCCESS,\n  GetTrainingLogFailedAction,\n  GET_TRAINING_LOG_FAILED,\n  Status,\n  GetTrainingMetricsRequestAction,\n  GET_TRAINING_METRICS_REQUEST,\n  GetTrainingMetricsSuccessAction,\n  GET_TRAINING_METRICS_SUCCESS,\n  GetTrainingMetricsFailedAction,\n  GET_TRAINING_METRICS_FAILED,\n  Consequence,\n  GetInferenceMetricsRequestAction,\n  GET_INFERENCE_METRICS_REQUEST,\n  GET_INFERENCE_METRICS_SUCCESS,\n  GetInferenceMetricsSuccessAction,\n  GetInferenceMetricsFailedAction,\n  GET_INFERENCE_METRICS_FAILED,\n  StartInferenceAction,\n  START_INFERENCE,\n  STOP_INFERENCE,\n  StopInferenceAction,\n} from './projectTypes';\n\nconst getProjectRequest = (): GetProjectRequestAction => ({ type: GET_PROJECT_REQUEST });\nconst getProjectSuccess = (project: ProjectData): GetProjectSuccessAction => ({\n  type: GET_PROJECT_SUCCESS,\n  payload: { project },\n});\nconst getProjectFailed = (error: Error): GetProjectFailedAction => ({ type: GET_PROJECT_FAILED, error });\n\nconst getTrainingLogRequest = (): GetTrainingLogRequesAction => ({ type: GET_TRAINING_LOG_REQUEST });\nconst getTrainingLogSuccess = (trainingLog: string, newStatus: Status): GetTrainingLogSuccessAction => ({\n  type: GET_TRAINING_LOG_SUCCESS,\n  payload: {\n    trainingLog,\n    newStatus,\n  },\n});\nconst getTrainingStatusFailed = (error: Error): GetTrainingLogFailedAction => ({\n  type: GET_TRAINING_LOG_FAILED,\n  error,\n});\n\nconst postProjectRequest = (): PostProjectRequestAction => ({ type: POST_PROJECT_REQUEST });\nconst postProjectSuccess = (): PostProjectSuccessAction => ({ type: POST_PROJECT_SUCCESS });\nconst postProjectFail = (error: Error): PostProjectFaliedAction => ({ type: POST_PROJECT_FALIED, error });\n\nconst deleteProjectSuccess = (): DeleteProjectSuccessAction => ({ type: DELETE_PROJECT_SUCCESS });\nconst deleteProjectFailed = (): DeleteProjectFaliedAction => ({ type: DELETE_PROJECT_FALIED });\n\nconst getTrainingMetricsRequest = (): GetTrainingMetricsRequestAction => ({\n  type: GET_TRAINING_METRICS_REQUEST,\n});\nconst getTrainingMetricsSuccess = (\n  curConsequence: Consequence,\n  prevConsequence: Consequence,\n): GetTrainingMetricsSuccessAction => ({\n  type: GET_TRAINING_METRICS_SUCCESS,\n  payload: { prevConsequence, curConsequence },\n});\nconst getTrainingMetricsFailed = (error: Error): GetTrainingMetricsFailedAction => ({\n  type: GET_TRAINING_METRICS_FAILED,\n  error,\n});\n\nconst getInferenceMetricsRequest = (): GetInferenceMetricsRequestAction => ({\n  type: GET_INFERENCE_METRICS_REQUEST,\n});\nconst getInferenceMetricsSuccess = (\n  successRate: number,\n  successfulInferences: number,\n  unIdetifiedItems: number,\n): GetInferenceMetricsSuccessAction => ({\n  type: GET_INFERENCE_METRICS_SUCCESS,\n  payload: { successRate, successfulInferences, unIdetifiedItems },\n});\nconst getInferenceMetricsFailed = (error: Error): GetInferenceMetricsFailedAction => ({\n  type: GET_INFERENCE_METRICS_FAILED,\n  error,\n});\n\nexport const startInference = (): StartInferenceAction => ({\n  type: START_INFERENCE,\n});\n\nexport const stopInference = (): StopInferenceAction => ({\n  type: STOP_INFERENCE,\n});\n\nexport const updateProjectData = (projectData: ProjectData): UpdateProjectDataAction => ({\n  type: UPDATE_PROJECT_DATA,\n  payload: projectData,\n});\n\nexport const thunkGetProject = (isTestModel?: boolean): ProjectThunk => (dispatch): Promise<void> => {\n  dispatch(getProjectRequest());\n\n  const url = isTestModel === undefined ? '/api/projects/' : `/api/projects/?is_demo=${Number(isTestModel)}`;\n\n  return Axios.get(url)\n    .then(({ data }) => {\n      const project: ProjectData = {\n        id: data[0]?.id ?? null,\n        camera: parseInt(data[0]?.camera.split('/')[5], 10) ?? null,\n        location: parseInt(data[0]?.location.split('/')[5], 10) ?? null,\n        parts: data[0]?.parts.map((ele) => parseInt(ele.split('/')[5], 10)) ?? [],\n        modelUrl: data[0]?.download_uri ?? '',\n        needRetraining: data[0]?.needRetraining ?? true,\n        accuracyRangeMin: data[0]?.accuracyRangeMin ?? 60,\n        accuracyRangeMax: data[0]?.accuracyRangeMax ?? 80,\n        maxImages: data[0]?.maxImages ?? 50,\n      };\n      dispatch(getProjectSuccess(project));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(getProjectFailed(err));\n    });\n};\n\nexport const thunkPostProject = (\n  projectId,\n  selectedLocations,\n  selectedParts,\n  selectedCamera,\n  isTestModel,\n): ProjectThunk => (dispatch, getState): Promise<number> => {\n  const isProjectEmpty = projectId === null;\n  const url = isProjectEmpty ? `/api/projects/` : `/api/projects/${projectId}/`;\n\n  dispatch(postProjectRequest());\n\n  const projectData = getState().project.data;\n\n  return Axios(url, {\n    data: {\n      location: `http://localhost:8000/api/locations/${selectedLocations.id}/`,\n      parts: selectedParts.map((e) => `http://localhost:8000/api/parts/${e.id}/`),\n      camera: `http://localhost:8000/api/cameras/${selectedCamera.id}/`,\n      download_uri: projectData.modelUrl,\n      needRetraining: projectData.needRetraining,\n      accuracyRangeMin: projectData.accuracyRangeMin,\n      accuracyRangeMax: projectData.accuracyRangeMax,\n      maxImages: projectData.maxImages,\n    },\n    method: isProjectEmpty ? 'POST' : 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(({ data }) => {\n      dispatch(postProjectSuccess());\n      getTrain(data.id, isTestModel);\n      return data.id;\n    })\n    .catch((err) => {\n      dispatch(postProjectFail(err));\n    }) as Promise<number>;\n};\nconst getTrain = (projectId, isTestModel: boolean): void => {\n  const url = isTestModel ? `/api/projects/${projectId}/train?demo=True` : `/api/projects/${projectId}/train`;\n  Axios.get(url).catch((err) => console.error(err));\n};\n\nexport const thunkDeleteProject = (projectId): ProjectThunk => (dispatch): Promise<any> => {\n  return Axios.delete(`/api/projects/${projectId}/`)\n    .then(() => {\n      return dispatch(deleteProjectSuccess());\n    })\n    .catch((err) => {\n      alert(err);\n      dispatch(deleteProjectFailed());\n    });\n};\n\nexport const thunkGetTrainingLog = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getTrainingLogRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      if (data.status === 'failed') throw new Error(data.log);\n      else if (data.status === 'ok') dispatch(getTrainingLogSuccess('', Status.FinishTraining));\n      else dispatch(getTrainingLogSuccess(data.log, Status.WaitTraining));\n      return void 0;\n    })\n    .catch((err) => dispatch(getTrainingStatusFailed(err)));\n};\n\nexport const thunkGetTrainingMetrics = (projectId: number) => (dispacth): Promise<any> => {\n  dispacth(getTrainingMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/train_performance`)\n    .then(({ data }) => {\n      const curConsequence: Consequence = data.new\n        ? {\n            precision: data.new.precision,\n            recall: data.new.recall,\n            mAP: data.new.map,\n          }\n        : null;\n\n      const prevConsequence: Consequence = data.previous\n        ? {\n            precision: data.previous.precision,\n            recall: data.previous.recall,\n            mAP: data.previous.map,\n          }\n        : null;\n\n      return dispacth(getTrainingMetricsSuccess(curConsequence, prevConsequence));\n    })\n    .catch((err) => dispacth(getTrainingMetricsFailed(err)));\n};\n\nexport const thunkGetInferenceMetrics = (projectId: number) => (dispatch): Promise<any> => {\n  dispatch(getInferenceMetricsRequest());\n\n  return Axios.get(`/api/projects/${projectId}/export`)\n    .then(({ data }) => {\n      return dispatch(\n        getInferenceMetricsSuccess(data.success_rate, data.inference_num, data.unidentified_num),\n      );\n    })\n    .catch((err) => dispatch(getInferenceMetricsFailed(err)));\n};\n","import { useEffect, useState } from 'react';\n\n/**\n * Fetch the parts data from server\n */\nexport const useParts = (): any[] => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/parts/')\n      .then((res) => res.json())\n      .then((data) => {\n        setParts(data);\n        return void 0;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  return parts;\n};\n","import { useLocation } from 'react-router-dom';\n\n/**\n * Get query parameter in the route\n */\nexport const useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import { useState, useEffect, useRef } from 'react';\n\ntype ImageState = {\n  image: HTMLImageElement;\n  status: string;\n  size: { width: number; height: number };\n};\nconst defaultState: ImageState = {\n  image: undefined,\n  status: 'loading',\n  size: { width: 0, height: 0 },\n};\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nconst useImage = (url: string, crossOrigin: string): [HTMLImageElement, string, { width: number; height: number }] => {\n  const [imageState, setImageState] = useState<ImageState>(defaultState);\n  const { image, status, size } = imageState;\n\n  const prevUrl = usePrevious<string>(url);\n\n  useEffect(() => {\n    if (!url) return;\n\n    const img = document.createElement('img');\n\n    if (url !== prevUrl) {\n      setImageState((prev) => ({ ...prev, image: prev.image, status: 'loading' }));\n    }\n\n    const onload = (): void => {\n      setImageState({\n        image: img,\n        status: 'loaded',\n        size: { width: img.width, height: img.height },\n      });\n    };\n\n    const onerror = (): void => {\n      setImageState((prev) => ({ ...prev, image: undefined, status: 'failed' }));\n    };\n\n    img.addEventListener('load', onload);\n    img.addEventListener('error', onerror);\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n\n    img.src = url;\n\n    return (): void => {\n      img.removeEventListener('load', onload);\n      img.removeEventListener('error', onerror);\n    };\n  }, [url, crossOrigin, prevUrl]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status, size];\n};\n\nexport default useImage;\n","import React, { useEffect, useRef } from 'react';\nimport { Stage, Image as KonvaImage, Shape, Group, Line, Layer, Circle } from 'react-konva';\nimport Konva from 'konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport useImage from '../LabelingPage/util/useImage';\nimport { LiveViewProps, MaskProps, AOIBoxProps, AOILayerProps } from './LiveViewContainer.type';\n\nexport const LiveViewScene: React.FC<LiveViewProps> = ({ AOIs, setAOIs, visible }) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const stageRef = useRef(null);\n  const imgRef = useRef(null);\n  const layerRef = useRef(null);\n\n  const [imgEle, status, { width: imgWidth, height: imgHeight }] = useImage(\n    `http://${window.location.hostname}:5000/video_feed?inference=1`,\n    '',\n  );\n\n  /* The component need to support image with Content-type \"multipart/x-mixed-replace\",\n     which will keep updating the image data.\n     Keep updating the canvas by using Konva.Animation so we can see the latest image.\n  */\n  useEffect(() => {\n    const anim = new Konva.Animation(() => {}, layerRef.current);\n    anim.start();\n\n    return (): void => {\n      anim.stop();\n    };\n  }, []);\n\n  useEffect(() => {\n    const { width: divWidth, height: divHeight } = divRef.current.getBoundingClientRect();\n    stageRef.current.width(divWidth);\n    stageRef.current.height(divHeight);\n  }, []);\n\n  /* Fit Image to Stage */\n  useEffect(() => {\n    if (imgWidth !== 0 && imgHeight !== 0) {\n      const { width: stageWidth, height: stageHeight } = stageRef.current.size();\n      const scale = Math.min(stageWidth / imgWidth, stageHeight / imgHeight);\n      layerRef.current.scale({ x: scale, y: scale });\n\n      const offsetX = (stageWidth - imgWidth * scale) / 2;\n      const offsetY = (stageHeight - imgHeight * scale) / 2;\n      layerRef.current.position({ x: offsetX, y: offsetY });\n    }\n  }, [imgHeight, imgWidth]);\n\n  return (\n    <div ref={divRef} style={{ width: '100%', height: '100%' }}>\n      <Stage ref={stageRef}>\n        <Layer ref={layerRef}>\n          <KonvaImage image={imgEle} ref={imgRef} />\n          {\n            /* Render when image is loaded to prevent AOI boxes show in unscale size */\n            status === 'loaded' && (\n              <AOILayer\n                imgWidth={imgWidth}\n                imgHeight={imgHeight}\n                AOIs={AOIs}\n                setAOIs={setAOIs}\n                visible={visible}\n              />\n            )\n          }\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nconst AOILayer: React.FC<AOILayerProps> = ({ imgWidth, imgHeight, AOIs, setAOIs, visible }): JSX.Element => {\n  return (\n    <>\n      <Mask width={imgWidth} height={imgHeight} holes={AOIs} visible={visible} />\n      {AOIs.map((e, i) => (\n        <AOIBox\n          key={i}\n          box={e}\n          visible={visible}\n          boundary={{ x1: 0, y1: 0, x2: imgWidth, y2: imgHeight }}\n          onBoxChange={(updateBox): void =>\n            setAOIs((prev) => {\n              const newBox = updateBox(prev[i]);\n              if (newBox.x1 > newBox.x2) {\n                const tmp = newBox.x1;\n                newBox.x1 = newBox.x2;\n                newBox.x2 = tmp;\n              }\n\n              if (newBox.y1 > newBox.y2) {\n                const tmp = newBox.y1;\n                newBox.y1 = newBox.y2;\n                newBox.y2 = tmp;\n              }\n\n              const newAOIs = [...prev];\n              newAOIs[i] = newBox;\n              return newAOIs;\n            })\n          }\n        />\n      ))}\n    </>\n  );\n};\n\nconst Mask: React.FC<MaskProps> = ({ width, height, holes, visible }) => {\n  return (\n    <Shape\n      width={width}\n      height={height}\n      fill={'rgba(0,0,0,0.5)'}\n      visible={visible}\n      sceneFunc={(ctx, shape): void => {\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(shape.width(), 0);\n        ctx.lineTo(shape.width(), shape.height());\n        ctx.lineTo(0, shape.height());\n        ctx.lineTo(0, 0);\n\n        // Nonozero-rule\n        holes.forEach(({ x1, y1, x2, y2 }) => {\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x1, y2);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, y1);\n          ctx.lineTo(x1, y1);\n        });\n\n        ctx.fillStrokeShape(shape);\n      }}\n      listening={false}\n    />\n  );\n};\n\nconst AOIBox: React.FC<AOIBoxProps> = ({ box, onBoxChange, visible, boundary }) => {\n  const { x1, y1, x2, y2 } = box;\n  const COLOR = 'white';\n  const RADIUS = 20;\n\n  const handleDrag = (e: KonvaEventObject<DragEvent>): void => {\n    let { x, y } = e.target.position();\n\n    if (x < boundary.x1) {\n      x = boundary.x1;\n      e.target.x(x);\n    }\n\n    if (x > boundary.x2) {\n      x = boundary.x2;\n      e.target.x(x);\n    }\n\n    if (y < boundary.y1) {\n      y = boundary.y1;\n      e.target.y(y);\n    }\n\n    if (y > boundary.y2) {\n      y = boundary.y2;\n      e.target.y(y);\n    }\n\n    switch (e.target.name()) {\n      case 'leftTop':\n        onBoxChange((prev) => ({ ...prev, x1: x, y1: y }));\n        break;\n      case 'rightTop':\n        onBoxChange((prev) => ({ ...prev, x2: x, y1: y }));\n        break;\n      case 'rightBottom':\n        onBoxChange((prev) => ({ ...prev, x2: x, y2: y }));\n        break;\n      case 'leftBottom':\n        onBoxChange((prev) => ({ ...prev, x1: x, y2: y }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Group visible={visible}>\n      <Line points={[x1, y1, x1, y2, x2, y2, x2, y1]} closed stroke={COLOR} strokeWidth={10} />\n      <Circle draggable name=\"leftTop\" x={x1} y={y1} radius={RADIUS} fill={COLOR} onDragMove={handleDrag} />\n      <Circle draggable name=\"rightTop\" x={x2} y={y1} radius={RADIUS} fill={COLOR} onDragMove={handleDrag} />\n      <Circle\n        draggable\n        name=\"rightBottom\"\n        x={x2}\n        y={y2}\n        radius={RADIUS}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n      <Circle\n        draggable\n        name=\"leftBottom\"\n        x={x1}\n        y={y2}\n        radius={RADIUS}\n        fill={COLOR}\n        onDragMove={handleDrag}\n      />\n    </Group>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as R from 'ramda';\nimport Axios from 'axios';\n\nimport { Text, Checkbox, Flex, Button, Alert } from '@fluentui/react-northstar';\nimport { LiveViewScene } from './LiveViewScene';\nimport { AOIData, Box } from '../../type';\n\nexport const LiveViewContainer: React.FC<{\n  showVideo: boolean;\n  initialAOIData: AOIData;\n  cameraId: number;\n}> = ({ showVideo, initialAOIData, cameraId }) => {\n  const [showAOI, setShowAOI] = useState(initialAOIData.useAOI);\n  const lasteUpdatedAOIs = useRef(initialAOIData.AOIs);\n  const [AOIs, setAOIs] = useState<Box[]>(lasteUpdatedAOIs.current);\n  const [showUpdateSuccessTxt, setShowUpdateSuccessTxt] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>(null);\n\n  const onCheckboxClick = async (): Promise<void> => {\n    setShowAOI(!showAOI);\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: !showAOI,\n          AOIs: lasteUpdatedAOIs.current,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      if (!showAOI) setAOIs(lasteUpdatedAOIs.current);\n    } catch (e) {\n      // Set back to the state before updating for switch case\n      setShowAOI(showAOI);\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  const onUpdate = async (): Promise<void> => {\n    setLoading(true);\n    try {\n      await Axios.patch(`/api/cameras/${cameraId}/`, {\n        area: JSON.stringify({\n          useAOI: showAOI,\n          AOIs,\n        }),\n      });\n      setShowUpdateSuccessTxt(true);\n      lasteUpdatedAOIs.current = R.clone(AOIs);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (showUpdateSuccessTxt) {\n      const timer = setTimeout(() => {\n        setShowUpdateSuccessTxt(false);\n      }, 3000);\n      return (): void => clearTimeout(timer);\n    }\n  }, [showUpdateSuccessTxt]);\n\n  const hasEdit = !R.equals(lasteUpdatedAOIs.current, AOIs);\n  const updateBtnDisabled = !showAOI || !hasEdit;\n\n  return (\n    <Flex column gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }} size=\"large\">\n        Live View:\n      </Text>\n      {error && <Alert danger header=\"Failed to Update!\" content={`${error.name}: ${error.message}`} />}\n      <Flex hAlign=\"end\" gap=\"gap.small\" vAlign=\"center\">\n        <Checkbox\n          labelPosition=\"start\"\n          label=\"Show area of interest\"\n          toggle\n          checked={showAOI}\n          onClick={onCheckboxClick}\n        />\n        <Button content=\"Update\" primary disabled={updateBtnDisabled} onClick={onUpdate} loading={loading} />\n        <Text styles={{ visibility: showUpdateSuccessTxt ? 'visible' : 'hidden' }}>Updated!</Text>\n      </Flex>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {showVideo ? <LiveViewScene AOIs={AOIs} setAOIs={setAOIs} visible={showAOI} /> : null}\n      </div>\n    </Flex>\n  );\n};\n","import React, { useEffect, FC, useState, useCallback } from 'react';\nimport { Flex, Text, Status, Button, Loader, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useInterval } from '../../hooks/useInterval';\nimport {\n  thunkDeleteProject,\n  thunkGetTrainingLog,\n  thunkGetTrainingMetrics,\n  thunkGetInferenceMetrics,\n} from '../../store/project/projectActions';\nimport { Project, Status as CameraConfigStatus } from '../../store/project/projectTypes';\nimport { State } from '../../store/State';\nimport { useParts } from '../../hooks/useParts';\nimport { useQuery } from '../../hooks/useQuery';\nimport { LiveViewContainer } from '../LiveViewContainer';\nimport { AOIData } from '../../type';\n\nexport const CameraConfigureInfo: React.FC<{ projectId: number; AOIs: AOIData }> = ({ projectId, AOIs }) => {\n  const { error, data: project, trainingLog, status, trainingMetrics, inferenceMetrics } = useSelector<\n    State,\n    Project\n  >((state) => state.project);\n  const allTrainingLog = useAllTrainingLog(trainingLog);\n  const parts = useParts();\n  const dispatch = useDispatch();\n  const cameraName = useQuery().get('name');\n  const history = useHistory();\n\n  const onDeleteConfigure = useCallback((): void => {\n    // eslint-disable-next-line no-restricted-globals\n    const sureDelete = confirm('Delete this configuration?');\n    if (!sureDelete) return;\n    const result = (dispatch(thunkDeleteProject(projectId)) as unknown) as Promise<any>;\n    result\n      .then((data) => {\n        if (data) return history.push(`/cameras/detail?name=${cameraName}`);\n        return void 0;\n      })\n      .catch((err) => console.error(err));\n  }, [dispatch, history, cameraName, projectId]);\n\n  useEffect(() => {\n    dispatch(thunkGetTrainingLog(projectId));\n  }, [dispatch, projectId]);\n  useInterval(\n    () => {\n      dispatch(thunkGetTrainingLog(projectId));\n    },\n    status === CameraConfigStatus.WaitTraining ? 5000 : null,\n  );\n\n  useEffect(() => {\n    if (status === CameraConfigStatus.FinishTraining) {\n      dispatch(thunkGetTrainingMetrics(projectId));\n    }\n  }, [dispatch, status, projectId]);\n\n  useInterval(\n    () => {\n      dispatch(thunkGetInferenceMetrics(projectId));\n    },\n    status === CameraConfigStatus.StartInference ? 5000 : null,\n  );\n\n  const isCameraOnline = [CameraConfigStatus.FinishTraining, CameraConfigStatus.StartInference].includes(\n    status,\n  );\n\n  return (\n    <Flex column gap=\"gap.large\">\n      <h1>Configuration</h1>\n      {error && <Alert danger header={error.name} content={`${error.message}`} />}\n      {status === CameraConfigStatus.WaitTraining ? (\n        <>\n          <Loader size=\"smallest\" />\n          <pre>{allTrainingLog}</pre>\n        </>\n      ) : (\n        <>\n          <ListItem title=\"Status\">\n            <CameraStatus online={isCameraOnline} />\n          </ListItem>\n          <ListItem title=\"Configured for\">\n            {parts\n              .filter((e) => project.parts.includes(e.id))\n              .map((e) => e.name)\n              .join(', ')}\n          </ListItem>\n          <Flex column gap=\"gap.small\">\n            <LiveViewContainer showVideo={true} initialAOIData={AOIs} cameraId={project.camera} />\n          </Flex>\n          <ListItem title=\"Success Rate\">\n            <Text styles={{ color: 'rgb(244, 152, 40)', fontWeight: 'bold' }} size=\"large\">\n              {`${inferenceMetrics.successRate}%`}\n            </Text>\n          </ListItem>\n          <ListItem title=\"Successful Inferences\">{inferenceMetrics.successfulInferences}</ListItem>\n          <ListItem title=\"Unidentified Items\">\n            <Text styles={{ margin: '5px' }} size=\"large\">\n              {inferenceMetrics.unIdetifiedItems}\n            </Text>\n            <Button\n              content=\"Identify Manually\"\n              primary\n              styles={{\n                backgroundColor: 'red',\n                marginLeft: '100px',\n                ':hover': {\n                  backgroundColor: '#A72037',\n                },\n                ':active': {\n                  backgroundColor: '#8E192E',\n                },\n              }}\n              as={Link}\n              to=\"/manual\"\n            />\n          </ListItem>\n          {trainingMetrics.prevConsequence && (\n            <>\n              <Text>Previous Model Metrics</Text>\n              <ConsequenceDashboard\n                precision={trainingMetrics.prevConsequence?.precision}\n                recall={trainingMetrics.prevConsequence?.recall}\n                mAP={trainingMetrics.prevConsequence?.mAP}\n              />\n            </>\n          )}\n          <Text>Updated Model Metrics</Text>\n          <ConsequenceDashboard\n            precision={trainingMetrics.curConsequence?.precision}\n            recall={trainingMetrics.curConsequence?.recall}\n            mAP={trainingMetrics.curConsequence?.mAP}\n          />\n          <Button primary onClick={onDeleteConfigure}>\n            Delete Configuration\n          </Button>\n          <Button primary as={Link} to=\"/partIdentification\">\n            Edit Configuration\n          </Button>\n        </>\n      )}\n    </Flex>\n  );\n};\n\n/**\n * Retrun a string which contains all logs get from server during training\n * @param trainingLog The log get from the api export\n */\nconst useAllTrainingLog = (trainingLog: string): string => {\n  const [allLogs, setAllLogs] = useState(trainingLog);\n  useEffect(() => {\n    setAllLogs((prev) => `${prev}\\n${trainingLog}`);\n  }, [trainingLog]);\n  return allLogs;\n};\n\ninterface ConsequenceDashboardProps {\n  precision: number;\n  recall: number;\n  mAP: number;\n}\nconst ConsequenceDashboard: FC<ConsequenceDashboardProps> = ({ precision, recall, mAP }) => {\n  return (\n    <Grid columns={3}>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Precison\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#9a0089' }}>\n          {precision === null ? '' : `${((precision * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          Recall\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#0063b1' }}>\n          {recall === null ? '' : `${((recall * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n      <div style={{ height: '5em', display: 'flex', flexFlow: 'column', justifyContent: 'space-between' }}>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\">\n          mAP\n        </Text>\n        <Text align=\"center\" size=\"large\" weight=\"semibold\" styles={{ color: '#69c138' }}>\n          {mAP === null ? '' : `${((mAP * 1000) | 0) / 10}%`}\n        </Text>\n      </div>\n    </Grid>\n  );\n};\n\nconst ListItem = ({ title, children }): JSX.Element => {\n  return (\n    <Flex vAlign=\"center\">\n      <Text style={{ width: '200px' }} size=\"large\">{`${title}: `}</Text>\n      {typeof children === 'string' || typeof children === 'number' ? (\n        <Text size=\"large\">{children}</Text>\n      ) : (\n        children\n      )}\n    </Flex>\n  );\n};\n\nconst CameraStatus = ({ online }): JSX.Element => {\n  const text = online ? 'Online' : 'Offline';\n  const state = online ? 'success' : 'unknown';\n\n  return (\n    <Flex gap=\"gap.smaller\" vAlign=\"center\">\n      <Status state={state} />\n      <Text styles={{ margin: '5px' }} size=\"large\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Button, Flex, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\n\nexport const CreateCameraConfig: React.FC = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <h1>Configuration</h1>\n      <Flex hAlign=\"center\" vAlign=\"center\" design={{ height: '100%' }} column gap=\"gap.large\">\n        <Button\n          fluid\n          circular\n          content={<AddIcon size=\"largest\" circular color=\"brand\" />}\n          style={{ width: 100, height: 100, border: '5px solid #0094d8' }}\n          color=\"brand\"\n          as={Link}\n          to=\"/partIdentification\"\n        />\n        <h2>Configure Task for the Device</h2>\n      </Flex>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CameraDetailInfo from '../components/CameraDetails/CameraDetailInfo';\nimport { CameraConfigureInfo, CreateCameraConfig } from '../components/CameraConfigure';\nimport { getCameras } from '../store/camera/cameraActions';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { State } from '../store/State';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { useQuery } from '../hooks/useQuery';\nimport { AOIData } from '../type';\n\nconst CameraDetails: FC = (): JSX.Element => {\n  const cameraIdInproject = useSelector<State, number>((state) => state.project.data.camera);\n  const projectId = useSelector<State, number>((state) => state.project.data.id);\n  const dispatch = useDispatch();\n  const name = useQuery().get('name');\n  const camera = useSelector<State, Camera>((state) => state.cameras.find((ele) => ele.name === name));\n\n  useEffect(() => {\n    dispatch(thunkGetProject());\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  if (!camera) return <Redirect to=\"/cameras\" />;\n\n  const hasProject = cameraIdInproject === camera.id;\n  const aoiData = getAOIData(camera.area);\n\n  return (\n    <Grid columns=\"2\" design={{ height: '100%' }}>\n      <CameraDetailInfo id={camera.id} name={name} rtsp={camera.rtsp} modelName={camera.model_name} />\n      {hasProject ? <CameraConfigureInfo projectId={projectId} AOIs={aoiData} /> : <CreateCameraConfig />}\n    </Grid>\n  );\n};\n\nexport default CameraDetails;\n\nconst getAOIData = (cameraArea: string): AOIData => {\n  try {\n    return JSON.parse(cameraArea);\n  } catch (e) {\n    return {\n      useAOI: true,\n      AOIs: [{ x1: 50, y1: 50, x2: 200, y2: 100 }],\n    };\n  }\n};\n","import { Size2D } from '../../../store/labelingPage/labelingPageTypes';\n\nconst getResizeImageFunction = (defaultSize: Size2D) => (size: Size2D): [Size2D, number] => {\n  if (size.width !== 0) {\n    if (size.width > size.height) {\n      const scaleX = defaultSize.width / size.width;\n\n      return [{ width: defaultSize.width, height: size.height * scaleX }, scaleX];\n    }\n    const scaleY = defaultSize.height / size.height;\n\n    return [{ height: defaultSize.height, width: size.width * scaleY }, scaleY];\n  }\n  return [defaultSize, 1];\n};\n\nexport default getResizeImageFunction;\n","import {\n  Annotation,\n  AnnotationState,\n  BoxObject,\n  Position2D,\n  REQUEST_ANNOTATION_SUCCESS,\n  REMOVE_ANNOTATION,\n  CREATE_ANNOTATION,\n  UPDATE_CREATING_ANNOTATION,\n  UPDATE_ANNOTATION,\n  RESET_ANNOTATION,\n  RequestAnnotationSuccessAction,\n  CreateAnnotationAction,\n  UpdateAnnotationAction,\n  UpdateCreatingAnnotationAction,\n  RemoveAnnotationAction,\n  ResetAnnotationAction,\n} from './labelingPageTypes';\n\nexport const requestAnnotationsSuccess = (data: Annotation[]): RequestAnnotationSuccessAction => ({\n  type: REQUEST_ANNOTATION_SUCCESS,\n  payload: { annotations: data },\n});\n\nexport const getAnnotations = (imageId: number) => (dispatch, getState): void => {\n  const { images } = getState();\n  const { labels } = images.find((image) => image.id === imageId);\n\n  if (labels === null) {\n    dispatch(requestAnnotationsSuccess([]));\n  } else {\n    const annotations = JSON.parse(labels).map((parsedLabels) => ({\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n\n    dispatch(requestAnnotationsSuccess(annotations));\n  }\n};\n\nexport const createAnnotation = (pos: Position2D): CreateAnnotationAction => {\n  const annotation = BoxObj.createWithPoint(pos, '');\n  return {\n    type: CREATE_ANNOTATION,\n    payload: { annotation },\n  };\n};\n\nexport const updateCreatingAnnotation = (pos: Position2D): UpdateCreatingAnnotationAction => {\n  const updater = (annotation: Annotation): Annotation => BoxObj.add(pos, annotation);\n  return {\n    type: UPDATE_CREATING_ANNOTATION,\n    payload: { updater },\n  };\n};\n\nexport const updateAnnotation = (index: number = null, annotation: Annotation): UpdateAnnotationAction => ({\n  type: UPDATE_ANNOTATION,\n  payload: { index, annotation: BoxObj.setVerticesToValidValue(annotation) },\n});\n\nexport const removeAnnotation = (index: number = null): RemoveAnnotationAction => ({\n  type: REMOVE_ANNOTATION,\n  payload: { index },\n});\n\nexport const resetAnnotation = (): ResetAnnotationAction => ({\n  type: RESET_ANNOTATION,\n});\n\n// * Annotation Functions\nexport const BoxObj: BoxObject = {\n  init(): Annotation {\n    return {\n      label: { x1: 0, y1: 0, x2: 0, y2: 0 },\n      attribute: '',\n      annotationState: AnnotationState.Empty,\n    };\n  },\n  createWithPoint(p: Position2D, attribute) {\n    const obj = {\n      ...this.init(),\n      attribute,\n    };\n    return this.add(p, obj);\n  },\n  add({ x, y }, obj) {\n    // make the original object immutable, for future history usage\n    const newObj = { ...obj };\n\n    if (obj.annotationState === AnnotationState.Empty) {\n      newObj.label.x1 = x;\n      newObj.label.y1 = y;\n      newObj.label.x2 = x; // initialize x2 y2\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.P1Added;\n    } else if (obj.annotationState === AnnotationState.P1Added) {\n      newObj.label.x2 = x;\n      newObj.label.y2 = y;\n      newObj.annotationState = AnnotationState.Finish;\n    }\n\n    return this.setVerticesToValidValue(newObj);\n  },\n  setVerticesToInt(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    newObj.label = {\n      x1: Math.round(x1),\n      y1: Math.round(y1),\n      x2: Math.round(x2),\n      y2: Math.round(y2),\n    };\n    return newObj;\n  },\n  setVerticesPointsOrder(obj: Annotation): Annotation {\n    const newObj = { ...obj };\n    const { x1, y1, x2, y2 } = newObj.label;\n    if (x1 > x2) {\n      newObj.label.x1 = x2;\n      newObj.label.x2 = x1;\n    }\n    if (y1 > y2) {\n      newObj.label.y1 = y2;\n      newObj.label.y2 = y1;\n    }\n\n    return newObj;\n  },\n  setVerticesToValidValue(object: Annotation): Annotation {\n    return this.setVerticesPointsOrder(this.setVerticesToInt(object));\n  },\n  // setFinished(obj: Annotation): Annotation {\n  //   if (obj.state === AnnotationState.Created) return;\n\n  //   const newObj = R.clone(obj);\n  //   newObj.state = AnnotationState.Created;\n  //   newObj.creatingState = undefined;\n\n  //   return newObj;\n  // },\n  // setStateCreated(idx: number, annotations: Annotation[]): Annotation[] {\n  //   const { creatingState } = annotations[idx];\n\n  //   if (creatingState === 'addedX2Y2') return R.update(idx, this.setFinished, annotations);\n  //   if (creatingState === 'addedX1Y1') return R.remove(idx, 1, annotations);\n  //   return R.clone(annotations);\n  // },\n};\n","import React, { useState, useRef, useEffect, FC, useCallback } from 'react';\nimport { Line, Group, Circle } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport {\n  BoxLabel,\n  Box2dComponentProps,\n  WorkState,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport { updateAnnotation } from '../../store/labelingPage/labelingPageActions';\n\nexport const Box2d: FC<Box2dComponentProps> = ({\n  scale,\n  workState,\n  onSelect,\n  selected,\n  annotationIndex,\n  visible = true,\n  annotation,\n  dispatch,\n  changeCursorState = null,\n}) => {\n  const [vertices, setVertices] = useState<BoxLabel>(annotation.label);\n  const anchorRadius: number = 5 / scale;\n  const strokeWidth: number = 2 / scale;\n  const boxRef = useRef(null);\n\n  const dispatchLabel = (): void => {\n    changeCursorState();\n\n    if (!dispatch) return;\n    const newAnnotation = { ...annotation };\n    newAnnotation.label = vertices;\n    dispatch(updateAnnotation(annotationIndex, newAnnotation));\n  };\n\n  const mouseMoveListener = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (workState === WorkState.Creating && selected) {\n        setVertices((prev) => ({ ...prev, x2: e.evt.offsetX / scale, y2: e.evt.offsetY / scale }));\n      }\n    },\n    [workState, setVertices, selected, scale],\n  );\n\n  const onDragAnchor = useCallback(\n    ({ xi = 'x1', yi = 'y1' }) => (e: KonvaEventObject<DragEvent>): void => {\n      const stage = e.target.getStage();\n      const { width, height } = stage.getSize();\n      let x = Math.round(e.target.position().x);\n      let y = Math.round(e.target.position().y);\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > width / scale) x = width / scale;\n      if (y > height / scale) y = height / scale;\n      // * Round the anchor (circle) position so user can only drag anchor on integer.\n      e.target.setAttr('x', x);\n      e.target.setAttr('y', y);\n\n      const anotherPosXArr = ['x1', 'x2'];\n      const anotherPosYArr = ['y1', 'y2'];\n      anotherPosXArr.splice(\n        anotherPosXArr.findIndex((xx) => xx === xi),\n        1,\n      );\n      anotherPosYArr.splice(\n        anotherPosYArr.findIndex((yy) => yy === yi),\n        1,\n      );\n      if (vertices[anotherPosXArr[0]] > vertices[xi]) {\n        if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n          changeCursorState(LabelingCursorStates.nwseResize);\n        } else {\n          changeCursorState(LabelingCursorStates.neswResize);\n        }\n      } else if (vertices[anotherPosYArr[0]] > vertices[yi]) {\n        changeCursorState(LabelingCursorStates.neswResize);\n      } else {\n        changeCursorState(LabelingCursorStates.nwseResize);\n      }\n\n      setVertices((prevVertices) => ({ ...prevVertices, [xi]: x, [yi]: y }));\n    },\n    [changeCursorState, scale, vertices],\n  );\n\n  useEffect(() => {\n    const layer = boxRef.current.getLayer();\n    layer.on('mousemove', mouseMoveListener);\n    return (): void => {\n      layer.off('mousemove', mouseMoveListener);\n    };\n  }, [mouseMoveListener]);\n  useEffect(() => {\n    setVertices(annotation.label);\n  }, [annotation.label]);\n\n  return (\n    <Group\n      ref={(e): void => {\n        if (e) {\n          boxRef.current = e;\n        }\n      }}\n      visible={visible}\n      onMouseDown={(e): void => {\n        if (workState === WorkState.None) {\n          onSelect(annotationIndex);\n          e.cancelBubble = true;\n        }\n      }}\n    >\n      <Line\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke=\"red\"\n        strokeWidth={strokeWidth}\n        closed={true}\n      />\n      <Group visible={selected}>\n        <Circle\n          key={'anchor-0'}\n          name={'anchor-0'}\n          x={vertices.x1}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-1'}\n          name={'anchor-1'}\n          x={vertices.x2}\n          y={vertices.y1}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y1' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-2'}\n          name={'anchor-2'}\n          x={vertices.x2}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x2', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.nwseResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n        <Circle\n          key={'anchor-3'}\n          name={'anchor-3'}\n          x={vertices.x1}\n          y={vertices.y2}\n          radius={anchorRadius}\n          fill=\"red\"\n          draggable={true}\n          onDragMove={onDragAnchor({ xi: 'x1', yi: 'y2' })}\n          onDragEnd={dispatchLabel}\n          onMouseEnter={(): void => {\n            if (workState !== WorkState.Creating) changeCursorState(LabelingCursorStates.neswResize);\n          }}\n          onMouseLeave={(): void => {\n            changeCursorState();\n          }}\n        />\n      </Group>\n    </Group>\n  );\n};\n\nexport const DisplayBox: FC<{ vertices: BoxLabel; color: string; scale: number }> = ({\n  scale,\n  vertices,\n  color,\n}) => {\n  return (\n    <>\n      <Line\n        ref={(ref): void => {\n          if (ref) ref.cache();\n        }}\n        points={[\n          vertices.x1,\n          vertices.y1,\n          vertices.x2,\n          vertices.y1,\n          vertices.x2,\n          vertices.y2,\n          vertices.x1,\n          vertices.y2,\n          vertices.x1,\n          vertices.y1,\n        ]}\n        stroke={color}\n        strokeWidth={1 / scale}\n        closed={true}\n      />\n      <Circle x={vertices.x1} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y1} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x2} y={vertices.y2} radius={3 / scale} fill={color} />\n      <Circle x={vertices.x1} y={vertices.y2} radius={3 / scale} fill={color} />\n    </>\n  );\n};\n","import React, { FC, memo, Dispatch, useState, useEffect } from 'react';\nimport { Group, Line, Rect } from 'react-konva';\n\nimport { Size2D, LabelingCursorStates, BoxLabel } from '../../store/labelingPage/labelingPageTypes';\n\ninterface RemoveBoxButtonProps {\n  visible: boolean;\n  imageSize: Size2D;\n  label: BoxLabel;\n  changeCursorState: (cursorType?: LabelingCursorStates) => void;\n  scale: number;\n  setShowOuterRemoveButton: Dispatch<boolean>;\n  removeBox: () => void;\n}\nconst RemoveBoxButton: FC<RemoveBoxButtonProps> = ({\n  visible,\n  imageSize,\n  label,\n  changeCursorState,\n  scale,\n  setShowOuterRemoveButton,\n  removeBox,\n}) => {\n  const [color, setColor] = useState<string>('#F9526B');\n  const [strokeWidth, setStrokeWidth] = useState<number>(1.5 / scale);\n  let x: number;\n  let y: number;\n\n  if (\n    label.x1 < 0 ||\n    label.x2 > imageSize.width / scale ||\n    label.y1 < 0 ||\n    label.y2 > imageSize.height / scale\n  ) {\n    x = 0;\n    y = -60;\n  } else if (label.x1 > 30 / scale || label.x2 < (imageSize.width - 25) / scale) {\n    if (label.x1 > 30 / scale) x = label.x1 - 20 / scale;\n    else x = label.x2 + 25 / scale;\n\n    if (label.y1 > 12 / scale) {\n      y = label.y1 - 10 / scale;\n    } else {\n      y = label.y1 + 12 / scale;\n    }\n  } else {\n    x = 12 / scale;\n    if (label.y1 > 20 / scale) {\n      y = label.y1 - 20 / scale;\n    } else {\n      // * Make remove button disappear\n      y = -60;\n    }\n  }\n  if (y === -60) setShowOuterRemoveButton(true);\n  else setShowOuterRemoveButton(false);\n\n  useEffect(() => {\n    setStrokeWidth(1.5 / scale);\n  }, [scale]);\n\n  return (\n    <Group\n      visible={visible}\n      x={x}\n      y={y}\n      onMouseEnter={(): void => {\n        changeCursorState(LabelingCursorStates.pointer);\n        setColor('#E73550');\n        setStrokeWidth(3 / scale);\n      }}\n      onMouseLeave={(): void => {\n        changeCursorState();\n        setColor('#F9526B');\n        setStrokeWidth(1.5 / scale);\n      }}\n      onClick={(e): void => {\n        removeBox();\n        e.cancelBubble = true;\n      }}\n    >\n      <Rect x={-5 / scale} y={-5 / scale} width={10 / scale} height={10 / scale} />\n      <Line\n        points={[-5 / scale, -5 / scale, 5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n      <Line\n        points={[5 / scale, -5 / scale, -5 / scale, 5 / scale]}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n    </Group>\n  );\n};\n\nexport default memo(RemoveBoxButton);\n","import React, { FC, useState, useEffect, useCallback, useRef, Dispatch, useMemo } from 'react';\nimport { Text, Button, CloseIcon } from '@fluentui/react-northstar';\nimport { Stage, Layer, Image, Group } from 'react-konva';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useDispatch } from 'react-redux';\n\nimport useImage from './util/useImage';\nimport getResizeImageFunction from './util/resizeImage';\nimport { Box2d } from './Box';\nimport {\n  Size2D,\n  Annotation,\n  WorkState,\n  LabelingType,\n  LabelingCursorStates,\n} from '../../store/labelingPage/labelingPageTypes';\nimport {\n  createAnnotation,\n  updateCreatingAnnotation,\n  removeAnnotation,\n} from '../../store/labelingPage/labelingPageActions';\nimport RemoveBoxButton from './RemoveBoxButton';\n\nconst defaultSize: Size2D = {\n  width: 800,\n  height: 600,\n};\n\ninterface SceneProps {\n  url?: string;\n  labelingType: LabelingType;\n  annotations: Annotation[];\n  workState: WorkState;\n  setWorkState: Dispatch<WorkState>;\n}\nconst Scene: FC<SceneProps> = ({ url = '', labelingType, annotations, workState, setWorkState }) => {\n  const dispatch = useDispatch();\n  const resizeImage = useCallback(getResizeImageFunction(defaultSize), [defaultSize]);\n  const [imageSize, setImageSize] = useState<Size2D>(defaultSize);\n  const noMoreCreate = useMemo(\n    () => labelingType === LabelingType.SingleAnnotation && annotations.length === 1,\n    [labelingType, annotations],\n  );\n  const [cursorState, setCursorState] = useState<LabelingCursorStates>(LabelingCursorStates.default);\n  const [image, status, size] = useImage(url, 'anonymous');\n  const [selectedAnnotationIndex, setSelectedAnnotationIndex] = useState<number>(null);\n  const [showOuterRemoveButton, setShowOuterRemoveButton] = useState<boolean>(false);\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const scale = useRef<number>(1);\n  const changeCursorState = useCallback(\n    (cursorType?: LabelingCursorStates): void => {\n      if (!cursorType) {\n        if (noMoreCreate) {\n          setCursorState(LabelingCursorStates.default);\n        } else {\n          setCursorState(LabelingCursorStates.crosshair);\n        }\n      } else {\n        setCursorState(cursorType);\n      }\n    },\n    [noMoreCreate],\n  );\n  const removeBox = useCallback((): void => {\n    dispatch(removeAnnotation(selectedAnnotationIndex));\n    setWorkState(WorkState.None);\n    setShowOuterRemoveButton(false);\n  }, [dispatch, selectedAnnotationIndex, setWorkState, setShowOuterRemoveButton]);\n  const onMouseDown = (e: KonvaEventObject<MouseEvent>): void => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate || workState === WorkState.Creating) return;\n\n    dispatch(createAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }));\n    setSelectedAnnotationIndex(annotations.length - 1);\n    setWorkState(WorkState.Creating);\n  };\n\n  const onMouseUp = (e: KonvaEventObject<MouseEvent>): void => {\n    if (workState === WorkState.Creating) {\n      dispatch(\n        updateCreatingAnnotation({ x: e.evt.offsetX / scale.current, y: e.evt.offsetY / scale.current }),\n      );\n      if (annotations.length - 1 === selectedAnnotationIndex) {\n        setWorkState(WorkState.Selecting);\n      } else {\n        setWorkState(WorkState.None);\n      }\n    }\n  };\n\n  const onSelect = (index: number): void => {\n    setSelectedAnnotationIndex(index);\n    setWorkState(WorkState.Selecting);\n  };\n\n  useEffect(() => {\n    // * Single bounding box labeling type condition\n    if (noMoreCreate) {\n      changeCursorState();\n      setSelectedAnnotationIndex(0);\n    } else {\n      changeCursorState();\n    }\n  }, [noMoreCreate, changeCursorState]);\n  useEffect(() => {\n    if (workState === WorkState.None && !noMoreCreate) setSelectedAnnotationIndex(null);\n  }, [workState, noMoreCreate]);\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  if (status === 'loading' || (imageSize.height === 0 && imageSize.width === 0))\n    return (\n      <Text align=\"center\" color=\"red\">\n        Loading...\n      </Text>\n    );\n\n  return (\n    <div style={{ margin: '0.2em' }}>\n      {annotations.length !== 0 &&\n      showOuterRemoveButton &&\n      !isDragging &&\n      workState !== WorkState.Creating ? (\n        <Button\n          iconOnly\n          text\n          styles={{ color: '#F9526B', ':hover': { color: '#E73550' } }}\n          content={<CloseIcon size=\"large\" />}\n          onClick={removeBox}\n        />\n      ) : (\n        <div style={{ height: '2em' }} />\n      )}\n      <Stage\n        width={imageSize.width}\n        height={imageSize.height}\n        scale={{ x: scale.current, y: scale.current }}\n        style={{ cursor: cursorState }}\n      >\n        <Layer\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onDragStart={(): void => {\n            setIsDragging(true);\n          }}\n          onDragEnd={(): void => {\n            setIsDragging(false);\n          }}\n        >\n          <Image image={image} />\n          {annotations.map((annotation, i) => (\n            <Group key={i}>\n              <RemoveBoxButton\n                imageSize={imageSize}\n                visible={!isDragging && workState !== WorkState.Creating && i === selectedAnnotationIndex}\n                label={annotation.label}\n                scale={scale.current}\n                changeCursorState={changeCursorState}\n                setShowOuterRemoveButton={setShowOuterRemoveButton}\n                removeBox={removeBox}\n              />\n              <Box2d\n                workState={workState}\n                onSelect={onSelect}\n                annotation={annotation}\n                scale={scale.current}\n                annotationIndex={i}\n                selected={i === selectedAnnotationIndex}\n                dispatch={dispatch}\n                changeCursorState={changeCursorState}\n              />\n            </Group>\n          ))}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Scene;\n","import axios from 'axios';\nimport {\n  LabelImage,\n  GetLabelImagesSuccess,\n  GET_LABEL_IMAGE_SUCCESS,\n  DeleteLabelImageSuccess,\n  DELETE_LABEL_IMAGE_SUCCESS,\n  REQUEST_LABEL_IMAGE_FAILURE,\n  PostLabelImageSuccess,\n  POST_LABEL_IMAGE_SUCCESS,\n  UPDATE_LABEL_IMAGE_ANNOTATION,\n  UpdateLabelImageAnnotation,\n} from './imageTypes';\nimport { Annotation } from '../labelingPage/labelingPageTypes';\n\nconst getLabelImagesSuccess = (data: LabelImage[]): GetLabelImagesSuccess => ({\n  type: GET_LABEL_IMAGE_SUCCESS,\n  payload: data,\n});\n\nconst deleteLabelImageSuccess = (id: number): DeleteLabelImageSuccess => ({\n  type: DELETE_LABEL_IMAGE_SUCCESS,\n  payload: { id },\n});\n\nconst requestLabelImagesFailure = (error: any): any => {\n  console.error(error);\n  return { type: REQUEST_LABEL_IMAGE_FAILURE };\n};\n\nconst postLabelImageSuccess = (image: LabelImage): PostLabelImageSuccess => ({\n  type: POST_LABEL_IMAGE_SUCCESS,\n  payload: image,\n});\n\nexport const getLabelImages = () => (dispatch): Promise<void> => {\n  return axios('/api/images/')\n    .then(({ data }) => {\n      dispatch(getLabelImagesSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\n\nexport const postLabelImage = (newImage: LabelImage | FormData) => (dispatch): Promise<void> => {\n  return axios('/api/images/', {\n    method: 'POST',\n    data: newImage,\n  })\n    .then(({ data }) => {\n      dispatch(postLabelImageSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const deleteLabelImage = (id: number) => (dispatch): Promise<void> => {\n  return axios(`/api/images/${id}/`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      dispatch(deleteLabelImageSuccess(id));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const saveLabelImageAnnotation = (imageId: number, annotations: Annotation[]) => (\n  dispatch,\n): Promise<void> => {\n  const url = `/api/images/${imageId}/`;\n  return axios({\n    url,\n    method: 'PATCH',\n    data: {\n      labels: JSON.stringify(annotations.map((e) => e.label)),\n    },\n  })\n    .then(({ data }) => {\n      console.info('Save successfully');\n      dispatch(updateLabelImageAnnotation(data.id, data.labels));\n      // dispatch(requestAnnotationsSuccess(annotations));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLabelImagesFailure(err));\n    });\n};\n\nexport const updateLabelImageAnnotation = (imageId: number, labels: any): UpdateLabelImageAnnotation => ({\n  type: UPDATE_LABEL_IMAGE_ANNOTATION,\n  payload: { id: imageId, labels },\n});","import React, { FC } from 'react';\nimport { Flex, Button, ChevronStartIcon, ChevronEndIcon } from '@fluentui/react-northstar';\n\ninterface PrevNextButtonProps {\n  isRelabel: boolean;\n  prevDisabled: boolean;\n  nextDisabled: boolean;\n  onPrevClick: () => void;\n  onNextClick: () => void;\n}\nconst PrevNextButton: FC<PrevNextButtonProps> = ({\n  isRelabel,\n  children,\n  prevDisabled,\n  nextDisabled,\n  onPrevClick,\n  onNextClick,\n}) => {\n  return (\n    <Flex vAlign=\"center\">\n      {!isRelabel && (\n        <Button\n          text\n          disabled={prevDisabled}\n          icon={<ChevronStartIcon size=\"larger\" />}\n          onClick={onPrevClick}\n        />\n      )}\n      {children}\n      {!isRelabel && (\n        <Button text disabled={nextDisabled} icon={<ChevronEndIcon size=\"larger\" />} onClick={onNextClick} />\n      )}\n    </Flex>\n  );\n};\n\nexport default PrevNextButton;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Button, Text } from '@fluentui/react-northstar';\n\nimport Scene from '../components/LabelingPage/Scene';\nimport { LabelingType, Annotation, WorkState } from '../store/labelingPage/labelingPageTypes';\nimport { State } from '../store/State';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getAnnotations, resetAnnotation } from '../store/labelingPage/labelingPageActions';\nimport { saveLabelImageAnnotation } from '../store/image/imageActions';\nimport { RelabelImage } from '../components/ManualIdentification/types';\nimport PrevNextButton from '../components/LabelingPage/PrevNextButton';\n\ninterface LabelingPageProps {\n  labelingType: LabelingType;\n  images: LabelImage[] | RelabelImage[];\n  imageIndex: number;\n  closeDialog: () => void;\n  isRelabel: boolean;\n}\nconst LabelingPage: FC<LabelingPageProps> = ({\n  labelingType,\n  images,\n  imageIndex,\n  closeDialog,\n  isRelabel,\n}) => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState<number>(imageIndex);\n  const [workState, setWorkState] = useState<WorkState>(WorkState.None);\n\n  const annotations = useSelector<State, Annotation[]>((state) => state.labelingPageState.annotations);\n\n  const isOnePointBox = checkOnePointBox(annotations);\n  const imageUrl = images[index]?.image;\n  const imageId = images[index]?.id;\n\n  useEffect(() => {\n    if (typeof imageId === 'number') dispatch(getAnnotations(imageId));\n    return (): void => {\n      dispatch(resetAnnotation());\n    };\n  }, [dispatch, imageId]);\n\n  return (\n    <Flex column hAlign=\"center\">\n      <Text size=\"larger\" weight=\"semibold\">\n        DRAW A RECTANGLE AROUND THE PART\n      </Text>\n      <PrevNextButton\n        isRelabel={isRelabel}\n        prevDisabled={index === 0 || workState === WorkState.Creating || isOnePointBox}\n        nextDisabled={index === images.length - 1 || workState === WorkState.Creating || isOnePointBox}\n        onPrevClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev - 1 + images.length) % images.length);\n        }}\n        onNextClick={(): void => {\n          dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n          setIndex((prev) => (prev + 1) % images.length);\n        }}\n      >\n        <Scene\n          url={imageUrl ?? '/icons/Play.png'}\n          annotations={annotations}\n          workState={workState}\n          setWorkState={setWorkState}\n          labelingType={labelingType}\n        />\n      </PrevNextButton>\n      <Flex gap=\"gap.medium\">\n        <Button\n          primary\n          content=\"Save\"\n          disabled={isOnePointBox || workState === WorkState.Creating}\n          onClick={(): void => {\n            dispatch(saveLabelImageAnnotation(images[index].id, annotations));\n            closeDialog();\n          }}\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            closeDialog();\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst checkOnePointBox = (annotations: Annotation[]): boolean => {\n  if (annotations.length === 0) return false;\n  const { label } = annotations[annotations.length - 1];\n  return label.x1 === label.x2 && label.y1 === label.y2;\n};\n\nexport default LabelingPage;\n","import React, { memo, FC, useState } from 'react';\nimport { Dialog } from '@fluentui/react-northstar';\n\nimport LabelingPage from '../pages/LabelingPage';\nimport { LabelingType } from '../store/labelingPage/labelingPageTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { RelabelImage } from './ManualIdentification/types';\n\ninterface LabelingPageDialogProps {\n  trigger: JSX.Element;\n  imageIndex: number;\n  images: LabelImage[] | RelabelImage[];\n  isRelabel: boolean;\n}\nconst LabelingPageDialog: FC<LabelingPageDialogProps> = ({\n  trigger,\n  images,\n  imageIndex,\n  isRelabel,\n}): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Dialog\n      trigger={trigger}\n      styles={{ width: '80%' }}\n      open={open}\n      onOpen={(): void => setOpen(true)}\n      content={\n        <LabelingPage\n          closeDialog={(): void => setOpen(false)}\n          labelingType={LabelingType.SingleAnnotation}\n          images={images}\n          imageIndex={imageIndex}\n          isRelabel={isRelabel}\n        />\n      }\n    />\n  );\n};\n\nexport default memo(LabelingPageDialog);\n","import React, { useState, useRef, useEffect, useMemo, useCallback, memo, MouseEvent, FC } from 'react';\nimport { Stage, FastLayer, Image as KonvaImage } from 'react-konva';\nimport { Text } from '@fluentui/react-northstar';\n\nimport useImage from './LabelingPage/util/useImage';\nimport { Size2D, AnnotationState, Annotation } from '../store/labelingPage/labelingPageTypes';\nimport { DisplayBox } from './LabelingPage/Box';\nimport { LabelImage } from '../store/image/imageTypes';\nimport getResizeImageFunction from './LabelingPage/util/resizeImage';\n\ninterface LabelDisplayImageProps {\n  labelImage: LabelImage;\n  labelText?: string;\n  width: number;\n  height?: number;\n  pointerCursor?: boolean;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\nconst LabelDisplayImage: FC<LabelDisplayImageProps> = ({\n  labelImage,\n  labelText = '',\n  width = 300,\n  height = 150,\n  pointerCursor = false,\n  onClick,\n}) => {\n  const [image, , size] = useImage(labelImage.image, 'anonymous');\n  const [imageSize, setImageSize] = useState<Size2D>({ width, height });\n  const resizeImage = useCallback(getResizeImageFunction({ width, height }), [width, height]);\n  const scale = useRef<number>(1);\n\n  const annotations = useMemo<Annotation[]>(() => {\n    if (!labelImage?.labels) return [];\n\n    return JSON.parse(labelImage.labels).map((parsedLabels) => ({\n      label: parsedLabels,\n      attribute: '',\n      annotationState: AnnotationState.Finish,\n    }));\n  }, [labelImage]);\n\n  useEffect(() => {\n    const [outcomeSize, outcomeScale] = resizeImage(size);\n    setImageSize(outcomeSize);\n\n    scale.current = outcomeScale;\n  }, [size, resizeImage]);\n\n  return (\n    <div\n      onClick={onClick}\n      style={{ cursor: pointerCursor ? 'pointer' : 'default', display: 'flex', flexFlow: 'column' }}\n    >\n      <Stage width={imageSize.width} height={imageSize.height} scale={{ x: scale.current, y: scale.current }}>\n        <FastLayer>\n          <KonvaImage image={image} />\n          {annotations.map((annotation, i) => (\n            <DisplayBox key={i} scale={scale.current} vertices={annotation.label} color=\"red\" />\n          ))}\n        </FastLayer>\n      </Stage>\n      <Text align=\"center\">{labelText}</Text>\n    </div>\n  );\n};\n\nexport default memo(LabelDisplayImage);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Button,\n  PlayIcon,\n  CallControlPresentNewIcon,\n  PauseThickIcon,\n  Image,\n} from '@fluentui/react-northstar';\n\nimport { thunkAddCapturedImages } from '../../store/part/partActions';\nimport { RTSPVideoProps } from './RTSPVideo.type';\n\nexport const RTSPVideoComponent: React.FC<RTSPVideoProps> = ({\n  rtsp = null,\n  partId,\n  canCapture,\n  onVideoStart,\n  onVideoPause,\n}) => {\n  const [streamId, setStreamId] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const onCreateStream = (): void => {\n    let url = `/api/streams/connect/?part_id=${partId}&rtsp=${rtsp}`;\n    if (!canCapture) url += '&inference=1';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.status === 'ok') {\n          setStreamId(data.stream_id);\n        }\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoStart) onVideoStart();\n  };\n\n  const onCapturePhoto = (): void => {\n    dispatch(thunkAddCapturedImages(streamId));\n  };\n\n  const onDisconnect = (): void => {\n    setStreamId('');\n    fetch(`/api/streams/${streamId}/disconnect`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        return null;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    if (onVideoPause) onVideoPause();\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onDisconnect);\n    return (): void => {\n      window.removeEventListener('beforeunload', onDisconnect);\n    };\n  });\n\n  const src = streamId ? `/api/streams/${streamId}/video_feed` : '';\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '600px', backgroundColor: 'black' }}>\n        {src ? <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'contain' }} /> : null}\n      </div>\n      <Button.Group\n        styles={{ alignSelf: 'center' }}\n        buttons={[\n          {\n            key: 'start',\n            icon: <PlayIcon />,\n            iconOnly: true,\n            onClick: onCreateStream,\n            disabled: rtsp === null,\n          },\n          canCapture && {\n            key: 'capture',\n            icon: <CallControlPresentNewIcon />,\n            iconOnly: true,\n            onClick: onCapturePhoto,\n            disabled: !streamId,\n          },\n          {\n            key: 'stop',\n            icon: <PauseThickIcon />,\n            iconOnly: true,\n            onClick: onDisconnect,\n            disabled: !streamId,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport const RTSPVideo = React.memo(RTSPVideoComponent);\n","import {\n  AddCapturedImageAction,\n  ADD_CAPTURED_IMAGE,\n  PartThunk,\n  UpdateCapturedImageAction,\n  UPDATE_CAPTURED_IMAGES,\n} from './partTypes';\nimport { LabelImage } from '../image/imageTypes';\nimport { getLabelImages } from '../image/imageActions';\n\nexport const addCapturedImages = (newCapturedImage: LabelImage): AddCapturedImageAction => ({\n  type: ADD_CAPTURED_IMAGE,\n  payload: { newCapturedImage },\n});\n\nexport const updateCapturedImages = (capturedImages: LabelImage[]): UpdateCapturedImageAction => ({\n  type: UPDATE_CAPTURED_IMAGES,\n  payload: { capturedImages },\n});\n\nexport const thunkAddCapturedImages = (streamId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/streams/${streamId}/capture`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 'ok') {\n        dispatch(addCapturedImages(data.image));\n        dispatch(getLabelImages());\n      }\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const thunkGetCapturedImages = (partId: string): PartThunk => async (dispatch): Promise<void> => {\n  fetch(`/api/images`)\n    .then((response) => response.json())\n    .then((data) => {\n      const imagesWithRelatedPart = data.reduce((acc, cur) => {\n        if (cur.part.split('/')[5] === partId) acc.push(cur);\n        return acc;\n      }, []);\n      dispatch(updateCapturedImages(imagesWithRelatedPart));\n      return null;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","export const getIdFromUrl = (url: string): number => parseInt(url.split(\"/\")[5], 10) ;","import { LabelImage } from '../store/image/imageTypes';\nimport { getIdFromUrl } from './GetIDFromUrl';\n\ninterface Options {\n  partId?: number;\n  isRelabel?: boolean;\n}\nexport const getFilteredImages = (\n  images: LabelImage[],\n  { partId, isRelabel = false }: Options,\n): LabelImage[] => {\n  if (partId === undefined) return images;\n  return images.filter((image) => getIdFromUrl(image.part) === partId && image.is_relabel === isRelabel);\n};\n","import { DropdownItemProps } from '@fluentui/react-northstar';\n\nexport type Value = { id: number; name: string } | { id: number; name: string }[];\n\nexport const formatDropdownValue = (value: Value): DropdownItemProps | DropdownItemProps[] => {\n  if (Array.isArray(value)) {\n    return value.map((e) => ({\n      header: e.name,\n      content: {\n        key: e.id,\n      },\n    }));\n  }\n  if (value) {\n    return {\n      header: value.name,\n      content: {\n        key: value.id,\n      },\n    };\n  }\n  return null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Dropdown, Text, DropdownItemProps } from '@fluentui/react-northstar';\nimport { Link, Prompt } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useCameras } from '../../hooks/useCameras';\nimport { State } from '../../store/State';\nimport { Camera } from '../../store/camera/cameraTypes';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { RTSPVideo } from '../RTSPVideo';\nimport { getLabelImages } from '../../store/image/imageActions';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { formatDropdownValue } from '../../util/formatDropdownValue';\n\nexport const CapturePhotos: React.FC<{ partId: number }> = ({ partId }) => {\n  const [selectedCamera, setSelectedCamera] = useState<Camera>(null);\n\n  return (\n    <>\n      <CameraSelector selectedCamera={selectedCamera} setSelectedCamera={setSelectedCamera} />\n      <RTSPVideo rtsp={selectedCamera?.rtsp} partId={partId} canCapture={true} />\n      <CapturedImagesContainer partId={partId} />\n    </>\n  );\n};\n\nconst CameraSelector = ({ selectedCamera, setSelectedCamera }): JSX.Element => {\n  const availableCameras = useCameras();\n\n  const items: DropdownItemProps[] = availableCameras.map((ele) => ({\n    header: ele.name,\n    content: {\n      key: ele.id,\n    },\n  }));\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setSelectedCamera((prev) => prev);\n    else {\n      const { key } = data.value.content;\n      const newSelectedCamera = availableCameras.find((ele) => ele.id === key);\n      if (newSelectedCamera) setSelectedCamera(newSelectedCamera);\n    }\n  };\n\n  return (\n    <Flex gap=\"gap.small\" vAlign=\"center\">\n      <Text>Select Camera</Text>\n      <Dropdown items={items} onChange={onDropdownChange} value={formatDropdownValue(selectedCamera)} />\n      <Link to=\"/addCamera\">Add Camera</Link>\n    </Flex>\n  );\n};\n\nconst CapturedImagesContainer = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images).filter(\n    (image) => !image.is_relabel,\n  );\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  const imageCount = filteredImages.length;\n\n  return (\n    <>\n      <Text>Total: {imageCount}</Text>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Flex\n        styles={{\n          overflow: 'scroll',\n          border: '1px solid grey',\n          height: '150px',\n          borderColor: isValid ? '' : 'red',\n        }}\n        gap=\"gap.small\"\n        vAlign=\"center\"\n      >\n        {filteredImages.map((image, i, arr) => (\n          <div key={image.id}>\n            <span>{i + 1}</span>\n            <LabelingPageDialog\n              key={i}\n              imageIndex={i}\n              images={arr}\n              trigger={<LabelDisplayImage labelImage={image} pointerCursor width={200} height={150} />}\n              isRelabel={false}\n            />\n          </div>\n        ))}\n      </Flex>\n      <Prompt\n        when={imageCount < 15}\n        message=\"The count of images is less than 15, which may cause error when configure part identification. Sure you want to leave?\"\n      />\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Camera } from '../store/camera/cameraTypes';\nimport { getCameras } from '../store/camera/cameraActions';\n\n/**\n * Fetch the cameras data from server and set to Redux Store\n */\nexport const useCameras = (): Camera[] => {\n  const dispatch = useDispatch();\n  const cameras: Camera[] = useSelector<State, Camera[]>((state) => state.cameras);\n\n  useEffect(() => {\n    dispatch(getCameras());\n  }, [dispatch]);\n\n  return cameras;\n};\n","import React, { useEffect } from 'react';\nimport { Text, Grid } from '@fluentui/react-northstar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/State';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport { getFilteredImages } from '../../util/getFilteredImages';\nimport { LabelImage } from '../../store/image/imageTypes';\nimport { getLabelImages, postLabelImage } from '../../store/image/imageActions';\n\nexport const UploadPhotos = ({ partId }): JSX.Element => {\n  const dispatch = useDispatch();\n  const images = useSelector<State, LabelImage[]>((state) => state.images);\n  const filteredImages = getFilteredImages(images, { partId, isRelabel: false });\n  const isValid = filteredImages.filter((image) => image.labels).length >= 15;\n\n  useEffect(() => {\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  function handleUpload(e: React.ChangeEvent<HTMLInputElement>): void {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const formData = new FormData();\n      formData.append('image', e.target.files[i]);\n      formData.append('part', `/api/parts/${partId}/`);\n      dispatch(postLabelImage(formData));\n    }\n  }\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleUpload} accept=\"image/*\" multiple />\n      <CapturedImagesContainer capturedImages={filteredImages} isValid={isValid} partId={partId} />\n    </>\n  );\n};\n\nconst CapturedImagesContainer = ({ capturedImages, isValid, partId }): JSX.Element => {\n  return (\n    <>\n      {!isValid && <Text error>*Please capture and label more then 15 images</Text>}\n      <Grid\n        columns=\"2\"\n        styles={{\n          border: '1px solid grey',\n          height: '100%',\n          gridGap: '10px',\n          padding: '10px',\n          borderColor: isValid ? '' : 'red',\n          justifyItems: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {capturedImages.map((image, i, arr) => (\n          <LabelingPageDialog\n            key={i}\n            imageIndex={i}\n            images={arr}\n            trigger={<LabelDisplayImage labelImage={image} pointerCursor width={300} height={225} />}\n            isRelabel={false}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Flex, Input, TextArea, Button, Menu, Grid, Alert } from '@fluentui/react-northstar';\nimport { Link, useLocation, Switch, Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { CapturePhotos } from '../components/CapturePhoto';\nimport { UploadPhotos } from '../components/UploadPhotos';\nimport { useQuery } from '../hooks/useQuery';\n\nexport const PartDetails = (): JSX.Element => {\n  const partId = useQuery().get('partId');\n\n  return (\n    <Grid columns={'repeat(12, 1fr)'} styles={{ gridColumnGap: '20px', height: '100%' }}>\n      <LeftPanel partId={partId} />\n      <RightPanel partId={partId} />\n    </Grid>\n  );\n};\n\nconst LeftPanel = ({ partId }): JSX.Element => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    if (partId) {\n      axios\n        .get(`/api/parts/${partId}/`)\n        .then(({ data }) => {\n          setName(data.name);\n          setDescription(data.description);\n          return void 0;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [partId]);\n\n  const onSave = (): void => {\n    const hasPartId = ![undefined, null].includes(partId);\n    const url = hasPartId ? `/api/parts/${partId}/` : `/api/parts/`;\n\n    axios({\n      method: hasPartId ? 'PUT' : 'POST',\n      url,\n      data: {\n        name,\n        description,\n      },\n    })\n      .then(({ data }) => {\n        history.push(`/parts/detail/capturePhotos?partId=${data.id}`);\n        return void 0;\n      })\n      .catch((err) => {\n        setError(JSON.stringify(err.response.data));\n      });\n  };\n\n  return (\n    <Flex column space=\"around\" styles={{ gridColumn: '1 / span 4' }}>\n      <Input\n        placeholder=\"Enter Part Name...\"\n        fluid\n        styles={{ fontSize: '2em' }}\n        value={name}\n        onChange={(_, newProps): void => {\n          setName(newProps.value);\n        }}\n      />\n      <TextArea\n        placeholder=\"Enter Description...\"\n        design={{ height: '80%' }}\n        value={description}\n        onChange={(_, newProps): void => {\n          setDescription(newProps.value);\n        }}\n      />\n      <Flex space=\"around\">\n        <Button content=\"Save\" primary onClick={onSave} disabled={!name || !description} />\n        <Button content=\"Cancel\" />\n      </Flex>\n      {!!error && <Alert danger content={error} dismissible />}\n    </Flex>\n  );\n};\n\nconst RightPanel = ({ partId }): JSX.Element => {\n  return (\n    <Flex column gap=\"gap.small\" styles={{ gridColumn: '5 / span 8' }}>\n      {partId ? <Tab partId={partId} /> : null}\n      <Switch>\n        <Route path={`/parts/detail/capturePhotos`}>\n          <CapturePhotos partId={parseInt(partId, 10)} />\n        </Route>\n        <Route path={`/parts/detail/uploadPhotos`}>\n          <UploadPhotos partId={parseInt(partId, 10)} />\n        </Route>\n      </Switch>\n    </Flex>\n  );\n};\n\nconst Tab = ({ partId }): JSX.Element => {\n  const items = [\n    {\n      key: 'uploadPhotos',\n      as: Link,\n      to: `/parts/detail/uploadPhotos?partId=${partId}`,\n      content: 'Upload Photos',\n    },\n    {\n      key: 'capturePhotos',\n      as: Link,\n      to: `/parts/detail/capturePhotos?partId=${partId}`,\n      content: 'Capture Photo',\n    },\n  ];\n\n  const { pathname } = useLocation();\n  const activeIndex = items.findIndex((ele) => ele.to.split('?')[0] === pathname);\n\n  return <Menu items={items} activeIndex={activeIndex} pointing primary />;\n};\n","import axios from 'axios';\nimport {\n  GET_LOCATION_SUCCESS,\n  POST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILURE,\n  GetLocationsSuccess,\n  RequestLocationsFailure,\n  PostLocationSuccess,\n  Location,\n} from './locationTypes';\n\nconst getLocationsSuccess = (data: Location[]): GetLocationsSuccess => ({\n  type: GET_LOCATION_SUCCESS,\n  payload: data,\n});\n\nconst requestLocationsFailure = (error: any): RequestLocationsFailure => {\n  console.error(error);\n  return { type: REQUEST_LOCATION_FAILURE };\n};\n\nconst postLocationSuccess = (data: Location): PostLocationSuccess => ({\n  type: POST_LOCATION_SUCCESS,\n  payload: data,\n});\n\nexport const getLocations = () => (dispatch): Promise<void> => {\n  return axios('/api/locations/')\n    .then(({ data }) => {\n      dispatch(getLocationsSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n\nexport const postLocation = (newLocation: Location) => (dispatch): Promise<void> => {\n  return axios('/api/locations/', {\n    method: 'POST',\n    data: newLocation,\n  })\n    .then(({ data }) => {\n      dispatch(postLocationSuccess(data));\n      return void 0;\n    })\n    .catch((err) => {\n      dispatch(requestLocationsFailure(err));\n    });\n};\n","import React, { useEffect, FC } from 'react';\nimport { Grid } from '@fluentui/react-northstar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { State } from '../store/State';\nimport { Location } from '../store/location/locationTypes';\nimport ImageLink from '../components/ImageLink';\nimport { getLocations } from '../store/location/locationActions';\nimport AddButton from '../components/AddButton';\n\nconst Locations: FC = () => {\n  const dispatch = useDispatch();\n  const locations = useSelector<State, Location[]>((state) => state.locations.filter((e) => !e.is_demo));\n\n  useEffect(() => {\n    dispatch(getLocations());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        padding: '3em',\n        height: '100%',\n      }}\n    >\n      <Grid columns=\"8\" styles={{ height: '75%' }}>\n        {locations.map((location, i) => (\n          <ImageLink\n            key={i}\n            to={`/locations/detail?name=${location.name}`}\n            defaultSrc=\"/icons/defaultLocation.png\"\n            width=\"6.25em\"\n            height=\"6.25em\"\n            label={location.name}\n          />\n        ))}\n      </Grid>\n      <div style={{ alignSelf: 'flex-end' }}>\n        <Link to=\"/locations/register\">\n          <AddButton />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Locations;\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Flex, Text, Input, TextArea, Button, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { postLocation } from '../store/location/locationActions';\n\nconst LocationRegister: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState<string>('');\n  const [coordinates, setCoordinates] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Register Location\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"100px\" height=\"100px\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Input\n            styles={{ paddingTop: '10px', minHeight: '100px' }}\n            placeholder=\"Location Name\"\n            value={name}\n            onChange={(_, newProps): void => setName(newProps.value)}\n          />\n          <Input value={coordinates} onChange={(_, newProps): void => setCoordinates(newProps.value)} />\n          <TextArea\n            styles={{ height: '60%' }}\n            value={description}\n            onChange={(_, newProps): void => setDescription(newProps.value)}\n          />\n        </Flex>\n      </Grid>\n      <Flex gap=\"gap.medium\" padding=\"padding.medium\">\n        <Button\n          primary\n          disabled={[name, coordinates, description].includes('')}\n          onClick={(): void => {\n            dispatch(postLocation({ name, coordinates, description, is_demo: false }));\n            history.push('/locations');\n          }}\n          content=\"Save\"\n        />\n        <Button\n          content=\"Cancel\"\n          onClick={(): void => {\n            history.push('/locations');\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default LocationRegister;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Flex, Text, Grid, Divider } from '@fluentui/react-northstar';\nimport ImageLink from '../components/ImageLink';\nimport { Location } from '../store/location/locationTypes';\nimport { State } from '../store/State';\nimport { useQuery } from '../hooks/useQuery';\n\nconst LocationDetails: FC = () => {\n  const name = useQuery().get('name');\n  const location = useSelector<State, Location>((state) => state.locations.find((e) => e.name === name));\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Details\n      </Text>\n      <Divider color=\"black\" />\n      <Grid columns=\"15% 3fr 2fr\" styles={{ height: '60%' }}>\n        <Flex column gap=\"gap.large\">\n          <ImageLink defaultSrc=\"/icons/defaultLocation.png\" width=\"6.25em\" height=\"6.25em\" />\n          <Text>Coordinates:</Text>\n          <Text>Description:</Text>\n        </Flex>\n        <Flex column gap=\"gap.large\">\n          <Text styles={{ paddingTop: '0.625em', minHeight: '6.25em' }}>{location.name}</Text>\n          <Text>{location.coordinates}</Text>\n          <Text styles={{ height: '60%' }}>{location.description}</Text>\n        </Flex>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationDetails;\n","import React, { useState, useEffect, SetStateAction, Dispatch, FC, memo, useMemo } from 'react';\nimport { Dropdown, DropdownItemProps, Text, Button, RadioGroup } from '@fluentui/react-northstar';\nimport LabelDisplayImage from '../LabelDisplayImage';\nimport LabelingPageDialog from '../LabelingPageDialog';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImageIdentificationItemProps {\n  confidenceLevel: number;\n  relabelImages: RelabelImage[];\n  imageIndex: number;\n  setJudgedImageList: Dispatch<SetStateAction<JudgedImageList>>;\n  partId: number;\n  partItems: DropdownItemProps[];\n  isPartCorrect: number;\n}\nconst ImageIdentificationItem: FC<ImageIdentificationItemProps> = ({\n  confidenceLevel,\n  relabelImages,\n  imageIndex,\n  setJudgedImageList,\n  partId,\n  partItems,\n  isPartCorrect,\n}) => {\n  const filteredPartItems = useMemo(\n    () => [\n      {\n        header: 'No Object',\n        content: {\n          key: null,\n        },\n      },\n      ...partItems.filter((e) => (e.content as any).key !== partId),\n    ],\n    [partId, partItems],\n  );\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(filteredPartItems[0]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n\n      setJudgedImageList((prev) => {\n        const next = [...prev];\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx === -1) throw new Error(\"Image id doesn't match\");\n        next[idx] = { ...next[idx], partId: value.content.key };\n\n        return next;\n      });\n    }\n  };\n\n  const onRadioGroupChange = (_, newProps): void => {\n    setJudgedImageList((prev) => {\n      const next = [...prev];\n\n      if (newProps.value === 1) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId };\n        else next.push({ imageId: relabelImages[imageIndex].id, partId });\n      } else if (newProps.value === 0) {\n        const idx = next.findIndex((e) => e.imageId === relabelImages[imageIndex].id);\n\n        if (idx >= 0) next[idx] = { ...next[idx], partId: null };\n        else {\n          next.push({\n            imageId: relabelImages[imageIndex].id,\n            partId: null,\n          });\n        }\n      }\n      return next;\n    });\n  };\n\n  useEffect(() => {\n    setJudgedImageList([]);\n    setSelectedPartItem(filteredPartItems[0]);\n  }, [filteredPartItems, setSelectedPartItem, setJudgedImageList]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        minHeight: '9em',\n        maxHeight: '30%',\n        justifyContent: 'center',\n        padding: '1em',\n      }}\n    >\n      <div style={{ margin: '0.1em' }}>\n        <LabelDisplayImage labelImage={relabelImages[imageIndex]} width={100} height={100} />\n      </div>\n      <div\n        style={{\n          height: '100%',\n          width: '40%',\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Text truncated>\n          Confidence Level: <b>{confidenceLevel}%</b>\n        </Text>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '50%',\n          }}\n        >\n          <RadioGroup\n            checkedValue={isPartCorrect}\n            onCheckedValueChange={onRadioGroupChange}\n            items={[\n              {\n                key: '1',\n                label: 'Yes',\n                value: 1,\n              },\n              {\n                key: '0',\n                label: 'No',\n                value: 0,\n              },\n            ]}\n          />\n          {isPartCorrect === 0 && filteredPartItems.length > 0 && (\n            <div style={{ width: '50%' }}>\n              <Dropdown\n                fluid\n                items={filteredPartItems}\n                onChange={onDropdownChange}\n                value={selectedPartItem}\n              />\n            </div>\n          )}\n        </div>\n        <LabelingPageDialog\n          imageIndex={imageIndex}\n          images={relabelImages}\n          isRelabel={true}\n          trigger={<Button primary content=\"Identify\" disabled={!isPartCorrect} />}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImageIdentificationItem);\n","import React, { FC, Dispatch, memo } from 'react';\nimport { Grid, DropdownItemProps } from '@fluentui/react-northstar';\nimport ImageIdentificationItem from './ImageItem';\nimport { JudgedImageList, RelabelImage } from './types';\n\ninterface ImagesContainerProps {\n  images: RelabelImage[];\n  judgedImageList: JudgedImageList;\n  setJudgedImageList: Dispatch<JudgedImageList>;\n  selectedPartId: number;\n  partItems: DropdownItemProps[];\n}\nconst ImagesContainer: FC<ImagesContainerProps> = ({\n  images,\n  judgedImageList,\n  setJudgedImageList,\n  selectedPartId,\n  partItems,\n}) => {\n  return (\n    <Grid\n      columns=\"2\"\n      styles={{\n        width: '100%',\n        height: '80%',\n        overflow: 'scroll',\n        borderWidth: '0.0625em',\n        borderStyle: 'solid'\n      }}\n    >\n      {images.map((img, i, arr) => {\n        if (img.display) {\n          let isPartCorrect: number = null;\n          const idx = judgedImageList.findIndex((e) => e.imageId === img.id);\n\n          if (idx >= 0) {\n            if (judgedImageList[idx].partId === selectedPartId) {\n              isPartCorrect = 1;\n            } else isPartCorrect = 0;\n          }\n\n          return (\n            <ImageIdentificationItem\n              key={img.id}\n              confidenceLevel={img.confidenceLevel}\n              imageIndex={i}\n              relabelImages={arr}\n              isPartCorrect={isPartCorrect}\n              setJudgedImageList={setJudgedImageList}\n              partId={selectedPartId}\n              partItems={partItems}\n            />\n          );\n        }\n        return void 0;\n      })}\n    </Grid>\n  );\n};\n\nexport default memo(ImagesContainer);\n","import React, { useState, useEffect, useRef, useMemo, FC } from 'react';\nimport {\n  Dropdown,\n  DropdownItemProps,\n  Grid,\n  Flex,\n  Text,\n  Divider,\n  Button,\n  ArrowDownIcon,\n  ArrowUpIcon,\n} from '@fluentui/react-northstar';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport { Range, Handle } from 'rc-slider';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../rc-slider.css';\n\nimport { State } from '../store/State';\nimport { useParts } from '../hooks/useParts';\nimport { ProjectData } from '../store/project/projectTypes';\nimport { LabelImage } from '../store/image/imageTypes';\nimport { getFilteredImages } from '../util/getFilteredImages';\nimport { thunkGetProject } from '../store/project/projectActions';\nimport { getLabelImages } from '../store/image/imageActions';\nimport { JudgedImageList, RelabelImage } from '../components/ManualIdentification/types';\nimport ImagesContainer from '../components/ManualIdentification/ImagesContainer';\n\nconst ManualIdentification: FC = () => {\n  const dispatch = useDispatch();\n  const { projectData, images } = useSelector<State, { projectData: ProjectData; images: LabelImage[] }>(\n    (state) => ({\n      projectData: state.project.data,\n      images: state.images,\n    }),\n  );\n  const parts = useParts();\n  const partItems = useMemo<DropdownItemProps[]>(() => {\n    if (parts.length === 0 || projectData.parts.length === 0) return [];\n\n    return projectData.parts.map((partId) => {\n      const part = parts.find((e) => e.id === partId);\n\n      return {\n        header: part.name,\n        content: {\n          key: part.id,\n        },\n      };\n    });\n  }, [parts, projectData]);\n\n  const [selectedPartItem, setSelectedPartItem] = useState<DropdownItemProps>(null);\n  const selectedPartId: number = (selectedPartItem?.content as any)?.key ?? null;\n\n  const [confidenceLevelRange, setConfidenceLevelRange] = useState<[number, number]>([\n    projectData.accuracyRangeMin,\n    projectData.accuracyRangeMax,\n  ]);\n  const [ascend, setAscend] = useState<boolean>(false);\n  const sortRef = useRef({ sorted: false, prevIsAscend: false });\n  const [judgedImageList, setJudgedImageList] = useState<JudgedImageList>([]);\n\n  const [relabelImages, setRelabelImages] = useState<RelabelImage[]>([]);\n\n  useEffect(() => {\n    dispatch(thunkGetProject());\n    dispatch(getLabelImages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setRelabelImages(\n      getFilteredImages(images, {\n        partId: selectedPartId,\n        isRelabel: true,\n      }).map((e) => {\n        const confidenceLevel = ((e.confidence * 1000) | 0) / 10;\n        return {\n          ...e,\n          confidenceLevel,\n          display: confidenceLevel >= confidenceLevelRange[0] && confidenceLevel <= confidenceLevelRange[1],\n        };\n      }),\n    );\n    return (): void => {\n      setAscend(false);\n      sortRef.current = { sorted: false, prevIsAscend: false };\n    };\n  }, [confidenceLevelRange, images, selectedPartId]);\n\n  useEffect(() => {\n    if (sortRef.current.sorted) {\n      if (sortRef.current.prevIsAscend !== ascend) {\n        setRelabelImages((prev) => {\n          const next = [...prev];\n          next.reverse();\n          return next;\n        });\n        sortRef.current.prevIsAscend = ascend;\n      }\n    } else {\n      setRelabelImages((prev) => {\n        if (ascend) prev.sort((a, b) => a.confidenceLevel - b.confidenceLevel);\n        else prev.sort((a, b) => b.confidenceLevel - a.confidenceLevel);\n        return [...prev];\n      });\n      sortRef.current = { sorted: true, prevIsAscend: true };\n    }\n\n  }, [ascend]);\n\n  const onDropdownChange = (_, { value }): void => {\n    if (value !== null) {\n      setSelectedPartItem(value);\n    }\n  };\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Manual Identification\n      </Text>\n      <Divider color=\"black\" />\n      <Flex column gap=\"gap.medium\" space=\"between\" styles={{ height: '75vh', padding: '1em' }}>\n        <Grid columns=\"3\" styles={{ columnGap: '1em', justifyItems: 'center' }}>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\">\n            <Text truncated>Select Part:</Text>\n            <Dropdown items={partItems} onChange={onDropdownChange} value={selectedPartItem} />\n          </Flex>\n          <Flex vAlign=\"center\" gap=\"gap.smaller\" styles={{ width: '80%' }}>\n            <Text>Confidence Level:</Text>\n            <div style={{ width: '70%' }}>\n              <Range\n                value={confidenceLevelRange}\n                allowCross={false}\n                onChange={setConfidenceLevelRange}\n                handle={({ value, dragging, index, ...restProps }): JSX.Element => {\n                  return (\n                    <Tooltip\n                      prefixCls=\"rc-slider-tooltip\"\n                      overlay={`${value}%`}\n                      visible={dragging}\n                      placement=\"top\"\n                      key={index}\n                    >\n                      <Handle value={value} {...restProps} />\n                    </Tooltip>\n                  );\n                }}\n              />\n            </div>\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text truncated>Sort:</Text>\n            <Button\n              icon={ascend ? <ArrowDownIcon /> : <ArrowUpIcon />}\n              styles={{ color: sortRef.current.sorted ? '#0094d8' : 'grey' }}\n              text\n              iconOnly\n              onClick={(): void => {\n                setAscend((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Grid>\n        <ImagesContainer\n          images={relabelImages}\n          judgedImageList={judgedImageList}\n          setJudgedImageList={setJudgedImageList}\n          selectedPartId={selectedPartId}\n          partItems={partItems}\n        />\n        <Button\n          content=\"Update\"\n          styles={{ width: '15%' }}\n          primary\n          disabled={judgedImageList.length === 0}\n          onClick={(): void => {\n            axios({ method: 'POST', url: '/api/relabel/update', data: judgedImageList })\n              .then(() => {\n                dispatch(getLabelImages());\n                setJudgedImageList([]);\n                return void 0;\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n          }}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ManualIdentification;\n","import React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text, Button, AddIcon } from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getIdFromUrl } from '../util/GetIDFromUrl';\n\nexport const Parts: React.FC = () => {\n  const [parts, setParts] = useState([]);\n\n  useEffect(() => {\n    const partsAPI = Axios.get('/api/parts/');\n    const imagesAPI = Axios.get('/api/images/');\n\n    Axios.all([partsAPI, imagesAPI])\n      .then(\n        Axios.spread((...responses) => {\n          const { data: partsRes } = responses[0];\n          const { data: images } = responses[1];\n          setParts(\n            partsRes.map((e) => ({\n              ...e,\n              images: images.find((img) => getIdFromUrl(img.part) === e.id)?.image,\n            })),\n          );\n        }),\n      )\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <Flex gap=\"gap.large\" wrap>\n        {parts\n          .filter((e) => !e.is_demo)\n          .map((ele) => (\n            <Item key={ele.id} src={ele.images} id={ele.id} name={ele.name} />\n          ))}\n      </Flex>\n      <Button\n        primary\n        fluid\n        circular\n        content={<AddIcon size=\"largest\" circular />}\n        style={{\n          width: 100,\n          height: 100,\n          position: 'fixed',\n          right: '100px',\n          bottom: '100px',\n        }}\n        as={Link}\n        to=\"/parts/detail\"\n      />\n    </div>\n  );\n};\n\nconst Item = ({ src, id, name }): JSX.Element => {\n  return (\n    <Flex column hAlign=\"center\" gap=\"gap.large\" as={Link} to={`/parts/detail/capturePhotos?partId=${id}`}>\n      <div style={{ width: '250px', height: '250px' }}>\n        <Image src={src} styles={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n      </div>\n      <Text size=\"larger\">{name}</Text>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Divider,\n  Text,\n  Flex,\n  Dropdown,\n  Button,\n  DropdownItemProps,\n  Checkbox,\n  Input,\n  Alert,\n  Dialog,\n  ExclamationCircleIcon,\n  ShorthandCollection,\n} from '@fluentui/react-northstar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\n\nimport { thunkGetProject, thunkPostProject, updateProjectData } from '../store/project/projectActions';\nimport { Project, ProjectData } from '../store/project/projectTypes';\nimport { State } from '../store/State';\nimport { formatDropdownValue, Value } from '../util/formatDropdownValue';\n\nexport const PartIdentification: React.FC = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error, data } = useSelector<State, Project>((state) => state.project);\n  const {\n    id: projectId,\n    camera,\n    location,\n    parts,\n    needRetraining,\n    accuracyRangeMin,\n    accuracyRangeMax,\n    maxImages: maxImage,\n  } = data;\n  const [isTestModel, setIsTestModel] = useState(false);\n  const [cameraLoading, dropDownCameras, selectedCamera, setSelectedCameraById] = useDropdownItems<any>(\n    'cameras',\n    isTestModel,\n  );\n  const [partLoading, dropDownParts, selectedParts, setSelectedPartsById] = useDropdownItems<any>(\n    'parts',\n    isTestModel,\n    true,\n  );\n  const [locationLoading, dropDownLocations, selectedLocations, setSelectedLocationById] = useDropdownItems<\n    any\n  >('locations', isTestModel);\n  const history = useHistory();\n  const [maxImgCountError, setMaxImgCountError] = useState(false);\n\n  useEffect(() => {\n    if (!cameraLoading && !partLoading && !locationLoading) {\n      dispatch(thunkGetProject(isTestModel));\n    }\n  }, [dispatch, cameraLoading, locationLoading, partLoading, isTestModel]);\n\n  useEffect(() => {\n    if (location) setSelectedLocationById(location);\n    if (parts.length) setSelectedPartsById(parts);\n    if (camera) setSelectedCameraById(camera);\n  }, [camera, location, parts, setSelectedCameraById, setSelectedLocationById, setSelectedPartsById]);\n\n  const handleSubmitConfigure = (): void => {\n    ((dispatch(\n      thunkPostProject(projectId, selectedLocations, selectedParts, selectedCamera, isTestModel),\n    ) as unknown) as Promise<number>)\n      .then((id) => {\n        if (typeof id !== 'undefined') history.push(`/cameras/detail?name=${selectedCamera.name}`);\n        return void 0;\n      })\n      .catch((e) => e);\n  };\n\n  const setData = (keyName: keyof ProjectData, value: ProjectData[keyof ProjectData]): void => {\n    dispatch(updateProjectData({ ...data, [keyName]: value }));\n  };\n\n  const accracyRangeDisabled = !needRetraining || isTestModel;\n\n  return (\n    <>\n      <Text size=\"larger\" weight=\"semibold\">\n        Part Identification\n      </Text>\n      <Divider color=\"black\" />\n      {error && (\n        <Alert danger header=\"Load Part Identification Error\" content={`${error.name}: ${error.message}`} />\n      )}\n      <TestModelButton isTestModel={isTestModel} setIsTestModel={setIsTestModel} />\n      <Flex column gap=\"gap.large\" design={{ paddingTop: '30px' }}>\n        <ModuleSelector\n          moduleName=\"cameras\"\n          to=\"/cameras\"\n          value={selectedCamera}\n          setSelectedModuleItem={setSelectedCameraById}\n          items={dropDownCameras}\n          isMultiple={false}\n          isTestModel={isTestModel}\n        />\n        <ModuleSelector\n          moduleName=\"parts\"\n          to=\"/parts\"\n          value={selectedParts}\n          setSelectedModuleItem={setSelectedPartsById}\n          items={dropDownParts}\n          isMultiple={true}\n          isTestModel={isTestModel}\n        />\n        <ModuleSelector\n          moduleName=\"locations\"\n          to=\"/locations\"\n          value={selectedLocations}\n          setSelectedModuleItem={setSelectedLocationById}\n          items={dropDownLocations}\n          isMultiple={false}\n          isTestModel={isTestModel}\n        />\n        <Checkbox\n          label=\"Set up retraining\"\n          checked={needRetraining}\n          onChange={(_, { checked }): void => setData('needRetraining', checked)}\n          disabled={isTestModel}\n        />\n        <Text disabled={accracyRangeDisabled}>Accuracy Range</Text>\n        <Text disabled={accracyRangeDisabled}>\n          Minimum:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={accuracyRangeMin}\n            onChange={(_, { value }): void => setData('accuracyRangeMin', value)}\n          />\n          %\n        </Text>\n        <Text disabled={accracyRangeDisabled}>\n          Maximum:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={accuracyRangeMax}\n            onChange={(_, { value }): void => setData('accuracyRangeMax', value)}\n          />\n          %\n        </Text>\n        <Text disabled={accracyRangeDisabled}>\n          Maximum Images:{' '}\n          <Input\n            type=\"number\"\n            disabled={accracyRangeDisabled}\n            inline\n            value={maxImage}\n            onChange={(_, { value }): void => {\n              if ((value as any) < 15) setMaxImgCountError(true);\n              else setMaxImgCountError(false);\n              setData('maxImages', value);\n            }}\n          />\n          {maxImgCountError && <Text error>Cannot be less than 15</Text>}\n        </Text>\n        <Link to=\"\">Advanced Configuration</Link>\n        <Button\n          content=\"Configure\"\n          primary\n          onClick={handleSubmitConfigure}\n          disabled={(!selectedCamera || !selectedLocations || !selectedParts || isLoading) && !isTestModel}\n          loading={isLoading}\n        />\n      </Flex>\n    </>\n  );\n};\n\nconst TestModelButton = ({ isTestModel, setIsTestModel }): JSX.Element => {\n  if (isTestModel) {\n    return (\n      <Button\n        styles={{\n          backgroundColor: '#ff9727',\n          ':hover': {\n            backgroundColor: '#cf7a1f',\n          },\n          ':active': {\n            backgroundColor: '#cf7a1f',\n          },\n        }}\n        content=\"Back\"\n        onClick={(): void => setIsTestModel(false)}\n        primary\n      />\n    );\n  }\n\n  return (\n    <Dialog\n      styles={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n      cancelButton=\"Cancel\"\n      confirmButton=\"Confirm to use test model\"\n      onConfirm={(): void => setIsTestModel(true)}\n      content={\n        <>\n          <Flex hAlign=\"center\" column>\n            <ExclamationCircleIcon\n              size=\"largest\"\n              styles={({ theme: { siteVariables } }): any => ({\n                color: siteVariables.colorScheme.brand.foreground,\n              })}\n            />\n            <div>\n              <p>Test model is for seeing inference result, no retraining experience here.</p>\n              <p>For retraining experience, please create a new model</p>\n            </div>\n          </Flex>\n        </>\n      }\n      trigger={\n        <Button\n          styles={{\n            backgroundColor: '#ff9727',\n            ':hover': {\n              backgroundColor: '#cf7a1f',\n            },\n            ':active': {\n              backgroundColor: '#cf7a1f',\n            },\n          }}\n          content=\"Test Model\"\n          primary\n        />\n      }\n    />\n  );\n};\n\n// TODO Make this integrate with Redux\nfunction useDropdownItems<T>(\n  moduleName: string,\n  isTestModel: boolean,\n  isMultiple?: boolean,\n): [boolean, DropdownItemProps[], T | T[], (id: string | string[]) => void] {\n  const originItems = useRef<(T & { id: number })[]>([]);\n  const [dropDownItems, setDropDownItems] = useState<DropdownItemProps[]>([]);\n  const [selectedItem, setSelectedItem] = useState<T | T[]>(isMultiple ? [] : null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    Axios(`/api/${moduleName}/?is_demo=${Number(isTestModel)}`)\n      .then(({ data }) => {\n        setDropDownItems(\n          data.map((e) => ({\n            header: e.name,\n            content: {\n              key: e.id,\n            },\n          })),\n        );\n        originItems.current = data;\n        if (isMultiple) {\n          setSelectedItem(data);\n        } else {\n          setSelectedItem(data[0]);\n        }\n        setLoading(false);\n        return void 0;\n      })\n      .catch((err) => console.error(err))\n      .finally(() => setLoading(false));\n  }, [isMultiple, moduleName, isTestModel]);\n\n  const setSelectedItemById = useCallback((id: string | string[]): void => {\n    if (Array.isArray(id)) {\n      const correspondedItems = id.reduce((acc, cur) => {\n        const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === cur.toString());\n        if (correspondedItem) acc.push(correspondedItem);\n        return acc;\n      }, []);\n      setSelectedItem(correspondedItems as any);\n    } else {\n      const correspondedItem = originItems.current.find((ele) => ele.id.toString(10) === id.toString());\n      if (correspondedItem) setSelectedItem(correspondedItem);\n    }\n  }, []);\n\n  return [loading, dropDownItems, selectedItem, setSelectedItemById];\n}\n\n/* Module Selector */\n\ntype ModuleSelectorProps = {\n  moduleName: string;\n  to: string;\n  value: Value;\n  setSelectedModuleItem: (id: string | string[]) => void;\n  items: ShorthandCollection<DropdownItemProps>;\n  isMultiple: boolean;\n  isTestModel: boolean;\n};\n\nconst ModuleSelector: React.FC<ModuleSelectorProps> = ({\n  moduleName,\n  to,\n  value,\n  setSelectedModuleItem,\n  items,\n  isMultiple,\n  isTestModel,\n}): JSX.Element => {\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) return;\n    if (Array.isArray(data.value)) {\n      const ids = data.value.map((ele) => ele.content.key);\n      setSelectedModuleItem(ids);\n    } else {\n      const { key } = data.value.content;\n      setSelectedModuleItem(key);\n    }\n  };\n\n  return (\n    <Flex vAlign=\"center\" gap=\"gap.medium\">\n      <Text styles={{ width: '150px' }}>{`Select ${moduleName}`}</Text>\n      {isTestModel ? (\n        <Dropdown items={items} value={formatDropdownValue(value)} multiple={isMultiple} open={false} />\n      ) : (\n        <Dropdown\n          items={items}\n          onChange={onDropdownChange}\n          value={formatDropdownValue(value)}\n          multiple={isMultiple}\n        />\n      )}\n      <Link to={to}>{`Add ${moduleName}`}</Link>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect, useReducer, Reducer } from 'react';\nimport * as R from 'ramda';\nimport {\n  Divider,\n  Flex,\n  Text,\n  Input,\n  Button,\n  Alert,\n  Dropdown,\n  DropdownItemProps,\n} from '@fluentui/react-northstar';\nimport { Link } from 'react-router-dom';\nimport Axios, { AxiosRequestConfig } from 'axios';\nimport { useProject } from '../hooks/useProject';\n\nconst initialState = {\n  loading: false,\n  error: null,\n  current: {\n    id: -1,\n    key: '',\n    namespace: '',\n  },\n  origin: {\n    id: -1,\n    key: '',\n    namespace: '',\n  },\n};\n\ntype SettingDataState = typeof initialState;\n\ntype Action =\n  | {\n      type: 'UPDATE_KEY';\n      payload: string;\n    }\n  | {\n      type: 'UPDATE_NAMESPACE';\n      payload: string;\n    }\n  | {\n      type: 'REQUEST_START';\n    }\n  | {\n      type: 'REQUEST_SUCCESS';\n      payload: SettingDataState;\n    }\n  | {\n      type: 'REQUEST_FAIL';\n      error: Error;\n    };\n\ntype SettingReducer = Reducer<SettingDataState, Action>;\n\nconst reducer: SettingReducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_KEY':\n      return { ...state, current: { ...state.current, key: action.payload } };\n    case 'UPDATE_NAMESPACE':\n      return { ...state, current: { ...state.current, namespace: action.payload } };\n    case 'REQUEST_START':\n      return { ...state, loading: true };\n    case 'REQUEST_SUCCESS':\n      return action.payload;\n    case 'REQUEST_FAIL':\n      return { ...state, error: action.error };\n    default:\n      return state;\n  }\n};\n\nexport const Setting = (): JSX.Element => {\n  const [{ loading, error, current: settingData, origin: originSettingData }, dispatch] = useReducer<\n    SettingReducer\n  >(reducer, initialState);\n\n  const notEmpty = settingData.id !== -1;\n\n  const cannotUpdateOrSave = R.equals(settingData, originSettingData);\n\n  useEffect(() => {\n    dispatch({ type: 'REQUEST_START' });\n\n    Axios.get('/api/settings/')\n      .then(({ data }) => {\n        if (data.length > 0) {\n          dispatch({\n            type: 'REQUEST_SUCCESS',\n            payload: {\n              loading: false,\n              error: null,\n              current: {\n                id: data[0].id,\n                key: data[0].training_key,\n                namespace: data[0].endpoint,\n              },\n              origin: {\n                id: data[0].id,\n                key: data[0].training_key,\n                namespace: data[0].endpoint,\n              },\n            },\n          });\n        }\n        return void 0;\n      })\n      .catch((err) => {\n        dispatch({ type: 'REQUEST_FAIL', error: err });\n      });\n  }, []);\n\n  const onSave = (): void => {\n    const isSettingEmpty = settingData.id === -1;\n    const url = isSettingEmpty ? `/api/settings/` : `/api/settings/${settingData.id}/`;\n    const requestConfig: AxiosRequestConfig = isSettingEmpty\n      ? {\n          data: {\n            training_key: settingData.key,\n            endpoint: settingData.namespace,\n            name: '',\n            iot_hub_connection_string: '',\n            device_id: '',\n            module_id: '',\n          },\n          method: 'POST',\n        }\n      : {\n          data: {\n            training_key: settingData.key,\n            endpoint: settingData.namespace,\n          },\n          method: 'PUT',\n        };\n\n    dispatch({ type: 'REQUEST_START' });\n\n    Axios(url, requestConfig)\n      .then(({ data }) => {\n        dispatch({\n          type: 'REQUEST_SUCCESS',\n          payload: {\n            loading: false,\n            error: null,\n            current: {\n              id: data.id,\n              key: data.training_key,\n              namespace: data.endpoint,\n            },\n            origin: {\n              id: data.id,\n              key: data.training_key,\n              namespace: data.endpoint,\n            },\n          },\n        });\n        // Reload page so PreviousProjectPanel can query again\n        window.location.reload();\n        return void 0;\n      })\n      .catch((err) => {\n        dispatch({ type: 'REQUEST_FAIL', error: err });\n      });\n  };\n\n  return (\n    <>\n      <h1>Setting</h1>\n      <Divider color=\"grey\" design={{ paddingBottom: '10px' }} />\n      <Flex gap=\"gap.large\" design={{ height: '80%' }}>\n        <Flex column gap=\"gap.large\" design={{ width: '50%' }}>\n          <Text size=\"large\" weight=\"bold\">\n            Azure Cognitive Services Settings:{' '}\n          </Text>\n          <Flex vAlign=\"center\">\n            <Text size=\"large\" design={{ width: '300px' }}>\n              Namespace:\n            </Text>\n            <Input\n              value={settingData.namespace}\n              onChange={(_, { value }): void => dispatch({ type: 'UPDATE_NAMESPACE', payload: value })}\n              fluid\n            />\n          </Flex>\n          <Flex vAlign=\"center\">\n            <Text size=\"large\" design={{ width: '300px' }}>\n              Key:\n            </Text>\n            <Input\n              value={settingData.key}\n              onChange={(_, { value }): void => dispatch({ type: 'UPDATE_KEY', payload: value })}\n              fluid\n            />\n          </Flex>\n          <Flex gap=\"gap.large\">\n            <Button primary onClick={onSave} disabled={cannotUpdateOrSave || loading} loading={loading}>\n              {notEmpty ? 'Update' : 'Save'}\n            </Button>\n            <Button primary as={Link} to=\"/\">\n              Cancel\n            </Button>\n          </Flex>\n          {error ? <Alert danger content={`Failed to save ${error}`} dismissible /> : null}\n        </Flex>\n        {notEmpty && <PreviousProjectPanel settingDataId={settingData.id} />}\n      </Flex>\n    </>\n  );\n};\n\nconst PreviousProjectPanel: React.FC<{ settingDataId: number }> = ({ settingDataId }) => {\n  const [dropdownItems, setDropdownItems] = useState<DropdownItemProps[]>([]);\n  const [customVisionProjectId, setCustomVisionProjectId] = useState('');\n  const { isLoading: isProjectLoading, error: projectError, data: projectData } = useProject();\n  const [otherLoading, setOtherLoading] = useState(false);\n  const [otherError, setOtherError] = useState<Error>(null);\n\n  const onDropdownChange = (_, data): void => {\n    if (data.value === null) setCustomVisionProjectId(customVisionProjectId);\n    else setCustomVisionProjectId(data.value.content.key);\n  };\n\n  const onLoad = (): void => {\n    setOtherLoading(true);\n    Axios.get(\n      `api/projects/${projectData.id}/pull_cv_project?customvision_project_id=${customVisionProjectId}`,\n    )\n      .catch((err) => setOtherError(err))\n      .finally(() => setOtherLoading(false));\n  };\n\n  useEffect(() => {\n    if (settingDataId !== -1) {\n      setOtherLoading(true);\n      Axios.get(`/api/settings/${settingDataId}/list_projects`)\n        .then(({ data }) => {\n          const items: DropdownItemProps[] = Object.entries(data).map(([key, value]) => ({\n            header: value,\n            content: {\n              key,\n            },\n          }));\n          setDropdownItems(items);\n          return void 0;\n        })\n        .catch((e) => setOtherError(e))\n        .finally(() => setOtherLoading(false));\n    }\n  }, [settingDataId]);\n\n  const loading = otherLoading || isProjectLoading;\n  const error = [otherError, projectError].filter((e) => !!e);\n\n  return (\n    <>\n      <Divider color=\"grey\" vertical styles={{ height: '100%' }} />\n      <Flex column gap=\"gap.large\">\n        <Text size=\"large\" weight=\"bold\">\n          Previous Projects:{' '}\n        </Text>\n        <Dropdown items={dropdownItems} onChange={onDropdownChange} />\n        <Button\n          primary\n          content=\"Load\"\n          disabled={!customVisionProjectId || loading}\n          onClick={onLoad}\n          loading={loading}\n        />\n        {error.length ? <Alert danger content={`Failed to load ${error.join(', ')}`} dismissible /> : null}\n      </Flex>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { State } from '../store/State';\nimport { Project } from '../store/project/projectTypes';\nimport { thunkGetProject } from '../store/project/projectActions';\n\n/**\n * Fetch the project data from server and set to Redux Store\n */\nexport const useProject = (): Project => {\n  const dispatch = useDispatch();\n  const project = useSelector<State, Project>((state) => state.project);\n\n  useEffect(() => {\n    dispatch(thunkGetProject());\n  }, [dispatch]);\n\n  return project;\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Cameras from '../pages/Cameras';\nimport CameraDetails from '../pages/CameraDetails';\nimport { PartDetails } from '../pages/PartDetails';\nimport Locations from '../pages/Locations';\nimport LocationRegister from '../pages/LocationRegister';\nimport LocationDetails from '../pages/LocationDetails';\nimport ManualIdentification from '../pages/ManualIdentification';\nimport { Parts } from '../pages/Parts';\nimport { PartIdentification } from '../pages/PartIdentification';\nimport { Setting } from '../pages/Setting';\n\nexport const RootRouter: FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/manual\" component={ManualIdentification} />\n      <Route path=\"/locations/register\" component={LocationRegister} />\n      <Route path=\"/locations/detail\" component={LocationDetails} />\n      <Route path=\"/locations\" component={Locations} />\n      <Route path=\"/cameras/detail\" component={CameraDetails} />\n      <Route path=\"/cameras\" component={Cameras} />\n      <Route path=\"/parts/detail\" component={PartDetails} />\n      <Route path=\"/parts\" component={Parts} />\n      <Route path=\"/partIdentification\" component={PartIdentification} />\n      <Route path=\"/setting\" component={Setting} />\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  );\n};\n","import React, { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Text, Flex } from '@fluentui/react-northstar';\n\nconst getTitle = (pathname: string): string => {\n  switch (pathname) {\n    case 'cameras':\n      return 'Camera';\n    case 'parts':\n      return 'Part';\n    case 'locations':\n      return 'Location';\n    case 'register':\n      return 'Register';\n    case 'label':\n      return 'Label';\n    case 'manual':\n      return 'Identify Manually';\n    case 'detail':\n      return 'Details';\n    case 'partIdentification':\n      return 'Job Configuration';\n    case 'capturePhotos':\n      return null;\n    case 'uploadPhotos':\n      return null;\n    default:\n      if (typeof pathname === 'string') return 'Details';\n      return null;\n  }\n};\n\nconst Breadcrumb: FC = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/') return <Text color=\"black\">Home</Text>;\n\n  const { pathTitles } = pathname\n    .split('/')\n    .slice(1)\n    .reduce(\n      (acc, cur) => {\n        const title = getTitle(cur);\n        if (!title) return acc;\n\n        const path = `${acc.path}/${cur}`;\n\n        return {\n          pathTitles: [...acc.pathTitles, { title, to: path }],\n          path,\n        };\n      },\n      { pathTitles: [], path: '' },\n    );\n\n  return (\n    <Flex gap=\"gap.smaller\">\n      <Link to={'/'} style={{ color: '#0094d8', textDecoration: 'none' }}>\n        <Text>Home</Text>\n      </Link>\n      {pathTitles.map((e, i, arr) => {\n        // const title = getTitle(e);\n\n        return (\n          <Fragment key={i}>\n            <Text color=\"black\">{'>'}</Text>\n            {i === arr.length - 1 ? (\n              <Text color=\"black\">{e.title}</Text>\n            ) : (\n              <Link to={`${e.to}`} style={{ color: '#0094d8', textDecoration: 'none' }}>\n                <Text>{e.title}</Text>\n              </Link>\n            )}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { memo, FC } from 'react';\nimport { Segment, Image, Flex } from '@fluentui/react-northstar';\nimport { NavLink } from 'react-router-dom';\n\nconst LeftNav: FC<any> = ({ styles }): JSX.Element => {\n  return (\n    <Segment color=\"grey\" inverted styles={{ ...styles, padding: 0, paddingTop: '1em' }}>\n      <Flex column gap=\"gap.large\" hAlign=\"center\">\n        <NavItem src=\"/icons/location.png\" to=\"/locations\"></NavItem>\n        <NavItem src=\"/icons/camera.png\" to=\"/cameras\"></NavItem>\n        <NavItem src=\"/icons/part.png\" to=\"/parts\"></NavItem>\n        <NavItem src=\"/icons/manual.png\" to=\"/manual\"></NavItem>\n        <NavItem src=\"/icons/partIdentification.png\" to=\"/partIdentification\"></NavItem>\n      </Flex>\n    </Segment>\n  );\n};\n\nconst NavItem = ({ src, to }): JSX.Element => {\n  return (\n    <NavLink\n      to={to}\n      style={{ display: 'flex', justifyContent: 'center', padding: '0.8em' }}\n      activeStyle={{ backgroundColor: 'rgba(250, 83, 5, 0.5)' }}\n    >\n      <Image src={src} design={{ width: '100%' }}></Image>\n    </NavLink>\n  );\n};\n\nexport default memo(LeftNav);\n","import React, { FC } from 'react';\nimport { Grid, Segment, Image, Flex, Text, MenuIcon } from '@fluentui/react-northstar';\nimport { NavLink, Link } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport LeftNav from './LeftNav';\n\nexport const MainLayout: React.FC = ({ children }) => {\n  return (\n    <Grid\n      columns=\"60px auto\"\n      rows=\"50px auto\"\n      design={{ height: '100vh' }}\n      styles={{ justifyContent: 'stretch' }}\n    >\n      <TopNav />\n      <LeftNav\n        styles={{\n          gridColumn: '1 / span 1',\n          gridRow: '2 / span 1',\n          boxShadow: '1px 0px 10px 0px rgba(0,0,0,0.75)',\n          zIndex: 1,\n        }}\n      />\n\n      <Segment styles={{ gridColumn: 'span 1', padding: '30px' }}>\n        <Breadcrumb />\n        {children}\n      </Segment>\n    </Grid>\n  );\n};\n\nconst TopNav: FC = () => {\n  return (\n    <Flex\n      space=\"between\"\n      vAlign=\"center\"\n      padding=\"padding.medium\"\n      styles={{\n        backgroundColor: '#0094d8',\n        gridColumn: '1 / span 2',\n        boxShadow: '0px 1px 10px 0px rgba(0,0,0,0.75)',\n        zIndex: 2,\n        fontSize: '20px',\n        padding: '0.5em 1em',\n      }}\n    >\n      <Flex gap=\"gap.large\" vAlign=\"center\">\n        <MenuIcon size=\"large\" styles={{ color: 'white' }} />\n        <NavLink to={'/'} style={{ textDecoration: 'none' }}>\n          <Text color=\"white\">Vision on Edge</Text>\n        </NavLink>\n      </Flex>\n      <Flex vAlign=\"center\" hAlign=\"end\" gap=\"gap.medium\" styles={{ height: '100%' }}>\n        <Link to=\"/setting\" style={{ height: '100%' }}>\n          <Image styles={{ height: '100%' }} src=\"/icons/setting.png\" />\n        </Link>\n        <Text color=\"white\">User</Text>\n      </Flex>\n    </Flex>\n  );\n};\n","import { ThemeInput, mergeThemes, themes } from '@fluentui/react-northstar';\n\nconst theme: ThemeInput = {\n  siteVariables: {\n    colors: {\n      brand: {\n        '50': '#f3fafd',\n        '100': '#d1ecf9',\n        '200': '#aadcf4',\n        '300': '#5dbce8',\n        '400': '#1ba0dd',\n        '500': '#0094d8',\n        '600': '#0085c3',\n        '700': '#0071a5',\n        '800': '#005379',\n        '900': 'black',\n      },\n    },\n    colorScheme: {\n      brand: {\n        foreground: '#0094d8',\n        background: '#0094d8',\n        border: '#E1DFDD',\n        shadow: '#000',\n        foregroundHover: '#0094d8',\n        backgroundHover: '#0085c3',\n        borderHover: '#5dbce8',\n        shadowHover: '#000',\n        foregroundActive: '#0094d8',\n        backgroundActive: '#0094d8',\n        borderActive: '#E1DFDD',\n        shadowActive: undefined,\n        foregroundFocus: '#0094d8',\n        backgroundFocus: '#0094d8',\n        borderFocus: '#000',\n        shadowFocus: undefined,\n        foregroundPressed: '#0071a5',\n        backgroundPressed: '#0071a5',\n        borderPressed: '#5dbce8',\n        shadowPressed: undefined,\n        foregroundDisabled: '#C8C6C4',\n        backgroundDisabled: '#EDEBE9',\n        borderDisabled: '#EDEBE9',\n        shadowDisabled: undefined,\n        foreground1: '#0094d8',\n        foreground2: '#0085c3',\n        foreground3: '#aadcf4',\n        foreground4: '#fff',\n        background1: '#d1ecf9',\n        background2: '#005379',\n        background3: '#373644',\n        background4: '#0071a5',\n        border1: '#aadcf4',\n        border2: '#5dbce8',\n        foregroundHover1: '#fff',\n        foregroundHover2: '#aadcf4',\n        backgroundHover1: '#f3fafd',\n        foregroundPressed1: '#fff',\n        foregroundActive1: '#0094d8',\n        foregroundActive2: '#aadcf4',\n        backgroundActive1: '#0094d8',\n        borderActive1: '#aadcf4',\n        borderActive2: '#5dbce8',\n        foregroundFocus1: '#0094d8',\n        foregroundFocus2: '#0085c3',\n        foregroundFocus3: '#aadcf4',\n        foregroundFocus4: '#fff',\n        backgroundFocus1: '#d1ecf9',\n        backgroundFocus2: '#005379',\n        backgroundFocus3: '#373644',\n        borderFocusWithin: '#fff',\n        borderFocus1: '#0094d8',\n        foregroundDisabled1: '#C8C6C4',\n        backgroundDisabled1: '#EDEBE9',\n      },\n    },\n  },\n};\n\n/**\n * Primary color is based on #0094d8 and generated by https://fabricweb.z5.web.core.windows.net/pr-deploy-site/refs/heads/master/theming-designer/index.html\n */\nexport const myTheme = mergeThemes(themes.teams, theme);\n","import { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport { ReactPlugin } from '@microsoft/applicationinsights-react-js';\n\nlet reactPlugin = null;\nlet appInsights = null;\n\n/**\n * Create the App Insights Telemetry Service\n * @return {{reactPlugin: ReactPlugin, appInsights: Object, initialize: Function}} - Object\n */\nconst createTelemetryService = (): { reactPlugin; appInsights; initialize } => {\n  /**\n   * Initialize the Application Insights class\n   * @param {string} instrumentationKey - Application Insights Instrumentation Key\n   * @param {Object} browserHistory - client's browser history, supplied by the withRouter HOC\n   * @return {void}\n   */\n  const initialize = (instrumentationKey: string, browserHistory): any => {\n    if (!browserHistory) {\n      throw new Error('Could not initialize Telemetry Service');\n    }\n    if (!instrumentationKey) {\n      throw new Error('Instrumentation key not provided in /src/components/TelemetryProvider.tsx');\n    }\n\n    reactPlugin = new ReactPlugin();\n\n    appInsights = new ApplicationInsights({\n      config: {\n        instrumentationKey,\n        maxBatchInterval: 0,\n        disableFetchTracking: false,\n        extensions: [reactPlugin],\n        extensionConfig: {\n          [reactPlugin.identifier]: {\n            history: browserHistory,\n          },\n        },\n      },\n    });\n\n    appInsights.loadAppInsights();\n  };\n\n  return { reactPlugin, appInsights, initialize };\n};\n\nexport const ai = createTelemetryService();\nexport const getAppInsights = (): any => appInsights;\n","import React, { Component, ReactNode } from 'react';\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\nimport { withRouter } from 'react-router-dom';\n\nimport { ai } from '../TelemetryService';\n\n/**\n * This Component provides telemetry with Azure App Insights\n *\n * NOTE: the package '@microsoft/applicationinsights-react-js' has a HOC withAITracking that requires this to be a Class Component rather than a Functional Component\n */\nclass TelemetryProvider extends Component<any, { initialized: boolean }> {\n  state = {\n    initialized: false,\n  };\n\n  componentDidMount(): void {\n    const { history } = this.props;\n    const { initialized } = this.state;\n    const AppInsightsInstrumentationKey = this.props.instrumentationKey; // PUT YOUR KEY HERE\n    if (!initialized && Boolean(AppInsightsInstrumentationKey) && Boolean(history)) {\n      ai.initialize(AppInsightsInstrumentationKey, history);\n      this.setState({ initialized: true });\n    }\n\n    this.props.after();\n  }\n\n  render(): ReactNode {\n    const { children } = this.props;\n    return <>{children}</>;\n  }\n}\n\nexport default withRouter(withAITracking(ai.reactPlugin, TelemetryProvider));\n","import React, { FC, useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from '@fluentui/react-northstar';\nimport Axios from 'axios';\nimport { RootRouter } from './routes/RootRouter';\nimport { MainLayout } from './components/MainLayout';\nimport { myTheme } from './theme';\nimport TelemetryProvider from './components/TelemetryProvider';\nimport { getAppInsights } from './TelemetryService';\n\nconst App: FC = (): JSX.Element => {\n  let appInsights = null;\n  const [key, setKey] = useState('');\n\n  useEffect(() => {\n    Axios.get('http://localhost:8000/api/appinsight/key')\n      .then(({ data }) => setKey(data.key))\n      .catch((e) => console.error(e));\n  }, []);\n\n  return (\n    <Provider theme={myTheme}>\n      <BrowserRouter>\n        <TelemetryProvider\n          after={(): void => {\n            appInsights = getAppInsights();\n          }}\n          instrumentationKey={key}\n        >\n          <div className=\"App\">\n            <MainLayout>\n              <RootRouter />\n            </MainLayout>\n          </div>\n        </TelemetryProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/State';\n\nconst { store, persistor } = configureStore(initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading..</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}